[
    [
        {
            "function_name": "_en_aes_ecb_old",
            "file_path": "/PyVul/src/context/dataset/test_data/dramkit-main/dramkit/cryptotools.py",
            "line_number": 112,
            "source_code": "def _en_aes_ecb_old(btext, bkey):\n    mode = AES.MODE_ECB\n    cryptos = AES.new(bkey, mode)\n    cipher_text = cryptos.encrypt(btext)\n    return cipher_text\n",
            "parameters": [],
            "focused_calls": [
                "encrypt"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": {},
            "is_vulnerability_reachable": false,
            "unique_id": "/PyVul/src/context/dataset/test_data/dramkit-main/dramkit/cryptotools.py:_en_aes_ecb_old:112"
        },
        {
            "function_name": "en_aes_ecb",
            "file_path": "/PyVul/src/context/dataset/test_data/dramkit-main/dramkit/cryptotools.py",
            "line_number": 129,
            "source_code": "def en_aes_ecb(text, key=None, encoding='utf-8'):\n    '''AES ECB\u52a0\u5bc6'''\n    bkey = _check_key(key, encoding=encoding)\n    btext = expand(text, encoding=encoding)\n    if old_version:\n        cipher_text = _en_aes_ecb_old(btext, bkey)\n    else:\n        cipher_text = _en_aes_ecb_new(btext, bkey)\n    return b2a_hex(cipher_text).decode(encoding)\n",
            "parameters": [],
            "focused_calls": [
                "cipher_text = _en_aes_ecb_old(btext, bkey)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": {},
            "is_vulnerability_reachable": false,
            "unique_id": "/PyVul/src/context/dataset/test_data/dramkit-main/dramkit/cryptotools.py:en_aes_ecb:129"
        }
    ]
]




