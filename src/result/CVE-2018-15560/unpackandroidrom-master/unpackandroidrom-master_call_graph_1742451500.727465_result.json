{"undz": ["gpt", "undz.UNDZFile", "undz.DZFileTools", "undz.UNDZChunk", "undz.DZFileTools.main", "undz.UNDZUtils", "dz", "undz.UNDZSlice"], "dz": ["<builtin>.print", "dz.DZChunk", "dz.DZStruct", "dz.DZFile"], "dz.DZStruct": [], "dz.DZChunk": ["collections.OrderedDict"], "collections.OrderedDict": [], "dz.DZFile": ["collections.OrderedDict"], "gpt": ["gpt.GPTSlice", "gpt.GPT", "gpt.NoGPT", "gpt.GPT.__init__", "<builtin>.print"], "gpt.NoGPT": [], "gpt.GPTSlice": ["collections.OrderedDict", "struct.Struct", "<str>.join"], "<str>.join": [], "struct.Struct": [], "gpt.GPT": ["collections.OrderedDict", "struct.Struct"], "undz.UNDZUtils": [], "undz.UNDZChunk": [], "undz.UNDZSlice": [], "undz.UNDZFile": [], "undz.DZFileTools": [], "undz.DZFileTools.main": ["undz.DZFileTools.cmdListPartitions", "undz.DZFileTools.cmdExtractChunkfile", "undz.UNDZFile.__init__", "undz.DZFileTools.cmdExtractImage", "undz.UNDZFile.saveHeader", "undz.DZFileTools.parseArgs", "undz.DZFileTools.cmdExtractSlice", "undz.DZFileTools.cmdExtractChunk"], "undz.DZFileTools.parseArgs": [], "undz.UNDZFile.__init__": ["undz.UNDZFile.checkValues", "undz.UNDZFile.open", "<builtin>.set", "<builtin>.super", "undz.UNDZFile.loadChunks"], "<builtin>.super": [], "<builtin>.set": [], "undz.UNDZFile.open": ["<builtin>.print", "undz.UNDZUtils.loadHeader"], "<builtin>.print": [], "undz.UNDZUtils.loadHeader": ["<builtin>.type", "dz.DZStruct.unpackdict", "<builtin>.print", "<builtin>.len", "<builtin>.hex", "<str>.format"], "dz.DZStruct.unpackdict": ["<builtin>.zip", "<builtin>.dict"], "<builtin>.zip": [], "<builtin>.dict": [], "<str>.format": [], "<builtin>.type": [], "<builtin>.hex": [], "<builtin>.len": [], "undz.UNDZFile.loadChunks": ["undz.UNDZSlice.__init__", "append", "sort", "<builtin>.str", "undz.UNDZChunk.getTargetStart", "undz.UNDZFile.addChunk", "undz.UNDZChunk.getDev", "uuid.UUID", "gpt.GPT.__init__", "undz.UNDZChunk.getChunkName", "<builtin>.int", "<builtin>.print", "undz.UNDZChunk.getNext", "<builtin>.len", "<builtin>.range", "undz.UNDZChunk.__init__"], "undz.UNDZChunk.__init__": ["append", "<builtin>.super", "undz.UNDZUtils.loadHeader"], "undz.UNDZChunk.getDev": [], "undz.UNDZChunk.getChunkName": ["<builtin>.chr", "<builtin>.ord"], "<builtin>.ord": [], "<builtin>.chr": [], "undz.UNDZChunk.getTargetStart": [], "undz.UNDZChunk.getNext": [], "<builtin>.int": [], "gpt.GPT.__init__": ["gpt.<lambda1>", "gpt.NoGPT.__init__", "append", "uuid.UUID", "gpt.GPTSlice.__init__", "gpt.GPT.tryParseHeader", "<builtin>.range", "binascii.crc32"], "gpt.NoGPT.__init__": [], "gpt.GPT.tryParseHeader": ["gpt.<lambda1>", "gpt.NoGPT.__init__", "<builtin>.dict", "<builtin>.zip", "<builtin>.len", "binascii.crc32"], "binascii.crc32": [], "gpt.<lambda1>": [], "uuid.UUID": [], "<builtin>.range": [], "gpt.GPTSlice.__init__": ["<builtin>.zip", "<builtin>.dict", "uuid.UUID"], "append": [], "undz.UNDZSlice.__init__": ["<builtin>.set", "<builtin>.super"], "<builtin>.str": [], "undz.UNDZFile.addChunk": ["undz.UNDZSlice.addChunk", "undz.UNDZSlice.__init__", "append", "undz.UNDZChunk.getSliceName"], "undz.UNDZChunk.getSliceName": [], "undz.UNDZSlice.addChunk": ["append", "undz.UNDZChunk.getTargetStart", "<builtin>.print"], "undz.UNDZFile.checkValues": ["<builtin>.print", "binascii.b2a_hex", "<builtin>.len"], "binascii.b2a_hex": [], "undz.DZFileTools.cmdListPartitions": ["<builtin>.print", "undz.UNDZFile.display"], "undz.DZFileTools.cmdExtractChunk": ["undz.UNDZFile.extractChunk", "<builtin>.print", "<builtin>.int", "undz.UNDZFile.getChunkCount", "<builtin>.len", "undz.UNDZFile.getChunkName", "<builtin>.range"], "undz.DZFileTools.cmdExtractImage": ["undz.UNDZFile.extractImage", "<builtin>.print", "<builtin>.len"], "undz.DZFileTools.cmdExtractChunkfile": ["<builtin>.print", "<builtin>.int", "undz.UNDZFile.getChunkCount", "<builtin>.len", "undz.UNDZFile.getChunkName", "undz.UNDZFile.extractChunkfile", "<builtin>.range"], "undz.DZFileTools.cmdExtractSlice": ["undz.UNDZFile.extractSlice", "<builtin>.print", "<builtin>.int", "undz.UNDZFile.getSlice", "<builtin>.len", "<builtin>.range"], "undz.UNDZFile.saveHeader": ["<builtin>.open", "binascii.b2a_hex"], "<builtin>.open": [], "payload_dumper": ["<builtin>.open", "payload_dumper.parse", "update_metadata_pb2"], "update_metadata_pb2": [], "payload_dumper.parse": ["payload_dumper.dump_part", "payload_dumper.u64", "payload_dumper.u32"], "payload_dumper.u64": [], "payload_dumper.u32": [], "payload_dumper.dump_part": ["payload_dumper.data_for_op", "<builtin>.open", "<builtin>.print"], "payload_dumper.data_for_op": [], "ofp_libextract": ["<builtin>.open", "<builtin>.exit", "<builtin>.print", "ofp_libextract.seekforrecovery", "<builtin>.len"], "<builtin>.exit": [], "ofp_libextract.seekforrecovery": ["<builtin>.open", "<builtin>.str", "<builtin>.print", "<builtin>.int", "<builtin>.hex"], "unkdz": ["kdz", "unkdz.KDZFileTools.main", "unkdz.KDZFileTools"], "kdz": ["dz", "kdz.KDZFile"], "kdz.KDZFile": ["collections.OrderedDict"], "unkdz.KDZFileTools": [], "unkdz.KDZFileTools.main": ["unkdz.KDZFileTools.getPartitions", "unkdz.KDZFileTools.cmdExtractSingle", "<builtin>.print", "<builtin>.len", "unkdz.KDZFileTools.cmdListPartitions", "unkdz.KDZFileTools.parseArgs", "unkdz.KDZFileTools.openFile", "unkdz.KDZFileTools.cmdExtractAll"], "unkdz.KDZFileTools.parseArgs": [], "unkdz.KDZFileTools.openFile": ["<builtin>.open", "<builtin>.print", "binascii.b2a_hex"], "unkdz.KDZFileTools.getPartitions": ["append", "unkdz.KDZFileTools.readKDZHeader", "<builtin>.print", "<builtin>.len"], "unkdz.KDZFileTools.readKDZHeader": ["<builtin>.dict", "binascii.b2a_hex", "<builtin>.type", "<builtin>.zip", "<builtin>.print"], "unkdz.KDZFileTools.cmdExtractAll": ["unkdz.KDZFileTools.extractPartition", "<builtin>.print", "unkdz.KDZFileTools.saveExtra", "<builtin>.enumerate", "unkdz.KDZFileTools.saveParams"], "<builtin>.enumerate": [], "unkdz.KDZFileTools.extractPartition": ["<builtin>.open"], "unkdz.KDZFileTools.saveExtra": ["<builtin>.open", "<builtin>.print"], "unkdz.KDZFileTools.saveParams": ["append", "<builtin>.open", "sort"], "sort": [], "unkdz.KDZFileTools.cmdExtractSingle": ["<builtin>.str", "<builtin>.print", "unkdz.KDZFileTools.extractPartition"], "unkdz.KDZFileTools.cmdListPartitions": ["<builtin>.print", "<builtin>.enumerate"], "clean_cache": ["<builtin>.print"], "rimg2sdat": ["rimg2sdat.main", "<builtin>.range", "argparse.ArgumentParser", "<builtin>.len"], "argparse.ArgumentParser": [], "rimg2sdat.main": ["rimg2sdat.Compute", "<builtin>.print"], "rimg2sdat.Compute": ["rimg2sdat.WriteTransfers", "<builtin>.open", "append", "rimg2sdat.GetRawImageFileHandle", "<str>.encode", "<builtin>.print", "<builtin>.int", "rimg2sdat.CompressDatFile", "pop", "<builtin>.range"], "rimg2sdat.GetRawImageFileHandle": ["<builtin>.open", "<builtin>.print"], "<str>.encode": [], "rimg2sdat.WriteTransfers": ["<builtin>.open", "append", "<builtin>.str", "<builtin>.tuple", "<builtin>.len", "rimg2sdat.SplitRangeSet", "<builtin>.map", "<builtin>.range"], "<builtin>.tuple": [], "rimg2sdat.SplitRangeSet": ["<builtin>.range", "append", "<builtin>.tuple", "<builtin>.len"], "<builtin>.map": [], "rimg2sdat.CompressDatFile": ["<builtin>.open", "rimg2sdat.CompressDatFile.compress"], "rimg2sdat.CompressDatFile.compress": [], "install_requirements": ["<builtin>.open", "<builtin>.print"], "sdat2img": ["<builtin>.input", "<builtin>.str", "<builtin>.print", "sdat2img.main"], "<builtin>.input": [], "sdat2img.main": ["<builtin>.open", "<builtin>.input", "sdat2img.main.parse_transfer_list_file", "<builtin>.print", "<builtin>.max"], "sdat2img.main.parse_transfer_list_file": ["append", "<builtin>.open", "<builtin>.print", "<builtin>.int"], "<builtin>.max": [], "make": ["make.main"], "make.main": ["shutil.copy", "<builtin>.input", "<builtin>.exit", "make.main", "shutil.copytree", "<builtin>.print", "<builtin>.int"], "shutil.copy": [], "shutil.copytree": [], "image2chunks": ["image2chunks.Image2Chunks", "image2chunks.Image2Chunks.__init__", "image2chunks.EXT4SparseChunk", "<builtin>.help", "dz", "<builtin>.print", "image2chunks.EXT4SparseFile", "<builtin>.len", "<builtin>.hasattr"], "<builtin>.hasattr": [], "image2chunks.EXT4SparseChunk": ["collections.OrderedDict"], "image2chunks.EXT4SparseFile": ["collections.OrderedDict"], "image2chunks.Image2Chunks": [], "<builtin>.help": [], "image2chunks.Image2Chunks.__init__": ["image2chunks.Image2Chunks.loadParams", "image2chunks.Image2Chunks.openFiles", "image2chunks.Image2Chunks.makeChunksHoles", "<builtin>.super", "image2chunks.Image2Chunks.makeChunksEXT4FS", "<builtin>.print", "image2chunks.Image2Chunks.makeChunksProbe"], "image2chunks.Image2Chunks.openFiles": ["<builtin>.print"], "image2chunks.Image2Chunks.loadParams": ["<builtin>.int", "<builtin>.dict", "<builtin>.print", "<builtin>.len"], "image2chunks.Image2Chunks.makeChunksProbe": ["dz.DZStruct.packdict", "<builtin>.str", "<builtin>.print", "<builtin>.len", "binascii.crc32"], "dz.DZStruct.packdict": ["<builtin>.dict", "<builtin>.int"], "image2chunks.Image2Chunks.makeChunksHoles": ["dz.DZStruct.packdict", "<builtin>.str", "<builtin>.print", "<builtin>.len", "<builtin>.range", "binascii.crc32"], "image2chunks.Image2Chunks.makeChunksEXT4FS": ["image2chunks.EXT4SparseFile.__init__", "<builtin>.str", "image2chunks.EXT4SparseFile.__iter__", "image2chunks.EXT4SparseFile.__next__", "image2chunks.EXT4SparseChunk.__iter__", "image2chunks.EXT4SparseChunk.__next__", "image2chunks.Image2Chunks.makeChunksEXT4FS.complete", "<builtin>.print", "<builtin>.len", "binascii.crc32", "image2chunks.Image2Chunks.makeChunksEXT4FS.nl"], "image2chunks.EXT4SparseFile.__init__": ["dz.DZStruct.unpackdict", "<builtin>.print", "<builtin>.super", "binascii.crc32"], "image2chunks.Image2Chunks.makeChunksEXT4FS.nl": [], "image2chunks.EXT4SparseFile.__iter__": [], "image2chunks.EXT4SparseFile.__next__": ["image2chunks.EXT4SparseChunk.__del__", "<builtin>.print", "<builtin>.len", "image2chunks.EXT4SparseChunk.__init__"], "image2chunks.EXT4SparseChunk.__init__": ["dz.DZStruct.unpackdict", "<builtin>.print", "<builtin>.super", "<builtin>.len"], "image2chunks.Image2Chunks.makeChunksEXT4FS.complete": ["<builtin>.print", "dz.DZStruct.packdict", "<builtin>.len"], "image2chunks.EXT4SparseChunk.__iter__": [], "image2chunks.EXT4SparseChunk.__next__": ["binascii.crc32", "<builtin>.len"], "main": ["undz", "main.parseArgs", "main.lg_kd_kdz", "main.rominformation", "<builtin>.input", "payload_dumper", "<builtin>.exit", "simg2img", "ozipdecrypt", "unkdz", "<builtin>.print", "main.unpackrom", "sdat2img", "main.main"], "simg2img": ["simg2img.main", "simg2img.ext4_chunk_header", "simg2img.ext4_file_header", "<builtin>.print", "<builtin>.len"], "simg2img.ext4_file_header": [], "simg2img.ext4_chunk_header": [], "ozipdecrypt": ["ozipdecrypt.main"], "main.rominformation": [], "main.lg_kd_kdz": [], "main.unpackrom": [], "main.parseArgs": [], "main.main": ["main.rominformation.__init__", "<builtin>.input", "<builtin>.exit", "main.unpackrom.__init__", "<builtin>.print"], "main.rominformation.__init__": ["<str>.find", "<builtin>.open", "append", "main.lg_kd_kdz.islgdzfile", "main.lg_kd_kdz.__init__", "main.get_saminfo", "<builtin>.str", "main.lg_kd_kdz.islgkdzfile", "<builtin>.print", "<builtin>.int", "<builtin>.len"], "<str>.find": [], "main.get_saminfo": ["<builtin>.open", "<builtin>.print", "<builtin>.len"], "main.lg_kd_kdz.__init__": ["<builtin>.print"], "main.lg_kd_kdz.islgkdzfile": ["unkdz.KDZFileTools.getPartitions", "<builtin>.len", "unkdz.KDZFileTools.openFile"], "main.lg_kd_kdz.islgdzfile": ["undz.UNDZFile.__init__", "undz.DZFileTools.cmdListPartitions"], "main.unpackrom.__init__": ["main.unpackrom.abunpack", "install_requirements", "main.unpackrom.lg_dz", "<builtin>.input", "main.unpackrom.samsumg_tar", "main.unpackrom.oppo_ozip", "main.unpackrom.unzip", "<builtin>.print", "main.unpackrom.miui_tar", "main.unpackrom.lg_kdz"], "main.unpackrom.unzip": ["main.unpackrom.imgunpack", "main.unpackrom.abunpack", "main.unpackrom.newdatunpack", "<builtin>.input", "main.unpackrom.brotli", "<builtin>.print"], "main.unpackrom.abunpack": ["<builtin>.input", "payload_dumper.main", "<builtin>.print", "main.unpackrom.imgunpack"], "payload_dumper.main": ["<builtin>.open", "payload_dumper.parse"], "main.unpackrom.imgunpack": ["<builtin>.input", "simg2img.main", "<builtin>.print", "<str>.find"], "simg2img.main": ["simg2img.ext4_file_header.__init__", "<builtin>.open", "simg2img.ext4_chunk_header.__init__", "<builtin>.print", "<str>.replace", "<builtin>.len"], "simg2img.ext4_file_header.__init__": [], "<str>.replace": [], "simg2img.ext4_chunk_header.__init__": [], "main.unpackrom.brotli": ["<builtin>.input", "<builtin>.open", "<builtin>.print"], "main.unpackrom.newdatunpack": ["<builtin>.input", "sdat2img.main"], "main.unpackrom.miui_tar": ["<builtin>.input", "<builtin>.print", "main.unpackrom.imgunpack", "<builtin>.len"], "main.unpackrom.samsumg_tar": ["<builtin>.input", "<builtin>.open", "<builtin>.print", "main.unpackrom.imgunpack"], "main.unpackrom.lg_kdz": ["main.lg_kd_kdz.unpackkdz", "main.lg_kd_kdz.__init__", "<builtin>.input", "<builtin>.print", "main.lg_kd_kdz.listkdz"], "main.lg_kd_kdz.listkdz": ["unkdz.KDZFileTools.openFile", "unkdz.KDZFileTools.cmdListPartitions"], "main.lg_kd_kdz.unpackkdz": ["unkdz.KDZFileTools.getPartitions", "unkdz.KDZFileTools.openFile", "unkdz.KDZFileTools.cmdExtractAll"], "main.unpackrom.lg_dz": ["<builtin>.input", "main.lg_kd_kdz.unpackdz", "<builtin>.int", "main.lg_kd_kdz.__init__"], "main.lg_kd_kdz.unpackdz": ["undz.DZFileTools.mainbyclass"], "undz.DZFileTools.mainbyclass": ["undz.DZFileTools.cmdListPartitions", "undz.DZFileTools.cmdExtractChunkfile", "undz.UNDZFile.__init__", "undz.DZFileTools.cmdExtractImage", "undz.UNDZFile.saveHeader", "undz.DZFileTools.cmdExtractSlice", "undz.DZFileTools.cmdExtractChunk"], "undz.UNDZFile.getChunkCount": ["<builtin>.len"], "undz.UNDZFile.getChunkName": [], "undz.UNDZFile.extractChunk": [], "undz.UNDZFile.extractImage": [], "undz.UNDZFile.extractChunkfile": [], "undz.UNDZFile.getSlice": [], "undz.UNDZFile.extractSlice": [], "main.unpackrom.oppo_ozip": ["main.rominformation.__init__", "<builtin>.input", "main.unpackrom.unzip", "ozipdecrypt.main", "<builtin>.print", "<str>.replace"], "ozipdecrypt.main": ["ozipdecrypt.rmrf", "zipfile.ZipFile", "<builtin>.open", "ozipdecrypt.keytest", "<builtin>.exit", "<builtin>.print", "<builtin>.int", "<builtin>.len"], "zipfile.ZipFile": [], "ozipdecrypt.rmrf": ["ozipdecrypt.del_rw"], "ozipdecrypt.del_rw": [], "ozipdecrypt.keytest": ["<builtin>.print"], "gpt.GPTSlice.display": ["gpt.<lambda1>", "<builtin>.str", "uuid.UUID"], "gpt.GPT.display": ["gpt.<lambda1>", "<builtin>.str", "uuid.UUID"], "undz.UNDZChunk.Messages": ["<builtin>.print"], "undz.UNDZChunk.display": ["<builtin>.print", "undz.UNDZChunk.Messages"], "undz.UNDZChunk.extract": ["<builtin>.print", "<builtin>.bytes", "binascii.b2a_hex"], "<builtin>.bytes": [], "undz.UNDZChunk.extractChunk": ["<builtin>.print", "undz.UNDZChunk.extract", "undz.UNDZChunk.Messages"], "undz.UNDZChunk.extractChunkfile": ["<builtin>.print", "undz.UNDZChunk.Messages"], "undz.UNDZSlice.display": ["<builtin>.print", "<builtin>.len"], "undz.UNDZSlice.getChunkCount": ["<builtin>.len"], "undz.UNDZSlice.extractSlice": ["undz.UNDZSlice.getEnd", "<builtin>.len", "undz.UNDZSlice.getStart", "undz.UNDZSlice.getLength"], "undz.UNDZSlice.getStart": [], "undz.UNDZSlice.getEnd": [], "undz.UNDZSlice.getLength": [], "undz.UNDZFile.display": ["<builtin>.print"], "undz.UNDZFile.getSliceCount": ["<builtin>.len"], "dz.DZStruct.__init__": ["<builtin>.print", "struct.Struct"], "dz.DZChunk.__init__": ["<builtin>.super"], "dz.DZFile.__init__": ["<builtin>.super"], "unkdz.KDZFileTools.mainbyclass": ["unkdz.KDZFileTools.getPartitions", "unkdz.KDZFileTools.cmdExtractSingle", "<builtin>.print", "<builtin>.len", "unkdz.KDZFileTools.cmdListPartitions", "unkdz.KDZFileTools.openFile", "unkdz.KDZFileTools.cmdExtractAll"], "pop": [], "rimg2sdat.process": ["rimg2sdat.main", "<builtin>.str"], "image2chunks.EXT4SparseChunk.__del__": ["binascii.crc32", "<builtin>.len"], "image2chunks.EXT4SparseFile.__del__": ["<builtin>.print", "<builtin>.hasattr"], "image2chunks.help": ["<builtin>.print"], "kdz.KDZFile.__init__": ["<builtin>.super"], "sdat2img.main.rangeset": ["<builtin>.print", "<builtin>.int", "<builtin>.tuple", "<builtin>.len", "<builtin>.range"], "ofp_libextract.elfcalcsize": ["struct.unpack", "<builtin>.print"], "struct.unpack": [], "ofp_libextract.reverseseekforelf": ["ofp_libextract.elfcalcsize"], "ofp_libextract.seekfordecryptstring": ["<builtin>.open", "<builtin>.str", "ofp_libextract.reverseseekforelf", "<builtin>.print", "<builtin>.int", "<builtin>.hex"]}