[
    [
        {
            "function_name": "app_factory",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/spotify-party/src/spotify_party/app.py",
            "line_number": 31,
            "source_code": "def app_factory(config: Mapping[str, Any]) -> web.Application:\n    app = web.Application(\n        middlewares=[views.error_middleware, web.normalize_path_middleware()]\n    )\n\n    # load the configuration file\n    app[\"config\"] = config\n\n    # Add the client session for pooling outgoing connections\n    app.cleanup_ctx.append(client_session)\n\n    # Connect the database and set up a map of websockets\n    app[\"db\"] = db.Database(config[\"database_filename\"])\n\n    # And the routes for the main app\n    app.add_routes(views.routes)\n\n    # Add the API app\n    app.add_subapp(\"/api\", api.api_app())\n\n    # Set up the user session for cookies\n    aiohttp_session.setup(\n        app,\n        EncryptedCookieStorage(\n            base64.urlsafe_b64decode(app[\"config\"][\"session_key\"])\n        ),\n    )\n\n    # Set up the templating engine and the static endpoint\n    env = aiohttp_jinja2.setup(\n        app, loader=jinja2.FileSystemLoader(get_resource_path(\"templates\"))\n    )\n    env.globals.update(jinja2_helpers.GLOBALS)\n    app[\"static_root_url\"] = \"/assets\"\n    app.router.add_static(\"/assets\", get_resource_path(\"assets\"))\n\n    # Set up the Spotify app to instigate the OAuth flow\n    app[\"spotify_app\"] = aiohttp_spotify.spotify_app(\n        client_id=config[\"spotify_client_id\"],\n        client_secret=config[\"spotify_client_secret\"],\n        redirect_uri=config[\"spotify_redirect_uri\"],\n        handle_auth=auth.handle_auth,\n        default_redirect=app.router[\"play\"].url_for(),\n        scope=[\n            \"streaming\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"user-modify-playback-state\",\n            \"user-read-playback-state\",\n            \"user-read-currently-playing\",\n        ],\n    )\n    app[\"spotify_app\"][\"main_app\"] = app\n    app.add_subapp(\"/spotify\", app[\"spotify_app\"])\n\n    # Attach the socket.io interface\n    api.sio.attach(app)\n\n    return app\n",
            "parameters": [],
            "focused_calls": [
                "normalize_path_middleware"
            ],
            "extend_calls": [
                "def api_app() -> web.Application:\n    app = web.Application(middlewares=[error_middleware])\n    app.add_routes(routes)\n    return app",
                "def get_resource_path(path: str) -> pathlib.Path:\n    return pathlib.Path(\n        pkg_resources.resource_filename(__name__, path)\n    ).resolve()",
                "async def update(self) -> None:\n        await self.database.update(self)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/spotify-party/src/spotify_party/app.py:app_factory:31"
        }
    ]
]
