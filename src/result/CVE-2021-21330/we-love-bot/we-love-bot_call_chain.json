[
    [
        {
            "function_name": "_route_attrs",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/we-love-bot/welovebot/lib/web.py",
            "line_number": 57,
            "source_code": "        def _route_attrs() -> Iterable[HandlerT]:\n            # check attrs but skip the base ones to avoid property side effects\n            for name in {*dir(self)} - {'web_app', *dir(Cog)}:\n                if getattr(attr := getattr(self, name), 'is_route', False):\n                    yield attr\n",
            "parameters": [],
            "focused_calls": [
                "normalize_path_middleware"
            ],
            "extend_calls": [],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/we-love-bot/welovebot/lib/web.py:_route_attrs:57"
        },
        {
            "function_name": "add_subapp",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/we-love-bot/welovebot/lib/web.py",
            "line_number": 53,
            "source_code": "    def add_subapp(self) -> web.Application:\n        middlewares = [web.normalize_path_middleware()] + self.middlewares\n        app = web.Application(middlewares=middlewares)\n\n        def _route_attrs() -> Iterable[HandlerT]:\n            # check attrs but skip the base ones to avoid property side effects\n            for name in {*dir(self)} - {'web_app', *dir(Cog)}:\n                if getattr(attr := getattr(self, name), 'is_route', False):\n                    yield attr\n\n        for handler in _route_attrs():\n            path = f'/{handler.path}/'\n            logger.debug(\n                f'[{self.__class__.__name__}] adding route: {handler.method} /{self.url_root}{path}'\n            )\n            adder = getattr(app.router, f'add_{handler.method.lower()}')\n            adder(path, handler)\n\n        logger.debug('web app built')\n\n        self._web_app.add_subapp(f'/{self.url_root}', app)\n        return self._web_app\n",
            "parameters": [],
            "focused_calls": [
                "_route_attrs"
            ],
            "extend_calls": [
                "def debug(cls, msg: str, *args: Any, **kwargs: Any) -> None:\n        cls._logger().debug(msg, *args, **kwargs)",
                "def add_subapp(self) -> web.Application:\n        middlewares = [web.normalize_path_middleware()] + self.middlewares\n        app = web.Application(middlewares=middlewares)\n\n        def _route_attrs() -> Iterable[HandlerT]:\n            # check attrs but skip the base ones to avoid property side effects\n            for name in {*dir(self)} - {'web_app', *dir(Cog)}:\n                if getattr(attr := getattr(self, name), 'is_route', False):\n                    yield attr\n\n        for handler in _route_attrs():\n            path = f'/{handler.path}/'\n            logger.debug(\n                f'[{self.__class__.__name__}] adding route: {handler.method} /{self.url_root}{path}'\n            )\n            adder = getattr(app.router, f'add_{handler.method.lower()}')\n            adder(path, handler)\n\n        logger.debug('web app built')\n\n        self._web_app.add_subapp(f'/{self.url_root}', app)\n        return self._web_app",
                "def _route_attrs() -> Iterable[HandlerT]:\n            # check attrs but skip the base ones to avoid property side effects\n            for name in {*dir(self)} - {'web_app', *dir(Cog)}:\n                if getattr(attr := getattr(self, name), 'is_route', False):\n                    yield attr"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/we-love-bot/welovebot/lib/web.py:add_subapp:53"
        },
        {
            "function_name": "__post_init__",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/we-love-bot/welovebot/lib/web.py",
            "line_number": 40,
            "source_code": "    def __post_init__(self):\n        if self.url_root is None:\n            raise AttributeError(f\"{self.__class__.__name__} is missing 'root' path value\")\n\n        self.url_root = self.url_root.strip('/')\n        if '/' in self.url_root:\n            raise ValueError(f'{self.__class__.__name__}.url_root {_NO_SLASH_ERR}')\n\n        if self.concurrency > 1:\n            self._lock = Semaphore(self.concurrency)\n\n        self.add_subapp()\n",
            "parameters": [],
            "focused_calls": [
                "add_subapp"
            ],
            "extend_calls": [
                "def add_subapp(self) -> web.Application:\n        middlewares = [web.normalize_path_middleware()] + self.middlewares\n        app = web.Application(middlewares=middlewares)\n\n        def _route_attrs() -> Iterable[HandlerT]:\n            # check attrs but skip the base ones to avoid property side effects\n            for name in {*dir(self)} - {'web_app', *dir(Cog)}:\n                if getattr(attr := getattr(self, name), 'is_route', False):\n                    yield attr\n\n        for handler in _route_attrs():\n            path = f'/{handler.path}/'\n            logger.debug(\n                f'[{self.__class__.__name__}] adding route: {handler.method} /{self.url_root}{path}'\n            )\n            adder = getattr(app.router, f'add_{handler.method.lower()}')\n            adder(path, handler)\n\n        logger.debug('web app built')\n\n        self._web_app.add_subapp(f'/{self.url_root}', app)\n        return self._web_app"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-21330/we-love-bot/welovebot/lib/web.py:__post_init__:40"
        }
    ]
]
