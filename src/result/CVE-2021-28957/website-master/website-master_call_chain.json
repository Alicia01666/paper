[
    [
        {
            "function_name": "clean_html",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/util.py",
            "line_number": 88,
            "source_code": "def clean_html(dirty_markup):\n    \"\"\"Removes all tags while preserving some.\n    Keeps the tags that are valid in Gtk markup\n    This allows to render proper html for installer descriptions.\n    \"\"\"\n    cleaner = Cleaner(\n        style=True,\n        scripts=True,\n        remove_unknown_tags=False,\n        safe_attrs=set(['href']),\n        allow_tags=('b', 'i', 'a')\n    )\n    clean_markup = cleaner.clean_html(dirty_markup)\n    # The lxml cleaner adds a div around the resulting\n    # markup, which we don't want.\n    return clean_markup[5:-6]\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/util.py:clean_html:88"
        },
        {
            "function_name": "clean_html",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/templatetags/lutris.py",
            "line_number": 22,
            "source_code": "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/templatetags/lutris.py:clean_html:22"
        }
    ],
    [
        {
            "function_name": "clean_html",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/util.py",
            "line_number": 88,
            "source_code": "def clean_html(dirty_markup):\n    \"\"\"Removes all tags while preserving some.\n    Keeps the tags that are valid in Gtk markup\n    This allows to render proper html for installer descriptions.\n    \"\"\"\n    cleaner = Cleaner(\n        style=True,\n        scripts=True,\n        remove_unknown_tags=False,\n        safe_attrs=set(['href']),\n        allow_tags=('b', 'i', 'a')\n    )\n    clean_markup = cleaner.clean_html(dirty_markup)\n    # The lxml cleaner adds a div around the resulting\n    # markup, which we don't want.\n    return clean_markup[5:-6]\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/util.py:clean_html:88"
        },
        {
            "function_name": "test_clean_html",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/tests.py",
            "line_number": 33,
            "source_code": "    def test_clean_html(self):\n        dirty_markup = \"This is <b> a string </b> with <span>tags</span>\"\n        self.assertEqual(clean_html(dirty_markup), \"This is <b> a string </b> with tags\")\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/tests.py:test_clean_html:33"
        }
    ],
    [
        {
            "function_name": "clean_html",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/util.py",
            "line_number": 88,
            "source_code": "def clean_html(dirty_markup):\n    \"\"\"Removes all tags while preserving some.\n    Keeps the tags that are valid in Gtk markup\n    This allows to render proper html for installer descriptions.\n    \"\"\"\n    cleaner = Cleaner(\n        style=True,\n        scripts=True,\n        remove_unknown_tags=False,\n        safe_attrs=set(['href']),\n        allow_tags=('b', 'i', 'a')\n    )\n    clean_markup = cleaner.clean_html(dirty_markup)\n    # The lxml cleaner adds a div around the resulting\n    # markup, which we don't want.\n    return clean_markup[5:-6]\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/util.py:clean_html:88"
        },
        {
            "function_name": "test_clean_html_keeps_links",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/tests.py",
            "line_number": 37,
            "source_code": "    def test_clean_html_keeps_links(self):\n        dirty_markup = \"\"\"<div v-if=\"foo\" class=\"blue\">Visit <a href=\"https://lutris.net\">Lutris.net</a> </div><br/><p>it's full of <blink>fun</blink>!</p>\"\"\"\n        self.assertEqual(\n            clean_html(dirty_markup),\n            \"Visit <a href=\\\"https://lutris.net\\\">Lutris.net</a> it's full of fun!\"\n        )\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/tests.py:test_clean_html_keeps_links:37"
        }
    ],
    [
        {
            "function_name": "test_clean_html_keeps_links",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/tests.py",
            "line_number": 37,
            "source_code": "    def test_clean_html_keeps_links(self):\n        dirty_markup = \"\"\"<div v-if=\"foo\" class=\"blue\">Visit <a href=\"https://lutris.net\">Lutris.net</a> </div><br/><p>it's full of <blink>fun</blink>!</p>\"\"\"\n        self.assertEqual(\n            clean_html(dirty_markup),\n            \"Visit <a href=\\\"https://lutris.net\\\">Lutris.net</a> it's full of fun!\"\n        )\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/tests.py:test_clean_html_keeps_links:37"
        }
    ],
    [
        {
            "function_name": "clean_html",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/templatetags/lutris.py",
            "line_number": 22,
            "source_code": "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)\n",
            "parameters": [],
            "focused_calls": [
                "clean_html"
            ],
            "extend_calls": [
                "def clean_html(markup):\n    \"\"\"Filter for removing most HTML tags from some markup.\"\"\"\n    return util.clean_html(markup)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-28957/website-master/common/templatetags/lutris.py:clean_html:22"
        }
    ]
]
