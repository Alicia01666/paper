[
    [
        {
            "function_name": "p_exp",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 182,
            "source_code": "    def p_exp(a, b):\n        m = mpmathify(a)\n        while b > 1:\n            m = fmul(m, m)\n            b -= 1\n        return Math.__mp_to_float(m)\n",
            "parameters": [],
            "focused_calls": [
                "mpmathify"
            ],
            "extend_calls": [
                "def __mp_to_float(n):\n        return Float(str(n), EPSILON)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:p_exp:182"
        },
        {
            "function_name": "get_discrete_present_value",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 91,
            "source_code": "    def get_discrete_present_value(price, years, rate = 0.025):\n        return Math.p_mul(price, Math.p_exp(Math.p_add(1, rate), years))\n",
            "parameters": [],
            "focused_calls": [
                "p_exp"
            ],
            "extend_calls": [
                "def p_exp(a, b):\n        m = mpmathify(a)\n        while b > 1:\n            m = fmul(m, m)\n            b -= 1\n        return Math.__mp_to_float(m)",
                "def p_mul(a, b):\n        m = fmul(a, b)\n        return Math.__mp_to_float(m)",
                "def p_add(a, b):\n        m = fadd(a, b)\n        return Math.__mp_to_float(m)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:get_discrete_present_value:91"
        },
        {
            "function_name": "get_zero_coupon_bond_price",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 127,
            "source_code": "    def get_zero_coupon_bond_price(par, years, rate):\n        return Math.get_discrete_present_value(par, years, rate)\n",
            "parameters": [],
            "focused_calls": [
                "get_discrete_present_value"
            ],
            "extend_calls": [
                "def get_discrete_present_value(price, years, rate = 0.025):\n        return Math.p_mul(price, Math.p_exp(Math.p_add(1, rate), years))"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:get_zero_coupon_bond_price:127"
        },
        {
            "function_name": "get_bond_price",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 137,
            "source_code": "    def get_bond_price(coupon, par, years, rate):\n        return Math.p_add(Math.p_mul(Math.p_div(Math.p_mul(coupon, par), rate), Math.p_sub(1, Math.p_div(1, Math.p_exp(Math.p_add(1, rate), years)))), Math.get_zero_coupon_bond_price(par, years, rate))\n",
            "parameters": [],
            "focused_calls": [
                "get_zero_coupon_bond_price"
            ],
            "extend_calls": [
                "def p_sub(a, b):\n        m = fsub(a, b)\n        return Math.__mp_to_float(m)",
                "def p_exp(a, b):\n        m = mpmathify(a)\n        while b > 1:\n            m = fmul(m, m)\n            b -= 1\n        return Math.__mp_to_float(m)",
                "def p_add(a, b):\n        m = fadd(a, b)\n        return Math.__mp_to_float(m)",
                "def p_mul(a, b):\n        m = fmul(a, b)\n        return Math.__mp_to_float(m)",
                "def get_zero_coupon_bond_price(par, years, rate):\n        return Math.get_discrete_present_value(par, years, rate)",
                "def p_div(a, b):\n        m = fdiv(a, b)\n        return Math.__mp_to_float(m)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:get_bond_price:137"
        }
    ],
    [
        {
            "function_name": "p_exp",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 182,
            "source_code": "    def p_exp(a, b):\n        m = mpmathify(a)\n        while b > 1:\n            m = fmul(m, m)\n            b -= 1\n        return Math.__mp_to_float(m)\n",
            "parameters": [],
            "focused_calls": [
                "mpmathify"
            ],
            "extend_calls": [
                "def __mp_to_float(n):\n        return Float(str(n), EPSILON)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:p_exp:182"
        },
        {
            "function_name": "get_discrete_future_value",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 100,
            "source_code": "    def get_discrete_future_value(price, years, rate = 0.025):\n        return Math.p_exp(Math.p_add(1, rate), -years)\n",
            "parameters": [],
            "focused_calls": [
                "p_exp"
            ],
            "extend_calls": [
                "def p_exp(a, b):\n        m = mpmathify(a)\n        while b > 1:\n            m = fmul(m, m)\n            b -= 1\n        return Math.__mp_to_float(m)",
                "def p_add(a, b):\n        m = fadd(a, b)\n        return Math.__mp_to_float(m)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:get_discrete_future_value:100"
        }
    ],
    [
        {
            "function_name": "p_exp",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 182,
            "source_code": "    def p_exp(a, b):\n        m = mpmathify(a)\n        while b > 1:\n            m = fmul(m, m)\n            b -= 1\n        return Math.__mp_to_float(m)\n",
            "parameters": [],
            "focused_calls": [
                "mpmathify"
            ],
            "extend_calls": [
                "def __mp_to_float(n):\n        return Float(str(n), EPSILON)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:p_exp:182"
        },
        {
            "function_name": "get_bond_price",
            "file_path": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py",
            "line_number": 137,
            "source_code": "    def get_bond_price(coupon, par, years, rate):\n        return Math.p_add(Math.p_mul(Math.p_div(Math.p_mul(coupon, par), rate), Math.p_sub(1, Math.p_div(1, Math.p_exp(Math.p_add(1, rate), years)))), Math.get_zero_coupon_bond_price(par, years, rate))\n",
            "parameters": [],
            "focused_calls": [
                "p_exp"
            ],
            "extend_calls": [
                "def p_sub(a, b):\n        m = fsub(a, b)\n        return Math.__mp_to_float(m)",
                "def p_exp(a, b):\n        m = mpmathify(a)\n        while b > 1:\n            m = fmul(m, m)\n            b -= 1\n        return Math.__mp_to_float(m)",
                "def p_add(a, b):\n        m = fadd(a, b)\n        return Math.__mp_to_float(m)",
                "def p_mul(a, b):\n        m = fmul(a, b)\n        return Math.__mp_to_float(m)",
                "def get_zero_coupon_bond_price(par, years, rate):\n        return Math.get_discrete_present_value(par, years, rate)",
                "def p_div(a, b):\n        m = fdiv(a, b)\n        return Math.__mp_to_float(m)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2021-29063/Quantico/src/mathematics.py:get_bond_price:137"
        }
    ]
]
