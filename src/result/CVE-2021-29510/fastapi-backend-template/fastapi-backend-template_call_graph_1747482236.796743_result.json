{"app.config": ["dotenv.dotenv_values", "app.config.CHConfig", "app.config.PGConfig", "app.config.AppConfig", "<map>.get", "app.config.AMQPConfig", "app.config.S3Config", "app.config.JWTConfig"], "dotenv.dotenv_values": [], "app.config.PGConfig": ["<map>.get", "<builtin>.int"], "<map>.get": [], "<builtin>.int": [], "app.config.CHConfig": ["<map>.get", "<builtin>.int"], "app.config.AppConfig": ["<map>.get"], "app.config.JWTConfig": ["<map>.get", "<builtin>.float", "datetime.timedelta"], "<builtin>.float": [], "datetime.timedelta": [], "app.config.AMQPConfig": ["<map>.get"], "app.config.S3Config": ["<map>.get"], "app.log": ["app.config", "app.utils.context"], "app.utils.context": ["app.utils.context.Context", "app.base.mcs", "app.exceptions", "app.utils.security"], "app.exceptions": ["app.exceptions.LoginExpired", "app.exceptions.UniqueViolationError", "app.exceptions.AckException", "app.exceptions.NoPermission", "app.exceptions.IllegalInput", "app.exceptions.LoginFailed", "app.exceptions.NotFound"], "app.exceptions.AckException": [], "app.exceptions.NotFound": [], "app.exceptions.UniqueViolationError": [], "app.exceptions.LoginExpired": [], "app.exceptions.LoginFailed": [], "app.exceptions.NoPermission": [], "app.exceptions.IllegalInput": [], "app.base.mcs": ["app.base.mcs.Singleton"], "app.base.mcs.Singleton": [], "app.utils.security": ["app.config", "functools.partial", "app.utils.security.AuthedAccount", "app.exceptions"], "functools.partial": [], "app.utils.security.AuthedAccount": [], "app.utils.context.Context": ["<builtin>.property"], "<builtin>.property": [], "app": [], "app.main": ["app.processor.http.register_routers", "app.middleware.envelope", "app.config", "fastapi.FastAPI", "app.middleware.auth", "app.processor.http", "<builtin>.open", "app.middleware.logging"], "<builtin>.open": [], "fastapi.FastAPI": [], "app.middleware.envelope": ["app.exceptions", "app.log"], "app.middleware.logging": ["app.log"], "app.middleware.auth": ["app.utils.context"], "app.processor.http": [], "app.processor.http.register_routers": ["app.processor.http.account", "app.processor.http.public"], "app.processor.http.account": ["app.processor.http.account.AddAccountOutput", "app.persistence.database", "app.processor.http.account.LoginInput", "fastapi.Depends", "app.middleware.headers", "app.processor.http.account.LoginOutput", "app.exceptions", "fastapi.APIRouter", "app.processor.http.account.AddAccountInput", "app.utils.security"], "app.persistence.database": ["app.persistence.database.PoolHandlerBase", "app.persistence.database.PGPoolHandler", "app.config", "app.base.mcs", "app.persistence.database.s3_file", "app.persistence.database.ClickhousePoolHandler", "app.persistence.database.account"], "app.persistence.database.PoolHandlerBase": ["contextlib.asynccontextmanager", "<builtin>.property", "abc.abstractmethod"], "abc.abstractmethod": [], "contextlib.asynccontextmanager": [], "app.persistence.database.ClickhousePoolHandler": ["contextlib.asynccontextmanager"], "app.persistence.database.PGPoolHandler": ["contextlib.asynccontextmanager"], "app.persistence.database.account": ["app.base.enums", "app.persistence.database.util"], "app.base.enums": ["app.base.enums.RoleType"], "app.base.enums.RoleType": [], "app.persistence.database.util": ["app.persistence.database", "app.persistence.database.util.ClickHouseQueryExecutor", "app.persistence.database.util.QueryExecutor", "app.exceptions", "app.persistence.database.util.PostgresQueryExecutor", "app.log"], "app.persistence.database.util.QueryExecutor": ["<builtin>.staticmethod"], "<builtin>.staticmethod": [], "app.persistence.database.util.ClickHouseQueryExecutor": ["<builtin>.staticmethod"], "app.persistence.database.util.PostgresQueryExecutor": ["<builtin>.staticmethod"], "app.persistence.database.s3_file": ["app.base.do", "app.persistence.database.util"], "app.base.do": ["app.base.do.S3File", "app.base.enums", "app.base.do.Account"], "app.base.do.Account": [], "app.base.do.S3File": [], "app.middleware.headers": ["app.utils.context", "app.utils.security"], "fastapi.Depends": [], "fastapi.APIRouter": [], "app.processor.http.account.AddAccountInput": [], "app.processor.http.account.AddAccountOutput": [], "app.processor.http.account.LoginInput": [], "app.processor.http.account.LoginOutput": [], "app.processor.http.public": ["app.processor.http.public.HealthCheckOutput", "fastapi.APIRouter"], "app.processor.http.public.HealthCheckOutput": [], "app.middleware": [], "app.processor": [], "app.processor.amqp": ["app.processor.amqp.EnhancedJSONEncoder", "app.persistence.database", "app.base.do"], "app.processor.amqp.EnhancedJSONEncoder": [], "app.processor.http.util": [], "app.utils": ["app.utils.context"], "app.persistence": [], "app.persistence.s3": ["app.config", "app.base.mcs", "app.persistence.s3.S3Handler.__init__", "app.persistence.s3.S3Handler"], "app.persistence.s3.S3Handler": [], "app.persistence.s3.S3Handler.__init__": [], "app.persistence.amqp_consumer": ["app.config", "app.log"], "app.persistence.amqp_publisher": ["app.base.do", "app.config", "app.base.mcs", "app.processor.amqp", "app.persistence.amqp_publisher.AMQPPublishHandler.__init__", "app.persistence.amqp_publisher.AMQPPublishHandler"], "app.persistence.amqp_publisher.AMQPPublishHandler": [], "app.persistence.amqp_publisher.AMQPPublishHandler.__init__": [], "app.base": [], "test": ["test.Mock", "test.AsyncTestCase", "test.AsyncMock", "test.TestCase", "app.utils.context", "app.utils.security", "test.MockContext"], "test.Mock": [], "test.AsyncMock": [], "test.MockContext": [], "test.AsyncTestCase": [], "test.TestCase": [], "test.app": [], "test.app.middleware.test_auth": ["test.app.middleware.test_auth.TestMiddleware", "test", "app.middleware.auth", "app.utils.security"], "test.app.middleware.test_auth.TestMiddleware": ["freezegun.freeze_time"], "freezegun.freeze_time": [], "test.app.middleware": [], "test.app.middleware.test_envelope": ["test.app.middleware.test_envelope.TestMiddleware", "app.middleware.envelope", "test.app.middleware.test_envelope.ValidationErrorModel", "app.config", "test", "app.exceptions"], "test.app.middleware.test_envelope.ValidationErrorModel": [], "test.app.middleware.test_envelope.TestMiddleware": [], "test.app.persistence": [], "test.app.persistence.database": [], "test.app.persistence.database.test_account": ["test", "app.exceptions", "app.persistence.database.account", "test.app.persistence.database.test_account.TestAddAccount"], "test.app.persistence.database.test_account.TestAddAccount": ["test.AsyncMock.__init__", "unittest.mock.patch"], "unittest.mock.patch": [], "test.AsyncMock.__init__": ["<builtin>.super"], "<builtin>.super": [], "test.app.middleware.test_auth.TestMiddleware.setUp": ["fastapi.Request", "fastapi.Response", "test.AsyncMock.__init__", "datetime.datetime"], "datetime.datetime": [], "fastapi.Request": [], "fastapi.Response": [], "test.app.middleware.test_auth.TestMiddleware.test_without_auth_token": ["<builtin>.dict", "test.Mock.__init__", "unittest.mock.patch", "freezegun.freeze_time"], "test.Mock.__init__": ["<builtin>.super"], "<builtin>.dict": [], "test.app.middleware.test_auth.TestMiddleware.test_with_auth_token": ["<builtin>.dict", "test.Mock.__init__", "unittest.mock.patch", "freezegun.freeze_time"], "test.app.persistence.database.test_account.TestAddAccount.test_add_account_happy_path": ["test.AsyncMock.__init__", "app.persistence.database.account.add", "unittest.mock.patch"], "app.persistence.database.account.add": ["app.persistence.database.util.QueryExecutor.execute"], "app.persistence.database.util.QueryExecutor.execute": [], "test.app.persistence.database.test_account.TestAddAccount.test_add_account_unique_error": ["test.AsyncMock.__init__", "unittest.mock.patch"], "app.persistence.s3.S3Handler.upload": ["<builtin>.str"], "<builtin>.str": [], "app.processor.http.account.add_account": ["app.utils.security.hash_password", "app.persistence.database.account.add"], "app.utils.security.hash_password": [], "app.processor.http.account.login": ["app.utils.security.verify_password", "app.persistence.database.account.read_by_username", "app.utils.security.encode_jwt"], "app.persistence.database.account.read_by_username": [], "app.utils.security.verify_password": [], "app.utils.security.encode_jwt": [], "app.middleware.auth.middleware": ["<builtin>.str", "app.utils.context.Context.set_request_uuid", "app.utils.context.Context.set_request_time"], "app.utils.context.Context.set_request_time": [], "app.utils.context.Context.set_request_uuid": [], "app.middleware.headers.get_auth_token": ["fastapi.Header", "app.utils.context.Context.set_account", "app.utils.security.decode_jwt", "fastapi.Cookie"], "fastapi.Cookie": [], "fastapi.Header": [], "app.utils.security.decode_jwt": [], "app.utils.context.Context.set_account": [], "app.base.mcs.Singleton.__call__": ["<builtin>.super"], "app.processor.amqp.EnhancedJSONEncoder.default": ["<builtin>.super"], "app.persistence.database.s3_file.add": ["app.persistence.database.util.QueryExecutor.execute"], "app.base.enums.RoleType.__gt__": ["<builtin>.tuple"], "<builtin>.tuple": [], "app.base.enums.RoleType.__lt__": ["app.base.enums.RoleType.__gt__"], "app.base.enums.RoleType.__ge__": ["app.base.enums.RoleType.__gt__"], "app.base.enums.RoleType.__le__": ["app.base.enums.RoleType.__gt__"], "test.app.middleware.test_envelope.TestMiddleware.setUp": ["fastapi.Request"], "test.app.middleware.test_envelope.TestMiddleware.test_happy_path": ["test.AsyncMock.__init__", "app.middleware.envelope.middleware"], "app.middleware.envelope.middleware": ["test.AsyncMock.__init__", "test.app.middleware.test_envelope.TestMiddleware.test_validation_error.raise_validation_error", "app.log.exception", "<builtin>.isinstance", "fastapi.responses.JSONResponse", "app.log.info"], "<builtin>.isinstance": [], "app.log.exception": ["app.log.format_exc", "app.utils.context.Context.get_request_uuid"], "app.utils.context.Context.get_request_uuid": [], "app.log.format_exc": ["<builtin>.type"], "<builtin>.type": [], "fastapi.responses.JSONResponse": [], "app.log.info": ["app.utils.context.Context.get_request_uuid"], "test.app.middleware.test_envelope.TestMiddleware.test_not_found": ["test.AsyncMock.__init__", "app.middleware.envelope.middleware"], "test.app.middleware.test_envelope.TestMiddleware.test_illegal_input": ["test.AsyncMock.__init__", "app.middleware.envelope.middleware"], "test.app.middleware.test_envelope.TestMiddleware.test_no_permission": ["test.AsyncMock.__init__", "app.middleware.envelope.middleware"], "test.app.middleware.test_envelope.TestMiddleware.test_unexpected_error": ["test.AsyncMock.__init__", "app.middleware.envelope.middleware"], "test.app.middleware.test_envelope.TestMiddleware.test_validation_error": ["app.middleware.envelope.middleware"], "test.app.middleware.test_envelope.TestMiddleware.test_validation_error.raise_validation_error": [], "app.middleware.logging.middleware": ["app.log.info"], "app.log.debug": ["app.utils.context.Context.get_request_uuid"], "app.log.error": ["app.utils.context.Context.get_request_uuid"], "app.persistence.database.util.QueryExecutor.__init__": ["app.persistence.database.util.PostgresQueryExecutor._format", "app.persistence.database.util.QueryExecutor._format"], "app.persistence.database.util.QueryExecutor._format": [], "app.persistence.database.util.PostgresQueryExecutor._format": ["<builtin>.sorted", "<map>.update", "app.log.info"], "<map>.update": [], "<builtin>.sorted": [], "app.persistence.database.util.ClickHouseQueryExecutor._format": ["app.log.info", "<map>.update"], "app.persistence.database.util.ClickHouseQueryExecutor.fetch_all": ["app.persistence.database.ClickhousePoolHandler.cursor"], "app.persistence.database.ClickhousePoolHandler.cursor": [], "app.persistence.database.util.ClickHouseQueryExecutor.fetch_one": ["app.persistence.database.ClickhousePoolHandler.cursor"], "app.persistence.database.util.ClickHouseQueryExecutor.fetch_none": ["app.persistence.database.ClickhousePoolHandler.cursor"], "app.persistence.database.util.PostgresQueryExecutor.fetch_all": ["app.persistence.database.PGPoolHandler.cursor"], "app.persistence.database.PGPoolHandler.cursor": [], "app.persistence.database.util.PostgresQueryExecutor.fetch_one": ["app.persistence.database.ClickhousePoolHandler.cursor"], "app.persistence.database.util.PostgresQueryExecutor.fetch_none": ["app.persistence.database.ClickhousePoolHandler.cursor"], "test.MockContext.get_request_time": ["<map>.get"], "test.MockContext.get_request_uuid": ["<map>.get"], "test.MockContext.get_account": ["<map>.get"], "test.AsyncTestCase.__init__": ["<builtin>.super"], "test.TestCase.__init__": ["<builtin>.super"]}