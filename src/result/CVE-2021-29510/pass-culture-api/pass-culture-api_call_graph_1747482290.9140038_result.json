{"setup": [], "tests.test_utils": [], "tests.conftest": ["tests.conftest.TestClient", "tests.serialization.serialization_decorator_test"], "tests.serialization.serialization_decorator_test": ["unittest.mock.Mock", "tests.serialization.serialization_decorator_test.TestQueryModel", "flask.blueprints.Blueprint", "tests.serialization.serialization_decorator_test.TestBodyModel", "tests.serialization.serialization_decorator_test.SerializationDecoratorTest", "tests.serialization.serialization_decorator_test.TestResponseModel", "pcapi.serialization.decorator.spectree_serialize"], "tests.serialization.serialization_decorator_test.TestBodyModel": [], "tests.serialization.serialization_decorator_test.TestQueryModel": [], "tests.serialization.serialization_decorator_test.TestResponseModel": [], "unittest.mock.Mock": [], "flask.blueprints.Blueprint": [], "pcapi.serialization.decorator.spectree_serialize": [], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest": ["unittest.mock.patch"], "unittest.mock.patch": [], "tests.conftest.TestClient": [], "tests": [], "tests.test_cors_config": ["tests.test_cors_config.CorsConfigPrivateApiTest", "tests.conftest", "tests.test_cors_config.CorsConfigNativeTest"], "tests.test_cors_config.CorsConfigPrivateApiTest": [], "tests.test_cors_config.CorsConfigNativeTest": [], "tests.connectors.user_profiling_fixtures": [], "tests.connectors.api_allocine_test": ["tests.connectors.api_allocine_test.GetMoviePosterFromAllocineTest", "tests.connectors.api_allocine_test.GetMovieShowtimeListTest"], "tests.connectors.api_allocine_test.GetMovieShowtimeListTest": ["unittest.mock.patch"], "tests.connectors.api_allocine_test.GetMoviePosterFromAllocineTest": ["unittest.mock.patch"], "tests.connectors": [], "tests.connectors.api_demarches_simplifiees_test": ["tests.scripts.beneficiary.fixture", "tests.connectors.api_demarches_simplifiees_test.GraphqlResponseTest", "tests.connectors.api_demarches_simplifiees_test.GetApplicationDetailsTest"], "tests.scripts.beneficiary.fixture": [], "tests.connectors.api_demarches_simplifiees_test.GetApplicationDetailsTest": ["unittest.mock.patch"], "tests.connectors.api_demarches_simplifiees_test.GraphqlResponseTest": [], "tests.connectors.api_entreprises_test": ["tests.connectors.api_entreprises_test.GetOffererLegalCategoryTest", "tests.connectors.api_entreprises_test.CheckSiretIsStillActiveTest", "tests.connectors.api_entreprises_test.GetByOffererTest"], "tests.connectors.api_entreprises_test.GetByOffererTest": ["unittest.mock.patch"], "tests.connectors.api_entreprises_test.GetOffererLegalCategoryTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "pcapi.core.testing.override_settings": [], "tests.connectors.api_entreprises_test.CheckSiretIsStillActiveTest": [], "tests.connectors.user_profiling_test": ["tests.connectors.user_profiling_fixtures", "pcapi.core.testing.override_settings"], "tests.connectors.api_adage_test": ["tests.connectors.api_adage_test.AdageHttpClientTest"], "tests.connectors.api_adage_test.AdageHttpClientTest": ["pcapi.core.testing.override_settings"], "tests.connectors.api_recaptcha_test": ["tests.connectors.api_recaptcha_test.GetTokenValidationAndScoreTest", "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest"], "tests.connectors.api_recaptcha_test.GetTokenValidationAndScoreTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.connectors.beneficiaries": [], "tests.connectors.beneficiaries.ubble_test": ["tests.test_utils", "tests.connectors.beneficiaries.ubble_test.GetContentTest", "tests.connectors.beneficiaries.ubble_test.StartIdentificationTest", "tests.core.subscription.test_factories"], "tests.core.subscription.test_factories": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksAttributesFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsAttributesFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesAttributesFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsFactory", "tests.core.subscription.test_factories.UbbleIdentificationDataFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksAttributesFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksFactory", "tests.core.subscription.test_factories.IdentificationState", "tests.core.subscription.test_factories.UbbleIdentificationIncludedFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksAttributesFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksFactory", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesFactory", "tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory", "tests.core.subscription.test_factories.IdentificationIncludedType", "tests.core.subscription.test_factories.UbbleIdentificationResponseFactory"], "tests.core.subscription.test_factories.IdentificationState": [], "tests.core.subscription.test_factories.IdentificationIncludedType": [], "tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory": ["tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory.Params", "tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory.Params": [], "tests.core.subscription.test_factories.UbbleIdentificationDataFactory": ["tests.core.subscription.test_factories.UbbleIdentificationDataFactory.Meta", "tests.core.subscription.test_factories.UbbleIdentificationDataFactory.Params"], "tests.core.subscription.test_factories.UbbleIdentificationDataFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationDataFactory.Params": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsAttributesFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsAttributesFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsAttributesFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksAttributesFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksAttributesFactory.Meta", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksAttributesFactory.Params"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksAttributesFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksAttributesFactory.Params": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesAttributesFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesAttributesFactory.Meta", "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesAttributesFactory.Params"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesAttributesFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesAttributesFactory.Params": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksAttributesFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksAttributesFactory.Meta", "tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksAttributesFactory.Params"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksAttributesFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksAttributesFactory.Params": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksAttributesFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksAttributesFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksAttributesFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentChecksFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedFaceChecksFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedReferenceDataChecksFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesFactory": ["tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocFaceMatchesFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationResponseFactory": ["tests.core.subscription.test_factories.UbbleIdentificationResponseFactory.Params", "tests.core.subscription.test_factories.UbbleIdentificationResponseFactory.Meta"], "tests.core.subscription.test_factories.UbbleIdentificationResponseFactory.Meta": [], "tests.core.subscription.test_factories.UbbleIdentificationResponseFactory.Params": [], "tests.connectors.beneficiaries.ubble_test.StartIdentificationTest": [], "tests.connectors.beneficiaries.ubble_test.GetContentTest": [], "tests.connectors.beneficiaries.ubble_fixtures": [], "tests.repository.user_queries_test": ["tests.repository.user_queries_test.GetAllUsersWalletBalancesTest", "tests.repository.user_queries_test.FindProUsersByEmailProviderTest"], "tests.repository.user_queries_test.GetAllUsersWalletBalancesTest": [], "tests.repository.user_queries_test.FindProUsersByEmailProviderTest": [], "tests.repository.payment_queries_test": ["tests.repository.payment_queries_test.GetPaymentsByStatusTest", "tests.repository.payment_queries_test.FindNotProcessableWithBankInformationTest", "tests.repository.payment_queries_test.FindPaymentsByMessageTest"], "tests.repository.payment_queries_test.FindPaymentsByMessageTest": [], "tests.repository.payment_queries_test.FindNotProcessableWithBankInformationTest": [], "tests.repository.payment_queries_test.GetPaymentsByStatusTest": [], "tests.repository.user_session_queries_test": ["tests.repository.user_session_queries_test.DeleteUserSessionTest"], "tests.repository.user_session_queries_test.DeleteUserSessionTest": [], "tests.repository.product_queries_test": ["tests.repository.product_queries_test.FindActiveBookProductByIsbnTest", "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest"], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest": [], "tests.repository.product_queries_test.FindActiveBookProductByIsbnTest": [], "tests.repository.venue_provider_queries_test": ["tests.repository.venue_provider_queries_test.GetVenueProviderByIdTest", "tests.repository.venue_provider_queries_test.GetActiveVenueProvidersForSpecificProviderTest"], "tests.repository.venue_provider_queries_test.GetActiveVenueProvidersForSpecificProviderTest": [], "tests.repository.venue_provider_queries_test.GetVenueProviderByIdTest": [], "tests.repository.beneficiary_import_queries_test": ["tests.repository.beneficiary_import_queries_test.GetAlreadyProcessedApplicationIdTest"], "tests.repository.beneficiary_import_queries_test.GetAlreadyProcessedApplicationIdTest": [], "tests.repository.allocine_pivot_queries_test": ["tests.repository.allocine_pivot_queries_test.HasAllocinePivotForVenueTest", "tests.repository.allocine_pivot_queries_test.GetAllocinePivotForVenueTest"], "tests.repository.allocine_pivot_queries_test.HasAllocinePivotForVenueTest": [], "tests.repository.allocine_pivot_queries_test.GetAllocinePivotForVenueTest": [], "tests.repository": [], "tests.repository.offer_queries_test": ["tests.repository.offer_queries_test.FindOffersTest", "tests.repository.offer_queries_test.GetPaginatedOfferIdsByVenueIdTest", "tests.repository.offer_queries_test.GetPaginatedActiveOfferIdsTest", "tests.repository.offer_queries_test.GetOffersByIdsTest"], "tests.repository.offer_queries_test.FindOffersTest": [], "tests.repository.offer_queries_test.GetOffersByIdsTest": [], "tests.repository.offer_queries_test.GetPaginatedActiveOfferIdsTest": [], "tests.repository.offer_queries_test.GetPaginatedOfferIdsByVenueIdTest": [], "tests.repository.entity_validator_test": [], "tests.repository.providable_queries_test": [], "tests.repository.reimbursement_queries_test": ["datetime.timedelta", "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest"], "datetime.timedelta": [], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest": [], "tests.repository.user_offerer_queries_test": [], "tests.sandboxes.activation_test": [], "tests.sandboxes": [], "tests.sandboxes.scripts": [], "tests.sandboxes.scripts.create_industrial_app_users_test": ["tests.sandboxes.scripts.create_industrial_app_users_test.CreateIndustrialWebappUsersTest"], "tests.sandboxes.scripts.create_industrial_app_users_test.CreateIndustrialWebappUsersTest": [], "tests.sandboxes.scripts.bookings_recap": [], "tests.sandboxes.scripts.bookings_recap.bookings_recap_test": ["tests.sandboxes.scripts.bookings_recap.bookings_recap_test.BookingsRecapTest"], "tests.sandboxes.scripts.bookings_recap.bookings_recap_test.BookingsRecapTest": [], "tests.sandboxes.scripts.industrial": [], "tests.sandboxes.scripts.industrial.test_save_industrial_sandbox": ["tests.sandboxes.scripts.industrial.test_save_industrial_sandbox.SaveIndustrialSandboxTest"], "tests.sandboxes.scripts.industrial.test_save_industrial_sandbox.SaveIndustrialSandboxTest": [], "tests.tasks.decorator_test": ["unittest.mock.Mock", "tests.conftest", "pcapi.tasks.decorator.task", "tests.tasks.decorator_test.CloudTaskDecoratorTest"], "pcapi.tasks.decorator.task": [], "tests.tasks.decorator_test.CloudTaskDecoratorTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.tasks": [], "tests.tasks.sendinblue_tasks_test": ["tests.tasks.sendinblue_tasks_test.SendinblueTasksTest"], "tests.tasks.sendinblue_tasks_test.SendinblueTasksTest": ["unittest.mock.patch"], "tests.tasks.batch_tasks_test": ["<builtin>.Exception", "unittest.mock.patch", "pcapi.core.testing.override_settings"], "<builtin>.Exception": [], "tests.core": [], "tests.core.offers.test_repository": ["tests.core.offers.test_repository.GetSoldOutOffersCountForVenueTest", "tests.core.offers.test_repository.AvailableActivationCodeTest", "tests.core.offers.test_repository.DeletePastDraftOfferTest", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest", "tests.core.offers.test_repository.CheckStockConsistenceTest", "tests.core.offers.test_repository.GetExpiredOffersTest", "tests.core.offers.test_repository.TomorrowStockTest", "tests.core.offers.test_repository.GetOffersByIdsTest", "tests.core.offers.test_repository.GetActiveOffersCountForVenueTest"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest": ["tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsProTest", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.NameOrIsbnFilterTest", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsAdminTest"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsAdminTest": [], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsProTest": [], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.NameOrIsbnFilterTest": [], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest": [], "tests.core.offers.test_repository.GetOffersByIdsTest": [], "tests.core.offers.test_repository.GetActiveOffersCountForVenueTest": [], "tests.core.offers.test_repository.GetSoldOutOffersCountForVenueTest": [], "tests.core.offers.test_repository.CheckStockConsistenceTest": [], "tests.core.offers.test_repository.TomorrowStockTest": [], "tests.core.offers.test_repository.GetExpiredOffersTest": ["datetime.datetime"], "datetime.datetime": [], "tests.core.offers.test_repository.DeletePastDraftOfferTest": ["freezegun.freeze_time"], "freezegun.freeze_time": [], "tests.core.offers.test_repository.AvailableActivationCodeTest": [], "tests.core.offers.test_utils": ["tests.core.offers.test_utils.OffersUtilsTest"], "tests.core.offers.test_utils.OffersUtilsTest": [], "tests.core.offers.test_validation": ["tests.core.offers.test_validation.CheckImageTest", "tests", "tests.core.offers.test_validation.CheckStockIsUpdatableTest", "tests.core.offers.test_validation.CheckOfferExistingStocksAreEditableTest", "tests.core.offers.test_validation.CheckStockIsDeletableTest", "tests.core.offers.test_validation.CheckValidationStatusTest", "tests.core.offers.test_validation.CheckRequiredDatesForStockTest", "tests.core.offers.test_validation.CheckPricesForStockTest", "tests.core.offers.test_validation.CheckStockCanBeCreatedForOfferTest"], "tests.core.offers.test_validation.CheckOfferExistingStocksAreEditableTest": [], "tests.core.offers.test_validation.CheckPricesForStockTest": [], "tests.core.offers.test_validation.CheckRequiredDatesForStockTest": [], "tests.core.offers.test_validation.CheckStockCanBeCreatedForOfferTest": [], "tests.core.offers.test_validation.CheckStockIsDeletableTest": [], "tests.core.offers.test_validation.CheckStockIsUpdatableTest": [], "tests.core.offers.test_validation.CheckImageTest": [], "tests.core.offers.test_validation.CheckValidationStatusTest": [], "tests.core.offers": [], "tests.core.offers.test_models": ["tests.core.offers.test_models.OfferStatusTest", "tests.core.offers.test_models.StockIsBookableTest", "tests.core.offers.test_models.OfferIsEditableTest", "tests.core.offers.test_models.OfferDateRangeTest", "tests.core.offers.test_models.StockIsEventDeletableTest", "tests.core.offers.test_models.OfferIsDigitalTest", "tests.core.offers.test_models.OfferActiveMediationTest", "tests.core.offers.test_models.OfferThumbUrlTest", "tests.core.offers.test_models.OfferValidationTest", "tests.core.offers.test_models.StockBookingsQuantityTest", "tests.core.offers.test_models.StockQuantityTest", "tests.core.offers.test_models.StockIsEventExpiredTest", "tests.core.offers.test_models.StockRemainingQuantityTest", "tests.core.offers.test_models.OfferHasBookingLimitDatetimesPassedTest", "tests.core.offers.test_models.OfferIsSoldOutTest", "tests.core.offers.test_models.StockDateModifiedTest"], "tests.core.offers.test_models.OfferDateRangeTest": [], "tests.core.offers.test_models.OfferIsDigitalTest": [], "tests.core.offers.test_models.OfferHasBookingLimitDatetimesPassedTest": [], "tests.core.offers.test_models.OfferActiveMediationTest": [], "tests.core.offers.test_models.OfferIsEditableTest": [], "tests.core.offers.test_models.OfferThumbUrlTest": [], "tests.core.offers.test_models.OfferValidationTest": [], "tests.core.offers.test_models.OfferStatusTest": [], "tests.core.offers.test_models.StockBookingsQuantityTest": [], "tests.core.offers.test_models.OfferIsSoldOutTest": [], "tests.core.offers.test_models.StockRemainingQuantityTest": [], "tests.core.offers.test_models.StockDateModifiedTest": [], "tests.core.offers.test_models.StockQuantityTest": [], "tests.core.offers.test_models.StockIsBookableTest": [], "tests.core.offers.test_models.StockIsEventExpiredTest": [], "tests.core.offers.test_models.StockIsEventDeletableTest": [], "tests.core.offers.test_api": ["tests.core.offers.test_api.UpdateOfferTest", "tests.core.offers.test_api.ImportOfferValidationConfigTest", "tests.core.offers.test_api.CreateEducationalOfferStocksTest", "tests.core.offers.test_api.UpsertStocksTest", "tests", "tests.core.offers.test_api.UnindexExpiredOffersTest", "tests.core.offers.test_api.CreateOfferTest", "tests.core.offers.test_api.BatchUpdateOffersTest", "tests.core.offers.test_api.DeactivateInappropriateProductTest", "tests.core.offers.test_api.DeleteStockTest", "tests.core.offers.test_api.CreateMediationV2Test", "tests.core.offers.test_api.ParseOfferValidationConfigTest", "tests.core.offers.test_api.ComputeOfferValidationScoreTest", "tests.core.offers.test_api.LoadProductByIsbnAndCheckIsGCUCompatibleOrRaiseErrorTest", "tests.core.offers.test_api.EditEducationalOfferStocksTest", "tests.core.offers.test_api.OfferExpenseDomainsTest", "tests.core.offers.test_api.AddCriterionToOffersTest", "tests.core.offers.test_api.UpdateOfferValidationStatusTest", "tests.core.offers.test_api.UpdateStockIdAtProvidersTest", "tests.core.offers.test_api.ComputeOfferValidationTest"], "tests.core.offers.test_api.UpsertStocksTest": ["freezegun.freeze_time"], "tests.core.offers.test_api.CreateEducationalOfferStocksTest": [], "tests.core.offers.test_api.EditEducationalOfferStocksTest": ["freezegun.freeze_time"], "tests.core.offers.test_api.DeleteStockTest": [], "tests.core.offers.test_api.CreateMediationV2Test": ["pcapi.core.testing.override_settings"], "tests.core.offers.test_api.CreateOfferTest": ["pcapi.core.testing.override_features"], "pcapi.core.testing.override_features": [], "tests.core.offers.test_api.UpdateOfferTest": [], "tests.core.offers.test_api.BatchUpdateOffersTest": [], "tests.core.offers.test_api.UpdateStockIdAtProvidersTest": [], "tests.core.offers.test_api.OfferExpenseDomainsTest": [], "tests.core.offers.test_api.AddCriterionToOffersTest": [], "tests.core.offers.test_api.DeactivateInappropriateProductTest": [], "tests.core.offers.test_api.ComputeOfferValidationTest": [], "tests.core.offers.test_api.UpdateOfferValidationStatusTest": [], "tests.core.offers.test_api.ImportOfferValidationConfigTest": [], "tests.core.offers.test_api.ParseOfferValidationConfigTest": [], "tests.core.offers.test_api.ComputeOfferValidationScoreTest": [], "tests.core.offers.test_api.LoadProductByIsbnAndCheckIsGCUCompatibleOrRaiseErrorTest": [], "tests.core.offers.test_api.UnindexExpiredOffersTest": ["pcapi.core.testing.override_settings"], "tests.core.offerers.test_repository": ["tests.core.offerers.test_repository.GetAllOfferersForUserTest", "tests.core.offerers.test_repository.HasDigitalVenueWithAtLeastOneOfferTest", "tests.core.offerers.test_repository.GetAllVenueLabelsTest", "tests.core.offerers.test_repository.FindOffererByValidationTokenTest", "tests.core.offerers.test_repository.HasVenueWithoutDraftOrAcceptedBankInformationTest", "tests.core.offerers.test_repository.GetOfferersByDateValidatedTest", "tests.core.offerers.test_repository.FindUserOffererByValidationTokenTest", "tests.core.offerers.test_repository.FilterOfferersWithKeywordsStringTest", "tests.core.offerers.test_repository.GetSirenByOffererIdTest", "tests.core.offerers.test_repository.FindNewOffererUserEmailTest"], "tests.core.offerers.test_repository.GetAllVenueLabelsTest": [], "tests.core.offerers.test_repository.GetAllOfferersForUserTest": ["tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedForUserFilterTest", "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedFilterTest"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedFilterTest": [], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedForUserFilterTest": [], "tests.core.offerers.test_repository.FindUserOffererByValidationTokenTest": [], "tests.core.offerers.test_repository.FindOffererByValidationTokenTest": [], "tests.core.offerers.test_repository.FindNewOffererUserEmailTest": [], "tests.core.offerers.test_repository.FilterOfferersWithKeywordsStringTest": [], "tests.core.offerers.test_repository.GetOfferersByDateValidatedTest": [], "tests.core.offerers.test_repository.HasVenueWithoutDraftOrAcceptedBankInformationTest": [], "tests.core.offerers.test_repository.HasDigitalVenueWithAtLeastOneOfferTest": [], "tests.core.offerers.test_repository.GetSirenByOffererIdTest": [], "tests.core.offerers.test_validation": [], "tests.core.offerers": [], "tests.core.offerers.test_repository_get_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest", "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest": [], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest": [], "tests.core.offerers.test_models": ["tests.core.offerers.test_models.VenueTimezonePropertyTest", "tests.core.offerers.test_models.OffererDepartementCodePropertyTest", "tests.core.offerers.test_models.OffererNValidatedOffersTest", "tests.core.offerers.test_models.OffererDepartementCodeSQLExpressionTest", "tests.core.offerers.test_models.VenueTimezoneSqlQueryTest", "tests.core.offerers.test_models.OffererGrantAccessTest", "tests.core.offerers.test_models.OffererLegalCategoryTest"], "tests.core.offerers.test_models.VenueTimezonePropertyTest": [], "tests.core.offerers.test_models.VenueTimezoneSqlQueryTest": [], "tests.core.offerers.test_models.OffererDepartementCodePropertyTest": [], "tests.core.offerers.test_models.OffererDepartementCodeSQLExpressionTest": [], "tests.core.offerers.test_models.OffererNValidatedOffersTest": [], "tests.core.offerers.test_models.OffererLegalCategoryTest": ["unittest.mock.patch"], "tests.core.offerers.test_models.OffererGrantAccessTest": [], "tests.core.offerers.test_api": ["tests.core.offerers.test_api.EditVenueContactTest", "tests.core.offerers.test_api.ValidateOffererAttachmentTest", "tests.core.offerers.test_api.EditVenueTest", "tests.core.offerers.test_api.CreateOffererTest", "tests.core.offerers.test_api.ApiKeyTest", "tests.core.offerers.test_api.ValidateOffererTest"], "tests.core.offerers.test_api.EditVenueTest": ["unittest.mock.patch"], "tests.core.offerers.test_api.EditVenueContactTest": [], "tests.core.offerers.test_api.ApiKeyTest": [], "tests.core.offerers.test_api.CreateOffererTest": ["unittest.mock.patch"], "tests.core.offerers.test_api.ValidateOffererAttachmentTest": ["unittest.mock.patch"], "tests.core.offerers.test_api.ValidateOffererTest": ["unittest.mock.patch"], "tests.core.payments.test_utils": [], "tests.core.payments.test_validation": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest": [], "tests.core.payments": [], "tests.core.payments.test_models": ["tests.core.payments.test_models.DummyBooking", "tests.core.payments.test_models.CustomReimbursementRuleTest"], "tests.core.payments.test_models.DummyBooking": [], "tests.core.payments.test_models.CustomReimbursementRuleTest": [], "tests.core.payments.test_api": ["tests.core.payments.test_api.CreateDepositTest", "tests.core.payments.test_api.EditReimbursementRuleTest", "tests.core.payments.test_api.BulkCreatePaymentStatusesTest", "tests.core.payments.test_api.CreateOffererReimbursementRuleTest", "tests.core.payments.test_api.CreateOfferReimbursementRuleTest"], "tests.core.payments.test_api.CreateDepositTest": ["datetime.datetime", "decimal.Decimal", "pcapi.core.testing.override_settings"], "decimal.Decimal": [], "tests.core.payments.test_api.BulkCreatePaymentStatusesTest": [], "tests.core.payments.test_api.CreateOffererReimbursementRuleTest": ["freezegun.freeze_time"], "tests.core.payments.test_api.CreateOfferReimbursementRuleTest": ["freezegun.freeze_time"], "tests.core.payments.test_api.EditReimbursementRuleTest": [], "tests.core.mails": [], "tests.core.mails.tests": ["tests.core.mails.tests.ToDevMailjetBackendTest", "tests.core.mails.tests.SendinblueBackendTest", "tests.core.mails.tests.SendTest", "tests.core.mails.tests.MailjetBackendTest", "tests.core.mails.tests.ToDevSendinblueBackendTest"], "tests.core.mails.tests.SendTest": ["pcapi.core.testing.override_settings", "<str>.join"], "<str>.join": [], "tests.core.mails.tests.MailjetBackendTest": ["unittest.mock.patch"], "tests.core.mails.tests.ToDevMailjetBackendTest": ["pcapi.core.testing.override_settings"], "tests.core.mails.tests.SendinblueBackendTest": ["unittest.mock.patch"], "tests.core.mails.tests.ToDevSendinblueBackendTest": [], "tests.core.mails.transactional": [], "tests.core.mails.transactional.test_send_transactional_email": ["tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithTemplateTest", "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithoutTemplateTest"], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithTemplateTest": ["sib_api_v3_sdk.rest.ApiException", "unittest.mock.patch", "pcapi.core.testing.override_settings"], "sib_api_v3_sdk.rest.ApiException": [], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithoutTemplateTest": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalWithoutTemplateEmailData", "sib_api_v3_sdk.rest.ApiException", "unittest.mock.patch"], "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalWithoutTemplateEmailData": [], "tests.core.mails.transactional.pro.offerer_attachment_validation_test": ["tests.core.mails.transactional.pro.offerer_attachment_validation_test.ProOffererAttachmentValidationEmailTest"], "tests.core.mails.transactional.pro.offerer_attachment_validation_test.ProOffererAttachmentValidationEmailTest": [], "tests.core.mails.transactional.pro.reset_password_to_pro_test": ["tests.core.mails.transactional.pro.reset_password_to_pro_test.SendinblueProResetPasswordEmailDataTest"], "tests.core.mails.transactional.pro.reset_password_to_pro_test.SendinblueProResetPasswordEmailDataTest": ["unittest.mock.patch"], "tests.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro_test": ["tests.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro_test.SendEventOfferPosponedConfirmationToProEmailTest"], "tests.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro_test.SendEventOfferPosponedConfirmationToProEmailTest": [], "tests.core.mails.transactional.pro.email_validation_test": ["tests.core.mails.transactional.pro.email_validation_test.SendProUserValidationEmailTest", "tests.core.mails.transactional.pro.email_validation_test.SendAdminUserValidationEmailTest"], "tests.core.mails.transactional.pro.email_validation_test.SendProUserValidationEmailTest": [], "tests.core.mails.transactional.pro.email_validation_test.SendAdminUserValidationEmailTest": [], "tests.core.mails.transactional.pro.welcome_to_pro_test": ["tests.core.mails.transactional.pro.welcome_to_pro_test.SendWelcomeToProEmailTest"], "tests.core.mails.transactional.pro.welcome_to_pro_test.SendWelcomeToProEmailTest": [], "tests.core.mails.transactional.pro.offer_validation_to_pro_test": ["tests.core.mails.transactional.pro.offer_validation_to_pro_test.SendinblueSendOfferValidationTest"], "tests.core.mails.transactional.pro.offer_validation_to_pro_test.SendinblueSendOfferValidationTest": [], "tests.core.mails.transactional.pro.invoice_available_to_pro_test": ["tests.core.mails.transactional.pro.invoice_available_to_pro_test.SendinblueProAvailableInvoiceEmailDataTest"], "tests.core.mails.transactional.pro.invoice_available_to_pro_test.SendinblueProAvailableInvoiceEmailDataTest": [], "tests.core.mails.transactional.pro.new_offerer_validation_test": ["tests.core.mails.transactional.pro.new_offerer_validation_test.SendNewOffererValidationEmailTest"], "tests.core.mails.transactional.pro.new_offerer_validation_test.SendNewOffererValidationEmailTest": [], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test": ["freezegun.freeze_time", "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.BooksBookingExpirationDateTestSendinblue", "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.DigitalOffersTestSendinblue"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.DigitalOffersTestSendinblue": [], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.BooksBookingExpirationDateTestSendinblue": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test": ["tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueRetrieveDataToWarnUserAfterProBookingCancellationTest", "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueSendWarningToBeneficiaryAfterProBookingCancellationTest"], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueSendWarningToBeneficiaryAfterProBookingCancellationTest": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueRetrieveDataToWarnUserAfterProBookingCancellationTest": [], "tests.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary_test": ["tests.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary_test.GetBookingPostponedByProToBeneficiaryTest"], "tests.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary_test.GetBookingPostponedByProToBeneficiaryTest": [], "tests.core.mails.transactional.bookings.new_booking_to_pro_test": ["tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.SendNewBookingEmailToProTest"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest": ["pcapi.core.testing.override_features"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.SendNewBookingEmailToProTest": [], "tests.core.mails.transactional.bookings": [], "tests.core.mails.transactional.bookings.booking_expiration_to_beneficiary_test": ["tests.core.mails.transactional.bookings.booking_expiration_to_beneficiary_test.SendExpiredBookingsEmailToBeneficiarySendinblueTest"], "tests.core.mails.transactional.bookings.booking_expiration_to_beneficiary_test.SendExpiredBookingsEmailToBeneficiarySendinblueTest": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test": ["tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.MakeOffererBookingRecapEmailAfterUserCancellationTest", "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.SendBeneficiaryUserDrivenCancellationEmailToOffererTest"], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.SendBeneficiaryUserDrivenCancellationEmailToOffererTest": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.MakeOffererBookingRecapEmailAfterUserCancellationTest": [], "tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test": ["tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test.FilterBooksBookingsTest", "tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test.SendinblueSendSoonToBeExpiredBookingsEmailToBeneficiaryTest"], "tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test.FilterBooksBookingsTest": [], "tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test.SendinblueSendSoonToBeExpiredBookingsEmailToBeneficiaryTest": [], "tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test": ["tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test.BookingCancellationConfirmationByProEmailData", "tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test.SendOffererBookingsRecapEmailAfterOffererCancellationTest"], "tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test.BookingCancellationConfirmationByProEmailData": [], "tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test.SendOffererBookingsRecapEmailAfterOffererCancellationTest": [], "tests.core.mails.transactional.bookings.booking_expiration_to_pro_test": ["tests.core.mails.transactional.bookings.booking_expiration_to_pro_test.SendExpiredBookingsRecapEmailToOffererTest"], "tests.core.mails.transactional.bookings.booking_expiration_to_pro_test.SendExpiredBookingsRecapEmailToOffererTest": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test": ["tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.MakeBeneficiaryBookingCancellationEmailSendinblueDataTest", "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.SendSendiblueBeneficiaryBookingCancellationEmailTest"], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.SendSendiblueBeneficiaryBookingCancellationEmailTest": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.MakeBeneficiaryBookingCancellationEmailSendinblueDataTest": ["freezegun.freeze_time"], "tests.core.mails.transactional.bookings.booking_cancellation_test": ["tests.core.mails.transactional.bookings.booking_cancellation_test.SendOffererDrivenCancellationEmailToOffererTest"], "tests.core.mails.transactional.bookings.booking_cancellation_test.SendOffererDrivenCancellationEmailToOffererTest": [], "tests.core.mails.transactional.users.email_address_change_test": ["tests.core.mails.transactional.users.email_address_change_test.SendinblueEmailAddressChangeTest"], "tests.core.mails.transactional.users.email_address_change_test.SendinblueEmailAddressChangeTest": [], "tests.core.mails.transactional.users.pre_subscription_dms_error_test": ["tests.core.mails.transactional.users.pre_subscription_dms_error_test.PreSubscriptionDmsErrorEmailSendinblueTest"], "tests.core.mails.transactional.users.pre_subscription_dms_error_test.PreSubscriptionDmsErrorEmailSendinblueTest": [], "tests.core.mails.transactional.users.accepted_as_beneficiary_test": ["tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsBeneficiaryEmailSendinblueTest", "tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsUnderageBeneficiaryEmailSendinblueTest"], "tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsBeneficiaryEmailSendinblueTest": [], "tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsUnderageBeneficiaryEmailSendinblueTest": [], "tests.core.mails.transactional.users.birthday_to_newly_eligible_user_test": ["tests.core.mails.transactional.users.birthday_to_newly_eligible_user_test.SendinblueSendNewlyEligibleUserEmailTest"], "tests.core.mails.transactional.users.birthday_to_newly_eligible_user_test.SendinblueSendNewlyEligibleUserEmailTest": [], "tests.core.mails.transactional.users.reset_password_test": ["tests.core.mails.transactional.users.reset_password_test.SendinblueSendResetPasswordUserEmailTest", "tests.core.mails.transactional.users.reset_password_test.MailjetSendResetPasswordUserEmailTest"], "tests.core.mails.transactional.users.reset_password_test.MailjetSendResetPasswordUserEmailTest": [], "tests.core.mails.transactional.users.reset_password_test.SendinblueSendResetPasswordUserEmailTest": [], "tests.core.mails.transactional.users.delete_account_test": ["tests.core.mails.transactional.users.delete_account_test.UserRequestDeleteAccountReceptionEmailTest"], "tests.core.mails.transactional.users.delete_account_test.UserRequestDeleteAccountReceptionEmailTest": [], "tests.core.mails.transactional.users.email_address_change_confirmation_test": ["tests.core.mails.transactional.users.email_address_change_confirmation_test.SendinblueAddressEmailChangeConfirmationTest"], "tests.core.mails.transactional.users.email_address_change_confirmation_test.SendinblueAddressEmailChangeConfirmationTest": [], "tests.core.mails.transactional.users.subscription_document_error_test": ["tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest"], "tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest": [], "tests.core.mails.transactional.users.recredit_to_underage_beneficiary_test": ["tests.core.mails.transactional.users.recredit_to_underage_beneficiary_test.SendinblueSendNewlyEligibleUserEmailTest"], "tests.core.mails.transactional.users.recredit_to_underage_beneficiary_test.SendinblueSendNewlyEligibleUserEmailTest": [], "tests.core.mails.transactional.users.offer_link_to_ios_user_test": ["tests.core.mails.transactional.users.offer_link_to_ios_user_test.SendinblueEmailOfferLinkIosUserTest"], "tests.core.mails.transactional.users.offer_link_to_ios_user_test.SendinblueEmailOfferLinkIosUserTest": [], "tests.core.bookings.test_repository": ["tests.core.bookings.test_repository.SoonExpiringBookingsTest", "tests.core.bookings.test_repository.FindExpiringBookingsTest", "tests.core.bookings.test_repository.GetLegacyActiveBookingsQuantityForVenueTest", "tests.core.bookings.test_repository.FindSoonToBeExpiredBookingsTest", "tests.core.bookings.test_repository.FindBookingsByFraudulentUsersTest", "tests.core.bookings.test_repository.FindPaymentEligibleBookingsForVenueTest", "tests.core.bookings.test_repository.FindByTokenTest", "tests.core.bookings.test_repository.GetLegacyValidatedBookingsQuantityForVenueTest", "tests.core.bookings.test_repository.GetCsvReportTest", "tests.core.bookings.test_repository.FindByTest", "tests.core.bookings.test_repository.FindByProUserTest", "datetime.timedelta", "tests.core.bookings.test_repository.GetOffersBookedByFraudulentUsersTest"], "tests.core.bookings.test_repository.FindPaymentEligibleBookingsForVenueTest": [], "tests.core.bookings.test_repository.FindByTest": ["tests.core.bookings.test_repository.FindByTest.ByTokenAndEmailAndOfferIdTest", "tests.core.bookings.test_repository.FindByTest.ByTokenAndEmailTest", "tests.core.bookings.test_repository.FindByTest.ByTokenTest"], "tests.core.bookings.test_repository.FindByTest.ByTokenTest": [], "tests.core.bookings.test_repository.FindByTest.ByTokenAndEmailTest": [], "tests.core.bookings.test_repository.FindByTest.ByTokenAndEmailAndOfferIdTest": [], "tests.core.bookings.test_repository.FindByTokenTest": [], "tests.core.bookings.test_repository.FindByProUserTest": [], "tests.core.bookings.test_repository.GetCsvReportTest": ["tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest"], "tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest": ["freezegun.freeze_time"], "tests.core.bookings.test_repository.FindSoonToBeExpiredBookingsTest": [], "tests.core.bookings.test_repository.GetLegacyActiveBookingsQuantityForVenueTest": [], "tests.core.bookings.test_repository.GetLegacyValidatedBookingsQuantityForVenueTest": [], "tests.core.bookings.test_repository.GetOffersBookedByFraudulentUsersTest": [], "tests.core.bookings.test_repository.FindBookingsByFraudulentUsersTest": [], "tests.core.bookings.test_repository.FindExpiringBookingsTest": [], "tests.core.bookings.test_repository.SoonExpiringBookingsTest": [], "tests.core.bookings.test_validation": ["tests.core.bookings.test_validation.CheckOfferCategoryIsBookableByUserTest", "tests.core.bookings.test_validation.CheckCanBeMarkAsUnusedTest", "tests.core.bookings.test_validation.CheckOfferAlreadyBookedTest", "tests.core.bookings.test_validation.CheckOffererCanCancelBookingTest", "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test", "tests.core.bookings.test_validation.CheckIsUsableTest", "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test", "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest", "tests.core.bookings.test_validation.CheckCanBookFreeOfferTest", "tests.core.bookings.test_validation.CheckStockIsBookableTest", "tests.core.bookings.test_validation.CheckQuantityTest", "tests.core.bookings.test_validation.CheckBeneficiaryCanCancelBookingTest"], "tests.core.bookings.test_validation.CheckCanBookFreeOfferTest": [], "tests.core.bookings.test_validation.CheckOfferAlreadyBookedTest": [], "tests.core.bookings.test_validation.CheckQuantityTest": [], "tests.core.bookings.test_validation.CheckStockIsBookableTest": [], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test": [], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test": [], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest": [], "tests.core.bookings.test_validation.CheckIsUsableTest": ["freezegun.freeze_time"], "tests.core.bookings.test_validation.CheckBeneficiaryCanCancelBookingTest": [], "tests.core.bookings.test_validation.CheckOffererCanCancelBookingTest": [], "tests.core.bookings.test_validation.CheckCanBeMarkAsUnusedTest": [], "tests.core.bookings.test_validation.CheckOfferCategoryIsBookableByUserTest": [], "tests.core.bookings": [], "tests.core.bookings.test_models": ["tests.core.bookings.test_models.BookingIsConfirmedPropertyTest", "tests.core.bookings.test_models.BookingThumbUrlTest", "tests.core.bookings.test_models.BookingExpirationDateTest", "tests.core.bookings.test_models.BookingIsConfirmedSqlQueryTest", "tests.core.bookings.test_models.BookingMarkAsConfirmedTest"], "tests.core.bookings.test_models.BookingThumbUrlTest": [], "tests.core.bookings.test_models.BookingIsConfirmedPropertyTest": [], "tests.core.bookings.test_models.BookingIsConfirmedSqlQueryTest": [], "tests.core.bookings.test_models.BookingExpirationDateTest": ["freezegun.freeze_time"], "tests.core.bookings.test_models.BookingMarkAsConfirmedTest": ["freezegun.freeze_time"], "tests.core.bookings.test_factories": ["tests.core.bookings.test_factories.BookingFactoryTest"], "tests.core.bookings.test_factories.BookingFactoryTest": [], "tests.core.bookings.test_api": ["tests.core.bookings.test_api.CancelByBeneficiaryTest", "tests.conftest", "tests.core.bookings.test_api.CancelByOffererTest", "tests.core.bookings.test_api.MarkAsUnusedTest", "tests.core.bookings.test_api.ComputeCancellationDateTest", "tests.core.bookings.test_api.BookOfferTest", "tests.core.bookings.test_api.BookOfferConcurrencyTest", "tests.core.bookings.test_api.CancelForFraudTest", "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest", "tests.core.bookings.test_api.UpdateCancellationLimitDatesTest", "tests.core.bookings.test_api.MarkAsUsedTest"], "tests.core.bookings.test_api.BookOfferConcurrencyTest": ["tests.conftest.clean_database"], "tests.conftest.clean_database": ["functools.wraps"], "functools.wraps": [], "tests.core.bookings.test_api.BookOfferTest": ["tests.core.bookings.test_api.BookOfferTest.WhenBookingWithActivationCodeTest", "pcapi.core.testing.override_features"], "tests.core.bookings.test_api.BookOfferTest.WhenBookingWithActivationCodeTest": ["pcapi.core.testing.override_features"], "tests.core.bookings.test_api.CancelByBeneficiaryTest": [], "tests.core.bookings.test_api.CancelByOffererTest": [], "tests.core.bookings.test_api.CancelForFraudTest": [], "tests.core.bookings.test_api.MarkAsUsedTest": ["freezegun.freeze_time"], "tests.core.bookings.test_api.MarkAsUnusedTest": ["pcapi.core.testing.override_features"], "tests.core.bookings.test_api.ComputeCancellationDateTest": [], "tests.core.bookings.test_api.UpdateCancellationLimitDatesTest": [], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest": ["freezegun.freeze_time", "pcapi.core.testing.override_features"], "tests.core.fraud.utils_test": ["tests.core.fraud.utils_test.UtilsUnitTest"], "tests.core.fraud.utils_test.UtilsUnitTest": [], "tests.core.fraud": [], "tests.core.fraud.test_models": ["tests.core.fraud.test_models.GetRegistrationDatetimeTest", "tests.core.fraud.test_models.OrphanDmsApplicationTest"], "tests.core.fraud.test_models.GetRegistrationDatetimeTest": [], "tests.core.fraud.test_models.OrphanDmsApplicationTest": [], "tests.core.fraud.test_factories": ["tests.core.fraud.test_factories.FactoriesTest"], "tests.core.fraud.test_factories.FactoriesTest": [], "tests.core.fraud.test_api": ["tests.core.fraud.test_api.DMSFraudCheckTest", "tests.core.fraud.test_api.EduconnectFraudTest", "tests.core.fraud.test_api.DecideEligibilityTest", "tests.core.fraud.test_api.CommonTest", "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest", "tests.core.fraud.test_api.CommonFraudCheckTest"], "tests.core.fraud.test_api.CommonTest": [], "tests.core.fraud.test_api.CommonFraudCheckTest": [], "tests.core.fraud.test_api.DMSFraudCheckTest": [], "tests.core.fraud.test_api.EduconnectFraudTest": [], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest": [], "tests.core.fraud.test_api.DecideEligibilityTest": ["freezegun.freeze_time"], "tests.core.fraud.dms.test_api": ["tests.core.fraud.dms.test_api.DmsApiTest"], "tests.core.fraud.dms.test_api.DmsApiTest": [], "tests.core.providers.connect_provider_to_venue_test": ["tests.core.providers.connect_provider_to_venue_test.WhenProviderImplementsProviderAPITest", "unittest.mock.patch", "tests.core.providers.connect_provider_to_venue_test.WhenProviderIsSomethingElseTest"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderImplementsProviderAPITest": ["unittest.mock.patch"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderIsSomethingElseTest": [], "tests.core.providers": [], "tests.core.providers.test_api": ["tests.core.providers.test_api.CreateVenueProviderTest", "tests.core.providers.test_api.SynchronizeStocksTest"], "tests.core.providers.test_api.CreateVenueProviderTest": [], "tests.core.providers.test_api.SynchronizeStocksTest": ["freezegun.api.freeze_time"], "freezegun.api.freeze_time": [], "tests.core.providers.provider_queries_test": ["tests.core.providers.provider_queries_test.GetProviderByLocalClassTest", "tests.core.providers.provider_queries_test.GetProvidersEnabledForProExcludingSpecificProviderTest", "tests.core.providers.provider_queries_test.GetEnabledProvidersForProTest", "tests.core.providers.provider_queries_test.GetProviderEnabledForProByIdTest"], "tests.core.providers.provider_queries_test.GetEnabledProvidersForProTest": [], "tests.core.providers.provider_queries_test.GetProvidersEnabledForProExcludingSpecificProviderTest": [], "tests.core.providers.provider_queries_test.GetProviderEnabledForProByIdTest": [], "tests.core.providers.provider_queries_test.GetProviderByLocalClassTest": [], "tests.core.subscription": [], "tests.core.subscription.test_api": ["tests.core.subscription.test_api.OnSuccessfulDMSApplicationTest", "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest", "tests.core.subscription.test_api.SubscriptionItemTest", "tests.core.subscription.test_api.CommonSubscritpionTest", "tests.core.subscription.test_api.NextSubscriptionStepTest", "tests.core.subscription.test_api.IdentityCheckSubscriptionStatusTest", "tests.core.subscription.test_api.EduconnectFlowTest", "tests.core.subscription.test_api.NeedsToPerformeIdentityCheckTest", "tests.core.subscription.test_api.OverflowSubscriptionLimitationTest"], "tests.core.subscription.test_api.EduconnectFlowTest": ["freezegun.freeze_time", "unittest.mock.patch", "pcapi.core.testing.override_features"], "tests.core.subscription.test_api.NextSubscriptionStepTest": ["unittest.mock.patch", "dateutil.relativedelta.relativedelta", "pcapi.core.testing.override_features"], "dateutil.relativedelta.relativedelta": [], "tests.core.subscription.test_api.OnSuccessfulDMSApplicationTest": ["unittest.mock.patch", "pcapi.core.testing.override_features"], "tests.core.subscription.test_api.OverflowSubscriptionLimitationTest": ["pcapi.core.testing.override_features"], "tests.core.subscription.test_api.CommonSubscritpionTest": [], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest": ["dateutil.relativedelta.relativedelta", "pcapi.core.testing.override_features"], "tests.core.subscription.test_api.SubscriptionItemTest": ["dateutil.relativedelta.relativedelta"], "tests.core.subscription.test_api.IdentityCheckSubscriptionStatusTest": ["dateutil.relativedelta.relativedelta"], "tests.core.subscription.test_api.NeedsToPerformeIdentityCheckTest": ["dateutil.relativedelta.relativedelta"], "tests.core.subscription.test_transitions": ["tests.core.subscription.test_transitions.SubscriptionTransitionTest"], "tests.core.subscription.test_transitions.SubscriptionTransitionTest": [], "tests.core.subscription.educonnect": [], "tests.core.subscription.educonnect.test_api": ["tests.core.subscription.educonnect.test_api.EduconnectSubscriptionItemStatusTest"], "tests.core.subscription.educonnect.test_api.EduconnectSubscriptionItemStatusTest": [], "tests.core.subscription.ubble": [], "tests.core.subscription.ubble.test_api": ["tests.test_utils", "tests.core.subscription.ubble.test_api.UbbleSubscriptionItemStatusTest", "tests.core.subscription.ubble.test_api.UbbleWorkflowTest", "tests.core.subscription.test_factories"], "tests.core.subscription.ubble.test_api.UbbleWorkflowTest": [], "tests.core.subscription.ubble.test_api.UbbleSubscriptionItemStatusTest": [], "tests.core.subscription.dms": [], "tests.core.subscription.dms.test_api": ["tests.scripts.beneficiary.fixture", "tests.core.subscription.dms.test_api.DMSOrphanSubsriptionTest", "tests.core.subscription.dms.test_api.DMSSubscriptionItemStatusTest"], "tests.core.subscription.dms.test_api.DMSSubscriptionItemStatusTest": [], "tests.core.subscription.dms.test_api.DMSOrphanSubsriptionTest": [], "tests.core.search.test_backend_algolia": ["tests.core.search.test_backend_algolia.FakeOffer"], "tests.core.search.test_backend_algolia.FakeOffer": [], "tests.core.search": [], "tests.core.search.test_serialize_algolia": ["tests.core.search.test_serialize_algolia.BuildObjectTest"], "tests.core.search.test_serialize_algolia.BuildObjectTest": ["freezegun.freeze_time"], "tests.core.search.test_integration": [], "tests.core.search.test_api": ["tests.core.search.test_api.ReindexOfferIdsTest", "tests.core.search.test_api.ReindexVenueIdsTest", "pcapi.core.testing.override_settings", "tests.core.search.test_api.IndexOffersInQueueTest"], "tests.core.search.test_api.ReindexOfferIdsTest": [], "tests.core.search.test_api.ReindexVenueIdsTest": [], "tests.core.search.test_api.IndexOffersInQueueTest": [], "tests.core.educational.test_repository": ["tests.core.educational.test_repository.EducationalRepositoryTest"], "tests.core.educational.test_repository.EducationalRepositoryTest": [], "tests.core.educational.test_utils": ["tests.core.educational.test_utils.ComputeEducationalBookingCancellationLimitDate"], "tests.core.educational.test_utils.ComputeEducationalBookingCancellationLimitDate": [], "tests.core.educational.test_validation": ["tests.core.educational.test_validation.EducationalValidationTest"], "tests.core.educational.test_validation.EducationalValidationTest": [], "tests.core.educational": [], "tests.core.educational.test_models": ["tests.core.educational.test_models.EducationalDepositTest"], "tests.core.educational.test_models.EducationalDepositTest": [], "tests.core.educational.test_api": ["tests.core.educational.test_api.BookEducationalOfferTest", "tests.conftest", "tests.core.educational.test_api.ConfirmEducationalBookingTest", "tests.core.educational.test_api.RefuseEducationalBookingTest"], "tests.core.educational.test_api.ConfirmEducationalBookingTest": ["tests.conftest.clean_database", "freezegun.api.freeze_time"], "tests.core.educational.test_api.BookEducationalOfferTest": ["freezegun.api.freeze_time", "pcapi.core.testing.override_settings"], "tests.core.educational.test_api.RefuseEducationalBookingTest": ["tests.conftest.clean_database"], "tests.core.testing": [], "tests.core.testing.tests": ["tests.core.testing.tests.OverrideFeaturesOnClassTest", "pcapi.core.testing.override_features", "tests.core.testing.tests.OverrideSettingsOnClassTest", "pcapi.core.testing.override_settings"], "tests.core.testing.tests.OverrideSettingsOnClassTest": ["pcapi.core.testing.override_settings"], "tests.core.testing.tests.OverrideFeaturesOnClassTest": ["pcapi.core.testing.override_features"], "tests.core.users.test_repository": ["tests.core.users.test_repository.GetNewlyEligibleUsersTest", "tests.core.users.test_repository.GetApplicantOfOffererUnderValidationTest", "tests.core.users.test_repository.CheckUserAndCredentialsTest"], "tests.core.users.test_repository.CheckUserAndCredentialsTest": [], "tests.core.users.test_repository.GetNewlyEligibleUsersTest": ["freezegun.freeze_time"], "tests.core.users.test_repository.GetApplicantOfOffererUnderValidationTest": [], "tests.core.users.test_utils": ["tests.core.users.test_utils.DecodeJWTPayloadRS256Test", "tests.routes.adage_iframe", "tests.core.users.test_utils.EncodeJWTPayloadTest"], "tests.routes.adage_iframe": [], "tests.core.users.test_utils.EncodeJWTPayloadTest": [], "tests.core.users.test_utils.DecodeJWTPayloadRS256Test": [], "tests.core.users.test_users_sql_entity": ["tests.core.users.test_users_sql_entity.WalletBalanceTest", "tests.core.users.test_users_sql_entity.HasAccessTest", "tests.core.users.test_users_sql_entity.needsToSeeTutorialsTest", "tests.core.users.test_users_sql_entity.HasPhysicalVenuesTest", "tests.core.users.test_users_sql_entity.CalculateAgeTest", "tests.core.users.test_users_sql_entity.DepositVersionTest", "tests.core.users.test_users_sql_entity.NotificationSubscriptionsTest", "tests.core.users.test_users_sql_entity.SQLFunctionsTest"], "tests.core.users.test_users_sql_entity.HasAccessTest": [], "tests.core.users.test_users_sql_entity.WalletBalanceTest": [], "tests.core.users.test_users_sql_entity.SQLFunctionsTest": [], "tests.core.users.test_users_sql_entity.HasPhysicalVenuesTest": [], "tests.core.users.test_users_sql_entity.needsToSeeTutorialsTest": [], "tests.core.users.test_users_sql_entity.CalculateAgeTest": ["freezegun.freeze_time"], "tests.core.users.test_users_sql_entity.DepositVersionTest": [], "tests.core.users.test_users_sql_entity.NotificationSubscriptionsTest": [], "tests.core.users": [], "tests.core.users.test_models": ["tests.conftest", "tests.core.users.test_models.UserTest", "tests.core.users.test_models.SubscriptionStateTest", "tests.core.users.test_models.SuperAdminTest"], "tests.core.users.test_models.UserTest": ["tests.core.users.test_models.UserTest.UserRoleTest", "tests.core.users.test_models.UserTest.DepositTest", "tests.core.users.test_models.UserTest.UserAgeTest"], "tests.core.users.test_models.UserTest.DepositTest": [], "tests.core.users.test_models.UserTest.UserRoleTest": [], "tests.core.users.test_models.UserTest.UserAgeTest": ["datetime.date"], "datetime.date": [], "tests.core.users.test_models.SuperAdminTest": ["pcapi.core.testing.override_settings"], "tests.core.users.test_models.SubscriptionStateTest": ["tests.conftest.clean_database"], "tests.core.users.test_factories": ["tests.core.users.test_factories.UsersFactoriesTest"], "tests.core.users.test_factories.UsersFactoriesTest": [], "tests.core.users.test_api": ["tests.core.users.test_api.CreateBeneficiaryTest", "tests.core.users.test_api.DeleteExpiredTokensTest", "tests.core.users.test_api.FulfillAccountPasswordTest", "tests.core.users.test_api.GenerateAndSaveTokenTest", "tests.core.users.test_api.SetOffererDepartementCodeTest", "tests.core.users.test_api.ValidateJwtTokenTest", "tests.core.users.test_api.SetProTutoAsSeenTest", "tests.core.users.test_api.UpdateUserInfoTest", "tests.core.users.test_api.BeneficiaryInformationUpdateTest", "tests.core.users.test_api.GetEligibilityTest", "tests.core.users.test_api.CreateProUserTest", "tests.core.users.test_api.ChangeUserEmailTest", "tests.core.users.test_api.DeleteUserTokenTest", "tests.core.users.test_api.UpdateUserLastConnectionDateTest", "tests.core.users.test_api.SuspendAccountTest", "tests.core.users.test_api.DomainsCreditTest", "tests.core.users.test_api.FulfillBeneficiaryDataTest", "tests.core.users.test_api.UnsuspendAccountTest"], "tests.core.users.test_api.GenerateAndSaveTokenTest": [], "tests.core.users.test_api.ValidateJwtTokenTest": ["pcapi.core.users.utils.encode_jwt_payload"], "pcapi.core.users.utils.encode_jwt_payload": [], "tests.core.users.test_api.DeleteExpiredTokensTest": [], "tests.core.users.test_api.DeleteUserTokenTest": [], "tests.core.users.test_api.SuspendAccountTest": [], "tests.core.users.test_api.UnsuspendAccountTest": [], "tests.core.users.test_api.ChangeUserEmailTest": [], "tests.core.users.test_api.CreateBeneficiaryTest": ["dateutil.relativedelta.relativedelta"], "tests.core.users.test_api.FulfillBeneficiaryDataTest": ["dateutil.relativedelta.relativedelta"], "tests.core.users.test_api.FulfillAccountPasswordTest": [], "tests.core.users.test_api.SetOffererDepartementCodeTest": [], "tests.core.users.test_api.SetProTutoAsSeenTest": [], "tests.core.users.test_api.UpdateUserInfoTest": [], "tests.core.users.test_api.DomainsCreditTest": [], "tests.core.users.test_api.CreateProUserTest": ["pcapi.core.testing.override_settings"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest": ["pcapi.core.testing.override_features"], "tests.core.users.test_api.UpdateUserLastConnectionDateTest": ["freezegun.freeze_time"], "tests.core.users.test_api.GetEligibilityTest": [], "tests.core.users.external.external_pro_test": ["tests.core.users.external.external_pro_test._build_params"], "tests.core.users.external.external_pro_test._build_params": [], "tests.core.users.external.user_automations_test": ["tests.core.users.external.user_automations_test.UserAutomationsTest"], "tests.core.users.external.user_automations_test.UserAutomationsTest": ["freezegun.freeze_time", "unittest.mock.patch"], "tests.core.users.external.sendinblue_test": ["tests.core.users.external.sendinblue_test.FormatUserAttributesTest", "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest"], "tests.core.users.external.sendinblue_test.FormatUserAttributesTest": [], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest": ["unittest.mock.patch"], "tests.core.users.external": ["pcapi.core.users.models.Credit", "datetime.datetime", "pcapi.core.users.models.DomainsCredit", "decimal.Decimal", "pcapi.core.users.external.models.UserAttributes", "pcapi.core.users.external.models.ProAttributes"], "pcapi.core.users.models.Credit": [], "pcapi.core.users.models.DomainsCredit": [], "pcapi.core.users.external.models.UserAttributes": [], "pcapi.core.users.external.models.ProAttributes": [], "tests.core.users.external.external_users_test": [], "tests.core.users.external.batch_test": ["tests.core.users.external.batch_test.FormatUserAttributesTest"], "tests.core.users.external.batch_test.FormatUserAttributesTest": [], "tests.core.users.email": [], "tests.core.users.email.test_update": [], "tests.core.finance.test_repository": ["tests.core.finance.test_repository.HasActiveOrFutureCustomRemibursementRuleTest", "tests.core.finance.test_repository.GetBusinessUnitsTest", "tests.core.finance.test_repository.GetInvoicesQueryTest"], "tests.core.finance.test_repository.GetBusinessUnitsTest": [], "tests.core.finance.test_repository.GetInvoicesQueryTest": [], "tests.core.finance.test_repository.HasActiveOrFutureCustomRemibursementRuleTest": [], "tests.core.finance.test_utils": [], "tests.core.finance": [], "tests.core.finance.test_models": ["tests.core.finance.test_models.MagicEnumInBusinessUnitTest"], "tests.core.finance.test_models.MagicEnumInBusinessUnitTest": [], "tests.core.finance.test_integration": [], "tests.core.finance.test_api": ["tests.core.finance.test_api.GetSiretAndCurrentRevenueTest", "tests.core.finance.test_api.GenerateInvoicesTest", "tests.core.finance.test_api.PrepareInvoiceContextTest", "tests.core.finance.test_api.GenerateAndStoreInvoiceTest", "tests.core.finance.test_api.GenerateCashflowsTest", "tests.core.finance.test_api.PriceBookingsTest", "pcapi.core.testing.clean_temporary_files", "tests.core.finance.test_api.StoreInvoicePdfTest", "tests.core.finance.test_api.EditBusinessUnitTest", "tests", "tests.core.finance.test_api.DeleteDependentPricingsTest", "tests.core.finance.test_api.CancelPricingTest", "tests.core.finance.test_api.GenerateInvoiceTest", "tests.core.finance.test_api.GenerateInvoiceHtmlTest", "tests.core.finance.test_api.PriceBookingTest", "tests.core.finance.test_api.GetRevenuePeriodTest", "tests.core.finance.test_api.CleanStringTest"], "tests.core.finance.test_api.CleanStringTest": [], "tests.core.finance.test_api.PriceBookingTest": [], "tests.core.finance.test_api.GetRevenuePeriodTest": [], "tests.core.finance.test_api.GetSiretAndCurrentRevenueTest": [], "tests.core.finance.test_api.CancelPricingTest": [], "tests.core.finance.test_api.DeleteDependentPricingsTest": [], "tests.core.finance.test_api.PriceBookingsTest": [], "tests.core.finance.test_api.GenerateCashflowsTest": [], "pcapi.core.testing.clean_temporary_files": [], "tests.core.finance.test_api.EditBusinessUnitTest": [], "tests.core.finance.test_api.GenerateInvoicesTest": [], "tests.core.finance.test_api.GenerateInvoiceTest": [], "tests.core.finance.test_api.PrepareInvoiceContextTest": [], "tests.core.finance.test_api.GenerateInvoiceHtmlTest": [], "tests.core.finance.test_api.StoreInvoicePdfTest": ["pcapi.core.testing.override_settings"], "tests.core.finance.test_api.GenerateAndStoreInvoiceTest": ["pcapi.core.testing.override_settings"], "tests.core.object_storage": [], "tests.core.object_storage.object_storage_test": ["tests.core.object_storage.object_storage_test.CheckBackendsModulePathsTest", "tests.core.object_storage.object_storage_test.CheckBackendSettingTest", "tests.core.object_storage.object_storage_test.GetThumbStorageIdTest", "tests.core.object_storage.object_storage_test.StorePublicObjectTest", "tests.core.object_storage.object_storage_test.DeletePublicObjectTest"], "tests.core.object_storage.object_storage_test.StorePublicObjectTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.core.object_storage.object_storage_test.CheckBackendSettingTest": ["pcapi.core.testing.override_settings"], "tests.core.object_storage.object_storage_test.CheckBackendsModulePathsTest": [], "tests.core.object_storage.object_storage_test.DeletePublicObjectTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.core.object_storage.object_storage_test.GetThumbStorageIdTest": [], "tests.core.logging": [], "tests.core.logging.tests": ["tests.core.logging.tests.JsonFormatterTest", "tests.core.logging.tests.GetOrSetCorrelationIdTest", "tests.core.logging.tests.GetLoggedInUserIdTest", "tests.core.logging.tests.TestingEnum"], "tests.core.logging.tests.TestingEnum": [], "tests.core.logging.tests.GetOrSetCorrelationIdTest": [], "tests.core.logging.tests.GetLoggedInUserIdTest": [], "tests.core.logging.tests.JsonFormatterTest": [], "tests.core.reference": [], "tests.core.reference.test_models": ["tests.conftest", "tests.core.reference.test_models.ReferenceSchemeTest"], "tests.core.reference.test_models.ReferenceSchemeTest": ["tests.conftest.clean_database"], "tests.domain_creators": [], "tests.domain_creators.generic_creators": ["datetime.datetime"], "tests.serialization": [], "tests.emails.payment_reports_test": ["freezegun.freeze_time"], "tests.emails.offerer_validation_test": ["tests.utils.mailing_test"], "tests.utils.mailing_test": ["tests.utils.mailing_test.FormatDateAndHourForEmailTest", "tests.utils.mailing_test.MakeValidationEmailObjectTest", "tests.utils.mailing_test.FormatBookingHoursForEmailTest", "tests.utils.mailing_test.BuildPcProOfferLinkTest"], "tests.utils.mailing_test.BuildPcProOfferLinkTest": ["unittest.mock.patch"], "tests.utils.mailing_test.FormatDateAndHourForEmailTest": [], "tests.utils.mailing_test.FormatBookingHoursForEmailTest": [], "tests.utils.mailing_test.MakeValidationEmailObjectTest": [], "tests.emails": [], "tests.emails.offer_cancellation_test": ["tests.emails.offer_cancellation_test.MakeOffererDrivenCancellationEmailForOffererTest"], "tests.emails.offer_cancellation_test.MakeOffererDrivenCancellationEmailForOffererTest": [], "tests.emails.user_wallet_balance_test": ["freezegun.freeze_time"], "tests.emails.offer_creation_test": ["tests.emails.offer_creation_test.MakeOfferRejectionNotificationEmailTest", "tests.emails.offer_creation_test.MakeOfferCreationNotificationEmailTest"], "tests.emails.offer_creation_test.MakeOfferCreationNotificationEmailTest": [], "tests.emails.offer_creation_test.MakeOfferRejectionNotificationEmailTest": [], "tests.admin": [], "tests.admin.autocomplete_test": ["tests.admin.autocomplete_test.AutocompleteOfferersTest"], "tests.admin.autocomplete_test.AutocompleteOfferersTest": [], "tests.admin.base_configuration_test": ["unittest.mock.Mock", "tests.admin.base_configuration_test.DummyAdminView", "tests.admin.base_configuration_test.AnonymousUser", "tests.admin.base_configuration_test.DefaultConfigurationTest", "tests.admin.base_configuration_test.DummyUserView", "tests.admin.base_configuration_test.BaseAdminFormTest", "tests.admin.base_configuration_test.IsAccessibleTest"], "tests.admin.base_configuration_test.DummyAdminView": [], "tests.admin.base_configuration_test.AnonymousUser": [], "tests.admin.base_configuration_test.DefaultConfigurationTest": [], "tests.admin.base_configuration_test.IsAccessibleTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.admin.base_configuration_test.DummyUserView": ["<builtin>.property"], "<builtin>.property": [], "tests.admin.base_configuration_test.BaseAdminFormTest": [], "tests.admin.permissions_test": ["tests.admin.permissions_test.HasPermissionTest"], "tests.admin.permissions_test.HasPermissionTest": ["pcapi.core.testing.override_settings"], "tests.admin.custom_views.criteria_view_test": ["tests.conftest", "tests.admin.custom_views.criteria_view_test.CriteriaViewTest"], "tests.admin.custom_views.criteria_view_test.CriteriaViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.beneficiary_user_view_test": ["tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserUpdateTest", "tests.conftest", "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest": ["unittest.mock.patch", "dateutil.relativedelta.relativedelta", "tests.conftest.clean_database"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserUpdateTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.admin.custom_views.venue_provider_view_test": ["tests.conftest", "tests.admin.custom_views.venue_provider_view_test.VenueProviderViewTest", "tests.admin.custom_views.venue_provider_view_test.EditModelTest"], "tests.admin.custom_views.venue_provider_view_test.VenueProviderViewTest": [], "tests.admin.custom_views.venue_provider_view_test.EditModelTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.feature_view_test": ["tests.conftest", "tests.admin.custom_views.feature_view_test.FeatureViewTest"], "tests.admin.custom_views.feature_view_test.FeatureViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views": [], "tests.admin.custom_views.user_offerer_view_test": ["tests.admin.custom_views.user_offerer_view_test.UserOffererViewTest", "tests.conftest"], "tests.admin.custom_views.user_offerer_view_test.UserOffererViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.suspend_fraudulent_users_by_ids_test": ["tests.admin.custom_views.suspend_fraudulent_users_by_ids_test.SuspendFraudulentUsersByIdsTest"], "tests.admin.custom_views.suspend_fraudulent_users_by_ids_test.SuspendFraudulentUsersByIdsTest": ["unittest.mock.patch"], "tests.admin.custom_views.pro_user_view_test": ["tests.admin.custom_views.pro_user_view_test.ProUserViewTest", "tests.conftest"], "tests.admin.custom_views.pro_user_view_test.ProUserViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.offer_view_test": ["tests.admin.custom_views.offer_view_test.BeneficiaryUserViewTest", "tests.conftest", "tests.admin.custom_views.offer_view_test.OfferValidationViewTest", "tests.admin.custom_views.offer_view_test.GetOfferValidationViewTest", "tests.admin.custom_views.offer_view_test.OfferViewTest"], "tests.admin.custom_views.offer_view_test.BeneficiaryUserViewTest": [], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest": ["freezegun.freeze_time", "unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.offer_view_test.GetOfferValidationViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.offer_view_test.OfferViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.offerer_view_test": ["tests.admin.custom_views.offerer_view_test.OffererViewTest", "tests.conftest"], "tests.admin.custom_views.offerer_view_test.OffererViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.support_view_test": ["tests.admin.custom_views.support_view_test.JouveAccessTest", "tests.admin.custom_views.support_view_test.BeneficiaryDetailViewTest", "dateutil.relativedelta.relativedelta", "tests.admin.custom_views.support_view_test.ValidatePhoneNumberTest", "tests.admin.custom_views.support_view_test.BeneficiaryListViewTest", "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest", "tests.admin.custom_views.support_view_test.BeneficiaryActivationStatusTest"], "tests.admin.custom_views.support_view_test.BeneficiaryListViewTest": [], "tests.admin.custom_views.support_view_test.BeneficiaryDetailViewTest": [], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest": ["pcapi.core.testing.override_features"], "tests.admin.custom_views.support_view_test.JouveAccessTest": [], "tests.admin.custom_views.support_view_test.ValidatePhoneNumberTest": [], "tests.admin.custom_views.support_view_test.BeneficiaryActivationStatusTest": [], "tests.admin.custom_views.user_email_history_view_test": ["tests.admin.custom_views.user_email_history_view_test.UserEmailHistoryViewTest"], "tests.admin.custom_views.user_email_history_view_test.UserEmailHistoryViewTest": ["pcapi.core.testing.override_settings"], "tests.admin.custom_views.booking_view_test": ["tests.conftest", "tests.admin.custom_views.booking_view_test.BookingViewTest"], "tests.admin.custom_views.booking_view_test.BookingViewTest": [], "tests.admin.custom_views.partner_user_view_test": ["tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest", "tests.conftest"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest": ["unittest.mock.patch", "tests.conftest.clean_database", "pcapi.core.testing.override_settings"], "tests.admin.custom_views.admin_user_view_test": ["tests.conftest", "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest"], "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest": ["unittest.mock.patch", "tests.conftest.clean_database", "pcapi.core.testing.override_settings"], "tests.admin.custom_views.category_view_test": ["tests.admin.custom_views.category_view_test.SubcategoryViewTest", "tests.admin.custom_views.category_view_test.CategoryViewTest"], "tests.admin.custom_views.category_view_test.CategoryViewTest": [], "tests.admin.custom_views.category_view_test.SubcategoryViewTest": [], "tests.admin.custom_views.custom_reimbursement_rule_view_test": ["tests.conftest", "tests.conftest.clean_database"], "tests.admin.custom_views.offerer_tag_view_test": ["tests.conftest", "tests.admin.custom_views.offerer_tag_view_test.OffererTagViewTest"], "tests.admin.custom_views.offerer_tag_view_test.OffererTagViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.api_key_view_test": ["tests.conftest", "tests.admin.custom_views.api_key_view_test.ApiKeyViewTest"], "tests.admin.custom_views.api_key_view_test.ApiKeyViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.venue_view_test": ["tests.admin.custom_views.venue_view_test.VenueViewTest", "tests.conftest", "tests.admin.custom_views.venue_view_test.GetVenueProviderLinkTest"], "tests.admin.custom_views.venue_view_test.VenueViewTest": ["unittest.mock.patch", "tests.conftest.clean_database"], "tests.admin.custom_views.venue_view_test.GetVenueProviderLinkTest": [], "tests.admin.custom_views.many_offers_operations_view_test": ["tests.conftest", "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest": ["unittest.mock.patch"], "tests.utils.string_processing_test": [], "tests.utils.requests_test": ["tests.utils.requests_test.RequestWrapperTest"], "tests.utils.requests_test.RequestWrapperTest": [], "tests.utils.settings_test": ["tests.utils.settings_test.ParseEmailAddressesTest", "tests.utils.settings_test.ParsePhoneNumbersTest"], "tests.utils.settings_test.ParseEmailAddressesTest": [], "tests.utils.settings_test.ParsePhoneNumbersTest": [], "tests.utils.feature_test": ["tests.utils.feature_test.FeatureRequiredTest"], "tests.utils.feature_test.FeatureRequiredTest": ["pcapi.core.testing.override_features"], "tests.utils.phone_number_test": [], "tests.utils": [], "tests.utils.clean_accents_test": ["tests.utils.clean_accents_test.CleanAccentsTest"], "tests.utils.clean_accents_test.CleanAccentsTest": [], "tests.utils.db_test": ["tests.utils.db_test.GetBatchesTest"], "tests.utils.db_test.GetBatchesTest": [], "tests.utils.pdf_creation_test": ["tests.utils.pdf_creation_test.GeneratePdfFromHtmlTest", "tests"], "tests.utils.pdf_creation_test.GeneratePdfFromHtmlTest": ["freezegun.freeze_time"], "tests.utils.custom_logic_test": [], "tests.utils.image_conversion_test": ["tests.utils.image_conversion_test.ImageConversionTest", "tests"], "tests.utils.image_conversion_test.ImageConversionTest": [], "tests.utils.rest_test": ["tests.utils.rest_test.TestLoadOrRaiseErrorTest", "tests.utils.rest_test.CheckUserHasAccessToOffererTest"], "tests.utils.rest_test.CheckUserHasAccessToOffererTest": [], "tests.utils.rest_test.TestLoadOrRaiseErrorTest": [], "tests.utils.pylint_test": ["tests.utils.pylint_test.MarkupSafeCheckerTest", "tests"], "tests.utils.pylint_test.MarkupSafeCheckerTest": [], "tests.utils.date_test": ["tests.utils.date_test.GetTimeFormattedForEmailTest", "tests.utils.date_test.GetPostalCodeTimezoneTest", "tests.utils.date_test.FrenchParserInfoTest", "tests.utils.date_test.GetDateFormattedForEmailTest", "tests.utils.date_test.GetDepartmentTimezoneTest"], "tests.utils.date_test.GetDateFormattedForEmailTest": [], "tests.utils.date_test.GetTimeFormattedForEmailTest": [], "tests.utils.date_test.GetDepartmentTimezoneTest": [], "tests.utils.date_test.GetPostalCodeTimezoneTest": [], "tests.utils.date_test.FrenchParserInfoTest": [], "tests.utils.urls_test": ["tests.utils.urls_test.FirebaseLinksTest"], "tests.utils.urls_test.FirebaseLinksTest": [], "tests.utils.crypto_test": ["tests.utils.crypto_test.ProdEnvironmentPasswordHasherTest", "tests.utils.crypto_test.DevEnvironmentPasswordHasherTest"], "tests.utils.crypto_test.DevEnvironmentPasswordHasherTest": [], "tests.utils.crypto_test.ProdEnvironmentPasswordHasherTest": [], "tests.utils.sentry_test": ["pcapi.core.testing.override_settings"], "tests.models.event_test": [], "tests.models.feature_test": ["tests.models.feature_test.FeatureTest", "tests.models.feature_test.TestingFeatureToggle", "unittest.mock.patch", "tests.models.feature_test.FeatureToggleTest"], "tests.models.feature_test.TestingFeatureToggle": [], "tests.models.feature_test.FeatureToggleTest": [], "tests.models.feature_test.FeatureTest": [], "tests.models.thing_test": [], "tests.models.pc_object_test": ["tests.models.pc_object_test.TimeInterval", "tests.models.pc_object_test.SerializeTest", "tests.models.pc_object_test.TestPcObject", "datetime.datetime", "tests.models.pc_object_test.PopulateFromDictTest"], "tests.models.pc_object_test.TimeInterval": ["sqlalchemy.Column"], "sqlalchemy.Column": [], "tests.models.pc_object_test.TestPcObject": ["sqlalchemy.Column", "sqlalchemy.dialects.postgresql.UUID"], "sqlalchemy.dialects.postgresql.UUID": [], "tests.models.pc_object_test.SerializeTest": [], "tests.models.pc_object_test.PopulateFromDictTest": [], "tests.models": [], "tests.models.venue_provider_test": [], "tests.models.payment_test": ["tests.models.payment_test.PaymentDateTest", "tests.models.payment_test.SetStatusTest"], "tests.models.payment_test.SetStatusTest": [], "tests.models.payment_test.PaymentDateTest": ["tests.models.payment_test.PaymentDateTest.InPythonContextTest", "tests.models.payment_test.PaymentDateTest.InSQLContextTest"], "tests.models.payment_test.PaymentDateTest.InPythonContextTest": [], "tests.models.payment_test.PaymentDateTest.InSQLContextTest": [], "tests.models.venue_sql_entity_test": ["tests.models.venue_sql_entity_test.DepartementCodeTest", "tests.models.venue_sql_entity_test.VenueBankInformationTest"], "tests.models.venue_sql_entity_test.DepartementCodeTest": [], "tests.models.venue_sql_entity_test.VenueBankInformationTest": [], "tests.models.product_test": ["tests.models.product_test.ProductCanBeSynchronizedTest"], "tests.models.product_test.ProductCanBeSynchronizedTest": [], "tests.models.user_offerer_test": [], "tests.models.allocine_venue_provider_price_rule_test": ["tests.models.allocine_venue_provider_price_rule_test.AllocineVenueProviderPriceRuleTest", "tests.models.allocine_venue_provider_price_rule_test.SaveAllocineVenueProviderPriceRuleTest"], "tests.models.allocine_venue_provider_price_rule_test.AllocineVenueProviderPriceRuleTest": [], "tests.models.allocine_venue_provider_price_rule_test.SaveAllocineVenueProviderPriceRuleTest": [], "tests.models.offerer_test": ["tests.models.offerer_test.IsValidatedTest", "tests.models.offerer_test.OffererBankInformationTest", "tests.models.offerer_test.AppendUserHasAccessAttributeTest"], "tests.models.offerer_test.OffererBankInformationTest": [], "tests.models.offerer_test.IsValidatedTest": [], "tests.models.offerer_test.AppendUserHasAccessAttributeTest": [], "tests.models.allocine_venue_provider_test": ["tests.models.allocine_venue_provider_test.AllocineVenueProviderTest"], "tests.models.allocine_venue_provider_test.AllocineVenueProviderTest": [], "tests.scheduled_tasks.decorators_test": ["tests.scheduled_tasks.decorators_test.CronRequireFeatureTest", "tests.scheduled_tasks.decorators_test.LogCronTest"], "tests.scheduled_tasks.decorators_test.CronRequireFeatureTest": ["unittest.mock.patch", "pcapi.core.testing.override_features"], "tests.scheduled_tasks.decorators_test.LogCronTest": ["unittest.mock.patch"], "tests.scheduled_tasks": [], "tests.scheduled_tasks.logger_test": ["tests.scheduled_tasks.logger_test.CronLoggerMessageBuilderTest"], "tests.scheduled_tasks.logger_test.CronLoggerMessageBuilderTest": [], "tests.scheduled_tasks.clock_test": ["pcapi.core.testing.override_settings"], "tests.algolia": [], "tests.algolia.usecase": [], "tests.algolia.domain": [], "tests.scripts.update_venue_type_test": ["tests.scripts.update_venue_type_test.UpdateVenueTypeTest"], "tests.scripts.update_venue_type_test.UpdateVenueTypeTest": ["unittest.mock.patch"], "tests.scripts.update_venue_type_codes_test": [], "tests.scripts.find_not_modifiable_venues_test": ["tests.scripts.find_not_modifiable_venues_test.GetNonEditableVenuesTest", "tests.scripts.find_not_modifiable_venues_test.GenerateNonEditableVenuesCsvTest"], "tests.scripts.find_not_modifiable_venues_test.GetNonEditableVenuesTest": [], "tests.scripts.find_not_modifiable_venues_test.GenerateNonEditableVenuesCsvTest": [], "tests.scripts.batch_update_offer_withdrawal_details_for_offerer_test": ["tests.scripts.batch_update_offer_withdrawal_details_for_offerer_test.BatchUpdateOfferWithdrawalDetailsForOffererTest"], "tests.scripts.batch_update_offer_withdrawal_details_for_offerer_test.BatchUpdateOfferWithdrawalDetailsForOffererTest": [], "tests.scripts": [], "tests.scripts.correct_bookings_cancel_dates_test": ["tests.scripts.correct_bookings_cancel_dates_test.CorrectBookingCancelDatesFromFileTest"], "tests.scripts.correct_bookings_cancel_dates_test.CorrectBookingCancelDatesFromFileTest": [], "tests.scripts.bulk_update_is_synchronization_compatible_product_via_isbns_test": [], "tests.scripts.catching_up_dms_beneficiaries_addresses_test": ["tests.scripts.catching_up_dms_beneficiaries_addresses_test.CatchingUpDMSBeneficiariesAddressesTest"], "tests.scripts.catching_up_dms_beneficiaries_addresses_test.CatchingUpDMSBeneficiariesAddressesTest": [], "tests.scripts.delete_venue_and_offers_for_venue_id_test": [], "tests.scripts.bulk_inactivate_offers_test": ["tests.scripts.bulk_inactivate_offers_test.BulkMarkIncompatibleViaOfferIdsTest"], "tests.scripts.bulk_inactivate_offers_test.BulkMarkIncompatibleViaOfferIdsTest": [], "tests.scripts.change_pro_users_to_beneficiary_test": [], "tests.scripts.bulk_mark_incompatible_via_isbns_test": ["tests.scripts.bulk_mark_incompatible_via_isbns_test.BulkUpdateIsGcuCompatibleViaIsbnsTest"], "tests.scripts.bulk_mark_incompatible_via_isbns_test.BulkUpdateIsGcuCompatibleViaIsbnsTest": ["unittest.mock.patch"], "tests.scripts.grant_wallet_to_existing_users_test": [], "tests.scripts.suspend_suspected_fraudulent_pro_users_test": [], "tests.scripts.force_19_yo_dms_import_test": ["tests.scripts.force_19_yo_dms_import_test.User19YearOldActivationTest"], "tests.scripts.force_19_yo_dms_import_test.User19YearOldActivationTest": [], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test": ["tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByEmailProvidersTest", "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByIdsTest"], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByEmailProvidersTest": [], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByIdsTest": [], "tests.scripts.update_bookings_during_quarantine_test": [], "tests.scripts.import_unsubscribed_users_test": ["tests.scripts.import_unsubscribed_users_test.ImportunsubscribedUsersTest"], "tests.scripts.import_unsubscribed_users_test.ImportunsubscribedUsersTest": ["unittest.mock.patch"], "tests.scripts.copy_is_gcu_compatible_to_is_synchronization_compatible_test": [], "tests.scripts.deactivate_300e_thing_offers_test": ["tests.scripts.deactivate_300e_thing_offers_test.Deactivate300eThingOffersTest"], "tests.scripts.deactivate_300e_thing_offers_test.Deactivate300eThingOffersTest": [], "tests.scripts.delete_corrupted_allocine_stocks_test": [], "tests.scripts.pro": [], "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test": ["tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.GetUserInitialLinkedOffererTest", "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.FillProDepartmentCodeWithOffererPostalCodeTest"], "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.FillProDepartmentCodeWithOffererPostalCodeTest": [], "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.GetUserInitialLinkedOffererTest": [], "tests.scripts.pro.migrate_has_seen_pro_tutorials_test": [], "tests.scripts.deactivate_offers_during_quarantine": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test": ["tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.DeactivateOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest", "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.BuildQueryOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest", "datetime.datetime", "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.GetOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest", "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.DeactivateOffersTest"], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.GetOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest": ["unittest.mock.patch"], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.BuildQueryOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.DeactivateOffersTest": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.DeactivateOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest": ["unittest.mock.patch"], "tests.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers_test": ["tests.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers_test.FetchUserEmailsForOffersTest"], "tests.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers_test.FetchUserEmailsForOffersTest": ["unittest.mock.patch"], "tests.scripts.user_offerer.delete_user_offerers_from_file_test": [], "tests.scripts.user_offerer": [], "tests.scripts.booking.cancel_old_unused_bookings_for_venue_test": [], "tests.scripts.booking.cancel_bookings_of_events_from_file_test": ["tests.scripts.booking.cancel_bookings_of_events_from_file_test.CancelBookingsOfEventsFromFileTest"], "tests.scripts.booking.cancel_bookings_of_events_from_file_test.CancelBookingsOfEventsFromFileTest": [], "tests.scripts.booking.notify_soon_to_be_expired_bookings_test": ["tests.scripts.booking.notify_soon_to_be_expired_bookings_test.NotifyUsersOfSoonToBeExpiredBookingsTest"], "tests.scripts.booking.notify_soon_to_be_expired_bookings_test.NotifyUsersOfSoonToBeExpiredBookingsTest": [], "tests.scripts.booking.canceling_token_validation_test": [], "tests.scripts.booking": [], "tests.scripts.booking.fill_individual_booking_deposit_id_test": [], "tests.scripts.booking.handle_expired_bookings_test": ["tests.scripts.booking.handle_expired_bookings_test.NotifyOfferersOfExpiredBookingsTest", "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest", "tests.scripts.booking.handle_expired_bookings_test.NotifyUsersOfExpiredBookingsTest"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest": [], "tests.scripts.booking.handle_expired_bookings_test.NotifyUsersOfExpiredBookingsTest": [], "tests.scripts.booking.handle_expired_bookings_test.NotifyOfferersOfExpiredBookingsTest": [], "tests.scripts.external_users": [], "tests.scripts.external_users.unstack_batch_cloud_task_queue_test": ["unittest.mock.patch", "tests.scripts.external_users.unstack_batch_cloud_task_queue_test.MockHttpRequest", "tests.scripts.external_users.unstack_batch_cloud_task_queue_test.MockTask"], "tests.scripts.external_users.unstack_batch_cloud_task_queue_test.MockHttpRequest": [], "tests.scripts.external_users.unstack_batch_cloud_task_queue_test.MockTask": [], "tests.scripts.external_users.batch_update_users_attributes_test": ["unittest.mock.patch"], "tests.scripts.payment.mark_payments_as_sent_test": ["tests.scripts.payment.mark_payments_as_sent_test.MarkPaymentsAsSentTest"], "tests.scripts.payment.mark_payments_as_sent_test.MarkPaymentsAsSentTest": [], "tests.scripts.payment.add_custom_offer_reimbursement_rule_test": [], "tests.scripts.payment.generate_new_payments_test": ["tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest": [], "tests.scripts.payment": [], "tests.scripts.payment.user_recredit_test": ["tests.scripts.payment.user_recredit_test.UserRecreditTest"], "tests.scripts.payment.user_recredit_test.UserRecreditTest": ["freezegun.freeze_time"], "tests.scripts.payment.banishment_test": ["tests.scripts.payment.banishment_test.DoBanPaymentsTest"], "tests.scripts.payment.banishment_test.DoBanPaymentsTest": [], "tests.scripts.payment.update_custom_reimbursements_test": [], "tests.scripts.payment.batch_steps_test": ["tests.scripts.payment.batch_steps_test.SetNotProcessablePaymentsWithBankInformationToRetryTest", "pcapi.core.testing.override_settings"], "tests.scripts.payment.batch_steps_test.SetNotProcessablePaymentsWithBankInformationToRetryTest": [], "tests.scripts.payment.batch_test": [], "tests.scripts.offerer": [], "tests.scripts.offerer.delete_cascade_offerer_by_id_test": [], "tests.scripts.offerer.file_import_test": ["tests.scripts.offerer.file_import_test.FillOffererFromTest", "tests.scripts.offerer.file_import_test.IterateRowForUserOfferersTest", "tests.scripts.offerer.file_import_test.FillUserFromTest", "tests.scripts.offerer.file_import_test.CreateActivatedUserOffererTest", "tests.scripts.offerer.file_import_test.FillUserOffererFromTest"], "tests.scripts.offerer.file_import_test.IterateRowForUserOfferersTest": ["unittest.mock.patch"], "tests.scripts.offerer.file_import_test.CreateActivatedUserOffererTest": [], "tests.scripts.offerer.file_import_test.FillUserOffererFromTest": [], "tests.scripts.offerer.file_import_test.FillUserFromTest": [], "tests.scripts.offerer.file_import_test.FillOffererFromTest": ["freezegun.freeze_time"], "tests.scripts.offerer.generate_and_save_api_key_for_offerer_test": [], "tests.scripts.offerer.delete_cascade_venue_by_id_test": [], "tests.scripts.offerer.import_offerers_from_csv_test": ["tests.scripts.offerer.import_offerers_from_csv_test.CreateVenueFromCSVTest", "tests.scripts.offerer.import_offerers_from_csv_test.CreateProUserFromCSVTest", "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest", "tests.scripts.offerer.import_offerers_from_csv_test.CreateOffererFromCSVTest"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateOffererFromCSVTest": [], "tests.scripts.offerer.import_offerers_from_csv_test.CreateVenueFromCSVTest": [], "tests.scripts.offerer.import_offerers_from_csv_test.CreateProUserFromCSVTest": [], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest": ["freezegun.freeze_time"], "tests.scripts.algolia_indexing": [], "tests.scripts.algolia_indexing.indexing_test": ["tests.scripts.algolia_indexing.indexing_test.BatchIndexingOffersInAlgoliaFromDatabaseTest"], "tests.scripts.algolia_indexing.indexing_test.BatchIndexingOffersInAlgoliaFromDatabaseTest": [], "tests.scripts.educational.import_educational_institutions_and_deposits_test": ["tests.scripts.educational.import_educational_institutions_and_deposits_test.ImportEducationalInstitutionTest"], "tests.scripts.educational.import_educational_institutions_and_deposits_test.ImportEducationalInstitutionTest": ["freezegun.freeze_time"], "tests.scripts.educational.update_educational_institutions_deposits_test": ["tests.scripts.educational.update_educational_institutions_deposits_test.UpdateEducationalInstitutionsDepositsTest"], "tests.scripts.educational.update_educational_institutions_deposits_test.UpdateEducationalInstitutionsDepositsTest": ["freezegun.freeze_time"], "tests.scripts.venue": [], "tests.scripts.venue.move_all_offers_for_venue_test": ["tests.scripts.venue.move_all_offers_for_venue_test.MoveAllOffersFromVenueToOtherVenueTest"], "tests.scripts.venue.move_all_offers_for_venue_test.MoveAllOffersFromVenueToOtherVenueTest": [], "tests.scripts.venue.modify_allocine_price_rule_for_venue_test": ["tests.scripts.venue.modify_allocine_price_rule_for_venue_test.ModifyAllocinePriceRuleForVenueTest"], "tests.scripts.venue.modify_allocine_price_rule_for_venue_test.ModifyAllocinePriceRuleForVenueTest": [], "tests.scripts.venue.venue_label": [], "tests.scripts.venue.venue_label.create_venue_labels_test": ["tests.scripts.venue.venue_label.create_venue_labels_test.SaveNewVenueLabelsTest"], "tests.scripts.venue.venue_label.create_venue_labels_test.SaveNewVenueLabelsTest": [], "tests.scripts.beneficiary.import_users_test": ["tests.scripts.beneficiary.import_users_test.ReadFileTest", "dateutil.relativedelta.relativedelta"], "tests.scripts.beneficiary.import_users_test.ReadFileTest": [], "tests.scripts.beneficiary": [], "tests.scripts.beneficiary.archive_dms_applications_test": ["tests.scripts.beneficiary.fixture", "tests.scripts.beneficiary.archive_dms_applications_test.ArchiveDMSApplicationsTest"], "tests.scripts.beneficiary.archive_dms_applications_test.ArchiveDMSApplicationsTest": [], "tests.scripts.beneficiary.factories": [], "tests.scripts.beneficiary.test_send_dms_application_emails": ["tests.scripts.beneficiary.test_send_dms_application_emails.SendDMSApplicationEMailsTest"], "tests.scripts.beneficiary.test_send_dms_application_emails.SendDMSApplicationEMailsTest": [], "tests.scripts.beneficiary.send_mail_after_idcheck_outage_test": ["tests.scripts.beneficiary.send_mail_after_idcheck_outage_test.SendMailAfterIdcheckOutageTest"], "tests.scripts.beneficiary.send_mail_after_idcheck_outage_test.SendMailAfterIdcheckOutageTest": ["freezegun.freeze_time"], "tests.scripts.beneficiary.fixture_dms_with_selfie": [], "tests.scripts.beneficiary.import_dms_users_test": ["tests.scripts.beneficiary.fixture", "tests.scripts.beneficiary.import_dms_users_test.ParsingErrorsTest", "dateutil.relativedelta.relativedelta", "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest", "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest", "tests.scripts.beneficiary.import_dms_users_test.RunTest", "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest"], "tests.scripts.beneficiary.import_dms_users_test.RunTest": ["unittest.mock.patch", "pcapi.core.testing.override_features"], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest": [], "tests.scripts.beneficiary.import_dms_users_test.ParsingErrorsTest": [], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest": ["datetime.timedelta", "pcapi.core.testing.override_features"], "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest": [], "tests.scripts.beneficiary.delete_or_suspend_account_from_file_test": [], "tests.scripts.business_unit.purge_virtual_venue_business_units_test": [], "tests.scripts.business_unit.create_bu_test": [], "tests.scripts.stock.soft_delete_stock_test": ["tests.scripts.stock.soft_delete_stock_test.SoftDeleteStockTest"], "tests.scripts.stock.soft_delete_stock_test.SoftDeleteStockTest": [], "tests.scripts.stock.fully_sync_venue_test": [], "tests.scripts.stock": [], "tests.files.pylint": ["tests.files.pylint.C"], "tests.files.pylint.C": [], "tests.workers.bank_information_job_test": ["tests.workers.bank_information_job_test.synchronizeBankInformationsTest"], "tests.workers.bank_information_job_test.synchronizeBankInformationsTest": ["unittest.mock.patch"], "tests.workers.update_all_venue_offers_accessibility_job_test": [], "tests.workers": [], "tests.workers.update_all_venue_offers_withdrawal_details_job_test": [], "tests.workers.suspend_fraudulent_beneficiary_users_by_ids_job_test": [], "tests.workers.update_all_venue_offers_email_job_test": [], "tests.alembic.check_db_schema": ["tests.alembic.check_db_schema.main", "sqlalchemy.create_engine"], "sqlalchemy.create_engine": [], "tests.alembic.check_db_schema.main": ["<builtin>.Exception", "alembic.autogenerate.compare_metadata", "<builtin>.len"], "alembic.autogenerate.compare_metadata": [], "<builtin>.len": [], "tests.alembic.run_migrations_test": ["tests.alembic.run_migrations_test.RunMigrationsTest"], "tests.alembic.run_migrations_test.RunMigrationsTest": ["unittest.mock.patch"], "tests.alembic": [], "tests.local_providers.titelive_descriptions_test": ["tests.local_providers.titelive_descriptions_test.MockZipFile", "tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest"], "tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest": ["tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest.NextTest", "tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest.InitTest"], "tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest.InitTest": ["unittest.mock.patch"], "tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest.NextTest": ["unittest.mock.patch"], "tests.local_providers.titelive_descriptions_test.MockZipFile": [], "tests.local_providers.allocine_stocks_functions_test": ["tests.local_providers.allocine_stocks_functions_test.GetShowtimeUUIDFromIdAtProviderTest", "tests.local_providers.allocine_stocks_functions_test.ParseMovieDurationTest", "tests.local_providers.allocine_stocks_functions_test.FindShowtimesByShowtimeUUIDTest", "tests.local_providers.allocine_stocks_functions_test.FilterOnlyDigitalAndNonExperiencedShowtimesTest", "tests.local_providers.allocine_stocks_functions_test.FormatDateFromLocalTimezoneToUtcTest", "tests.local_providers.allocine_stocks_functions_test.RetrieveShowtimeInformationTest", "tests.local_providers.allocine_stocks_functions_test.FormatNaiveDateToUtcTest", "tests.local_providers.allocine_stocks_functions_test.RetrieveMovieInformationTest", "tests.local_providers.allocine_stocks_functions_test.FormatPosterUrlTest"], "tests.local_providers.allocine_stocks_functions_test.ParseMovieDurationTest": [], "tests.local_providers.allocine_stocks_functions_test.RetrieveMovieInformationTest": [], "tests.local_providers.allocine_stocks_functions_test.RetrieveShowtimeInformationTest": [], "tests.local_providers.allocine_stocks_functions_test.FormatPosterUrlTest": [], "tests.local_providers.allocine_stocks_functions_test.FormatDateFromLocalTimezoneToUtcTest": [], "tests.local_providers.allocine_stocks_functions_test.FilterOnlyDigitalAndNonExperiencedShowtimesTest": [], "tests.local_providers.allocine_stocks_functions_test.GetShowtimeUUIDFromIdAtProviderTest": [], "tests.local_providers.allocine_stocks_functions_test.FormatNaiveDateToUtcTest": [], "tests.local_providers.allocine_stocks_functions_test.FindShowtimesByShowtimeUUIDTest": [], "tests.local_providers.titelive_thumbs_test": ["tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest"], "tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest": ["tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest.ExtractThumbIndexTest", "unittest.mock.patch"], "tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest.ExtractThumbIndexTest": [], "tests.local_providers.provider_api_stocks_test": ["tests.local_providers.provider_api_stocks_test.ProviderApiStocksTest"], "tests.local_providers.provider_api_stocks_test.ProviderApiStocksTest": ["unittest.mock.patch"], "tests.local_providers.titelive_things_test": ["tests.local_providers.titelive_things_test.TiteliveThingsTest"], "tests.local_providers.titelive_things_test.TiteliveThingsTest": ["unittest.mock.patch"], "tests.local_providers.allocine_stocks_test": ["tests.local_providers.allocine_stocks_test.AllocineStocksTest", "tests.local_providers.allocine_stocks_test.GetObjectThumbTest", "tests.local_providers.allocine_stocks_test.UpdateObjectsTest"], "tests.local_providers.allocine_stocks_test.AllocineStocksTest": ["tests.local_providers.allocine_stocks_test.AllocineStocksTest.InitTest", "tests.local_providers.allocine_stocks_test.AllocineStocksTest.NextTest"], "tests.local_providers.allocine_stocks_test.AllocineStocksTest.InitTest": ["unittest.mock.patch"], "tests.local_providers.allocine_stocks_test.AllocineStocksTest.NextTest": ["freezegun.freeze_time", "unittest.mock.patch"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest": ["tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenStockHasBeenManuallyDeletedTest", "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenAllocineStockAreSynchronizedTwiceTest", "unittest.mock.patch", "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenSettingDefaultValuesAtImportTest", "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenOfferHasBeenManuallyUpdatedTest"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenAllocineStockAreSynchronizedTwiceTest": ["unittest.mock.patch"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenOfferHasBeenManuallyUpdatedTest": ["unittest.mock.patch"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenStockHasBeenManuallyDeletedTest": ["unittest.mock.patch"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenSettingDefaultValuesAtImportTest": ["unittest.mock.patch"], "tests.local_providers.allocine_stocks_test.GetObjectThumbTest": ["unittest.mock.patch"], "tests.local_providers": [], "tests.local_providers.chunk_manager_test": ["tests.local_providers.chunk_manager_test.SaveChunksTest"], "tests.local_providers.chunk_manager_test.SaveChunksTest": [], "tests.local_providers.local_provider_test": ["tests.local_providers.local_provider_test.HandleThumbTest", "tests.local_providers.provider_test_utils", "tests.local_providers.local_provider_test.SaveThumbFromThumbCountToIndexTest", "tests.local_providers.local_provider_test.HandleUpdateTest", "tests.local_providers.local_provider_test.UpdateObjectsTest", "tests.local_providers.local_provider_test.CreateObjectTest"], "tests.local_providers.provider_test_utils": ["tests.local_providers.provider_test_utils.TestLocalProviderWithApiErrors", "tests.local_providers.provider_test_utils.TestLocalProviderNoCreation", "tests.local_providers.provider_test_utils.TestLocalProviderWithThumb", "tests.local_providers.provider_test_utils.TestLocalProvider", "tests.local_providers.provider_test_utils.TestLocalProviderWithThumbIndexAt4"], "tests.local_providers.provider_test_utils.TestLocalProvider": [], "tests.local_providers.provider_test_utils.TestLocalProviderWithApiErrors": [], "tests.local_providers.provider_test_utils.TestLocalProviderNoCreation": [], "tests.local_providers.provider_test_utils.TestLocalProviderWithThumb": [], "tests.local_providers.provider_test_utils.TestLocalProviderWithThumbIndexAt4": [], "tests.local_providers.local_provider_test.UpdateObjectsTest": ["unittest.mock.patch"], "tests.local_providers.local_provider_test.CreateObjectTest": [], "tests.local_providers.local_provider_test.HandleUpdateTest": [], "tests.local_providers.local_provider_test.HandleThumbTest": [], "tests.local_providers.local_provider_test.SaveThumbFromThumbCountToIndexTest": [], "tests.local_providers.provider_manager_test": ["tests.local_providers.provider_manager_test.SynchronizeVenueProviderTest", "tests.local_providers.provider_test_utils", "tests.local_providers.provider_manager_test.SynchronizeDataForProviderTest", "tests.local_providers.provider_manager_test.SynchronizeVenueProvidersForProviderTest", "tests.local_providers.provider_manager_test.DoUpdateTest", "tests.test_utils"], "tests.local_providers.provider_manager_test.DoUpdateTest": ["unittest.mock.patch"], "tests.local_providers.provider_manager_test.SynchronizeVenueProviderTest": ["unittest.mock.patch"], "tests.local_providers.provider_manager_test.SynchronizeVenueProvidersForProviderTest": ["unittest.mock.patch"], "tests.local_providers.provider_manager_test.SynchronizeDataForProviderTest": ["unittest.mock.patch"], "tests.local_providers.synchronize_provider_api_test": ["tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest", "<builtin>.len"], "tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest": ["tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest.BuildStocksDetailsTest", "freezegun.api.freeze_time"], "tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest.BuildStocksDetailsTest": [], "tests.use_cases": [], "tests.use_cases.save_offerer_bank_informations_test": ["tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest", "tests.connector_creators.demarches_simplifiees_creators"], "tests.connector_creators.demarches_simplifiees_creators": [], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest": ["tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest", "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByApplicationIdTest", "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByOffererIdTest"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest": [], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByApplicationIdTest": [], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByOffererIdTest": [], "tests.use_cases.save_venue_bank_informations_test": ["tests.connector_creators.demarches_simplifiees_creators", "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest": ["tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest", "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest", "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByApplicationIdTest", "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.GetReferentVenueTest"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.GetReferentVenueTest": [], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest": ["tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest", "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest": [], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest": [], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByApplicationIdTest": [], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest": [], "tests.use_cases.connect_allocine_to_venue_test": ["tests.use_cases.connect_allocine_to_venue_test.ConnectAllocineToVenueTest"], "tests.use_cases.connect_allocine_to_venue_test.ConnectAllocineToVenueTest": [], "tests.infrastructure": [], "tests.infrastructure.repository": [], "tests.infrastructure.repository.favorite": [], "tests.infrastructure.repository.venue": [], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test": ["tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest"], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest": [], "tests.infrastructure.repository.venue.venue_with_basic_information": [], "tests.infrastructure.repository.stock_provider": [], "tests.infrastructure.repository.stock_provider.provider_api_test": ["tests.infrastructure.repository.stock_provider.provider_api_test.IsSiretRegisteredTest", "tests.infrastructure.repository.stock_provider.provider_api_test.StocksTest"], "tests.infrastructure.repository.stock_provider.provider_api_test.StocksTest": [], "tests.infrastructure.repository.stock_provider.provider_api_test.IsSiretRegisteredTest": [], "tests.infrastructure.repository.bank_informations": [], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test": ["tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest": [], "tests.infrastructure.repository.pro_offerers.paginated_offerer_sql_repository_test": ["tests.infrastructure.repository.pro_offerers.paginated_offerer_sql_repository_test.PaginatedOffererSQLRepositoryTest"], "tests.infrastructure.repository.pro_offerers.paginated_offerer_sql_repository_test.PaginatedOffererSQLRepositoryTest": [], "tests.infrastructure.repository.pro_offerers": [], "tests.domain.payments_csv_test": ["tests.domain.payments_csv_test.WalletBalancesCSVTest", "tests.domain.payments_csv_test.GeneratePaymentDetailsCsvTest"], "tests.domain.payments_csv_test.GeneratePaymentDetailsCsvTest": [], "tests.domain.payments_csv_test.WalletBalancesCSVTest": ["tests.domain.payments_csv_test.WalletBalancesCSVTest.RowResult"], "tests.domain.payments_csv_test.WalletBalancesCSVTest.RowResult": [], "tests.domain.demarches_simplifiees_test": ["tests.domain.demarches_simplifiees_test.GetVenueBankInformation_applicationDetailsByApplicationIdTest", "tests.domain.demarches_simplifiees_test.ParseRawBicDataTest", "tests.connector_creators.demarches_simplifiees_creators", "tests.domain.demarches_simplifiees_test.GetStatusFromDemarchesSimplifieesApplicationStateTest", "tests.domain.demarches_simplifiees_test.GetOffererBankInformation_applicationDetailsByApplicationIdTest"], "tests.domain.demarches_simplifiees_test.GetOffererBankInformation_applicationDetailsByApplicationIdTest": ["unittest.mock.patch"], "tests.domain.demarches_simplifiees_test.GetVenueBankInformation_applicationDetailsByApplicationIdTest": ["unittest.mock.patch"], "tests.domain.demarches_simplifiees_test.GetStatusFromDemarchesSimplifieesApplicationStateTest": [], "tests.domain.demarches_simplifiees_test.ParseRawBicDataTest": [], "tests.domain.reimbursement_test": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest", "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000Test", "tests.domain.reimbursement_test.CustomRuleFinderTest", "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest", "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000Test", "tests.domain.reimbursement_test.ReimbursementRateForBookAbove20000Test", "tests.domain.reimbursement_test.ReimbursementRateForBookBelow20000Test", "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000Test", "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween20000And40000Test", "tests.domain.reimbursement_test.DigitalThingsReimbursementTest", "tests.domain.reimbursement_test.EducationalOffersReimbursement", "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween40000And150000Test", "tests.domain.reimbursement_test.ReimbursementRateByVenueAbove150000Test", "tests.domain.reimbursement_test.PhysicalOffersReimbursementTest"], "tests.domain.reimbursement_test.DigitalThingsReimbursementTest": [], "tests.domain.reimbursement_test.EducationalOffersReimbursement": [], "tests.domain.reimbursement_test.PhysicalOffersReimbursementTest": [], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000Test": [], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000Test": [], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000Test": [], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween20000And40000Test": [], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween40000And150000Test": [], "tests.domain.reimbursement_test.ReimbursementRateByVenueAbove150000Test": [], "tests.domain.reimbursement_test.ReimbursementRateForBookBelow20000Test": ["<builtin>.property"], "tests.domain.reimbursement_test.ReimbursementRateForBookAbove20000Test": ["<builtin>.property"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest": ["datetime.timedelta", "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule", "pcapi.core.bookings.models.Booking"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule": ["<builtin>.property", "decimal.Decimal"], "pcapi.core.bookings.models.Booking": [], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest": ["freezegun.freeze_time"], "tests.domain.reimbursement_test.CustomRuleFinderTest": [], "tests.domain.booking_recap_test": ["tests.domain_creators.generic_creators", "tests.domain.booking_recap_test.BookingRecapTest"], "tests.domain.booking_recap_test.BookingRecapTest": ["tests.domain.booking_recap_test.BookingRecapTest.TokenTest", "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest", "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest": ["tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest", "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingIsReimbursedTest"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest": [], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingIsReimbursedTest": [], "tests.domain.booking_recap_test.BookingRecapTest.TokenTest": [], "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest": [], "tests.domain.payments_xml_test": ["tests.domain.payments_xml_test.GenerateMessageFileTest"], "tests.domain.payments_xml_test.GenerateMessageFileTest": [], "tests.domain.user_emails_test": ["tests.domain.user_emails_test.SendWithdrawalTermsToNewlyValidatedOffererTest", "tests.domain.user_emails_test.SendActivationEmailTest"], "tests.domain.user_emails_test.SendActivationEmailTest": [], "tests.domain.user_emails_test.SendWithdrawalTermsToNewlyValidatedOffererTest": ["unittest.mock.patch"], "tests.domain.ftp_titelive_test": ["freezegun.freeze_time"], "tests.domain.ts_vector_test": [], "tests.domain": [], "tests.domain.bank_information_test": ["tests.domain.bank_information_test.CheckOffererPresenceTest"], "tests.domain.bank_information_test.CheckOffererPresenceTest": [], "tests.domain.postal_code_test": ["tests.domain.postal_code_test.PostalCodeTest"], "tests.domain.postal_code_test.PostalCodeTest": [], "tests.domain.bank_account_test": ["tests.domain.bank_account_test.FormatRawIbanAndBicTest"], "tests.domain.bank_account_test.FormatRawIbanAndBicTest": [], "tests.domain.admin_emails_test": ["tests.domain.admin_emails_test.SendOfferCreationNotificationToAdministrationTest", "unittest.mock.patch", "tests.domain.admin_emails_test.SendOfferCreationRefusalNotificationToAdministrationTest", "tests.domain.admin_emails_test.SendOfferNotificationToAdministrationTest"], "tests.domain.admin_emails_test.SendOfferCreationNotificationToAdministrationTest": [], "tests.domain.admin_emails_test.SendOfferCreationRefusalNotificationToAdministrationTest": [], "tests.domain.admin_emails_test.SendOfferNotificationToAdministrationTest": [], "tests.domain.allocine_test": ["tests.domain.allocine_test.RemoveMovieShowsWithSpecialEventTypeTest", "tests.domain.allocine_test.GetMoviePosterTest", "tests.domain.allocine_test.GetMovieShowtimeListFromAllocineTest"], "tests.domain.allocine_test.GetMovieShowtimeListFromAllocineTest": [], "tests.domain.allocine_test.GetMoviePosterTest": [], "tests.domain.allocine_test.RemoveMovieShowsWithSpecialEventTypeTest": [], "tests.domain.payments_test": ["tests.domain.payments_test.PaymentTransactionLabelTest", "tests.domain.payments_test.CreatePaymentForBookingTest", "tests.domain.payments_test.FilterOutBookingsWithoutCostTest", "tests.domain.payments_test.ApplyBanishmentTest", "tests.domain.payments_test.FilterOutAlreadyPaidForBookingsTest", "tests.domain.payments_test.KeepOnlyNotProcessablePaymentsTest", "tests.domain.payments_test.CreatePaymentDetailsTest"], "tests.domain.payments_test.CreatePaymentForBookingTest": [], "tests.domain.payments_test.FilterOutAlreadyPaidForBookingsTest": [], "tests.domain.payments_test.FilterOutBookingsWithoutCostTest": [], "tests.domain.payments_test.KeepOnlyNotProcessablePaymentsTest": [], "tests.domain.payments_test.CreatePaymentDetailsTest": [], "tests.domain.payments_test.PaymentTransactionLabelTest": ["datetime.datetime", "<builtin>.range"], "<builtin>.range": [], "tests.domain.payments_test.ApplyBanishmentTest": [], "tests.domain.offer_report_email_test": ["tests.domain.offer_report_email_test.OfferReportEmailTest"], "tests.domain.offer_report_email_test.OfferReportEmailTest": [], "tests.domain.user_activation_test": ["tests.domain.user_activation_test.IsImportStatusChangeAllowedTest"], "tests.domain.user_activation_test.IsImportStatusChangeAllowedTest": [], "tests.domain.titelive_test": ["tests.domain.titelive_test.GetDateFromFilenameTest"], "tests.domain.titelive_test.GetDateFromFilenameTest": [], "tests.domain.password_test": ["tests.domain.password_test.RandomPasswordTest", "tests.domain.password_test.EnsureGivenOldPasswordIsCorrectTest", "tests.domain.password_test.EnsureNewPasswordIsDifertFromOldTest", "tests.domain.password_test.EnsureConfirmationPasswordIsSameAsNewPasswordTest", "tests.domain.password_test.EnsureNewPasswordIsStrongEnoughTest", "tests.domain.password_test.CheckPasswordValidityTest"], "tests.domain.password_test.RandomPasswordTest": [], "tests.domain.password_test.CheckPasswordValidityTest": [], "tests.domain.password_test.EnsureNewPasswordIsStrongEnoughTest": [], "tests.domain.password_test.EnsureConfirmationPasswordIsSameAsNewPasswordTest": [], "tests.domain.password_test.EnsureGivenOldPasswordIsCorrectTest": [], "tests.domain.password_test.EnsureNewPasswordIsDifertFromOldTest": [], "tests.domain.identifier": [], "tests.domain.beneficiary": [], "tests.routes": [], "tests.routes.login_manager_test": ["tests.routes.login_manager_test.BasicAuthenticationTest"], "tests.routes.login_manager_test.BasicAuthenticationTest": [], "tests.routes.adage.v1.refuse_prebookings_test": ["tests.routes.adage.v1.refuse_prebookings_test.Returns200Test", "tests.conftest", "tests.routes.adage.v1.refuse_prebookings_test.Returns400Test"], "tests.routes.adage.v1.refuse_prebookings_test.Returns200Test": ["freezegun.freeze_time"], "tests.routes.adage.v1.refuse_prebookings_test.Returns400Test": [], "tests.routes.adage.v1.get_all_bookings_per_year_test": ["tests.routes.adage.v1.get_all_bookings_per_year_test.Returns200Test"], "tests.routes.adage.v1.get_all_bookings_per_year_test.Returns200Test": [], "tests.routes.adage.v1.confirm_prebooking_test": ["tests.conftest", "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest", "tests.routes.adage.v1.confirm_prebooking_test.Returns200Test"], "tests.routes.adage.v1.confirm_prebooking_test.Returns200Test": ["freezegun.freeze_time"], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest": ["freezegun.freeze_time"], "tests.routes.adage.v1.get_prebookings_test": ["tests.conftest", "tests.routes.adage.v1.get_prebookings_test.Returns200Test"], "tests.routes.adage.v1.get_prebookings_test.Returns200Test": [], "tests.routes.adage.v1.get_educational_institution_test": ["tests.conftest", "tests.routes.adage.v1.get_educational_institution_test.Returns404Test", "tests.routes.adage.v1.get_educational_institution_test.Returns200Test"], "tests.routes.adage.v1.get_educational_institution_test.Returns200Test": [], "tests.routes.adage.v1.get_educational_institution_test.Returns404Test": [], "tests.routes.adage.v1.get_venues_from_siret_test": ["tests.routes.adage.v1.get_venues_from_siret_test.Returns200Test", "tests.routes.adage.v1.get_venues_from_siret_test.Returns404Test"], "tests.routes.adage.v1.get_venues_from_siret_test.Returns200Test": [], "tests.routes.adage.v1.get_venues_from_siret_test.Returns404Test": [], "tests.routes.adage.v1.serialization.get_educational_booking_status_test": ["tests.routes.adage.v1.serialization.get_educational_booking_status_test.GetEducationalBookingStatusTest"], "tests.routes.adage.v1.serialization.get_educational_booking_status_test.GetEducationalBookingStatusTest": [], "tests.routes.pro.get_venue_labels_test": ["tests.routes.pro.get_venue_labels_test.Returns200Test", "tests.conftest", "tests.routes.pro.get_venue_labels_test.Returns401Test"], "tests.routes.pro.get_venue_labels_test.Returns401Test": [], "tests.routes.pro.get_venue_labels_test.Returns200Test": [], "tests.routes.pro.get_stocks_test": ["tests.routes.pro.get_stocks_test.Returns403Test", "tests.conftest", "tests.routes.pro.get_stocks_test.Returns404Test", "tests.routes.pro.get_stocks_test.Returns200Test"], "tests.routes.pro.get_stocks_test.Returns200Test": ["freezegun.freeze_time"], "tests.routes.pro.get_stocks_test.Returns403Test": [], "tests.routes.pro.get_stocks_test.Returns404Test": [], "tests.routes.pro.validate_offerer_attachment_test": ["tests.routes.pro.validate_offerer_attachment_test.Returns202Test", "tests.routes.pro.validate_offerer_attachment_test.Returns404Test"], "tests.routes.pro.validate_offerer_attachment_test.Returns202Test": [], "tests.routes.pro.validate_offerer_attachment_test.Returns404Test": [], "tests.routes.pro.patch_educational_offer_test": ["tests.routes.pro.patch_educational_offer_test.Returns200Test", "tests.routes.pro.patch_educational_offer_test.Returns403Test", "tests.routes.pro.patch_educational_offer_test.Returns400Test", "tests.routes.pro.patch_educational_offer_test.Returns404Test"], "tests.routes.pro.patch_educational_offer_test.Returns200Test": ["freezegun.freeze_time", "pcapi.core.testing.override_settings"], "tests.routes.pro.patch_educational_offer_test.Returns400Test": [], "tests.routes.pro.patch_educational_offer_test.Returns403Test": [], "tests.routes.pro.patch_educational_offer_test.Returns404Test": [], "tests.routes.pro.post_stocks_test": ["tests.routes.pro.post_stocks_test.Returns400Test", "tests.conftest", "tests.routes.pro.post_stocks_test.Returns403Test", "tests.routes.pro.post_stocks_test.Returns201Test"], "tests.routes.pro.post_stocks_test.Returns201Test": [], "tests.routes.pro.post_stocks_test.Returns400Test": ["<builtin>.float"], "<builtin>.float": [], "tests.routes.pro.post_stocks_test.Returns403Test": [], "tests.routes.pro.edit_shadow_stock_test": ["tests.routes.pro.edit_shadow_stock_test.Return400Test", "tests.routes.pro.edit_shadow_stock_test.Return200Test", "tests.routes.pro.edit_shadow_stock_test.Return403Test"], "tests.routes.pro.edit_shadow_stock_test.Return200Test": [], "tests.routes.pro.edit_shadow_stock_test.Return403Test": [], "tests.routes.pro.edit_shadow_stock_test.Return400Test": [], "tests.routes.pro.edit_educational_stock_test": ["tests.routes.pro.edit_educational_stock_test.Return403Test", "tests.routes.pro.edit_educational_stock_test.Return200Test", "tests.routes.pro.edit_educational_stock_test.Return400Test"], "tests.routes.pro.edit_educational_stock_test.Return200Test": ["pcapi.core.testing.override_settings"], "tests.routes.pro.edit_educational_stock_test.Return403Test": [], "tests.routes.pro.edit_educational_stock_test.Return400Test": [], "tests.routes.pro.can_offerer_create_educational_offer_test": ["tests.conftest", "tests.routes.pro.can_offerer_create_educational_offer_test.CanOffererCreateEducationalOfferTest"], "tests.routes.pro.can_offerer_create_educational_offer_test.CanOffererCreateEducationalOfferTest": [], "tests.routes.pro.post_offerer_test": ["tests.conftest", "tests.routes.pro.post_offerer_test.Returns201Test"], "tests.routes.pro.post_offerer_test.Returns201Test": ["unittest.mock.patch"], "tests.routes.pro.get_venue_providers_test": ["tests.conftest", "tests.routes.pro.get_venue_providers_test.Returns400Test", "tests.routes.pro.get_venue_providers_test.Returns200Test"], "tests.routes.pro.get_venue_providers_test.Returns200Test": [], "tests.routes.pro.get_venue_providers_test.Returns400Test": [], "tests.routes.pro.get_venue_test": ["tests.conftest", "tests.routes.pro.get_venue_test.Returns403Test", "tests.routes.pro.get_venue_test.Returns200Test"], "tests.routes.pro.get_venue_test.Returns200Test": [], "tests.routes.pro.get_venue_test.Returns403Test": [], "tests.routes.pro.get_invoices_test": [], "tests.routes.pro.patch_cancel_booking_by_token_test": ["tests.routes.pro.patch_cancel_booking_by_token_test.Returns401Test", "tests.routes.pro.patch_cancel_booking_by_token_test.Returns403Test", "tests.routes.pro.patch_cancel_booking_by_token_test.Returns204Test", "tests.routes.pro.patch_cancel_booking_by_token_test.Returns410Test", "tests.routes.pro.patch_cancel_booking_by_token_test.Returns404Test"], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns204Test": [], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns401Test": [], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns403Test": [], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns404Test": [], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns410Test": [], "tests.routes.pro.get_reimbursements_csv_test": ["tests.conftest"], "tests.routes.pro.validate_bookings_test": ["tests.routes.pro.validate_bookings_test.Returns403Test", "datetime.timedelta", "tests.routes.pro.validate_bookings_test.Returns204Test", "tests.routes.pro.validate_bookings_test.Returns410Test", "tests.routes.pro.validate_bookings_test.Returns404Test"], "tests.routes.pro.validate_bookings_test.Returns204Test": [], "tests.routes.pro.validate_bookings_test.Returns403Test": [], "tests.routes.pro.validate_bookings_test.Returns404Test": [], "tests.routes.pro.validate_bookings_test.Returns410Test": [], "tests.routes.pro.patch_offer_test": ["tests.routes.pro.patch_offer_test.Returns404Test", "tests.routes.pro.patch_offer_test.Returns400Test", "tests.routes.pro.patch_offer_test.Returns403Test", "tests.routes.pro.patch_offer_test.Returns200Test"], "tests.routes.pro.patch_offer_test.Returns200Test": [], "tests.routes.pro.patch_offer_test.Returns400Test": [], "tests.routes.pro.patch_offer_test.Returns403Test": [], "tests.routes.pro.patch_offer_test.Returns404Test": [], "tests.routes.pro.get_venue_types_test": ["tests.routes.pro.get_venue_types_test.Returns200Test", "tests.conftest", "tests.routes.pro.get_venue_types_test.Returns401Test"], "tests.routes.pro.get_venue_types_test.Returns401Test": [], "tests.routes.pro.get_venue_types_test.Returns200Test": [], "tests.routes.pro.get_business_units_test": [], "tests.routes.pro.get_offerer_test": ["tests.conftest", "tests.routes.pro.get_offerer_test.Returns404Test", "tests.routes.pro.get_offerer_test.Returns200Test"], "tests.routes.pro.get_offerer_test.Returns404Test": [], "tests.routes.pro.get_offerer_test.Returns200Test": [], "tests.routes.pro.patch_booking_by_token_test": ["tests.routes.pro.patch_booking_by_token_test.Returns410Test", "tests.routes.pro.patch_booking_by_token_test.Returns403Test", "tests.routes.pro.patch_booking_by_token_test.Returns404Test", "tests.routes.pro.patch_booking_by_token_test.Returns204Test", "tests.routes.pro.patch_booking_by_token_test.Returns400Test"], "tests.routes.pro.patch_booking_by_token_test.Returns204Test": ["tests.routes.pro.patch_booking_by_token_test.Returns204Test.WhenUserIsAnonymousTest", "tests.routes.pro.patch_booking_by_token_test.Returns204Test.WhenUserIsLoggedInTest"], "tests.routes.pro.patch_booking_by_token_test.Returns204Test.WhenUserIsAnonymousTest": [], "tests.routes.pro.patch_booking_by_token_test.Returns204Test.WhenUserIsLoggedInTest": [], "tests.routes.pro.patch_booking_by_token_test.Returns400Test": ["tests.routes.pro.patch_booking_by_token_test.Returns400Test.WhenUserIsAnonymousTest"], "tests.routes.pro.patch_booking_by_token_test.Returns400Test.WhenUserIsAnonymousTest": [], "tests.routes.pro.patch_booking_by_token_test.Returns403Test": [], "tests.routes.pro.patch_booking_by_token_test.Returns404Test": ["tests.routes.pro.patch_booking_by_token_test.Returns404Test.WhenUserIsLoggedInTest", "tests.routes.pro.patch_booking_by_token_test.Returns404Test.WhenUserIsAnonymousTest"], "tests.routes.pro.patch_booking_by_token_test.Returns404Test.WhenUserIsAnonymousTest": [], "tests.routes.pro.patch_booking_by_token_test.Returns404Test.WhenUserIsLoggedInTest": [], "tests.routes.pro.patch_booking_by_token_test.Returns410Test": [], "tests.routes.pro.get_booking_by_token_v2_test": ["tests.routes.pro.get_booking_by_token_v2_test.Returns200Test", "tests.routes.pro.get_booking_by_token_v2_test.Returns401Test", "tests.routes.pro.get_booking_by_token_v2_test.Returns403Test", "tests.routes.pro.get_booking_by_token_v2_test.Returns410Test", "tests.routes.pro.get_booking_by_token_v2_test.Returns404Test"], "tests.routes.pro.get_booking_by_token_v2_test.Returns200Test": [], "tests.routes.pro.get_booking_by_token_v2_test.Returns401Test": [], "tests.routes.pro.get_booking_by_token_v2_test.Returns403Test": [], "tests.routes.pro.get_booking_by_token_v2_test.Returns404Test": [], "tests.routes.pro.get_booking_by_token_v2_test.Returns410Test": [], "tests.routes.pro.cancel_educational_offer_booking_test": ["tests.routes.pro.cancel_educational_offer_booking_test.Returns204Test", "tests.routes.pro.cancel_educational_offer_booking_test.Returns400Test", "tests.routes.pro.cancel_educational_offer_booking_test.Returns404Test", "tests.routes.pro.cancel_educational_offer_booking_test.Returns403Test"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns204Test": [], "tests.routes.pro.cancel_educational_offer_booking_test.Returns404Test": ["pcapi.core.testing.override_settings"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns403Test": [], "tests.routes.pro.cancel_educational_offer_booking_test.Returns400Test": [], "tests.routes.pro.patch_user_has_seen_tuto_test": ["tests.conftest", "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest"], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest": ["tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns404Test", "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns403Test", "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns204Test"], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns204Test": [], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns404Test": [], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns403Test": [], "tests.routes.pro": [], "tests.routes.pro.post_venue_test": ["tests.conftest", "tests.routes.pro.post_venue_test.VenueBannerTest", "tests"], "tests.routes.pro.post_venue_test.VenueBannerTest": [], "tests.routes.pro.openapi_test": [], "tests.routes.pro.patch_booking_use_by_token_test": ["tests.routes.pro.patch_booking_use_by_token_test.Returns410Test", "tests.routes.pro.patch_booking_use_by_token_test.Returns404Test", "tests.routes.pro.patch_booking_use_by_token_test.Returns401Test", "tests.routes.pro.patch_booking_use_by_token_test.Returns403Test", "tests.routes.pro.patch_booking_use_by_token_test.Returns204Test"], "tests.routes.pro.patch_booking_use_by_token_test.Returns204Test": ["tests.routes.pro.patch_booking_use_by_token_test.Returns204Test.WithBasicAuthTest", "tests.routes.pro.patch_booking_use_by_token_test.Returns204Test.WithApiKeyAuthTest"], "tests.routes.pro.patch_booking_use_by_token_test.Returns204Test.WithApiKeyAuthTest": [], "tests.routes.pro.patch_booking_use_by_token_test.Returns204Test.WithBasicAuthTest": [], "tests.routes.pro.patch_booking_use_by_token_test.Returns401Test": [], "tests.routes.pro.patch_booking_use_by_token_test.Returns403Test": ["tests.routes.pro.patch_booking_use_by_token_test.Returns403Test.WithBasicAuthTest", "tests.routes.pro.patch_booking_use_by_token_test.Returns403Test.WithApiKeyAuthTest"], "tests.routes.pro.patch_booking_use_by_token_test.Returns403Test.WithApiKeyAuthTest": [], "tests.routes.pro.patch_booking_use_by_token_test.Returns403Test.WithBasicAuthTest": [], "tests.routes.pro.patch_booking_use_by_token_test.Returns404Test": [], "tests.routes.pro.patch_booking_use_by_token_test.Returns410Test": [], "tests.routes.pro.validate_offerer_test": ["tests.conftest", "tests.routes.pro.validate_offerer_test.Returns404Test", "tests.routes.pro.validate_offerer_test.Returns202Test"], "tests.routes.pro.validate_offerer_test.Returns202Test": [], "tests.routes.pro.validate_offerer_test.Returns404Test": [], "tests.routes.pro.validate_user_test": ["tests.conftest", "unittest.mock.patch"], "tests.routes.pro.patch_booking_keep_by_token_test": ["tests.routes.pro.patch_booking_keep_by_token_test.Returns204Test", "tests.routes.pro.patch_booking_keep_by_token_test.Returns410Test", "tests.routes.pro.patch_booking_keep_by_token_test.Returns404Test", "tests.routes.pro.patch_booking_keep_by_token_test.Returns403Test", "tests.routes.pro.patch_booking_keep_by_token_test.Returns401Test"], "tests.routes.pro.patch_booking_keep_by_token_test.Returns204Test": ["tests.routes.pro.patch_booking_keep_by_token_test.Returns204Test.WithBasicAuthTest", "tests.routes.pro.patch_booking_keep_by_token_test.Returns204Test.WithApiKeyAuthTest"], "tests.routes.pro.patch_booking_keep_by_token_test.Returns204Test.WithApiKeyAuthTest": [], "tests.routes.pro.patch_booking_keep_by_token_test.Returns204Test.WithBasicAuthTest": [], "tests.routes.pro.patch_booking_keep_by_token_test.Returns401Test": [], "tests.routes.pro.patch_booking_keep_by_token_test.Returns403Test": ["tests.routes.pro.patch_booking_keep_by_token_test.Returns403Test.WithApiKeyAuthTest", "tests.routes.pro.patch_booking_keep_by_token_test.Returns403Test.WithBasicAuthTest"], "tests.routes.pro.patch_booking_keep_by_token_test.Returns403Test.WithApiKeyAuthTest": [], "tests.routes.pro.patch_booking_keep_by_token_test.Returns403Test.WithBasicAuthTest": [], "tests.routes.pro.patch_booking_keep_by_token_test.Returns404Test": [], "tests.routes.pro.patch_booking_keep_by_token_test.Returns410Test": [], "tests.routes.pro.post_offerer_api_key_test": [], "tests.routes.pro.get_venue_stats_test": ["tests.routes.pro.get_venue_stats_test.Returns200Test", "tests.conftest", "tests.routes.pro.get_venue_stats_test.Returns403Test"], "tests.routes.pro.get_venue_stats_test.Returns200Test": [], "tests.routes.pro.get_venue_stats_test.Returns403Test": [], "tests.routes.pro.delete_stock_test": ["tests.conftest", "tests.routes.pro.delete_stock_test.Returns200Test", "tests.routes.pro.delete_stock_test.Returns403Test", "tests.routes.pro.delete_stock_test.Returns400Test"], "tests.routes.pro.delete_stock_test.Returns200Test": [], "tests.routes.pro.delete_stock_test.Returns400Test": [], "tests.routes.pro.delete_stock_test.Returns403Test": [], "tests.routes.pro.get_educational_offerers_test": ["tests.routes.pro.get_educational_offerers_test.GetEducationalOfferersTest"], "tests.routes.pro.get_educational_offerers_test.GetEducationalOfferersTest": [], "tests.routes.pro.post_educational_stock_test": ["tests.routes.pro.post_educational_stock_test.Return200Test", "tests.routes.pro.post_educational_stock_test.Return400Test"], "tests.routes.pro.post_educational_stock_test.Return200Test": [], "tests.routes.pro.post_educational_stock_test.Return400Test": [], "tests.routes.pro.get_all_bookings_test": ["tests.conftest", "tests.routes.pro.get_all_bookings_test.Returns200Test", "tests.routes.pro.get_all_bookings_test.GetAllBookingsTest", "datetime.datetime", "tests.routes.pro.get_all_bookings_test.Returns400Test"], "tests.routes.pro.get_all_bookings_test.GetAllBookingsTest": ["unittest.mock.patch"], "tests.routes.pro.get_all_bookings_test.Returns200Test": ["freezegun.api.freeze_time"], "tests.routes.pro.get_all_bookings_test.Returns400Test": [], "tests.routes.pro.post_venue_provider_test": ["tests.conftest", "tests.routes.pro.post_venue_provider_test.Returns201Test", "tests.routes.pro.post_venue_provider_test.Returns422Test", "tests.routes.pro.post_venue_provider_test.Returns400Test", "tests.routes.pro.post_venue_provider_test.Returns404Test", "tests.routes.pro.post_venue_provider_test.Returns401Test", "tests.routes.pro.post_venue_provider_test.ConnectProviderToVenueTest"], "tests.routes.pro.post_venue_provider_test.Returns201Test": ["unittest.mock.patch"], "tests.routes.pro.post_venue_provider_test.Returns400Test": ["tests.conftest.clean_database"], "tests.routes.pro.post_venue_provider_test.Returns401Test": [], "tests.routes.pro.post_venue_provider_test.Returns404Test": [], "tests.routes.pro.post_venue_provider_test.Returns422Test": ["unittest.mock.patch"], "tests.routes.pro.post_venue_provider_test.ConnectProviderToVenueTest": ["unittest.mock.patch"], "tests.routes.pro.put_venue_provider_test": ["tests.conftest", "tests.routes.pro.put_venue_provider_test.Returns403Test", "tests.routes.pro.put_venue_provider_test.Returns401Test", "tests.routes.pro.put_venue_provider_test.Returns200Test", "tests.routes.pro.put_venue_provider_test.Returns400Test"], "tests.routes.pro.put_venue_provider_test.Returns200Test": [], "tests.routes.pro.put_venue_provider_test.Returns400Test": [], "tests.routes.pro.put_venue_provider_test.Returns401Test": [], "tests.routes.pro.put_venue_provider_test.Returns403Test": [], "tests.routes.pro.get_venues_test": ["tests.conftest", "unittest.mock.patch"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test": ["tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return200Test", "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return200Test": [], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test": [], "tests.routes.pro.get_offerers_names_test": ["tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest", "tests.conftest", "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest"], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest": [], "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest": [], "tests.routes.pro.get_user_offerer_test": ["tests.routes.pro.get_user_offerer_test.Returns200Test"], "tests.routes.pro.get_user_offerer_test.Returns200Test": [], "tests.routes.pro.post_offer_test": ["tests.routes.pro.post_offer_test.Returns400Test", "tests.conftest", "tests.routes.pro.post_offer_test.Returns200Test", "tests.routes.pro.post_offer_test.Returns403Test"], "tests.routes.pro.post_offer_test.Returns200Test": ["pcapi.core.testing.override_settings"], "tests.routes.pro.post_offer_test.Returns400Test": [], "tests.routes.pro.post_offer_test.Returns403Test": ["pcapi.core.testing.override_settings"], "tests.routes.pro.get_offers_test": ["tests.conftest", "tests.routes.pro.get_offers_test.Returns200Test", "tests.routes.pro.get_offers_test.Returns404Test"], "tests.routes.pro.get_offers_test.Returns200Test": ["unittest.mock.patch"], "tests.routes.pro.get_offers_test.Returns404Test": [], "tests.routes.pro.patch_offers_active_status_test": ["tests.conftest", "tests.routes.pro.patch_offers_active_status_test.Returns204Test"], "tests.routes.pro.patch_offers_active_status_test.Returns204Test": [], "tests.routes.pro.delete_venue_banner_test": ["tests.routes.pro.delete_venue_banner_test.VenueBannerTest"], "tests.routes.pro.delete_venue_banner_test.VenueBannerTest": ["unittest.mock.patch"], "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test": ["tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return400Test", "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return200Test"], "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return200Test": [], "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return400Test": [], "tests.routes.pro.get_offerers_test": ["tests.routes.pro.get_offerers_test.Returns200Test"], "tests.routes.pro.get_offerers_test.Returns200Test": [], "tests.routes.pro.patch_user_test": ["tests.conftest", "tests.routes.pro.patch_user_test.PatchProUserBodyModelTest"], "tests.routes.pro.patch_user_test.PatchProUserBodyModelTest": [], "tests.routes.pro.get_providers_by_venue_test": [], "tests.routes.pro.signup_pro_test": ["tests.routes.pro.signup_pro_test.Returns204Test", "tests.conftest", "tests.routes.pro.signup_pro_test.Returns400Test"], "tests.routes.pro.signup_pro_test.Returns204Test": [], "tests.routes.pro.signup_pro_test.Returns400Test": [], "tests.routes.pro.post_thumbnail_test": ["tests.conftest", "tests.routes.pro.post_thumbnail_test.CreateThumbnailFromFileTest", "tests", "tests.routes.pro.post_thumbnail_test.CreateThumbnailWithoutImageTest", "pathlib.Path"], "pathlib.Path": [], "tests.routes.pro.post_thumbnail_test.CreateThumbnailWithoutImageTest": [], "tests.routes.pro.post_thumbnail_test.CreateThumbnailFromFileTest": [], "tests.routes.pro.get_offer_test": ["tests.routes.pro.get_offer_test.Returns200Test", "tests.conftest"], "tests.routes.pro.get_offer_test.Returns200Test": ["freezegun.freeze_time"], "tests.routes.pro.get_booking_by_token_test": ["tests.routes.pro.get_booking_by_token_test.Returns200Test", "tests.routes.pro.get_booking_by_token_test.Returns204Test", "tests.routes.pro.get_booking_by_token_test.Returns403Test", "tests.routes.pro.get_booking_by_token_test.Returns404Test", "tests.routes.pro.get_booking_by_token_test.Returns400Test", "tests.routes.pro.get_booking_by_token_test.Returns410Test"], "tests.routes.pro.get_booking_by_token_test.Returns200Test": [], "tests.routes.pro.get_booking_by_token_test.Returns204Test": [], "tests.routes.pro.get_booking_by_token_test.Returns404Test": [], "tests.routes.pro.get_booking_by_token_test.Returns400Test": [], "tests.routes.pro.get_booking_by_token_test.Returns403Test": [], "tests.routes.pro.get_booking_by_token_test.Returns410Test": [], "tests.routes.pro.patch_all_offers_active_status_test": ["tests.conftest", "tests.routes.pro.patch_all_offers_active_status_test.Returns204Test"], "tests.routes.pro.patch_all_offers_active_status_test.Returns204Test": [], "tests.routes.pro.get_categories_test": ["tests.routes.pro.get_categories_test.Returns200Test"], "tests.routes.pro.get_categories_test.Returns200Test": [], "tests.routes.pro.patch_venue_test": ["tests.conftest", "tests.routes.pro.patch_venue_test.Returns200Test", "tests.routes.pro.post_venue_test"], "tests.routes.pro.patch_venue_test.Returns200Test": ["unittest.mock.patch"], "tests.routes.pro.edit_business_unit_test": [], "tests.routes.pro.post_venue_stocks_test": ["tests.conftest", "unittest.mock.patch", "decimal.Decimal"], "tests.routes.native": [], "tests.routes.native.v1.utils_test": ["tests.routes.native.v1.utils_test.CheckClientVersionTest", "tests.conftest"], "tests.routes.native.v1.utils_test.CheckClientVersionTest": ["pcapi.core.testing.override_settings"], "tests.routes.native.v1.offerers_test": ["tests.routes.native.v1.offerers_test.VenuesTest"], "tests.routes.native.v1.offerers_test.VenuesTest": [], "tests.routes.native.v1.subscription_test": ["tests.routes.native.v1.subscription_test.UpdateProfileTest", "tests.routes.native.v1.subscription_test.ProfileOptionsTypeTest", "tests.routes.native.v1.subscription_test.HonorStatementTest", "tests.routes.native.v1.subscription_test.NextStepTest"], "tests.routes.native.v1.subscription_test.NextStepTest": ["pcapi.core.testing.override_features"], "tests.routes.native.v1.subscription_test.UpdateProfileTest": ["pcapi.core.testing.override_features"], "tests.routes.native.v1.subscription_test.ProfileOptionsTypeTest": [], "tests.routes.native.v1.subscription_test.HonorStatementTest": [], "tests.routes.native.v1.settings_test": ["tests.routes.native.v1.settings_test.SettingsTest", "tests.conftest"], "tests.routes.native.v1.settings_test.SettingsTest": ["pcapi.core.testing.override_features"], "tests.routes.native.v1": [], "tests.routes.native.v1.openapi_test": [], "tests.routes.native.v1.bookings_test": ["tests.routes.native.v1.bookings_test.ToggleBookingVisibilityTest", "tests.conftest", "tests.routes.native.v1.bookings_test.GetBookingsTest", "tests.routes.native.v1.bookings_test.CancelBookingTest", "tests.routes.native.v1.bookings_test.PostBookingTest"], "tests.routes.native.v1.bookings_test.PostBookingTest": [], "tests.routes.native.v1.bookings_test.GetBookingsTest": ["freezegun.freeze_time", "pcapi.core.testing.override_features"], "tests.routes.native.v1.bookings_test.CancelBookingTest": [], "tests.routes.native.v1.bookings_test.ToggleBookingVisibilityTest": ["pcapi.core.testing.override_features"], "tests.routes.native.v1.offers_test": ["tests.conftest", "tests.routes.native.v1.offers_test.ReportOfferTest", "tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest", "tests.routes.native.v1.offers_test.OfferReportReasonsTest", "tests.routes.native.v1.offers_test.OffersTest", "tests.routes.native.v1.offers_test.SendOfferLinkNotificationTest", "tests.routes.native.v1.offers_test.ReportedOffersTest", "tests.routes.native.v1.offers_test.SubcategoriesTest", "tests.routes.native.v1.utils"], "tests.routes.native.v1.utils": ["tests.conftest"], "tests.routes.native.v1.offers_test.OffersTest": ["freezegun.freeze_time"], "tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest": ["pcapi.core.testing.override_features"], "tests.routes.native.v1.offers_test.SendOfferLinkNotificationTest": [], "tests.routes.native.v1.offers_test.ReportOfferTest": [], "tests.routes.native.v1.offers_test.OfferReportReasonsTest": [], "tests.routes.native.v1.offers_test.ReportedOffersTest": [], "tests.routes.native.v1.offers_test.SubcategoriesTest": [], "tests.routes.native.v1.favorites_test": ["tests.conftest", "tests.routes.native.v1.favorites_test.PostTest", "tests.routes.native.v1.favorites_test.GetCountTest", "tests.routes.native.v1.favorites_test.GetTest", "tests.routes.native.v1.favorites_test.DeleteTest", "tests.routes.native.v1.utils"], "tests.routes.native.v1.favorites_test.GetTest": ["tests.routes.native.v1.favorites_test.GetTest.Returns200Test", "tests.routes.native.v1.favorites_test.GetTest.Returns401Test"], "tests.routes.native.v1.favorites_test.GetTest.Returns200Test": [], "tests.routes.native.v1.favorites_test.GetTest.Returns401Test": [], "tests.routes.native.v1.favorites_test.PostTest": ["tests.routes.native.v1.favorites_test.PostTest.Returns400Test", "tests.routes.native.v1.favorites_test.PostTest.Returns200Test"], "tests.routes.native.v1.favorites_test.PostTest.Returns200Test": [], "tests.routes.native.v1.favorites_test.PostTest.Returns400Test": ["pcapi.core.testing.override_settings"], "tests.routes.native.v1.favorites_test.DeleteTest": ["tests.routes.native.v1.favorites_test.DeleteTest.Returns204Test"], "tests.routes.native.v1.favorites_test.DeleteTest.Returns204Test": [], "tests.routes.native.v1.favorites_test.GetCountTest": ["tests.routes.native.v1.favorites_test.GetCountTest.Returns200Test"], "tests.routes.native.v1.favorites_test.GetCountTest.Returns200Test": [], "tests.routes.native.v1.authentication_test": ["tests.scripts.beneficiary.fixture", "freezegun.freeze_time", "unittest.mock.patch", "pcapi.core.testing.override_features"], "tests.routes.native.v1.account_test": ["tests.routes.native.v1.account_test.GetTokenExpirationTest", "tests.routes.native.v1.account_test.SuspendAccountTest", "tests.routes.native.v1.account_test.ProfilingFraudScoreTest", "tests.routes.native.v1.account_test.ShowEligibleCardTest", "tests.routes.native.v1.account_test.ProfilingSessionIdTest", "tests.routes.native.v1.account_test.ValidateEmailTest", "tests.routes.native.v1.account_test.UpdateUserEmailTest", "tests.routes.native.v1.account_test.AccountCreationTest", "tests.routes.native.v1.account_test.AccountTest", "tests.routes.native.v1.account_test.IdentificationSessionTest", "tests.connectors.user_profiling_fixtures", "tests.routes.native.v1.account_test.CulturalSurveyTest", "tests.routes.native.v1.account_test.UserProfileUpdateTest", "tests.routes.native.v1.account_test.ValidatePhoneNumberTest", "tests.routes.native.v1.account_test.SendPhoneValidationCodeTest", "tests.routes.native.v1.account_test.ResendEmailValidationTest", "tests.routes.native.v1.utils"], "tests.routes.native.v1.account_test.AccountTest": ["pcapi.core.testing.override_features", "freezegun.api.freeze_time"], "tests.routes.native.v1.account_test.AccountCreationTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.routes.native.v1.account_test.UserProfileUpdateTest": ["pcapi.core.testing.override_settings"], "tests.routes.native.v1.account_test.UpdateUserEmailTest": ["pcapi.core.testing.override_settings"], "tests.routes.native.v1.account_test.ValidateEmailTest": [], "tests.routes.native.v1.account_test.GetTokenExpirationTest": [], "tests.routes.native.v1.account_test.CulturalSurveyTest": ["freezegun.api.freeze_time"], "tests.routes.native.v1.account_test.ResendEmailValidationTest": [], "tests.routes.native.v1.account_test.ShowEligibleCardTest": [], "tests.routes.native.v1.account_test.SendPhoneValidationCodeTest": ["pcapi.core.testing.override_settings"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest": ["pcapi.core.testing.override_settings"], "tests.routes.native.v1.account_test.SuspendAccountTest": [], "tests.routes.native.v1.account_test.ProfilingFraudScoreTest": ["pcapi.core.testing.override_settings"], "tests.routes.native.v1.account_test.ProfilingSessionIdTest": [], "tests.routes.native.v1.account_test.IdentificationSessionTest": [], "tests.routes.native.v1.universal_links_test": ["tests.conftest", "tests.routes.native.v1.universal_links_test.UniversalLinksTest"], "tests.routes.native.v1.universal_links_test.UniversalLinksTest": [], "tests.routes.error_handlers.generic_error_handlers_test": ["tests.routes.error_handlers.generic_error_handlers_test.FormatQueryParamsTest"], "tests.routes.error_handlers.generic_error_handlers_test.FormatQueryParamsTest": [], "tests.routes.error_handlers": [], "tests.routes.serialization.bookings_recap_serialize_test": ["tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapHistoryTest", "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapTest", "tests.domain_creators.generic_creators"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapTest": [], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapHistoryTest": [], "tests.routes.serialization.offers_recap_serialize_test": [], "tests.routes.serialization": [], "tests.routes.serialization.venue_labels_serialize_test": ["tests.routes.serialization.venue_labels_serialize_test.SerializeVenueLabelsTest"], "tests.routes.serialization.venue_labels_serialize_test.SerializeVenueLabelsTest": [], "tests.routes.serialization.dictifier_test": ["tests.routes.serialization.dictifier_test.AsDictTest"], "tests.routes.serialization.dictifier_test.AsDictTest": [], "tests.routes.serialization.base_model_test": ["tests.routes.serialization.base_model_test.DecimalModel", "tests.routes.serialization.base_model_test.FloatModel", "tests.routes.serialization.base_model_test.BaseModelTest"], "tests.routes.serialization.base_model_test.FloatModel": [], "tests.routes.serialization.base_model_test.DecimalModel": [], "tests.routes.serialization.base_model_test.BaseModelTest": [], "tests.routes.serialization.reimbursement_csv_test": ["tests.routes.serialization.reimbursement_csv_test.ReimbursementDetailsTest", "datetime.timedelta"], "tests.routes.serialization.reimbursement_csv_test.ReimbursementDetailsTest": [], "tests.routes.internal": [], "tests.routes.internal.get_health_test": ["tests.conftest", "tests.routes.internal.get_health_test.Returns500Test", "tests.routes.internal.get_health_test.Returns200Test"], "tests.routes.internal.get_health_test.Returns200Test": ["unittest.mock.patch"], "tests.routes.internal.get_health_test.Returns500Test": ["unittest.mock.patch"], "tests.routes.shared.post_change_password_test": ["tests.routes.shared.post_change_password_test.Returns200Test", "tests.routes.shared.post_change_password_test.Returns400Test"], "tests.routes.shared.post_change_password_test.Returns200Test": [], "tests.routes.shared.post_change_password_test.Returns400Test": [], "tests.routes.shared.get_features_test": ["tests.routes.shared.get_features_test.Returns200Test"], "tests.routes.shared.get_features_test.Returns200Test": [], "tests.routes.shared.signin_test": ["tests.conftest", "tests.routes.shared.signin_test.Returns401Test", "tests.routes.shared.signin_test.Returns200Test"], "tests.routes.shared.signin_test.Returns200Test": [], "tests.routes.shared.signin_test.Returns401Test": [], "tests.routes.shared.post_reset_password_test": ["tests.routes.shared.post_reset_password_test.Returns400Test", "tests.routes.shared.post_reset_password_test.Returns204Test"], "tests.routes.shared.post_reset_password_test.Returns400Test": ["unittest.mock.patch", "pcapi.connectors.api_recaptcha.InvalidRecaptchaTokenException"], "pcapi.connectors.api_recaptcha.InvalidRecaptchaTokenException": [], "tests.routes.shared.post_reset_password_test.Returns204Test": ["unittest.mock.patch"], "tests.routes.shared.get_user_token_test": ["tests.routes.shared.get_user_token_test.Returns404Test", "tests.routes.shared.get_user_token_test.Returns200Test"], "tests.routes.shared.get_user_token_test.Returns200Test": [], "tests.routes.shared.get_user_token_test.Returns404Test": [], "tests.routes.shared": [], "tests.routes.shared.get_user_profile_test": ["tests.conftest", "tests.routes.shared.get_user_profile_test.Returns401Test", "tests.routes.shared.get_user_profile_test.Returns200Test"], "tests.routes.shared.get_user_profile_test.Returns200Test": [], "tests.routes.shared.get_user_profile_test.Returns401Test": [], "tests.routes.shared.post_new_password_test": [], "tests.routes.shared.signout_test": ["tests.conftest", "tests.routes.shared.signout_test.Returns200Test"], "tests.routes.shared.signout_test.Returns200Test": [], "tests.routes.adage_iframe.post_educational_booking_test": ["tests.conftest", "tests.routes.adage_iframe.utils_create_test_token", "tests.routes.adage_iframe.post_educational_booking_test.Returns200Test", "tests.routes.adage_iframe.post_educational_booking_test.Returns400Test", "datetime.datetime", "tests.routes.adage_iframe.post_educational_booking_test.Returns403Test"], "tests.routes.adage_iframe.utils_create_test_token": ["datetime.timedelta", "tests.routes.adage_iframe"], "tests.routes.adage_iframe.post_educational_booking_test.Returns200Test": [], "tests.routes.adage_iframe.post_educational_booking_test.Returns400Test": [], "tests.routes.adage_iframe.post_educational_booking_test.Returns403Test": [], "tests.routes.adage_iframe.get_venue_by_id_test": ["tests.conftest", "tests.routes.adage_iframe.get_venue_by_id_test.Returns200Test", "tests.routes.adage_iframe.get_venue_by_id_test.ReturnsErrorTest", "tests.routes.adage_iframe.utils_create_test_token"], "tests.routes.adage_iframe.get_venue_by_id_test.Returns200Test": [], "tests.routes.adage_iframe.get_venue_by_id_test.ReturnsErrorTest": [], "tests.routes.adage_iframe.get_venue_by_siret_test": ["tests.routes.adage_iframe.get_venue_by_siret_test.ReturnsErrorTest", "tests.conftest", "tests.routes.adage_iframe.get_venue_by_siret_test.Returns200Test", "tests.routes.adage_iframe.utils_create_test_token"], "tests.routes.adage_iframe.get_venue_by_siret_test.Returns200Test": [], "tests.routes.adage_iframe.get_venue_by_siret_test.ReturnsErrorTest": [], "tests.routes.adage_iframe.get_authenticate_test": ["tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest", "tests.routes.adage_iframe.get_authenticate_test.Returns200Test", "tests.conftest", "tests.routes.adage_iframe.utils_create_test_token"], "tests.routes.adage_iframe.get_authenticate_test.Returns200Test": [], "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest": [], "tests.routes.adage_iframe.get_offer_test": ["tests.routes.adage_iframe.get_offer_test.Returns200Test", "datetime.datetime", "tests.routes.adage_iframe.utils_create_test_token", "tests.routes.adage_iframe.get_offer_test.Returns404Test"], "tests.routes.adage_iframe.get_offer_test.Returns200Test": [], "tests.routes.adage_iframe.get_offer_test.Returns404Test": [], "tests.routes.adage_iframe.get_categories_test": ["tests.routes.adage_iframe.utils_create_test_token", "tests.routes.adage_iframe.get_categories_test.Returns200Test"], "tests.routes.adage_iframe.get_categories_test.Returns200Test": [], "tests.routes.external.post_update_offerer_demarches_simplifiees_application_test": ["tests.routes.external.post_update_offerer_demarches_simplifiees_application_test.Returns400Test", "tests.routes.external.post_update_offerer_demarches_simplifiees_application_test.Returns202Test", "tests.routes.external.post_update_offerer_demarches_simplifiees_application_test.Returns403Test"], "tests.routes.external.post_update_offerer_demarches_simplifiees_application_test.Returns202Test": ["unittest.mock.patch"], "tests.routes.external.post_update_offerer_demarches_simplifiees_application_test.Returns400Test": ["unittest.mock.patch"], "tests.routes.external.post_update_offerer_demarches_simplifiees_application_test.Returns403Test": ["unittest.mock.patch"], "tests.routes.external.unsubscribe_user_test": ["tests.routes.external.unsubscribe_user_test.UnsubscribeUserTest", "tests.conftest"], "tests.routes.external.unsubscribe_user_test.UnsubscribeUserTest": [], "tests.routes.external": [], "tests.routes.external.user_subscription_test": ["tests.scripts.beneficiary.fixture", "tests.routes.external.user_subscription_test.UbbleWebhookTest", "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest", "tests.core.subscription.test_factories", "tests.test_utils"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest": [], "tests.routes.external.user_subscription_test.UbbleWebhookTest": [], "tests.routes.external.post_update_venue_demarches_simplifiees_application_test": ["tests.routes.external.post_update_venue_demarches_simplifiees_application_test.Returns202Test", "tests.routes.external.post_update_venue_demarches_simplifiees_application_test.Returns403Test", "tests.routes.external.post_update_venue_demarches_simplifiees_application_test.Returns400Test"], "tests.routes.external.post_update_venue_demarches_simplifiees_application_test.Returns202Test": ["unittest.mock.patch"], "tests.routes.external.post_update_venue_demarches_simplifiees_application_test.Returns400Test": ["unittest.mock.patch"], "tests.routes.external.post_update_venue_demarches_simplifiees_application_test.Returns403Test": ["unittest.mock.patch"], "tests.routes.saml.educonnect_test": ["tests.routes.saml.educonnect_test.PerformanceTest", "tests.routes.saml.educonnect_test.EduconnectTest"], "tests.routes.saml.educonnect_test.EduconnectTest": ["unittest.mock.patch", "pcapi.core.testing.override_settings"], "tests.routes.saml.educonnect_test.PerformanceTest": ["pcapi.core.testing.override_settings"], "tests.routes.saml": [], "tests.notifications": [], "tests.notifications.push.backends_test": [], "tests.notifications.push": [], "tests.notifications.push.backends": [], "tests.notifications.push.backends.batch_test": ["tests.notifications.push.backends.batch_test.BatchPushNotificationClientTest"], "tests.notifications.push.backends.batch_test.BatchPushNotificationClientTest": [], "tests.validation": [], "tests.validation.models.user_test": ["tests.validation.models.user_test.AdminTest", "tests.validation.models.user_test.PasswordTest", "tests.validation.models.user_test.UserAlreadyExistsTest", "tests.validation.models.user_test.EmailTest", "tests.validation.models.user_test.PublicNameTest"], "tests.validation.models.user_test.UserAlreadyExistsTest": ["unittest.mock.patch"], "tests.validation.models.user_test.PublicNameTest": ["unittest.mock.patch"], "tests.validation.models.user_test.EmailTest": ["unittest.mock.patch"], "tests.validation.models.user_test.AdminTest": [], "tests.validation.models.user_test.PasswordTest": ["unittest.mock.patch"], "tests.validation.models.stock_test": [], "tests.validation.models.venue_test": [], "tests.validation.models": [], "tests.validation.models.bank_information_test": ["tests.validation.models.bank_information_test.BankInformationValidationTest"], "tests.validation.models.bank_information_test.BankInformationValidationTest": [], "tests.validation.models.generic_test": [], "tests.validation.models.entity_validator_test": ["unittest.mock.patch"], "tests.validation.models.offer_test": [], "tests.validation.models.product_test": [], "tests.validation.models.has_address_mixin_test": [], "tests.validation.models.offerer_test": [], "tests.validation.routes.users_authorizations_test": ["tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingV2Test", "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingTest", "tests.validation.routes.users_authorizations_test.CheckApiKeyAllowsToValidateBookingTest"], "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingTest": [], "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingV2Test": [], "tests.validation.routes.users_authorizations_test.CheckApiKeyAllowsToValidateBookingTest": [], "tests.validation.routes": [], "tests.validation.routes.offers_test": ["tests.validation.routes.offers_test.CheckOfferNameIsValidTest", "tests.validation.routes.offers_test.CheckOfferIsbnIsValidTest"], "tests.validation.routes.offers_test.CheckOfferNameIsValidTest": [], "tests.validation.routes.offers_test.CheckOfferIsbnIsValidTest": [], "tests.validation.routes.users_authentifications_test": ["tests.validation.routes.users_authentifications_test.CheckUserIsLoggedInOrEmailIsProvidedTest"], "tests.validation.routes.users_authentifications_test.CheckUserIsLoggedInOrEmailIsProvidedTest": [], "tests.connector_creators": [], "src.pcapi.install_database_extensions": [], "src.pcapi": [], "src.pcapi.settings": ["dotenv.load_dotenv", "<builtin>.int", "<builtin>.RuntimeError", "<builtin>.float", "<builtin>.set", "<builtin>.bool", "pathlib.Path"], "<builtin>.bool": [], "dotenv.load_dotenv": [], "<builtin>.int": [], "<builtin>.RuntimeError": [], "<builtin>.set": [], "src.pcapi.app": ["sentry_sdk.set_tag", "<builtin>.print", "werkzeug.middleware.profiler.ProfilerMiddleware"], "werkzeug.middleware.profiler.ProfilerMiddleware": [], "<builtin>.print": [], "sentry_sdk.set_tag": [], "src.pcapi.flask_app": ["flask_jwt_extended.JWTManager", "werkzeug.middleware.profiler.ProfilerMiddleware", "pcapi.scripts.install.install_commands", "<builtin>.Exception", "pcapi.core.logging.install_logging", "authlib.integrations.flask_client.OAuth", "pcapi.utils.sentry.init_sentry_sdk", "werkzeug.middleware.proxy_fix.ProxyFix", "flask.Flask", "pcapi.models.install_models", "flask_login.LoginManager"], "pcapi.core.logging.install_logging": [], "pcapi.utils.sentry.init_sentry_sdk": [], "flask.Flask": [], "flask_login.LoginManager": [], "werkzeug.middleware.proxy_fix.ProxyFix": [], "authlib.integrations.flask_client.OAuth": [], "flask_jwt_extended.JWTManager": [], "pcapi.models.install_models": [], "pcapi.scripts.install.install_commands": [], "src.pcapi.connectors.api_entreprises": ["src.pcapi.connectors.api_entreprises.ApiEntrepriseException"], "src.pcapi.connectors.api_entreprises.ApiEntrepriseException": [], "src.pcapi.connectors.thumb_storage": [], "src.pcapi.connectors": [], "src.pcapi.connectors.api_adage": ["src.pcapi.connectors.api_adage.CulturalPartnerNotFoundException", "src.pcapi.connectors.api_adage.AdageException"], "src.pcapi.connectors.api_adage.AdageException": [], "src.pcapi.connectors.api_adage.CulturalPartnerNotFoundException": [], "src.pcapi.connectors.ftp_titelive": [], "src.pcapi.connectors.api_recaptcha": ["src.pcapi.connectors.api_recaptcha.ReCaptchaException", "src.pcapi.connectors.api_recaptcha.ReCaptchaVersion", "src.pcapi.connectors.api_recaptcha.InvalidRecaptchaTokenException"], "src.pcapi.connectors.api_recaptcha.ReCaptchaVersion": [], "src.pcapi.connectors.api_recaptcha.ReCaptchaException": [], "src.pcapi.connectors.api_recaptcha.InvalidRecaptchaTokenException": [], "src.pcapi.connectors.user_profiling": ["src.pcapi.connectors.user_profiling.UserProfilingDataResponseError", "src.pcapi.connectors.user_profiling.LineOfBusiness", "src.pcapi.connectors.user_profiling.UserProfilingRequestError", "src.pcapi.connectors.user_profiling.WorkflowType", "src.pcapi.connectors.user_profiling.UserProfilingClient", "src.pcapi.connectors.user_profiling.BaseUserProfilingException", "src.pcapi.connectors.user_profiling.UserProfilingHTTPError", "src.pcapi.connectors.user_profiling.AgentType"], "src.pcapi.connectors.user_profiling.BaseUserProfilingException": [], "src.pcapi.connectors.user_profiling.UserProfilingRequestError": [], "src.pcapi.connectors.user_profiling.UserProfilingHTTPError": [], "src.pcapi.connectors.user_profiling.UserProfilingDataResponseError": [], "src.pcapi.connectors.user_profiling.WorkflowType": [], "src.pcapi.connectors.user_profiling.LineOfBusiness": [], "src.pcapi.connectors.user_profiling.AgentType": [], "src.pcapi.connectors.user_profiling.UserProfilingClient": [], "src.pcapi.connectors.notion": [], "src.pcapi.connectors.api_allocine": ["src.pcapi.connectors.api_allocine.AllocineException"], "src.pcapi.connectors.api_allocine.AllocineException": [], "src.pcapi.connectors.serialization.api_adage_serializers": ["src.pcapi.connectors.serialization.api_adage_serializers.EducationalInstitutionModel", "src.pcapi.connectors.serialization.api_adage_serializers.AdageVenue"], "src.pcapi.connectors.serialization.api_adage_serializers.EducationalInstitutionModel": ["src.pcapi.connectors.serialization.api_adage_serializers.EducationalInstitutionModel.Config", "pydantic.Field"], "pydantic.Field": [], "src.pcapi.connectors.serialization.api_adage_serializers.EducationalInstitutionModel.Config": [], "src.pcapi.connectors.serialization.api_adage_serializers.AdageVenue": [], "src.pcapi.connectors.beneficiaries.ubble": [], "src.pcapi.connectors.beneficiaries": [], "src.pcapi.connectors.beneficiaries.exceptions": ["src.pcapi.connectors.beneficiaries.exceptions.IdentificationServiceUnavailable", "src.pcapi.connectors.beneficiaries.exceptions.IdentificationServiceError"], "src.pcapi.connectors.beneficiaries.exceptions.IdentificationServiceUnavailable": [], "src.pcapi.connectors.beneficiaries.exceptions.IdentificationServiceError": [], "src.pcapi.connectors.beneficiaries.educonnect.models": ["src.pcapi.connectors.beneficiaries.educonnect.models.EduconnectUser"], "src.pcapi.connectors.beneficiaries.educonnect.models.EduconnectUser": [], "src.pcapi.connectors.beneficiaries.educonnect": [], "src.pcapi.connectors.beneficiaries.educonnect.exceptions": ["src.pcapi.connectors.beneficiaries.educonnect.exceptions.ParsingError", "src.pcapi.connectors.beneficiaries.educonnect.exceptions.ResponseTooOld", "src.pcapi.connectors.beneficiaries.educonnect.exceptions.UserTypeNotStudent", "src.pcapi.connectors.beneficiaries.educonnect.exceptions.EduconnectAuthenticationException"], "src.pcapi.connectors.beneficiaries.educonnect.exceptions.EduconnectAuthenticationException": [], "src.pcapi.connectors.beneficiaries.educonnect.exceptions.ResponseTooOld": [], "src.pcapi.connectors.beneficiaries.educonnect.exceptions.ParsingError": [], "src.pcapi.connectors.beneficiaries.educonnect.exceptions.UserTypeNotStudent": [], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector": ["<builtin>.open"], "<builtin>.open": [], "src.pcapi.connectors.utils": [], "src.pcapi.connectors.utils.legal_category_code_to_labels": [], "src.pcapi.connectors.dms": [], "src.pcapi.connectors.dms.api": ["src.pcapi.connectors.dms.api.DmsApplicationStates", "src.pcapi.connectors.dms.api.GraphQLApplicationStates", "src.pcapi.connectors.dms.api.ApiDemarchesSimplifieesException", "src.pcapi.connectors.dms.api.DMSGraphQLClient"], "src.pcapi.connectors.dms.api.ApiDemarchesSimplifieesException": [], "src.pcapi.connectors.dms.api.DmsApplicationStates": [], "src.pcapi.connectors.dms.api.GraphQLApplicationStates": [], "src.pcapi.connectors.dms.api.DMSGraphQLClient": [], "src.pcapi.repository.user_queries": [], "src.pcapi.repository.clean_database": [], "src.pcapi.repository.local_provider_event_queries": [], "src.pcapi.repository.feature_queries": [], "src.pcapi.repository.reimbursement_queries": [], "src.pcapi.repository": ["contextlib.contextmanager"], "contextlib.contextmanager": [], "src.pcapi.repository.product_queries": ["src.pcapi.repository.product_queries.ProductWithBookingsException"], "src.pcapi.repository.product_queries.ProductWithBookingsException": [], "src.pcapi.repository.venue_provider_queries": [], "src.pcapi.repository.user_offerer_queries": [], "src.pcapi.repository.user_session_queries": [], "src.pcapi.repository.repository": [], "src.pcapi.repository.allocine_pivot_queries": [], "src.pcapi.repository.mediation_queries": [], "src.pcapi.repository.payment_queries": [], "src.pcapi.repository.providable_queries": [], "src.pcapi.repository.offer_queries": [], "src.pcapi.sandboxes": [], "src.pcapi.sandboxes.scripts.sandbox_beneficiary_import": [], "src.pcapi.sandboxes.scripts.save_sandbox": [], "src.pcapi.sandboxes.scripts.sandbox_industrial": [], "src.pcapi.sandboxes.scripts": [], "src.pcapi.sandboxes.scripts.sandbox_payment": ["datetime.timedelta"], "src.pcapi.sandboxes.scripts.testcafe_helpers": [], "src.pcapi.sandboxes.scripts.sandbox_beneficiaries": [], "src.pcapi.sandboxes.scripts.sandbox_testcafe": [], "src.pcapi.sandboxes.scripts.sandbox_allocine": [], "src.pcapi.sandboxes.scripts.sandbox_bookings_recap": [], "src.pcapi.sandboxes.scripts.sandbox_api_key": [], "src.pcapi.sandboxes.scripts.sandbox_activation": [], "src.pcapi.sandboxes.scripts.mocks.user_mocks": [], "src.pcapi.sandboxes.scripts.mocks.educational_siren_mocks": [], "src.pcapi.sandboxes.scripts.mocks.offerer_mocks": [], "src.pcapi.sandboxes.scripts.mocks": [], "src.pcapi.sandboxes.scripts.mocks.event_mocks": [], "src.pcapi.sandboxes.scripts.mocks.thing_mocks": [], "src.pcapi.sandboxes.scripts.mocks.venue_mocks": [], "src.pcapi.sandboxes.scripts.utils": [], "src.pcapi.sandboxes.scripts.utils.select": [], "src.pcapi.sandboxes.scripts.utils.helpers": [], "src.pcapi.sandboxes.scripts.utils.storage_utils": [], "src.pcapi.sandboxes.scripts.getters.pro_01_signup": [], "src.pcapi.sandboxes.scripts.getters.pro_04_offerer": [], "src.pcapi.sandboxes.scripts.getters.pro_11_lost_password": [], "src.pcapi.sandboxes.scripts.getters.pro_06_offers": [], "src.pcapi.sandboxes.scripts.getters": [], "src.pcapi.sandboxes.scripts.getters.pro_05_venue": [], "src.pcapi.sandboxes.scripts.getters.pro_08_stocks": [], "src.pcapi.sandboxes.scripts.getters.pro_14_home_profile": [], "src.pcapi.sandboxes.scripts.getters.pro_07_offer": [], "src.pcapi.sandboxes.scripts.getters.pro_02_signin": [], "src.pcapi.sandboxes.scripts.getters.pro_03_offerers": [], "src.pcapi.sandboxes.scripts.getters.pro_10_desk": [], "src.pcapi.sandboxes.scripts.creators": [], "src.pcapi.sandboxes.scripts.creators.bookings_recap.bookings_recap": [], "src.pcapi.sandboxes.scripts.creators.bookings_recap": [], "src.pcapi.sandboxes.scripts.creators.testcafe": [], "src.pcapi.sandboxes.scripts.creators.beneficiaries": [], "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries": [], "src.pcapi.sandboxes.scripts.creators.allocine": ["src.pcapi.sandboxes.scripts.creators.allocine.Sirene"], "src.pcapi.sandboxes.scripts.creators.allocine.Sirene": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_search_objects": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_offers_with_activation_codes": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_educational_bookings": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_invoices": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_offer_validation_config": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_products": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_venues": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_user_offerers": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_criterion": [], "src.pcapi.sandboxes.scripts.creators.industrial": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_occurrences": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_pro_users": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_thing_stocks": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users": [], "src.pcapi.sandboxes.scripts.creators.industrial.utils": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_bookings": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_stocks": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_admin_users": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_payments": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_activation_offers": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_pro_users_api_keys": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_thing_products": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_mediations": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_offers": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_offerers_with_pro_users": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_thing_offers": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_venue_types": [], "src.pcapi.sandboxes.scripts.creators.beneficiary_import": [], "src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import": [], "src.pcapi.sandboxes.scripts.creators.helpers.sql_creators": [], "src.pcapi.tasks.decorator": ["flask.blueprints.Blueprint"], "src.pcapi.tasks": [], "src.pcapi.tasks.cloud_task": ["src.pcapi.tasks.cloud_task.CloudTaskHttpRequest"], "src.pcapi.tasks.cloud_task.CloudTaskHttpRequest": [], "src.pcapi.tasks.sendinblue_tasks": ["pcapi.tasks.decorator.task"], "src.pcapi.tasks.batch_tasks": ["src.pcapi.tasks.batch_tasks.DeleteBatchUserAttributesRequest", "src.pcapi.tasks.batch_tasks.UpdateBatchAttributesRequest", "pcapi.tasks.decorator.task"], "src.pcapi.tasks.batch_tasks.UpdateBatchAttributesRequest": [], "src.pcapi.tasks.batch_tasks.DeleteBatchUserAttributesRequest": [], "src.pcapi.tasks.serialization.sendinblue_tasks": ["src.pcapi.tasks.serialization.sendinblue_tasks.UpdateProAttributesRequest", "src.pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "src.pcapi.tasks.serialization.sendinblue_tasks.UpdateSendinblueContactRequest"], "src.pcapi.tasks.serialization.sendinblue_tasks.UpdateSendinblueContactRequest": [], "src.pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest": [], "src.pcapi.tasks.serialization.sendinblue_tasks.UpdateProAttributesRequest": [], "src.pcapi.core.logging": ["src.pcapi.core.logging.JsonLogEncoder", "src.pcapi.core.logging.JsonFormatter"], "src.pcapi.core.logging.JsonLogEncoder": [], "src.pcapi.core.logging.JsonFormatter": [], "src.pcapi.core": [], "src.pcapi.core.testing": ["src.pcapi.core.testing.override_settings", "src.pcapi.core.testing.TestContextDecorator", "src.pcapi.core.testing.BaseFactory", "src.pcapi.core.testing.override_features"], "src.pcapi.core.testing.BaseFactory": ["src.pcapi.core.testing.BaseFactory.Meta", "<builtin>.classmethod"], "src.pcapi.core.testing.BaseFactory.Meta": [], "<builtin>.classmethod": [], "src.pcapi.core.testing.TestContextDecorator": [], "src.pcapi.core.testing.override_settings": [], "src.pcapi.core.testing.override_features": [], "src.pcapi.core.monkeypatches": [], "src.pcapi.core.offers.serialize": [], "src.pcapi.core.offers.models": ["src.pcapi.core.offers.models.Stock", "src.pcapi.core.offers.models.Offer", "src.pcapi.core.offers.models.OfferValidationConfig", "src.pcapi.core.offers.models.ReasonMeta", "src.pcapi.core.offers.models.Mediation", "src.pcapi.core.offers.models.ActivationCode", "src.pcapi.core.offers.models.OfferImage", "src.pcapi.core.offers.models.Reason", "src.pcapi.core.offers.models.OfferReport"], "src.pcapi.core.offers.models.Mediation": [], "src.pcapi.core.offers.models.Stock": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.classmethod"], "<builtin>.staticmethod": [], "src.pcapi.core.offers.models.OfferImage": [], "src.pcapi.core.offers.models.Offer": ["<builtin>.property"], "src.pcapi.core.offers.models.ActivationCode": [], "src.pcapi.core.offers.models.OfferValidationConfig": [], "src.pcapi.core.offers.models.ReasonMeta": [], "src.pcapi.core.offers.models.Reason": ["<builtin>.staticmethod"], "src.pcapi.core.offers.models.OfferReport": [], "src.pcapi.core.offers.offer_validation": ["src.pcapi.core.offers.offer_validation.OfferValidationRuleItem", "src.pcapi.core.offers.offer_validation.OfferValidationItem"], "src.pcapi.core.offers.offer_validation.OfferValidationItem": [], "src.pcapi.core.offers.offer_validation.OfferValidationRuleItem": [], "src.pcapi.core.offers": [], "src.pcapi.core.offers.factories": ["src.pcapi.core.offers.factories.OffererFactory", "src.pcapi.core.offers.factories.OffererTagMappingFactory", "src.pcapi.core.offers.factories.DigitalProductFactory", "src.pcapi.core.offers.factories.ThingOfferFactory", "src.pcapi.core.offers.factories.StockFactory", "src.pcapi.core.offers.factories.UserOffererFactory", "src.pcapi.core.offers.factories.OfferFactory", "src.pcapi.core.offers.factories.OfferReportFactory", "src.pcapi.core.offers.factories.ThingStockFactory", "src.pcapi.core.offers.factories.EducationalThingStockFactory", "src.pcapi.core.offers.factories.ProductFactory", "src.pcapi.core.offers.factories.EventOfferFactory", "src.pcapi.core.offers.factories.VenueFactory", "src.pcapi.core.offers.factories.EducationalEventStockFactory", "src.pcapi.core.offers.factories.StockWithActivationCodesFactory", "src.pcapi.core.offers.factories.MediationFactory", "src.pcapi.core.offers.factories.CriterionFactory", "src.pcapi.core.offers.factories.OfferValidationConfigFactory", "src.pcapi.core.offers.factories.EventStockFactory", "src.pcapi.core.offers.factories.EducationalEventShadowStockFactory", "src.pcapi.core.offers.factories.ThingProductFactory", "src.pcapi.core.offers.factories.EducationalThingOfferFactory", "src.pcapi.core.offers.factories.OfferCriterionFactory", "src.pcapi.core.offers.factories.VirtualVenueFactory", "src.pcapi.core.offers.factories.BankInformationFactory", "src.pcapi.core.offers.factories.EducationalEventShadowOfferFactory", "src.pcapi.core.offers.factories.ActivationCodeFactory", "src.pcapi.core.offers.factories.OffererTagFactory", "src.pcapi.core.offers.factories.EducationalEventOfferFactory", "src.pcapi.core.offers.factories.DigitalOfferFactory", "src.pcapi.core.offers.factories.EventProductFactory"], "src.pcapi.core.offers.factories.OffererFactory": ["src.pcapi.core.offers.factories.OffererFactory.Meta"], "src.pcapi.core.offers.factories.OffererFactory.Meta": [], "src.pcapi.core.offers.factories.UserOffererFactory": ["src.pcapi.core.offers.factories.UserOffererFactory.Meta"], "src.pcapi.core.offers.factories.UserOffererFactory.Meta": [], "src.pcapi.core.offers.factories.VenueFactory": ["src.pcapi.core.offers.factories.VenueFactory.Meta"], "src.pcapi.core.offers.factories.VenueFactory.Meta": [], "src.pcapi.core.offers.factories.VirtualVenueFactory": [], "src.pcapi.core.offers.factories.ProductFactory": ["src.pcapi.core.offers.factories.ProductFactory.Meta", "<builtin>.classmethod"], "src.pcapi.core.offers.factories.ProductFactory.Meta": [], "src.pcapi.core.offers.factories.EventProductFactory": [], "src.pcapi.core.offers.factories.ThingProductFactory": [], "src.pcapi.core.offers.factories.DigitalProductFactory": [], "src.pcapi.core.offers.factories.OfferFactory": ["src.pcapi.core.offers.factories.OfferFactory.Meta", "<builtin>.classmethod"], "src.pcapi.core.offers.factories.OfferFactory.Meta": [], "src.pcapi.core.offers.factories.EventOfferFactory": [], "src.pcapi.core.offers.factories.EducationalEventOfferFactory": [], "src.pcapi.core.offers.factories.EducationalEventShadowOfferFactory": [], "src.pcapi.core.offers.factories.EducationalThingOfferFactory": [], "src.pcapi.core.offers.factories.ThingOfferFactory": [], "src.pcapi.core.offers.factories.DigitalOfferFactory": [], "src.pcapi.core.offers.factories.StockFactory": ["src.pcapi.core.offers.factories.StockFactory.Meta"], "src.pcapi.core.offers.factories.StockFactory.Meta": [], "src.pcapi.core.offers.factories.ThingStockFactory": [], "src.pcapi.core.offers.factories.EventStockFactory": [], "src.pcapi.core.offers.factories.EducationalThingStockFactory": [], "src.pcapi.core.offers.factories.EducationalEventStockFactory": [], "src.pcapi.core.offers.factories.EducationalEventShadowStockFactory": [], "src.pcapi.core.offers.factories.StockWithActivationCodesFactory": [], "src.pcapi.core.offers.factories.ActivationCodeFactory": ["src.pcapi.core.offers.factories.ActivationCodeFactory.Meta"], "src.pcapi.core.offers.factories.ActivationCodeFactory.Meta": [], "src.pcapi.core.offers.factories.MediationFactory": ["src.pcapi.core.offers.factories.MediationFactory.Meta"], "src.pcapi.core.offers.factories.MediationFactory.Meta": [], "src.pcapi.core.offers.factories.CriterionFactory": ["src.pcapi.core.offers.factories.CriterionFactory.Meta"], "src.pcapi.core.offers.factories.CriterionFactory.Meta": [], "src.pcapi.core.offers.factories.OfferCriterionFactory": ["src.pcapi.core.offers.factories.OfferCriterionFactory.Meta"], "src.pcapi.core.offers.factories.OfferCriterionFactory.Meta": [], "src.pcapi.core.offers.factories.BankInformationFactory": ["src.pcapi.core.offers.factories.BankInformationFactory.Meta"], "src.pcapi.core.offers.factories.BankInformationFactory.Meta": [], "src.pcapi.core.offers.factories.OfferReportFactory": ["src.pcapi.core.offers.factories.OfferReportFactory.Meta"], "src.pcapi.core.offers.factories.OfferReportFactory.Meta": [], "src.pcapi.core.offers.factories.OfferValidationConfigFactory": ["src.pcapi.core.offers.factories.OfferValidationConfigFactory.Meta"], "src.pcapi.core.offers.factories.OfferValidationConfigFactory.Meta": [], "src.pcapi.core.offers.factories.OffererTagFactory": ["src.pcapi.core.offers.factories.OffererTagFactory.Meta"], "src.pcapi.core.offers.factories.OffererTagFactory.Meta": [], "src.pcapi.core.offers.factories.OffererTagMappingFactory": ["src.pcapi.core.offers.factories.OffererTagMappingFactory.Meta"], "src.pcapi.core.offers.factories.OffererTagMappingFactory.Meta": [], "src.pcapi.core.offers.api": ["<builtin>.object"], "<builtin>.object": [], "src.pcapi.core.offers.utils": [], "src.pcapi.core.offers.exceptions": ["src.pcapi.core.offers.exceptions.WrongFormatInFraudConfigurationFile", "src.pcapi.core.offers.exceptions.NoBookingToCancel", "src.pcapi.core.offers.exceptions.SubCategoryIsInactive", "src.pcapi.core.offers.exceptions.MissingImage", "src.pcapi.core.offers.exceptions.BookingLimitDatetimeTooLate", "src.pcapi.core.offers.exceptions.OfferNotFound", "src.pcapi.core.offers.exceptions.FileSizeExceeded", "src.pcapi.core.offers.exceptions.OfferAlreadyReportedError", "src.pcapi.core.offers.exceptions.TooLateToDeleteStock", "src.pcapi.core.offers.exceptions.OfferReportError", "src.pcapi.core.offers.exceptions.ImageValidationError", "src.pcapi.core.offers.exceptions.ImageTooSmall", "src.pcapi.core.offers.exceptions.UnacceptedFileType", "src.pcapi.core.offers.exceptions.EducationalOfferHasMultipleStocks", "src.pcapi.core.offers.exceptions.UnknownOfferSubCategory", "src.pcapi.core.offers.exceptions.SubcategoryNotEligibleForEducationalOffer", "src.pcapi.core.offers.exceptions.EducationalOfferStockBookedAndBookingNotPending", "src.pcapi.core.offers.exceptions.StockNotFound", "src.pcapi.core.offers.exceptions.ReportMalformed", "src.pcapi.core.offers.exceptions.OfferCannotBeDuoAndEducational", "src.pcapi.core.offers.exceptions.StockDoesNotExist", "src.pcapi.core.offers.exceptions.ThumbnailStorageError"], "src.pcapi.core.offers.exceptions.TooLateToDeleteStock": [], "src.pcapi.core.offers.exceptions.ImageValidationError": [], "src.pcapi.core.offers.exceptions.FileSizeExceeded": [], "src.pcapi.core.offers.exceptions.ImageTooSmall": [], "src.pcapi.core.offers.exceptions.UnacceptedFileType": [], "src.pcapi.core.offers.exceptions.MissingImage": [], "src.pcapi.core.offers.exceptions.SubcategoryNotEligibleForEducationalOffer": [], "src.pcapi.core.offers.exceptions.OfferCannotBeDuoAndEducational": [], "src.pcapi.core.offers.exceptions.UnknownOfferSubCategory": [], "src.pcapi.core.offers.exceptions.SubCategoryIsInactive": [], "src.pcapi.core.offers.exceptions.ThumbnailStorageError": [], "src.pcapi.core.offers.exceptions.StockDoesNotExist": [], "src.pcapi.core.offers.exceptions.WrongFormatInFraudConfigurationFile": [], "src.pcapi.core.offers.exceptions.OfferReportError": [], "src.pcapi.core.offers.exceptions.OfferAlreadyReportedError": [], "src.pcapi.core.offers.exceptions.ReportMalformed": [], "src.pcapi.core.offers.exceptions.EducationalOfferStockBookedAndBookingNotPending": [], "src.pcapi.core.offers.exceptions.BookingLimitDatetimeTooLate": [], "src.pcapi.core.offers.exceptions.StockNotFound": [], "src.pcapi.core.offers.exceptions.OfferNotFound": [], "src.pcapi.core.offers.exceptions.EducationalOfferHasMultipleStocks": [], "src.pcapi.core.offers.exceptions.NoBookingToCancel": [], "src.pcapi.core.offers.repository": [], "src.pcapi.core.offers.validation": [], "src.pcapi.core.offerers.models": ["src.pcapi.core.offerers.models.OffererTagMapping", "sqlalchemy.event.listens_for", "src.pcapi.core.offerers.models.VenueLabel", "src.pcapi.core.offerers.models.ApiKey", "src.pcapi.core.offerers.models.OffererTag", "src.pcapi.core.offerers.models.VenueContact", "src.pcapi.core.offerers.models.VenueCriterion", "src.pcapi.core.offerers.models.Offerer", "src.pcapi.core.offerers.models.Venue", "src.pcapi.core.offerers.models.BaseVenueTypeCode", "pcapi.domain.ts_vector.create_ts_vector_and_table_args", "<map>.items", "src.pcapi.core.offerers.models.VenueType"], "src.pcapi.core.offerers.models.BaseVenueTypeCode": ["<builtin>.classmethod"], "<map>.items": [], "src.pcapi.core.offerers.models.Venue": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.CheckConstraint", "sqlalchemy.orm.relationship", "<builtin>.property", "sqlalchemy.ext.hybrid.hybrid_property", "sqlalchemy.Numeric", "sqlalchemy.String"], "sqlalchemy.String": [], "sqlalchemy.Numeric": [], "sqlalchemy.orm.relationship": [], "sqlalchemy.ForeignKey": [], "sqlalchemy.CheckConstraint": [], "sqlalchemy.ext.hybrid.hybrid_property": [], "src.pcapi.core.offerers.models.VenueLabel": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.core.offerers.models.VenueType": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.core.offerers.models.VenueContact": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.String", "sqlalchemy.ForeignKey"], "src.pcapi.core.offerers.models.VenueCriterion": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.ForeignKey"], "sqlalchemy.event.listens_for": [], "pcapi.domain.ts_vector.create_ts_vector_and_table_args": [], "src.pcapi.core.offerers.models.Offerer": ["sqlalchemy.Column", "sqlalchemy.orm.relationship", "werkzeug.utils.cached_property", "<builtin>.property", "sqlalchemy.ext.hybrid.hybrid_property", "sqlalchemy.String"], "werkzeug.utils.cached_property": [], "src.pcapi.core.offerers.models.ApiKey": ["sqlalchemy.ForeignKey", "sqlalchemy.sql.sqltypes.CHAR", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.orm.backref"], "sqlalchemy.sql.sqltypes.CHAR": [], "sqlalchemy.orm.backref": [], "src.pcapi.core.offerers.models.OffererTag": ["sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.core.offerers.models.OffererTagMapping": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.UniqueConstraint", "sqlalchemy.ForeignKey"], "sqlalchemy.UniqueConstraint": [], "src.pcapi.core.offerers": [], "src.pcapi.core.offerers.factories": ["src.pcapi.core.offerers.factories.VenueLabelFactory", "src.pcapi.core.offerers.factories.VirtualVenueTypeFactory", "src.pcapi.core.offerers.factories.VenueTypeFactory", "src.pcapi.core.offerers.factories.VenueContactFactory", "src.pcapi.core.offerers.factories.ApiKeyFactory"], "src.pcapi.core.offerers.factories.VirtualVenueTypeFactory": ["src.pcapi.core.offerers.factories.VirtualVenueTypeFactory.Meta"], "src.pcapi.core.offerers.factories.VirtualVenueTypeFactory.Meta": [], "src.pcapi.core.offerers.factories.VenueTypeFactory": ["src.pcapi.core.offerers.factories.VenueTypeFactory.Meta"], "src.pcapi.core.offerers.factories.VenueTypeFactory.Meta": [], "src.pcapi.core.offerers.factories.VenueLabelFactory": ["src.pcapi.core.offerers.factories.VenueLabelFactory.Meta"], "src.pcapi.core.offerers.factories.VenueLabelFactory.Meta": [], "src.pcapi.core.offerers.factories.VenueContactFactory": ["src.pcapi.core.offerers.factories.VenueContactFactory.Meta"], "src.pcapi.core.offerers.factories.VenueContactFactory.Meta": [], "src.pcapi.core.offerers.factories.ApiKeyFactory": ["src.pcapi.core.offerers.factories.ApiKeyFactory.Meta"], "src.pcapi.core.offerers.factories.ApiKeyFactory.Meta": [], "src.pcapi.core.offerers.api": ["<builtin>.object"], "src.pcapi.core.offerers.exceptions": ["src.pcapi.core.offerers.exceptions.ApiKeyDeletionDenied", "src.pcapi.core.offerers.exceptions.CannotFindOffererUserEmail", "src.pcapi.core.offerers.exceptions.CannotFindOffererForOfferId", "src.pcapi.core.offerers.exceptions.ValidationTokenNotFoundError", "src.pcapi.core.offerers.exceptions.MissingOffererIdQueryParameter", "src.pcapi.core.offerers.exceptions.ApiKeyPrefixGenerationError", "src.pcapi.core.offerers.exceptions.CannotFindOffererSiren", "src.pcapi.core.offerers.exceptions.ApiKeyCountMaxReached"], "src.pcapi.core.offerers.exceptions.ApiKeyCountMaxReached": [], "src.pcapi.core.offerers.exceptions.ApiKeyPrefixGenerationError": [], "src.pcapi.core.offerers.exceptions.ApiKeyDeletionDenied": [], "src.pcapi.core.offerers.exceptions.ValidationTokenNotFoundError": [], "src.pcapi.core.offerers.exceptions.CannotFindOffererForOfferId": [], "src.pcapi.core.offerers.exceptions.CannotFindOffererUserEmail": [], "src.pcapi.core.offerers.exceptions.CannotFindOffererSiren": [], "src.pcapi.core.offerers.exceptions.MissingOffererIdQueryParameter": [], "src.pcapi.core.offerers.repository": ["pcapi.domain.ts_vector.create_get_filter_matching_ts_query_in_any_model"], "pcapi.domain.ts_vector.create_get_filter_matching_ts_query_in_any_model": [], "src.pcapi.core.offerers.validation": [], "src.pcapi.core.payments.models": ["src.pcapi.core.payments.models.CustomReimbursementRule", "src.pcapi.core.payments.models.Recredit", "src.pcapi.core.payments.models.RecreditType", "src.pcapi.core.payments.models.GrantedDeposit", "src.pcapi.core.payments.models.ReimbursementRule", "src.pcapi.core.payments.models.Deposit", "src.pcapi.core.payments.models.DepositType"], "src.pcapi.core.payments.models.ReimbursementRule": ["<builtin>.property"], "src.pcapi.core.payments.models.CustomReimbursementRule": ["<builtin>.property", "sqlalchemy.orm.relationship", "<builtin>.classmethod"], "src.pcapi.core.payments.models.DepositType": [], "src.pcapi.core.payments.models.Deposit": ["<builtin>.property", "sqlalchemy.orm.relationship"], "src.pcapi.core.payments.models.GrantedDeposit": [], "src.pcapi.core.payments.models.RecreditType": [], "src.pcapi.core.payments.models.Recredit": ["sqlalchemy.orm.relationship"], "src.pcapi.core.payments.conf": ["src.pcapi.core.payments.conf.Grant18SpecificCapsV1", "src.pcapi.core.payments.conf.Grant18SpecificCapsV2", "decimal.Decimal", "src.pcapi.core.payments.conf.BaseSpecificCaps", "src.pcapi.core.payments.conf.GrantUnderageSpecificCaps"], "src.pcapi.core.payments.conf.BaseSpecificCaps": [], "src.pcapi.core.payments.conf.GrantUnderageSpecificCaps": [], "src.pcapi.core.payments.conf.Grant18SpecificCapsV1": ["decimal.Decimal"], "src.pcapi.core.payments.conf.Grant18SpecificCapsV2": ["decimal.Decimal"], "src.pcapi.core.payments": [], "src.pcapi.core.payments.factories": ["src.pcapi.core.payments.factories.PaymentStatusFactory", "src.pcapi.core.payments.factories.PaymentMessageFactory", "src.pcapi.core.payments.factories.PaymentWithCustomRuleFactory", "src.pcapi.core.payments.factories.RecreditFactory", "src.pcapi.core.payments.factories.PaymentFactory", "src.pcapi.core.payments.factories.CustomReimbursementRuleFactory"], "src.pcapi.core.payments.factories.PaymentFactory": ["src.pcapi.core.payments.factories.PaymentFactory.Meta"], "src.pcapi.core.payments.factories.PaymentFactory.Meta": [], "src.pcapi.core.payments.factories.PaymentStatusFactory": ["src.pcapi.core.payments.factories.PaymentStatusFactory.Meta"], "src.pcapi.core.payments.factories.PaymentStatusFactory.Meta": [], "src.pcapi.core.payments.factories.PaymentMessageFactory": ["src.pcapi.core.payments.factories.PaymentMessageFactory.Meta"], "src.pcapi.core.payments.factories.PaymentMessageFactory.Meta": [], "src.pcapi.core.payments.factories.CustomReimbursementRuleFactory": ["<builtin>.classmethod", "src.pcapi.core.payments.factories.CustomReimbursementRuleFactory.Meta"], "src.pcapi.core.payments.factories.CustomReimbursementRuleFactory.Meta": [], "src.pcapi.core.payments.factories.PaymentWithCustomRuleFactory": [], "src.pcapi.core.payments.factories.RecreditFactory": ["src.pcapi.core.payments.factories.RecreditFactory.Meta"], "src.pcapi.core.payments.factories.RecreditFactory.Meta": [], "src.pcapi.core.payments.api": [], "src.pcapi.core.payments.utils": [], "src.pcapi.core.payments.exceptions": ["src.pcapi.core.payments.exceptions.UserHasAlreadyActiveDeposit", "src.pcapi.core.payments.exceptions.UnknownSubcategoryForReimbursementRule", "src.pcapi.core.payments.exceptions.DepositTypeAlreadyGrantedException", "src.pcapi.core.payments.exceptions.ConflictingReimbursementRule", "src.pcapi.core.payments.exceptions.UserNotGrantable", "src.pcapi.core.payments.exceptions.WrongDateForReimbursementRule", "src.pcapi.core.payments.exceptions.ReimbursementRuleValidationError"], "src.pcapi.core.payments.exceptions.DepositTypeAlreadyGrantedException": [], "src.pcapi.core.payments.exceptions.UserNotGrantable": [], "src.pcapi.core.payments.exceptions.UserHasAlreadyActiveDeposit": [], "src.pcapi.core.payments.exceptions.ReimbursementRuleValidationError": [], "src.pcapi.core.payments.exceptions.ConflictingReimbursementRule": [], "src.pcapi.core.payments.exceptions.WrongDateForReimbursementRule": [], "src.pcapi.core.payments.exceptions.UnknownSubcategoryForReimbursementRule": [], "src.pcapi.core.payments.repository": [], "src.pcapi.core.payments.validation": [], "src.pcapi.core.mails": [], "src.pcapi.core.mails.testing": [], "src.pcapi.core.mails.backends.sendinblue": ["src.pcapi.core.mails.backends.sendinblue.ToDevSendinblueBackend", "src.pcapi.core.mails.backends.sendinblue.SendinblueBackend"], "src.pcapi.core.mails.backends.sendinblue.SendinblueBackend": [], "src.pcapi.core.mails.backends.sendinblue.ToDevSendinblueBackend": [], "src.pcapi.core.mails.backends": [], "src.pcapi.core.mails.backends.mailjet": ["src.pcapi.core.mails.backends.mailjet.monkey_patch_mailjet_requests", "src.pcapi.core.mails.backends.mailjet.MailjetBackend", "src.pcapi.core.mails.backends.mailjet.ToDevMailjetBackend"], "src.pcapi.core.mails.backends.mailjet.monkey_patch_mailjet_requests": [], "src.pcapi.core.mails.backends.mailjet.MailjetBackend": [], "src.pcapi.core.mails.backends.mailjet.ToDevMailjetBackend": [], "src.pcapi.core.mails.backends.logger": ["src.pcapi.core.mails.backends.logger.LoggerBackend"], "src.pcapi.core.mails.backends.logger.LoggerBackend": [], "src.pcapi.core.mails.backends.testing": ["src.pcapi.core.mails.backends.testing.TestingBackend", "src.pcapi.core.mails.backends.testing.FailingBackend"], "src.pcapi.core.mails.backends.testing.TestingBackend": [], "src.pcapi.core.mails.backends.testing.FailingBackend": [], "src.pcapi.core.mails.backends.base": ["src.pcapi.core.mails.backends.base.BaseBackend"], "src.pcapi.core.mails.backends.base.BaseBackend": [], "src.pcapi.core.mails.models.models": ["src.pcapi.core.mails.models.models.Email", "src.pcapi.core.mails.models.models.MailResult", "src.pcapi.core.mails.models.models.EmailStatus"], "src.pcapi.core.mails.models.models.MailResult": [], "src.pcapi.core.mails.models.models.EmailStatus": [], "src.pcapi.core.mails.models.models.Email": ["sqlalchemy.Column", "sqlalchemy.Enum"], "sqlalchemy.Enum": [], "src.pcapi.core.mails.models.sendinblue_models": ["src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalSender", "src.pcapi.core.mails.models.sendinblue_models.Template", "src.pcapi.core.mails.models.sendinblue_models.TemplatePro", "src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalAttachment", "src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalWithoutTemplateEmailData", "src.pcapi.core.mails.models.sendinblue_models.EmailInfo"], "src.pcapi.core.mails.models.sendinblue_models.EmailInfo": [], "src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalSender": [], "src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalAttachment": [], "src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalWithoutTemplateEmailData": [], "src.pcapi.core.mails.models.sendinblue_models.Template": ["<builtin>.property"], "src.pcapi.core.mails.models.sendinblue_models.TemplatePro": [], "src.pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData": [], "src.pcapi.core.mails.models": [], "src.pcapi.core.mails.transactional.sendinblue_template_ids": ["src.pcapi.core.mails.transactional.sendinblue_template_ids.TransactionalEmail"], "src.pcapi.core.mails.transactional.sendinblue_template_ids.TransactionalEmail": ["pcapi.core.mails.models.sendinblue_models.Template", "pcapi.core.mails.models.sendinblue_models.TemplatePro"], "pcapi.core.mails.models.sendinblue_models.Template": [], "pcapi.core.mails.models.sendinblue_models.TemplatePro": [], "src.pcapi.core.mails.transactional.send_transactional_email": [], "src.pcapi.core.mails.transactional": [], "src.pcapi.core.mails.transactional.pro.reset_password_to_pro": [], "src.pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro": [], "src.pcapi.core.mails.transactional.pro.offer_validation_to_pro": [], "src.pcapi.core.mails.transactional.pro.invoice_available_to_pro": [], "src.pcapi.core.mails.transactional.pro.email_validation": [], "src.pcapi.core.mails.transactional.pro.welcome_to_pro": [], "src.pcapi.core.mails.transactional.pro.new_offerer_validation": [], "src.pcapi.core.mails.transactional.pro.offerer_attachment_validation": [], "src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro": [], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary": [], "src.pcapi.core.mails.transactional.bookings": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_institution": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary": [], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary": [], "src.pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary": [], "src.pcapi.core.mails.transactional.bookings.new_booking_to_pro": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro": [], "src.pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary": [], "src.pcapi.core.mails.transactional.users.subscription_document_error": [], "src.pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user": [], "src.pcapi.core.mails.transactional.users.email_address_change": [], "src.pcapi.core.mails.transactional.users.email_address_change_confirmation": [], "src.pcapi.core.mails.transactional.users.accepted_as_beneficiary": [], "src.pcapi.core.mails.transactional.users.offer_link_to_ios_user": [], "src.pcapi.core.mails.transactional.users": [], "src.pcapi.core.mails.transactional.users.pre_subscription_dms_error": [], "src.pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary": [], "src.pcapi.core.mails.transactional.users.reset_password": [], "src.pcapi.core.mails.transactional.users.delete_account": [], "src.pcapi.core.bookings.models": ["src.pcapi.core.bookings.models.BookingStatusFilter", "src.pcapi.core.bookings.models.BookingCancellationReasons", "sqlalchemy.DDL", "src.pcapi.core.bookings.models.IndividualBooking", "src.pcapi.core.bookings.models.Booking", "src.pcapi.core.bookings.models.BookingStatus"], "src.pcapi.core.bookings.models.BookingCancellationReasons": [], "src.pcapi.core.bookings.models.BookingStatus": [], "src.pcapi.core.bookings.models.BookingStatusFilter": [], "src.pcapi.core.bookings.models.IndividualBooking": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.ForeignKey"], "src.pcapi.core.bookings.models.Booking": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.Enum", "sqlalchemy.orm.relationship", "<builtin>.staticmethod", "sqlalchemy.Index", "<builtin>.property", "sqlalchemy.ext.hybrid.hybrid_property", "sqlalchemy.Numeric", "sqlalchemy.String"], "sqlalchemy.Index": [], "sqlalchemy.DDL": [], "src.pcapi.core.bookings.constants": ["src.pcapi.core.bookings.constants._get_hours_from_timedelta"], "src.pcapi.core.bookings.constants._get_hours_from_timedelta": [], "src.pcapi.core.bookings": [], "src.pcapi.core.bookings.factories": ["src.pcapi.core.bookings.factories.UsedIndividualBookingFactory", "src.pcapi.core.bookings.factories.CancelledIndividualBookingFactory", "src.pcapi.core.bookings.factories.IndividualBookingSubFactory", "src.pcapi.core.bookings.factories.UsedBookingFactory", "src.pcapi.core.bookings.factories.EducationalBookingFactory", "src.pcapi.core.bookings.factories.RefusedEducationalBookingFactory", "src.pcapi.core.bookings.factories.CancelledBookingFactory", "src.pcapi.core.bookings.factories.IndividualBookingFactory", "src.pcapi.core.bookings.factories.UsedEducationalBookingFactory", "src.pcapi.core.bookings.factories.PendingEducationalBookingFactory", "src.pcapi.core.bookings.factories.BookingFactory"], "src.pcapi.core.bookings.factories.BookingFactory": ["<builtin>.classmethod", "src.pcapi.core.bookings.factories.BookingFactory.Meta"], "src.pcapi.core.bookings.factories.BookingFactory.Meta": [], "src.pcapi.core.bookings.factories.UsedBookingFactory": [], "src.pcapi.core.bookings.factories.CancelledBookingFactory": [], "src.pcapi.core.bookings.factories.EducationalBookingFactory": [], "src.pcapi.core.bookings.factories.UsedEducationalBookingFactory": [], "src.pcapi.core.bookings.factories.PendingEducationalBookingFactory": [], "src.pcapi.core.bookings.factories.RefusedEducationalBookingFactory": [], "src.pcapi.core.bookings.factories.IndividualBookingSubFactory": ["src.pcapi.core.bookings.factories.IndividualBookingSubFactory.Meta"], "src.pcapi.core.bookings.factories.IndividualBookingSubFactory.Meta": [], "src.pcapi.core.bookings.factories.IndividualBookingFactory": [], "src.pcapi.core.bookings.factories.CancelledIndividualBookingFactory": [], "src.pcapi.core.bookings.factories.UsedIndividualBookingFactory": [], "src.pcapi.core.bookings.api": [], "src.pcapi.core.bookings.exceptions": ["src.pcapi.core.bookings.exceptions.BookingHasAlreadyBeenUsed", "src.pcapi.core.bookings.exceptions.CannotCancelConfirmedBooking", "src.pcapi.core.bookings.exceptions.OfferIsAlreadyBooked", "src.pcapi.core.bookings.exceptions.EducationalOfferCannotBeBooked", "src.pcapi.core.bookings.exceptions.NoActivationCodeAvailable", "src.pcapi.core.bookings.exceptions.StockIsNotBookable", "src.pcapi.core.bookings.exceptions.BookingIsNotCancelledCannotBeUncancelled", "src.pcapi.core.bookings.exceptions.UserHasInsufficientFunds", "src.pcapi.core.bookings.exceptions.CannotDeleteOffererWithBookingsException", "src.pcapi.core.bookings.exceptions.BookingNotConfirmed", "src.pcapi.core.bookings.exceptions.BookingAlreadyRefunded", "src.pcapi.core.bookings.exceptions.ConfirmationLimitDateHasPassed", "src.pcapi.core.bookings.exceptions.BookingIsCancelled", "src.pcapi.core.bookings.exceptions.CannotBookFreeOffers", "src.pcapi.core.bookings.exceptions.BookingAlreadyCancelled", "src.pcapi.core.bookings.exceptions.DigitalExpenseLimitHasBeenReached", "src.pcapi.core.bookings.exceptions.OfferCategoryNotBookableByUser", "src.pcapi.core.bookings.exceptions.BookingDoesntExist", "src.pcapi.core.bookings.exceptions.QuantityIsInvalid", "src.pcapi.core.bookings.exceptions.PhysicalExpenseLimitHasBeenReached", "src.pcapi.core.bookings.exceptions.BookingIsAlreadyUsed", "src.pcapi.core.bookings.exceptions.BookingIsExpired", "src.pcapi.core.bookings.exceptions.BookingIsAlreadyCancelled", "src.pcapi.core.bookings.exceptions.CannotMarkAsConfirmedIndividualBooking", "src.pcapi.core.bookings.exceptions.CannotDeleteVenueWithBookingsException"], "src.pcapi.core.bookings.exceptions.OfferIsAlreadyBooked": [], "src.pcapi.core.bookings.exceptions.QuantityIsInvalid": [], "src.pcapi.core.bookings.exceptions.StockIsNotBookable": [], "src.pcapi.core.bookings.exceptions.PhysicalExpenseLimitHasBeenReached": [], "src.pcapi.core.bookings.exceptions.DigitalExpenseLimitHasBeenReached": [], "src.pcapi.core.bookings.exceptions.CannotBookFreeOffers": [], "src.pcapi.core.bookings.exceptions.NoActivationCodeAvailable": [], "src.pcapi.core.bookings.exceptions.EducationalOfferCannotBeBooked": [], "src.pcapi.core.bookings.exceptions.OfferCategoryNotBookableByUser": [], "src.pcapi.core.bookings.exceptions.UserHasInsufficientFunds": [], "src.pcapi.core.bookings.exceptions.BookingIsAlreadyUsed": [], "src.pcapi.core.bookings.exceptions.BookingHasAlreadyBeenUsed": [], "src.pcapi.core.bookings.exceptions.BookingIsAlreadyCancelled": [], "src.pcapi.core.bookings.exceptions.BookingIsNotCancelledCannotBeUncancelled": [], "src.pcapi.core.bookings.exceptions.BookingIsCancelled": [], "src.pcapi.core.bookings.exceptions.CannotCancelConfirmedBooking": [], "src.pcapi.core.bookings.exceptions.BookingDoesntExist": [], "src.pcapi.core.bookings.exceptions.CannotDeleteOffererWithBookingsException": [], "src.pcapi.core.bookings.exceptions.CannotDeleteVenueWithBookingsException": [], "src.pcapi.core.bookings.exceptions.BookingAlreadyCancelled": [], "src.pcapi.core.bookings.exceptions.BookingAlreadyRefunded": [], "src.pcapi.core.bookings.exceptions.CannotMarkAsConfirmedIndividualBooking": [], "src.pcapi.core.bookings.exceptions.ConfirmationLimitDateHasPassed": [], "src.pcapi.core.bookings.exceptions.BookingIsExpired": [], "src.pcapi.core.bookings.exceptions.BookingNotConfirmed": [], "src.pcapi.core.bookings.repository": [], "src.pcapi.core.bookings.validation": [], "src.pcapi.core.fraud.models": ["src.pcapi.core.fraud.models.EduconnectContent", "src.pcapi.core.fraud.models.UserProfilingFraudData", "src.pcapi.core.fraud.models.BeneficiaryFraudResult", "src.pcapi.core.fraud.models.OrphanDmsApplication", "src.pcapi.core.fraud.models.PhoneValidationFraudData", "src.pcapi.core.fraud.models.FraudStatus", "src.pcapi.core.fraud.models.JouveContent", "<map>.items", "src.pcapi.core.fraud.models.FraudReasonCode", "src.pcapi.core.fraud.models.FraudCheckStatus", "src.pcapi.core.fraud.models.UserProfilingRiskRating", "src.pcapi.core.fraud.models.BeneficiaryFraudCheck", "src.pcapi.core.fraud.models.BeneficiaryFraudReview", "src.pcapi.core.fraud.models.FraudCheckType", "src.pcapi.core.fraud.models.FraudItem", "src.pcapi.core.fraud.models.DMSContent", "src.pcapi.core.fraud.models.InternalReviewSource", "src.pcapi.core.fraud.models.FraudReviewStatus"], "src.pcapi.core.fraud.models.FraudCheckType": [], "src.pcapi.core.fraud.models.FraudStatus": [], "src.pcapi.core.fraud.models.FraudReviewStatus": [], "src.pcapi.core.fraud.models.EduconnectContent": [], "src.pcapi.core.fraud.models.JouveContent": ["pydantic.class_validators.validator"], "pydantic.class_validators.validator": [], "src.pcapi.core.fraud.models.DMSContent": [], "src.pcapi.core.fraud.models.UserProfilingRiskRating": [], "src.pcapi.core.fraud.models.UserProfilingFraudData": [], "src.pcapi.core.fraud.models.InternalReviewSource": [], "src.pcapi.core.fraud.models.PhoneValidationFraudData": [], "src.pcapi.core.fraud.models.FraudReasonCode": [], "src.pcapi.core.fraud.models.FraudCheckStatus": [], "src.pcapi.core.fraud.models.BeneficiaryFraudCheck": [], "src.pcapi.core.fraud.models.OrphanDmsApplication": [], "src.pcapi.core.fraud.models.BeneficiaryFraudResult": [], "src.pcapi.core.fraud.models.BeneficiaryFraudReview": [], "src.pcapi.core.fraud.models.FraudItem": [], "src.pcapi.core.fraud": [], "src.pcapi.core.fraud.factories": ["src.pcapi.core.fraud.factories.BeneficiaryFraudCheckFactory", "src.pcapi.core.fraud.factories.OrphanDmsFraudCheckFactory", "src.pcapi.core.fraud.factories.BeneficiaryFraudResultFactory", "src.pcapi.core.fraud.factories.UserProfilingFraudDataFactory", "src.pcapi.core.fraud.factories.JouveContentFactory", "src.pcapi.core.fraud.factories.BeneficiaryFraudReviewFactory", "src.pcapi.core.fraud.factories.EduconnectContentFactory", "src.pcapi.core.fraud.factories.DMSContentFactory", "src.pcapi.core.fraud.factories.OrphanDmsApplicationFactory", "src.pcapi.core.fraud.factories.UbbleContentFactory"], "src.pcapi.core.fraud.factories.JouveContentFactory": ["src.pcapi.core.fraud.factories.JouveContentFactory.Meta", "factory.declarations.LazyAttribute"], "src.pcapi.core.fraud.factories.JouveContentFactory.Meta": [], "factory.declarations.LazyAttribute": [], "src.pcapi.core.fraud.factories.UserProfilingFraudDataFactory": ["src.pcapi.core.fraud.factories.UserProfilingFraudDataFactory.Meta", "<builtin>.range"], "src.pcapi.core.fraud.factories.UserProfilingFraudDataFactory.Meta": [], "src.pcapi.core.fraud.factories.DMSContentFactory": ["src.pcapi.core.fraud.factories.DMSContentFactory.Meta", "factory.declarations.LazyAttribute"], "src.pcapi.core.fraud.factories.DMSContentFactory.Meta": [], "src.pcapi.core.fraud.factories.UbbleContentFactory": ["src.pcapi.core.fraud.factories.UbbleContentFactory.Meta", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.fraud.factories.UbbleContentFactory.Meta": [], "src.pcapi.core.fraud.factories.EduconnectContentFactory": ["src.pcapi.core.fraud.factories.EduconnectContentFactory.Params", "src.pcapi.core.fraud.factories.EduconnectContentFactory.Meta"], "src.pcapi.core.fraud.factories.EduconnectContentFactory.Meta": [], "src.pcapi.core.fraud.factories.EduconnectContentFactory.Params": [], "src.pcapi.core.fraud.factories.BeneficiaryFraudCheckFactory": ["<builtin>.classmethod", "src.pcapi.core.fraud.factories.BeneficiaryFraudCheckFactory.Meta"], "src.pcapi.core.fraud.factories.BeneficiaryFraudCheckFactory.Meta": [], "src.pcapi.core.fraud.factories.OrphanDmsFraudCheckFactory": ["src.pcapi.core.fraud.factories.OrphanDmsFraudCheckFactory.Meta"], "src.pcapi.core.fraud.factories.OrphanDmsFraudCheckFactory.Meta": [], "src.pcapi.core.fraud.factories.BeneficiaryFraudResultFactory": ["src.pcapi.core.fraud.factories.BeneficiaryFraudResultFactory.Meta"], "src.pcapi.core.fraud.factories.BeneficiaryFraudResultFactory.Meta": [], "src.pcapi.core.fraud.factories.BeneficiaryFraudReviewFactory": ["src.pcapi.core.fraud.factories.BeneficiaryFraudReviewFactory.Meta"], "src.pcapi.core.fraud.factories.BeneficiaryFraudReviewFactory.Meta": [], "src.pcapi.core.fraud.factories.OrphanDmsApplicationFactory": ["src.pcapi.core.fraud.factories.OrphanDmsApplicationFactory.Meta"], "src.pcapi.core.fraud.factories.OrphanDmsApplicationFactory.Meta": [], "src.pcapi.core.fraud.api": [], "src.pcapi.core.fraud.utils": [], "src.pcapi.core.fraud.exceptions": ["src.pcapi.core.fraud.exceptions.FraudException", "src.pcapi.core.fraud.exceptions.UserAlreadyBeneficiary"], "src.pcapi.core.fraud.exceptions.FraudException": [], "src.pcapi.core.fraud.exceptions.UserAlreadyBeneficiary": [], "src.pcapi.core.fraud.repository": [], "src.pcapi.core.fraud.ubble.models": ["src.pcapi.core.fraud.ubble.models.UbbleIdentificationDocFaceMatches", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationStatus", "src.pcapi.core.fraud.ubble.models.UbbleScore", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationDocuments", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationData", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationReferenceDataChecks", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncluded", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedFaceChecks", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedDocuments", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedReferenceDataChecks", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedDocFaceMatches", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationFaceChecks", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationDocumentChecks", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationResponse", "src.pcapi.core.fraud.ubble.models.UbbleContent", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationAttributes", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedDocumentChecks", "src.pcapi.core.fraud.ubble.models.UbbleIdentificationObject"], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationStatus": [], "src.pcapi.core.fraud.ubble.models.UbbleScore": [], "src.pcapi.core.fraud.ubble.models.UbbleContent": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationObject": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationAttributes": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationData": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationDocuments": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationDocumentChecks": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationFaceChecks": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationReferenceDataChecks": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationDocFaceMatches": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncluded": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedDocuments": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedDocumentChecks": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedFaceChecks": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedReferenceDataChecks": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationIncludedDocFaceMatches": [], "src.pcapi.core.fraud.ubble.models.UbbleIdentificationResponse": [], "src.pcapi.core.fraud.ubble.constants": [], "src.pcapi.core.fraud.ubble": [], "src.pcapi.core.fraud.ubble.api": [], "src.pcapi.core.fraud.common.models": ["src.pcapi.core.fraud.common.models.IdentityCheckContent"], "src.pcapi.core.fraud.common.models.IdentityCheckContent": [], "src.pcapi.core.fraud.common": [], "src.pcapi.core.fraud.dms": [], "src.pcapi.core.fraud.dms.api": [], "src.pcapi.core.providers.models": ["src.pcapi.core.providers.models.VenueProviderCreationPayload", "src.pcapi.core.providers.models.VenueProvider", "src.pcapi.core.providers.models.AllocinePivot", "src.pcapi.core.providers.models.Provider", "src.pcapi.core.providers.models.StockDetail", "src.pcapi.core.providers.models.AllocineVenueProviderPriceRule", "src.pcapi.core.providers.models.AllocineVenueProvider"], "src.pcapi.core.providers.models.Provider": ["<builtin>.property", "sqlalchemy.CheckConstraint", "sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.core.providers.models.VenueProvider": ["sqlalchemy.case", "sqlalchemy.ForeignKey", "sqlalchemy.exists", "sqlalchemy.Column", "sqlalchemy.UniqueConstraint", "sqlalchemy.orm.relationship", "<builtin>.staticmethod", "sqlalchemy.select", "<builtin>.property", "sqlalchemy.orm.column_property", "sqlalchemy.and_", "sqlalchemy.String"], "sqlalchemy.select": [], "sqlalchemy.and_": [], "sqlalchemy.exists": [], "sqlalchemy.orm.column_property": [], "sqlalchemy.case": [], "src.pcapi.core.providers.models.AllocineVenueProvider": ["sqlalchemy.true", "sqlalchemy.Column", "sqlalchemy.ForeignKey"], "sqlalchemy.true": [], "src.pcapi.core.providers.models.AllocineVenueProviderPriceRule": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.Enum", "sqlalchemy.CheckConstraint", "sqlalchemy.orm.relationship", "<builtin>.staticmethod", "sqlalchemy.UniqueConstraint", "sqlalchemy.Numeric"], "src.pcapi.core.providers.models.VenueProviderCreationPayload": [], "src.pcapi.core.providers.models.StockDetail": [], "src.pcapi.core.providers.models.AllocinePivot": ["sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.core.providers": [], "src.pcapi.core.providers.factories": ["src.pcapi.core.providers.factories.AllocineProviderFactory", "src.pcapi.core.providers.factories.APIProviderFactory", "src.pcapi.core.providers.factories.VenueProviderFactory", "src.pcapi.core.providers.factories.AllocinePivotFactory", "src.pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "src.pcapi.core.providers.factories.AllocineVenueProviderFactory", "src.pcapi.core.providers.factories.ProviderFactory"], "src.pcapi.core.providers.factories.AllocinePivotFactory": ["src.pcapi.core.providers.factories.AllocinePivotFactory.Meta"], "src.pcapi.core.providers.factories.AllocinePivotFactory.Meta": [], "src.pcapi.core.providers.factories.ProviderFactory": ["src.pcapi.core.providers.factories.ProviderFactory.Meta"], "src.pcapi.core.providers.factories.ProviderFactory.Meta": [], "src.pcapi.core.providers.factories.APIProviderFactory": ["src.pcapi.core.providers.factories.APIProviderFactory.Meta"], "src.pcapi.core.providers.factories.APIProviderFactory.Meta": [], "src.pcapi.core.providers.factories.VenueProviderFactory": ["src.pcapi.core.providers.factories.VenueProviderFactory.Meta"], "src.pcapi.core.providers.factories.VenueProviderFactory.Meta": [], "src.pcapi.core.providers.factories.AllocineProviderFactory": ["src.pcapi.core.providers.factories.AllocineProviderFactory.Meta"], "src.pcapi.core.providers.factories.AllocineProviderFactory.Meta": [], "src.pcapi.core.providers.factories.AllocineVenueProviderFactory": ["src.pcapi.core.providers.factories.AllocineVenueProviderFactory.Meta"], "src.pcapi.core.providers.factories.AllocineVenueProviderFactory.Meta": [], "src.pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory": ["src.pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory.Meta"], "src.pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory.Meta": [], "src.pcapi.core.providers.allocine_venue_provider": ["src.pcapi.core.providers.allocine_venue_provider.AllocineVenueProvider"], "src.pcapi.core.providers.allocine_venue_provider.AllocineVenueProvider": ["sqlalchemy.true", "sqlalchemy.Column", "sqlalchemy.ForeignKey"], "src.pcapi.core.providers.api": ["pcapi.core.providers.models.VenueProviderCreationPayload"], "pcapi.core.providers.models.VenueProviderCreationPayload": [], "src.pcapi.core.providers.exceptions": ["src.pcapi.core.providers.exceptions.VenueSiretNotRegistered", "src.pcapi.core.providers.exceptions.ConnexionToProviderApiFailed", "src.pcapi.core.providers.exceptions.VenueProviderException", "src.pcapi.core.providers.exceptions.VenueNotFound", "src.pcapi.core.providers.exceptions.ProviderWithoutApiImplementation", "src.pcapi.core.providers.exceptions.NoAllocinePivot", "src.pcapi.core.providers.exceptions.NoSiretSpecified", "src.pcapi.core.providers.exceptions.ProviderNotFound", "src.pcapi.core.providers.exceptions.NoPriceSpecified"], "src.pcapi.core.providers.exceptions.VenueProviderException": [], "src.pcapi.core.providers.exceptions.ProviderNotFound": [], "src.pcapi.core.providers.exceptions.VenueNotFound": [], "src.pcapi.core.providers.exceptions.NoPriceSpecified": [], "src.pcapi.core.providers.exceptions.NoAllocinePivot": [], "src.pcapi.core.providers.exceptions.ProviderWithoutApiImplementation": [], "src.pcapi.core.providers.exceptions.NoSiretSpecified": [], "src.pcapi.core.providers.exceptions.VenueSiretNotRegistered": [], "src.pcapi.core.providers.exceptions.ConnexionToProviderApiFailed": [], "src.pcapi.core.providers.repository": [], "src.pcapi.core.subscription.models": ["src.pcapi.core.subscription.models.SubscriptionStep", "src.pcapi.core.subscription.models.PopOverIcon", "src.pcapi.core.subscription.models.SubscriptionMessage", "src.pcapi.core.subscription.models.MaintenancePageType", "src.pcapi.core.subscription.models.SubscriptionItemStatus", "src.pcapi.core.subscription.models.SubscriptionItem", "src.pcapi.core.subscription.models.IdentityCheckMethod", "src.pcapi.core.subscription.models.CallToActionIcon"], "src.pcapi.core.subscription.models.SubscriptionStep": [], "src.pcapi.core.subscription.models.SubscriptionItemStatus": [], "src.pcapi.core.subscription.models.SubscriptionItem": [], "src.pcapi.core.subscription.models.IdentityCheckMethod": [], "src.pcapi.core.subscription.models.MaintenancePageType": [], "src.pcapi.core.subscription.models.CallToActionIcon": [], "src.pcapi.core.subscription.models.PopOverIcon": [], "src.pcapi.core.subscription.models.SubscriptionMessage": [], "src.pcapi.core.subscription": [], "src.pcapi.core.subscription.factories": ["src.pcapi.core.subscription.factories.SubscriptionMessageFactory"], "src.pcapi.core.subscription.factories.SubscriptionMessageFactory": ["src.pcapi.core.subscription.factories.SubscriptionMessageFactory.Meta"], "src.pcapi.core.subscription.factories.SubscriptionMessageFactory.Meta": [], "src.pcapi.core.subscription.api": [], "src.pcapi.core.subscription.transitions": [], "src.pcapi.core.subscription.messages": [], "src.pcapi.core.subscription.exceptions": ["src.pcapi.core.subscription.exceptions.SubscriptionException", "src.pcapi.core.subscription.exceptions.BeneficiaryFraudCheckMissingException", "src.pcapi.core.subscription.exceptions.InvalidEligibilityTypeException", "src.pcapi.core.subscription.exceptions.CannotUpgradeBeneficiaryRole", "src.pcapi.core.subscription.exceptions.DMSParsingError"], "src.pcapi.core.subscription.exceptions.SubscriptionException": [], "src.pcapi.core.subscription.exceptions.InvalidEligibilityTypeException": [], "src.pcapi.core.subscription.exceptions.BeneficiaryFraudCheckMissingException": [], "src.pcapi.core.subscription.exceptions.CannotUpgradeBeneficiaryRole": [], "src.pcapi.core.subscription.exceptions.DMSParsingError": [], "src.pcapi.core.subscription.profile_options": ["src.pcapi.core.subscription.profile_options.SchoolType", "src.pcapi.core.subscription.profile_options.Activity.__init__", "src.pcapi.core.subscription.profile_options.SchoolType.__init__", "src.pcapi.core.subscription.profile_options.Activity"], "src.pcapi.core.subscription.profile_options.SchoolType": [], "src.pcapi.core.subscription.profile_options.Activity": [], "src.pcapi.core.subscription.profile_options.SchoolType.__init__": ["<builtin>.super"], "<builtin>.super": [], "src.pcapi.core.subscription.profile_options.Activity.__init__": ["<builtin>.super"], "src.pcapi.core.subscription.repository": [], "src.pcapi.core.subscription.educonnect": [], "src.pcapi.core.subscription.educonnect.api": [], "src.pcapi.core.subscription.educonnect.exceptions": ["src.pcapi.core.subscription.educonnect.exceptions.EduconnectSubscriptionException"], "src.pcapi.core.subscription.educonnect.exceptions.EduconnectSubscriptionException": [], "src.pcapi.core.subscription.ubble": [], "src.pcapi.core.subscription.ubble.api": [], "src.pcapi.core.subscription.dms": [], "src.pcapi.core.subscription.dms.api": [], "src.pcapi.core.search": [], "src.pcapi.core.search.testing": ["src.pcapi.core.search.testing.reset_search_store"], "src.pcapi.core.search.testing.reset_search_store": [], "src.pcapi.core.search.backends": [], "src.pcapi.core.search.backends.algolia": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend": ["<builtin>.classmethod"], "src.pcapi.core.search.backends.testing": ["src.pcapi.core.search.backends.testing.TestingBackend", "src.pcapi.core.search.backends.testing.FakeClient"], "src.pcapi.core.search.backends.testing.FakeClient": [], "src.pcapi.core.search.backends.testing.TestingBackend": [], "src.pcapi.core.search.backends.dummy": ["src.pcapi.core.search.backends.dummy.DummyBackend", "src.pcapi.core.search.backends.dummy.FakeClient"], "src.pcapi.core.search.backends.dummy.FakeClient": [], "src.pcapi.core.search.backends.dummy.DummyBackend": [], "src.pcapi.core.search.backends.base": ["src.pcapi.core.search.backends.base.SearchBackend"], "src.pcapi.core.search.backends.base.SearchBackend": ["<builtin>.classmethod"], "src.pcapi.core.educational.models": ["src.pcapi.core.educational.models.BookingCancellationReasons", "src.pcapi.core.educational.models.EducationalDeposit", "src.pcapi.core.educational.models.EducationalRedactor", "src.pcapi.core.educational.models.EducationalBooking", "src.pcapi.core.educational.models.StudentLevels", "src.pcapi.core.educational.models.EducationalInstitution", "src.pcapi.core.educational.models.BookingStatus", "src.pcapi.core.educational.models.Ministry", "src.pcapi.core.educational.models.CollectiveStock", "src.pcapi.core.educational.models.CollectiveOfferTemplate", "src.pcapi.core.educational.models.EducationalBookingStatus", "src.pcapi.core.educational.models.EducationalYear", "src.pcapi.core.educational.models.CollectiveOffer", "src.pcapi.core.educational.models.CollectiveBooking", "src.pcapi.core.educational.models.AdageApiResult"], "src.pcapi.core.educational.models.StudentLevels": [], "src.pcapi.core.educational.models.BookingCancellationReasons": [], "src.pcapi.core.educational.models.Ministry": [], "src.pcapi.core.educational.models.BookingStatus": [], "src.pcapi.core.educational.models.EducationalBookingStatus": [], "src.pcapi.core.educational.models.CollectiveOffer": ["<builtin>.property", "sqlalchemy.orm.relationship"], "src.pcapi.core.educational.models.CollectiveOfferTemplate": ["<builtin>.property"], "src.pcapi.core.educational.models.CollectiveStock": ["<builtin>.property", "sqlalchemy.orm.relationship"], "src.pcapi.core.educational.models.EducationalInstitution": [], "src.pcapi.core.educational.models.EducationalYear": [], "src.pcapi.core.educational.models.EducationalDeposit": ["sqlalchemy.orm.relationship", "sqlalchemy.sql.sqltypes.Numeric"], "sqlalchemy.sql.sqltypes.Numeric": [], "src.pcapi.core.educational.models.EducationalRedactor": ["sqlalchemy.orm.relationship"], "src.pcapi.core.educational.models.EducationalBooking": ["sqlalchemy.orm.relationship", "sqlalchemy.sql.schema.Index"], "sqlalchemy.sql.schema.Index": [], "src.pcapi.core.educational.models.CollectiveBooking": ["<builtin>.property", "sqlalchemy.orm.relationship", "sqlalchemy.ext.hybrid.hybrid_property", "sqlalchemy.sql.schema.Index"], "src.pcapi.core.educational.models.AdageApiResult": [], "src.pcapi.core.educational": [], "src.pcapi.core.educational.factories": ["src.pcapi.core.educational.factories.EducationalYearFactory", "src.pcapi.core.educational.factories.CollectiveBookingFactory", "src.pcapi.core.educational.factories.CollectiveOfferTemplateFactory", "src.pcapi.core.educational.factories.EducationalRedactorFactory", "src.pcapi.core.educational.factories.EducationalBookingFactory", "src.pcapi.core.educational.factories.RefusedEducationalBookingFactory", "src.pcapi.core.educational.factories.CollectiveOfferFactory", "src.pcapi.core.educational.factories.PendingEducationalBookingFactory", "src.pcapi.core.educational.factories.EducationalDepositFactory", "src.pcapi.core.educational.factories.EducationalInstitutionFactory", "src.pcapi.core.educational.factories.CollectiveStockFactory"], "src.pcapi.core.educational.factories.CollectiveOfferFactory": ["<builtin>.classmethod", "src.pcapi.core.educational.factories.CollectiveOfferFactory.Meta"], "src.pcapi.core.educational.factories.CollectiveOfferFactory.Meta": [], "src.pcapi.core.educational.factories.CollectiveOfferTemplateFactory": ["src.pcapi.core.educational.factories.CollectiveOfferTemplateFactory.Meta", "<builtin>.classmethod"], "src.pcapi.core.educational.factories.CollectiveOfferTemplateFactory.Meta": [], "src.pcapi.core.educational.factories.CollectiveStockFactory": ["src.pcapi.core.educational.factories.CollectiveStockFactory.Meta"], "src.pcapi.core.educational.factories.CollectiveStockFactory.Meta": [], "src.pcapi.core.educational.factories.EducationalInstitutionFactory": ["src.pcapi.core.educational.factories.EducationalInstitutionFactory.Meta"], "src.pcapi.core.educational.factories.EducationalInstitutionFactory.Meta": [], "src.pcapi.core.educational.factories.EducationalYearFactory": ["src.pcapi.core.educational.factories.EducationalYearFactory.Meta"], "src.pcapi.core.educational.factories.EducationalYearFactory.Meta": [], "src.pcapi.core.educational.factories.CollectiveBookingFactory": ["src.pcapi.core.educational.factories.CollectiveBookingFactory.Meta"], "src.pcapi.core.educational.factories.CollectiveBookingFactory.Meta": [], "src.pcapi.core.educational.factories.EducationalDepositFactory": ["src.pcapi.core.educational.factories.EducationalDepositFactory.Meta"], "src.pcapi.core.educational.factories.EducationalDepositFactory.Meta": [], "src.pcapi.core.educational.factories.EducationalRedactorFactory": ["src.pcapi.core.educational.factories.EducationalRedactorFactory.Meta"], "src.pcapi.core.educational.factories.EducationalRedactorFactory.Meta": [], "src.pcapi.core.educational.factories.EducationalBookingFactory": ["src.pcapi.core.educational.factories.EducationalBookingFactory.Meta"], "src.pcapi.core.educational.factories.EducationalBookingFactory.Meta": [], "src.pcapi.core.educational.factories.PendingEducationalBookingFactory": [], "src.pcapi.core.educational.factories.RefusedEducationalBookingFactory": [], "src.pcapi.core.educational.api": [], "src.pcapi.core.educational.utils": [], "src.pcapi.core.educational.exceptions": ["src.pcapi.core.educational.exceptions.EducationalDepositNotFound", "src.pcapi.core.educational.exceptions.EducationalStockAlreadyExists", "src.pcapi.core.educational.exceptions.BookingIsCancelled", "src.pcapi.core.educational.exceptions.EducationalBookingIsRefused", "src.pcapi.core.educational.exceptions.EducationalBookingNotRefusable", "src.pcapi.core.educational.exceptions.StockNotBookable", "src.pcapi.core.educational.exceptions.MissingRequiredRedactorInformation", "src.pcapi.core.educational.exceptions.OfferIsNotEvent", "src.pcapi.core.educational.exceptions.EducationalBookingNotFound", "src.pcapi.core.educational.exceptions.EducationalInstitutionUnknown", "src.pcapi.core.educational.exceptions.EducationalYearNotFound", "src.pcapi.core.educational.exceptions.OfferIsNotEducational", "src.pcapi.core.educational.exceptions.InsufficientTemporaryFund", "src.pcapi.core.educational.exceptions.EducationalBookingAlreadyCancelled", "src.pcapi.core.educational.exceptions.OfferIsNotShowcase", "src.pcapi.core.educational.exceptions.InsufficientFund"], "src.pcapi.core.educational.exceptions.EducationalInstitutionUnknown": [], "src.pcapi.core.educational.exceptions.StockNotBookable": [], "src.pcapi.core.educational.exceptions.EducationalYearNotFound": [], "src.pcapi.core.educational.exceptions.OfferIsNotEducational": [], "src.pcapi.core.educational.exceptions.OfferIsNotEvent": [], "src.pcapi.core.educational.exceptions.InsufficientFund": [], "src.pcapi.core.educational.exceptions.InsufficientTemporaryFund": [], "src.pcapi.core.educational.exceptions.EducationalDepositNotFound": [], "src.pcapi.core.educational.exceptions.EducationalBookingNotFound": [], "src.pcapi.core.educational.exceptions.EducationalBookingNotRefusable": [], "src.pcapi.core.educational.exceptions.EducationalBookingAlreadyCancelled": [], "src.pcapi.core.educational.exceptions.EducationalBookingIsRefused": [], "src.pcapi.core.educational.exceptions.BookingIsCancelled": [], "src.pcapi.core.educational.exceptions.MissingRequiredRedactorInformation": [], "src.pcapi.core.educational.exceptions.EducationalStockAlreadyExists": [], "src.pcapi.core.educational.exceptions.OfferIsNotShowcase": [], "src.pcapi.core.educational.testing": [], "src.pcapi.core.educational.repository": [], "src.pcapi.core.educational.validation": [], "src.pcapi.core.educational.adage_backends.adage": ["src.pcapi.core.educational.adage_backends.adage.AdageHttpClient"], "src.pcapi.core.educational.adage_backends.adage.AdageHttpClient": [], "src.pcapi.core.educational.adage_backends": [], "src.pcapi.core.educational.adage_backends.logger": ["src.pcapi.core.educational.adage_backends.logger.AdageLoggerClient"], "src.pcapi.core.educational.adage_backends.logger.AdageLoggerClient": [], "src.pcapi.core.educational.adage_backends.testing": ["src.pcapi.core.educational.adage_backends.testing.AdageSpyClient"], "src.pcapi.core.educational.adage_backends.testing.AdageSpyClient": [], "src.pcapi.core.educational.adage_backends.base": ["src.pcapi.core.educational.adage_backends.base.AdageClient"], "src.pcapi.core.educational.adage_backends.base.AdageClient": [], "src.pcapi.core.cultural_survey.models": ["src.pcapi.core.cultural_survey.models.CulturalSurveyQuestionEnum"], "src.pcapi.core.cultural_survey.models.CulturalSurveyQuestionEnum": [], "src.pcapi.core.cultural_survey.cultural_survey": ["src.pcapi.core.cultural_survey.cultural_survey.CulturalSurveyAnswer", "src.pcapi.core.cultural_survey.cultural_survey.CulturalSurveyQuestion", "enum.Enum"], "src.pcapi.core.cultural_survey.cultural_survey.CulturalSurveyAnswer": [], "src.pcapi.core.cultural_survey.cultural_survey.CulturalSurveyQuestion": [], "enum.Enum": [], "src.pcapi.core.users.models": ["src.pcapi.core.users.models.Token", "src.pcapi.core.users.models.TokenType", "src.pcapi.core.users.models.UserEmailHistory", "src.pcapi.core.users.models.EligibilityType", "src.pcapi.core.users.models.ExpenseDomain", "src.pcapi.core.users.models.Credit", "src.pcapi.core.users.models.UserRole", "src.pcapi.core.users.models.SubscriptionState", "src.pcapi.core.users.models.GenderEnum", "src.pcapi.core.users.models.User", "src.pcapi.core.users.models.EmailHistoryEventTypeEnum", "src.pcapi.core.users.models.UserSuspension", "src.pcapi.core.users.models.ActivityEnum", "src.pcapi.core.users.models.DomainsCredit", "src.pcapi.core.users.models.Favorite", "src.pcapi.core.users.models.PhoneValidationStatusType", "src.pcapi.core.users.models.SchoolTypeEnum", "src.pcapi.core.users.models.NotificationSubscriptions"], "src.pcapi.core.users.models.TokenType": [], "src.pcapi.core.users.models.PhoneValidationStatusType": [], "src.pcapi.core.users.models.Token": [], "src.pcapi.core.users.models.UserRole": [], "src.pcapi.core.users.models.EligibilityType": [], "src.pcapi.core.users.models.NotificationSubscriptions": [], "src.pcapi.core.users.models.SubscriptionState": [], "src.pcapi.core.users.models.ActivityEnum": [], "src.pcapi.core.users.models.SchoolTypeEnum": [], "src.pcapi.core.users.models.GenderEnum": [], "src.pcapi.core.users.models.User": ["dataclasses.asdict", "<builtin>.classmethod", "sqlalchemy.ext.hybrid.hybrid_property", "<builtin>.property"], "dataclasses.asdict": [], "src.pcapi.core.users.models.ExpenseDomain": [], "src.pcapi.core.users.models.Credit": [], "src.pcapi.core.users.models.DomainsCredit": [], "src.pcapi.core.users.models.Favorite": [], "src.pcapi.core.users.models.EmailHistoryEventTypeEnum": [], "src.pcapi.core.users.models.UserEmailHistory": ["sqlalchemy.ext.hybrid.hybrid_property", "<builtin>.classmethod"], "src.pcapi.core.users.models.UserSuspension": [], "src.pcapi.core.users.constants": ["<builtin>.set", "src.pcapi.core.users.constants.SuspensionEventType", "src.pcapi.core.users.constants.SuspensionReason"], "src.pcapi.core.users.constants.SuspensionReason": [], "src.pcapi.core.users.constants.SuspensionEventType": [], "src.pcapi.core.users": [], "src.pcapi.core.users.factories": ["src.pcapi.core.users.factories.UserEmailHistoryFactory", "src.pcapi.core.users.factories.UserSuspensionFactory", "src.pcapi.core.users.factories.FavoriteFactory", "src.pcapi.core.users.factories.TokenFactory", "src.pcapi.core.users.factories.UnderageBeneficiaryFactory", "src.pcapi.core.users.factories.UserFactory", "src.pcapi.core.users.factories.EmailAdminValidationEntryFactory", "src.pcapi.core.users.factories.DepositGrantFactory", "src.pcapi.core.users.factories.ResetPasswordToken", "src.pcapi.core.users.factories.EmailValidationEntryFactory", "src.pcapi.core.users.factories.BeneficiaryImportStatusFactory", "src.pcapi.core.users.factories.EduconnectUserFactory", "src.pcapi.core.users.factories.ProFactory", "src.pcapi.core.users.factories.UserSessionFactory", "src.pcapi.core.users.factories.EmailUpdateEntryFactory", "src.pcapi.core.users.factories.AdminFactory", "src.pcapi.core.users.factories.BeneficiaryGrant18Factory", "src.pcapi.core.users.factories.BeneficiaryImportFactory", "src.pcapi.core.users.factories.EmailValidationToken"], "src.pcapi.core.users.factories.BeneficiaryImportStatusFactory": ["src.pcapi.core.users.factories.BeneficiaryImportStatusFactory.Meta"], "src.pcapi.core.users.factories.BeneficiaryImportStatusFactory.Meta": [], "src.pcapi.core.users.factories.BeneficiaryImportFactory": ["src.pcapi.core.users.factories.BeneficiaryImportFactory.Meta"], "src.pcapi.core.users.factories.BeneficiaryImportFactory.Meta": [], "src.pcapi.core.users.factories.UserFactory": ["datetime.time", "datetime.date", "src.pcapi.core.users.factories.UserFactory.Meta", "<builtin>.classmethod"], "src.pcapi.core.users.factories.UserFactory.Meta": [], "datetime.time": [], "src.pcapi.core.users.factories.AdminFactory": ["src.pcapi.core.users.factories.AdminFactory.Meta", "<builtin>.classmethod"], "src.pcapi.core.users.factories.AdminFactory.Meta": [], "src.pcapi.core.users.factories.BeneficiaryGrant18Factory": ["src.pcapi.core.users.factories.BeneficiaryGrant18Factory.Meta", "<builtin>.classmethod", "factory.declarations.LazyAttribute"], "src.pcapi.core.users.factories.BeneficiaryGrant18Factory.Meta": [], "src.pcapi.core.users.factories.UnderageBeneficiaryFactory": ["src.pcapi.core.users.factories.UnderageBeneficiaryFactory.Params", "factory.declarations.LazyAttribute"], "src.pcapi.core.users.factories.UnderageBeneficiaryFactory.Params": [], "src.pcapi.core.users.factories.ProFactory": ["<builtin>.classmethod", "src.pcapi.core.users.factories.ProFactory.Meta"], "src.pcapi.core.users.factories.ProFactory.Meta": [], "src.pcapi.core.users.factories.TokenFactory": ["src.pcapi.core.users.factories.TokenFactory.Meta"], "src.pcapi.core.users.factories.TokenFactory.Meta": [], "src.pcapi.core.users.factories.ResetPasswordToken": [], "src.pcapi.core.users.factories.EmailValidationToken": [], "src.pcapi.core.users.factories.UserSessionFactory": ["<builtin>.classmethod", "src.pcapi.core.users.factories.UserSessionFactory.Meta"], "src.pcapi.core.users.factories.UserSessionFactory.Meta": [], "src.pcapi.core.users.factories.FavoriteFactory": ["src.pcapi.core.users.factories.FavoriteFactory.Meta"], "src.pcapi.core.users.factories.FavoriteFactory.Meta": [], "src.pcapi.core.users.factories.DepositGrantFactory": ["src.pcapi.core.users.factories.DepositGrantFactory.Meta", "<builtin>.classmethod", "factory.declarations.LazyAttribute"], "src.pcapi.core.users.factories.DepositGrantFactory.Meta": [], "src.pcapi.core.users.factories.EduconnectUserFactory": ["src.pcapi.core.users.factories.EduconnectUserFactory.Meta", "src.pcapi.core.users.factories.EduconnectUserFactory.Params", "factory.declarations.LazyAttribute"], "src.pcapi.core.users.factories.EduconnectUserFactory.Meta": [], "src.pcapi.core.users.factories.EduconnectUserFactory.Params": [], "src.pcapi.core.users.factories.UserEmailHistoryFactory": ["src.pcapi.core.users.factories.UserEmailHistoryFactory.Meta"], "src.pcapi.core.users.factories.UserEmailHistoryFactory.Meta": [], "src.pcapi.core.users.factories.EmailUpdateEntryFactory": [], "src.pcapi.core.users.factories.EmailValidationEntryFactory": [], "src.pcapi.core.users.factories.EmailAdminValidationEntryFactory": [], "src.pcapi.core.users.factories.UserSuspensionFactory": ["src.pcapi.core.users.factories.UserSuspensionFactory.Meta"], "src.pcapi.core.users.factories.UserSuspensionFactory.Meta": [], "src.pcapi.core.users.api": ["contextlib.contextmanager", "<builtin>.object"], "src.pcapi.core.users.utils": [], "src.pcapi.core.users.exceptions": ["src.pcapi.core.users.exceptions.UnderAgeUserException", "src.pcapi.core.users.exceptions.UserAlreadyExistsException", "src.pcapi.core.users.exceptions.NotValidCode", "src.pcapi.core.users.exceptions.UnvalidatedEmail", "src.pcapi.core.users.exceptions.SMSSendingLimitReached", "src.pcapi.core.users.exceptions.EmailUpdateTokenExists", "src.pcapi.core.users.exceptions.UserAlreadyBeneficiary", "src.pcapi.core.users.exceptions.EmailUpdateLimitReached", "src.pcapi.core.users.exceptions.PhoneVerificationCodeSendingException", "src.pcapi.core.users.exceptions.EmailNotSent", "src.pcapi.core.users.exceptions.InvalidPhoneNumber", "src.pcapi.core.users.exceptions.InvalidIdentifier", "src.pcapi.core.users.exceptions.EmailExistsError", "src.pcapi.core.users.exceptions.PhoneVerificationException", "src.pcapi.core.users.exceptions.EmailUpdateInvalidPassword", "src.pcapi.core.users.exceptions.PhoneValidationAttemptsLimitReached", "src.pcapi.core.users.exceptions.UserDoesNotExist", "src.pcapi.core.users.exceptions.MissingEmailInMetadataException", "src.pcapi.core.users.exceptions.ExpiredCode", "src.pcapi.core.users.exceptions.InvalidCountryCode", "src.pcapi.core.users.exceptions.CredentialsException", "src.pcapi.core.users.exceptions.UserPhoneNumberAlreadyValidated", "src.pcapi.core.users.exceptions.PhoneAlreadyExists", "src.pcapi.core.users.exceptions.InvalidEmailError", "src.pcapi.core.users.exceptions.UnvalidatedAccount", "src.pcapi.core.users.exceptions.IdentityDocumentVerificationException", "src.pcapi.core.users.exceptions.InvalidUserRoleException", "src.pcapi.core.users.exceptions.BlacklistedPhoneNumber"], "src.pcapi.core.users.exceptions.CredentialsException": [], "src.pcapi.core.users.exceptions.InvalidIdentifier": [], "src.pcapi.core.users.exceptions.UnvalidatedAccount": [], "src.pcapi.core.users.exceptions.UserAlreadyExistsException": [], "src.pcapi.core.users.exceptions.UnderAgeUserException": [], "src.pcapi.core.users.exceptions.EmailNotSent": [], "src.pcapi.core.users.exceptions.PhoneVerificationException": [], "src.pcapi.core.users.exceptions.PhoneVerificationCodeSendingException": [], "src.pcapi.core.users.exceptions.SMSSendingLimitReached": [], "src.pcapi.core.users.exceptions.PhoneValidationAttemptsLimitReached": [], "src.pcapi.core.users.exceptions.PhoneAlreadyExists": [], "src.pcapi.core.users.exceptions.UnvalidatedEmail": [], "src.pcapi.core.users.exceptions.UserPhoneNumberAlreadyValidated": [], "src.pcapi.core.users.exceptions.UserAlreadyBeneficiary": [], "src.pcapi.core.users.exceptions.NotValidCode": [], "src.pcapi.core.users.exceptions.ExpiredCode": [], "src.pcapi.core.users.exceptions.InvalidPhoneNumber": [], "src.pcapi.core.users.exceptions.BlacklistedPhoneNumber": [], "src.pcapi.core.users.exceptions.InvalidCountryCode": [], "src.pcapi.core.users.exceptions.UserDoesNotExist": [], "src.pcapi.core.users.exceptions.MissingEmailInMetadataException": [], "src.pcapi.core.users.exceptions.IdentityDocumentVerificationException": [], "src.pcapi.core.users.exceptions.InvalidUserRoleException": [], "src.pcapi.core.users.exceptions.EmailUpdateLimitReached": [], "src.pcapi.core.users.exceptions.EmailUpdateInvalidPassword": [], "src.pcapi.core.users.exceptions.EmailExistsError": [], "src.pcapi.core.users.exceptions.InvalidEmailError": [], "src.pcapi.core.users.exceptions.EmailUpdateTokenExists": [], "src.pcapi.core.users.testing": [], "src.pcapi.core.users.repository": [], "src.pcapi.core.users.external.models": ["src.pcapi.core.users.external.models.UserAttributes", "src.pcapi.core.users.external.models.ProAttributes"], "src.pcapi.core.users.external.models.UserAttributes": [], "src.pcapi.core.users.external.models.ProAttributes": [], "src.pcapi.core.users.external.sendinblue": ["src.pcapi.core.users.external.sendinblue.SendinblueUserUpdateData", "src.pcapi.core.users.external.sendinblue.SendinblueAttributes"], "src.pcapi.core.users.external.sendinblue.SendinblueUserUpdateData": [], "src.pcapi.core.users.external.sendinblue.SendinblueAttributes": ["<builtin>.classmethod"], "src.pcapi.core.users.external.batch": [], "src.pcapi.core.users.external": [], "src.pcapi.core.users.external.user_automations": [], "src.pcapi.core.users.email.update": [], "src.pcapi.core.users.email.send": [], "src.pcapi.core.users.email": [], "src.pcapi.core.users.email.repository": [], "src.pcapi.core.finance.models": ["src.pcapi.core.finance.models.CashflowPricing", "src.pcapi.core.finance.models.PricingLog", "src.pcapi.core.finance.models.InvoiceLineGroup", "src.pcapi.core.finance.models.CashflowStatus", "src.pcapi.core.finance.models.BusinessUnit", "src.pcapi.core.finance.models.PricingLineCategory", "src.pcapi.core.finance.models.Frequency", "src.pcapi.core.finance.models.Pricing", "src.pcapi.core.finance.models.Invoice", "src.pcapi.core.finance.models.BusinessUnitStatus", "src.pcapi.core.finance.models.PricingLogReason", "src.pcapi.core.finance.models.InvoiceLine", "src.pcapi.core.finance.models.PricingStatus", "src.pcapi.core.finance.models.InvoiceCashflow", "src.pcapi.core.finance.models.CashflowBatch", "src.pcapi.core.finance.models.PricingLine", "src.pcapi.core.finance.models.Cashflow", "src.pcapi.core.finance.models.CashflowLog"], "src.pcapi.core.finance.models.PricingStatus": [], "src.pcapi.core.finance.models.BusinessUnitStatus": [], "src.pcapi.core.finance.models.PricingLineCategory": [], "src.pcapi.core.finance.models.PricingLogReason": [], "src.pcapi.core.finance.models.Frequency": [], "src.pcapi.core.finance.models.CashflowStatus": [], "src.pcapi.core.finance.models.BusinessUnit": [], "src.pcapi.core.finance.models.Pricing": [], "src.pcapi.core.finance.models.PricingLine": [], "src.pcapi.core.finance.models.PricingLog": [], "src.pcapi.core.finance.models.Cashflow": ["<builtin>.property"], "src.pcapi.core.finance.models.CashflowLog": [], "src.pcapi.core.finance.models.CashflowPricing": [], "src.pcapi.core.finance.models.CashflowBatch": [], "src.pcapi.core.finance.models.InvoiceLine": ["<builtin>.property"], "src.pcapi.core.finance.models.InvoiceLineGroup": [], "src.pcapi.core.finance.models.Invoice": ["<builtin>.property"], "src.pcapi.core.finance.models.InvoiceCashflow": [], "src.pcapi.core.finance.conf": ["src.pcapi.core.finance.conf.RuleGroups"], "src.pcapi.core.finance.conf.RuleGroups": ["<builtin>.dict"], "<builtin>.dict": [], "src.pcapi.core.finance": [], "src.pcapi.core.finance.factories": ["src.pcapi.core.finance.factories.CashflowFactory", "src.pcapi.core.finance.factories.PricingLogFactory", "src.pcapi.core.finance.factories.InvoiceFactory", "src.pcapi.core.finance.factories.CashflowBatchFactory", "src.pcapi.core.finance.factories.PricingFactory", "src.pcapi.core.finance.factories.PricingLineFactory", "src.pcapi.core.finance.factories.BusinessUnitFactory", "src.pcapi.core.finance.factories.CashflowPricingFactory"], "src.pcapi.core.finance.factories.BusinessUnitFactory": ["src.pcapi.core.finance.factories.BusinessUnitFactory.Meta"], "src.pcapi.core.finance.factories.BusinessUnitFactory.Meta": [], "src.pcapi.core.finance.factories.PricingFactory": ["src.pcapi.core.finance.factories.PricingFactory.Meta", "factory.declarations.LazyAttribute"], "src.pcapi.core.finance.factories.PricingFactory.Meta": [], "src.pcapi.core.finance.factories.PricingLineFactory": ["src.pcapi.core.finance.factories.PricingLineFactory.Meta", "factory.declarations.LazyAttribute"], "src.pcapi.core.finance.factories.PricingLineFactory.Meta": [], "src.pcapi.core.finance.factories.PricingLogFactory": ["src.pcapi.core.finance.factories.PricingLogFactory.Meta"], "src.pcapi.core.finance.factories.PricingLogFactory.Meta": [], "src.pcapi.core.finance.factories.InvoiceFactory": ["src.pcapi.core.finance.factories.InvoiceFactory.Meta"], "src.pcapi.core.finance.factories.InvoiceFactory.Meta": [], "src.pcapi.core.finance.factories.CashflowBatchFactory": ["src.pcapi.core.finance.factories.CashflowBatchFactory.Meta"], "src.pcapi.core.finance.factories.CashflowBatchFactory.Meta": [], "src.pcapi.core.finance.factories.CashflowFactory": ["src.pcapi.core.finance.factories.CashflowFactory.Meta"], "src.pcapi.core.finance.factories.CashflowFactory.Meta": [], "src.pcapi.core.finance.factories.CashflowPricingFactory": ["src.pcapi.core.finance.factories.CashflowPricingFactory.Meta"], "src.pcapi.core.finance.factories.CashflowPricingFactory.Meta": [], "src.pcapi.core.finance.api": [], "src.pcapi.core.finance.utils": [], "src.pcapi.core.finance.exceptions": ["src.pcapi.core.finance.exceptions.InvalidSiret", "src.pcapi.core.finance.exceptions.FinanceError", "src.pcapi.core.finance.exceptions.NonCancellablePricingError"], "src.pcapi.core.finance.exceptions.FinanceError": [], "src.pcapi.core.finance.exceptions.NonCancellablePricingError": [], "src.pcapi.core.finance.exceptions.InvalidSiret": [], "src.pcapi.core.finance.repository": [], "src.pcapi.core.finance.validation": [], "src.pcapi.core.object_storage": ["src.pcapi.core.object_storage._check_backends_module_paths", "src.pcapi.core.object_storage._check_backend_setting"], "src.pcapi.core.object_storage._check_backends_module_paths": ["pcapi.utils.module_loading.import_string", "<map>.values"], "<map>.values": [], "pcapi.utils.module_loading.import_string": [], "src.pcapi.core.object_storage._check_backend_setting": ["<builtin>.RuntimeError", "<builtin>.any", "<builtin>.str"], "<builtin>.any": [], "<builtin>.str": [], "src.pcapi.core.object_storage.testing": [], "src.pcapi.core.object_storage.backends.ovh": ["src.pcapi.core.object_storage.backends.ovh.OVHBackend"], "src.pcapi.core.object_storage.backends.ovh.OVHBackend": [], "src.pcapi.core.object_storage.backends.local": ["src.pcapi.core.object_storage.backends.local.LocalBackend"], "src.pcapi.core.object_storage.backends.local.LocalBackend": [], "src.pcapi.core.object_storage.backends": [], "src.pcapi.core.object_storage.backends.gcp": ["src.pcapi.core.object_storage.backends.gcp.GCPBackend"], "src.pcapi.core.object_storage.backends.gcp.GCPBackend": [], "src.pcapi.core.object_storage.backends.base": ["src.pcapi.core.object_storage.backends.base.BaseBackend"], "src.pcapi.core.object_storage.backends.base.BaseBackend": [], "src.pcapi.core.categories.categories": ["<builtin>.isinstance", "<builtin>.locals", "<builtin>.set", "enum.Enum", "src.pcapi.core.categories.categories.Category"], "src.pcapi.core.categories.categories.Category": [], "<builtin>.locals": [], "<builtin>.isinstance": [], "src.pcapi.core.categories.subcategories": ["<builtin>.isinstance", "src.pcapi.core.categories.subcategories.Subcategory", "<builtin>.locals", "src.pcapi.core.categories.subcategories.ReimbursementRuleChoices", "<builtin>.set", "enum.Enum", "src.pcapi.core.categories.subcategories.SearchGroups", "src.pcapi.core.categories.subcategories.OnlineOfflinePlatformChoices", "src.pcapi.core.categories.subcategories.HomepageLabels"], "src.pcapi.core.categories.subcategories.OnlineOfflinePlatformChoices": [], "src.pcapi.core.categories.subcategories.SearchGroups": [], "src.pcapi.core.categories.subcategories.HomepageLabels": [], "src.pcapi.core.categories.subcategories.ReimbursementRuleChoices": [], "src.pcapi.core.categories.subcategories.Subcategory": [], "src.pcapi.core.categories.conf": [], "src.pcapi.core.categories": [], "src.pcapi.core.reference.models": ["src.pcapi.core.reference.models.ReferenceScheme"], "src.pcapi.core.reference.models.ReferenceScheme": ["<builtin>.property", "<builtin>.classmethod"], "src.pcapi.core.reference": [], "src.pcapi.core.reference.factories": ["src.pcapi.core.reference.factories.ReferenceSchemeFactory"], "src.pcapi.core.reference.factories.ReferenceSchemeFactory": ["src.pcapi.core.reference.factories.ReferenceSchemeFactory.Meta", "<builtin>.classmethod"], "src.pcapi.core.reference.factories.ReferenceSchemeFactory.Meta": [], "src.pcapi.core.reference.exceptions": ["src.pcapi.core.reference.exceptions.ReferenceIncrementWithoutLock"], "src.pcapi.core.reference.exceptions.ReferenceIncrementWithoutLock": [], "src.pcapi.model_creators.specific_creators": ["datetime.timedelta"], "src.pcapi.model_creators": [], "src.pcapi.model_creators.generic_creators": [], "src.pcapi.serialization.decorator": [], "src.pcapi.serialization": [], "src.pcapi.serialization.utils": [], "src.pcapi.serialization.spec_tree": ["src.pcapi.serialization.spec_tree.ExtendResponse", "src.pcapi.serialization.spec_tree.ExtendedSpecTree"], "src.pcapi.serialization.spec_tree.ExtendedSpecTree": [], "src.pcapi.serialization.spec_tree.ExtendResponse": [], "src.pcapi.emails": [], "src.pcapi.emails.offer_report": [], "src.pcapi.emails.new_offerer_validated_withdrawal_terms": [], "src.pcapi.emails.beneficiary_activation": [], "src.pcapi.admin.fields": ["src.pcapi.admin.fields.SelectMultipleFieldWithOptgroups"], "src.pcapi.admin.fields.SelectMultipleFieldWithOptgroups": [], "src.pcapi.admin.templating": [], "src.pcapi.admin": [], "src.pcapi.admin.widgets": ["src.pcapi.admin.widgets.DateInputWithConstraint", "src.pcapi.admin.widgets.AutocompleteSelectWidget", "src.pcapi.admin.widgets.SelectWithOptgroups"], "src.pcapi.admin.widgets.AutocompleteSelectWidget": [], "src.pcapi.admin.widgets.DateInputWithConstraint": [], "src.pcapi.admin.widgets.SelectWithOptgroups": [], "src.pcapi.admin.permissions": [], "src.pcapi.admin.install": ["src.pcapi.admin.install.Category"], "src.pcapi.admin.install.Category": [], "src.pcapi.admin.autocomplete": ["src.pcapi.admin.autocomplete.Select2ResponseItem", "src.pcapi.admin.autocomplete.Select2Query", "src.pcapi.admin.autocomplete.Select2Response", "pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.admin.autocomplete.Select2Query": [], "src.pcapi.admin.autocomplete.Select2ResponseItem": [], "src.pcapi.admin.autocomplete.Select2Response": [], "src.pcapi.admin.base_configuration": ["src.pcapi.admin.base_configuration.AdminIndexView", "src.pcapi.admin.base_configuration.BaseCustomAdminView", "src.pcapi.admin.base_configuration.BaseAdminView", "src.pcapi.admin.base_configuration.BaseAdminMixin"], "src.pcapi.admin.base_configuration.BaseAdminMixin": ["<builtin>.property"], "src.pcapi.admin.base_configuration.BaseAdminView": [], "src.pcapi.admin.base_configuration.BaseCustomAdminView": [], "src.pcapi.admin.base_configuration.AdminIndexView": ["flask_admin.expose"], "flask_admin.expose": [], "src.pcapi.admin.custom_views.many_offers_operations_view": ["src.pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView", "src.pcapi.admin.custom_views.many_offers_operations_view.SearchForm", "src.pcapi.admin.custom_views.many_offers_operations_view.OfferCriteriaForm"], "src.pcapi.admin.custom_views.many_offers_operations_view.SearchForm": ["wtforms.StringField"], "wtforms.StringField": [], "src.pcapi.admin.custom_views.many_offers_operations_view.OfferCriteriaForm": ["flask_admin.contrib.sqla.fields.QuerySelectMultipleField"], "flask_admin.contrib.sqla.fields.QuerySelectMultipleField": [], "src.pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView": ["flask_admin.expose"], "src.pcapi.admin.custom_views.offerer_view": ["src.pcapi.admin.custom_views.offerer_view.OffererTagFilter", "src.pcapi.admin.custom_views.offerer_view.OffererView"], "src.pcapi.admin.custom_views.offerer_view.OffererTagFilter": [], "src.pcapi.admin.custom_views.offerer_view.OffererView": ["<builtin>.dict"], "src.pcapi.admin.custom_views.category_view": ["src.pcapi.admin.custom_views.category_view.SubcategoryView", "src.pcapi.admin.custom_views.category_view.CategoryView"], "src.pcapi.admin.custom_views.category_view.CategoryView": ["flask_admin.expose"], "src.pcapi.admin.custom_views.category_view.SubcategoryView": ["flask_admin.expose"], "src.pcapi.admin.custom_views.user_offerer_view": ["src.pcapi.admin.custom_views.user_offerer_view.UserOffererView"], "src.pcapi.admin.custom_views.user_offerer_view.UserOffererView": [], "src.pcapi.admin.custom_views.offer_view": ["src.pcapi.admin.custom_views.offer_view.OfferView", "src.pcapi.admin.custom_views.offer_view.SubcategoryFilterEqual", "src.pcapi.admin.custom_views.offer_view.OfferValidationForm", "src.pcapi.admin.custom_views.offer_view.OfferValidationConfigForm", "src.pcapi.admin.custom_views.offer_view.ValidationView", "src.pcapi.admin.custom_views.offer_view.OfferChangeForm", "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview", "src.pcapi.admin.custom_views.offer_view.ExtraDataFilterEqual", "src.pcapi.admin.custom_views.offer_view.CategoryFilterEqual", "src.pcapi.admin.custom_views.offer_view.ImportConfigValidationOfferView"], "src.pcapi.admin.custom_views.offer_view.ExtraDataFilterEqual": [], "src.pcapi.admin.custom_views.offer_view.SubcategoryFilterEqual": [], "src.pcapi.admin.custom_views.offer_view.CategoryFilterEqual": [], "src.pcapi.admin.custom_views.offer_view.OfferChangeForm": ["wtforms.fields.simple.HiddenField", "wtforms.fields.core.BooleanField", "flask_admin.contrib.sqla.fields.QuerySelectMultipleField"], "wtforms.fields.simple.HiddenField": [], "wtforms.fields.core.BooleanField": [], "src.pcapi.admin.custom_views.offer_view.OfferView": ["src.pcapi.admin.custom_views.offer_view.SubcategoryFilterEqual.__init__", "flask_admin.base.expose", "src.pcapi.admin.custom_views.offer_view.CategoryFilterEqual.__init__", "flask_admin.actions.action", "<builtin>.property"], "src.pcapi.admin.custom_views.offer_view.CategoryFilterEqual.__init__": ["<builtin>.super"], "src.pcapi.admin.custom_views.offer_view.SubcategoryFilterEqual.__init__": ["<builtin>.super"], "flask_admin.actions.action": [], "flask_admin.base.expose": [], "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview": ["flask_admin.base.expose"], "src.pcapi.admin.custom_views.offer_view.OfferValidationForm": [], "src.pcapi.admin.custom_views.offer_view.ValidationView": ["append", "flask_admin.base.expose", "flask_admin.actions.action", "<builtin>.property"], "append": [], "src.pcapi.admin.custom_views.offer_view.OfferValidationConfigForm": ["wtforms.validators.InputRequired"], "wtforms.validators.InputRequired": [], "src.pcapi.admin.custom_views.offer_view.ImportConfigValidationOfferView": [], "src.pcapi.admin.custom_views.inapp_messages": ["src.pcapi.admin.custom_views.inapp_messages.MessageView"], "src.pcapi.admin.custom_views.inapp_messages.MessageView": [], "src.pcapi.admin.custom_views.user_email_history_view": ["src.pcapi.admin.custom_views.user_email_history_view.UserEmailHistoryView"], "src.pcapi.admin.custom_views.user_email_history_view.UserEmailHistoryView": ["flask_admin.expose", "<builtin>.dict"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids": ["src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids.SuspendFraudulentUsersByUserIdsView", "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids.SuspendFraudulentUsersByIdsForm"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids.SuspendFraudulentUsersByIdsForm": ["wtforms.FileField"], "wtforms.FileField": [], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids.SuspendFraudulentUsersByUserIdsView": ["flask_admin.expose"], "src.pcapi.admin.custom_views.admin_user_view": ["src.pcapi.admin.custom_views.admin_user_view.AdminUserView"], "src.pcapi.admin.custom_views.admin_user_view.AdminUserView": ["<builtin>.property", "wtforms.validators.DataRequired", "<builtin>.dict", "wtforms.validators.Length"], "wtforms.validators.DataRequired": [], "wtforms.validators.Length": [], "src.pcapi.admin.custom_views.criteria_view": ["src.pcapi.admin.custom_views.criteria_view.CriteriaView"], "src.pcapi.admin.custom_views.criteria_view.CriteriaView": ["<builtin>.dict"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers": ["src.pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers.SuspendFraudulentUsersByEmailProvidersView", "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers.EmailDomainsForm"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers.EmailDomainsForm": ["wtforms.validators.DataRequired", "wtforms.StringField"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers.SuspendFraudulentUsersByEmailProvidersView": ["flask_admin.base.expose"], "src.pcapi.admin.custom_views": [], "src.pcapi.admin.custom_views.venue_provider_view": ["src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView"], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView": ["<builtin>.property", "<builtin>.staticmethod", "<builtin>.dict"], "src.pcapi.admin.custom_views.api_key_view": ["src.pcapi.admin.custom_views.api_key_view.ApiKeyView"], "src.pcapi.admin.custom_views.api_key_view.ApiKeyView": ["<builtin>.dict"], "src.pcapi.admin.custom_views.venue_view": ["src.pcapi.admin.custom_views.venue_view.VenueView", "src.pcapi.admin.custom_views.venue_view.VenueCriteriaFilter", "src.pcapi.admin.custom_views.venue_view.VenueChangeForm"], "src.pcapi.admin.custom_views.venue_view.VenueChangeForm": ["wtforms.fields.simple.HiddenField", "wtforms.fields.core.BooleanField"], "src.pcapi.admin.custom_views.venue_view.VenueCriteriaFilter": [], "src.pcapi.admin.custom_views.venue_view.VenueView": ["<builtin>.property", "<builtin>.staticmethod", "flask_admin.base.expose", "flask_admin.actions.action"], "src.pcapi.admin.custom_views.offerer_tag_view": ["src.pcapi.admin.custom_views.offerer_tag_view.OffererTagView"], "src.pcapi.admin.custom_views.offerer_tag_view.OffererTagView": [], "src.pcapi.admin.custom_views.beneficiary_import_view": ["src.pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView"], "src.pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView": [], "src.pcapi.admin.custom_views.feature_view": ["src.pcapi.admin.custom_views.feature_view.FeatureView"], "src.pcapi.admin.custom_views.feature_view.FeatureView": [], "src.pcapi.admin.custom_views.pro_user_view": ["src.pcapi.admin.custom_views.pro_user_view.ProUserView"], "src.pcapi.admin.custom_views.pro_user_view.ProUserView": ["<builtin>.property", "<builtin>.dict"], "src.pcapi.admin.custom_views.allocine_pivot_view": ["src.pcapi.admin.custom_views.allocine_pivot_view.AllocinePivotView"], "src.pcapi.admin.custom_views.allocine_pivot_view.AllocinePivotView": [], "src.pcapi.admin.custom_views.partner_user_view": ["src.pcapi.admin.custom_views.partner_user_view.PartnerUserView"], "src.pcapi.admin.custom_views.partner_user_view.PartnerUserView": ["<builtin>.property", "<builtin>.dict"], "src.pcapi.admin.custom_views.booking_view": ["src.pcapi.admin.custom_views.booking_view.SearchForm", "src.pcapi.admin.custom_views.booking_view.BookingView", "src.pcapi.admin.custom_views.booking_view.CancelForm", "src.pcapi.admin.custom_views.booking_view.MarkAsUsedForm"], "src.pcapi.admin.custom_views.booking_view.SearchForm": ["wtforms.StringField"], "src.pcapi.admin.custom_views.booking_view.MarkAsUsedForm": [], "src.pcapi.admin.custom_views.booking_view.CancelForm": [], "src.pcapi.admin.custom_views.booking_view.BookingView": ["flask_admin.expose"], "src.pcapi.admin.custom_views.provider_view": ["src.pcapi.admin.custom_views.provider_view.ProviderView"], "src.pcapi.admin.custom_views.provider_view.ProviderView": [], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view": ["src.pcapi.admin.custom_views.custom_reimbursement_rule_view._get_subcategory_choices", "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView", "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.EditForm", "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.AddForm"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view._get_subcategory_choices": ["<builtin>.sorted"], "<builtin>.sorted": [], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.AddForm": ["src.pcapi.admin.custom_views.custom_reimbursement_rule_view.AddForm.Meta"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.AddForm.Meta": [], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.EditForm": [], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView": ["<builtin>.property"], "src.pcapi.admin.custom_views.beneficiary_user_view": ["src.pcapi.admin.custom_views.beneficiary_user_view.FilterByDepositTypeNotEqual", "src.pcapi.admin.custom_views.beneficiary_user_view.FilterByDepositTypeEqual", "src.pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView"], "src.pcapi.admin.custom_views.beneficiary_user_view.FilterByDepositTypeEqual": [], "src.pcapi.admin.custom_views.beneficiary_user_view.FilterByDepositTypeNotEqual": [], "src.pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView": ["<builtin>.property", "wtforms.validators.DataRequired", "<builtin>.dict"], "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin": ["src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin.ResendValidationEmailForm", "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin.ResendValidationEmailMixin"], "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin.ResendValidationEmailForm": [], "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin.ResendValidationEmailMixin": ["<builtin>.property", "flask_admin.expose"], "src.pcapi.admin.custom_views.mixins": [], "src.pcapi.admin.custom_views.mixins.suspension_mixin": ["src.pcapi.admin.custom_views.mixins.suspension_mixin.UnsuspensionForm", "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionMixin", "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionForm"], "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionForm": [], "src.pcapi.admin.custom_views.mixins.suspension_mixin.UnsuspensionForm": [], "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionMixin": ["<builtin>.property", "flask_admin.expose", "flask_admin.actions.action"], "src.pcapi.admin.custom_views.support_view": [], "src.pcapi.admin.custom_views.support_view.api": ["src.pcapi.admin.custom_views.support_view.api.BeneficiaryActivationStatus"], "src.pcapi.admin.custom_views.support_view.api.BeneficiaryActivationStatus": [], "src.pcapi.admin.custom_views.support_view.view": ["src.pcapi.admin.custom_views.support_view.view.IDPieceNumberForm", "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView", "src.pcapi.admin.custom_views.support_view.view.FraudReviewForm"], "src.pcapi.admin.custom_views.support_view.view.FraudReviewForm": ["src.pcapi.admin.custom_views.support_view.view.FraudReviewForm.Meta"], "src.pcapi.admin.custom_views.support_view.view.FraudReviewForm.Meta": [], "src.pcapi.admin.custom_views.support_view.view.IDPieceNumberForm": ["src.pcapi.admin.custom_views.support_view.view.IDPieceNumberForm.Meta"], "src.pcapi.admin.custom_views.support_view.view.IDPieceNumberForm.Meta": [], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView": ["<builtin>.property"], "src.pcapi.admin.custom_views.support_view.utils": [], "src.pcapi.utils.db": ["src.pcapi.utils.db.MagicEnum"], "src.pcapi.utils.db.MagicEnum": ["<builtin>.property"], "src.pcapi.utils.pylint": ["src.pcapi.utils.pylint.BaseModelImportChecker", "src.pcapi.utils.pylint.MarkupSafeChecker"], "src.pcapi.utils.pylint.MarkupSafeChecker": [], "src.pcapi.utils.pylint.BaseModelImportChecker": [], "src.pcapi.utils.rate_limiting": ["flask_limiter.Limiter"], "flask_limiter.Limiter": [], "src.pcapi.utils.token": [], "src.pcapi.utils.human_ids": ["pcapi.utils.blueprint.Blueprint", "src.pcapi.utils.human_ids.NonDehumanizableId"], "pcapi.utils.blueprint.Blueprint": [], "src.pcapi.utils.human_ids.NonDehumanizableId": [], "src.pcapi.utils.mailing": [], "src.pcapi.utils.blueprint": ["src.pcapi.utils.blueprint.Blueprint"], "src.pcapi.utils.blueprint.Blueprint": [], "src.pcapi.utils.rest": [], "src.pcapi.utils.phone_number": ["src.pcapi.utils.phone_number.ParsedPhoneNumber"], "src.pcapi.utils.phone_number.ParsedPhoneNumber": [], "src.pcapi.utils": [], "src.pcapi.utils.custom_keys": [], "src.pcapi.utils.pdf": ["src.pcapi.utils.pdf.PdfMetadata"], "src.pcapi.utils.pdf.PdfMetadata": [], "src.pcapi.utils.includes": [], "src.pcapi.utils.feature": [], "src.pcapi.utils.string_processing": [], "src.pcapi.utils.image_conversion": ["src.pcapi.utils.image_conversion.Coordinates", "pydantic.confloat"], "pydantic.confloat": [], "src.pcapi.utils.image_conversion.Coordinates": [], "src.pcapi.utils.crypto": [], "src.pcapi.utils.json_encoder": ["src.pcapi.utils.json_encoder.EnumJSONEncoder"], "src.pcapi.utils.json_encoder.EnumJSONEncoder": [], "src.pcapi.utils.clean_accents": [], "src.pcapi.utils.health_checker": [], "src.pcapi.utils.settings": [], "src.pcapi.utils.custom_logic": [], "src.pcapi.utils.example_certificate": [], "src.pcapi.utils.requests": ["src.pcapi.utils.requests.Session", "src.pcapi.utils.requests._SessionMixin"], "src.pcapi.utils.requests._SessionMixin": [], "src.pcapi.utils.requests.Session": [], "src.pcapi.utils.sentry": [], "src.pcapi.utils.urls": [], "src.pcapi.utils.date": ["src.pcapi.utils.date.DateTimes", "src.pcapi.utils.date.FrenchParserInfo"], "src.pcapi.utils.date.FrenchParserInfo": [], "src.pcapi.utils.date.DateTimes": [], "src.pcapi.utils.module_loading": [], "src.pcapi.utils.login_manager": [], "src.pcapi.utils.stopwords": ["src.pcapi.utils.stopwords._read_stopwords_file"], "src.pcapi.utils.stopwords._read_stopwords_file": [], "src.pcapi.models.bank_information": ["src.pcapi.models.bank_information.BankInformationStatus", "src.pcapi.models.bank_information.BankInformation"], "src.pcapi.models.bank_information.BankInformationStatus": [], "src.pcapi.models.bank_information.BankInformation": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.Enum", "sqlalchemy.orm.relationship", "sqlalchemy.orm.backref", "sqlalchemy.String"], "src.pcapi.models.offer_mixin": ["src.pcapi.models.offer_mixin.AccessibilityMixin", "src.pcapi.models.offer_mixin.OfferValidationStatus", "src.pcapi.models.offer_mixin.StatusMixin", "src.pcapi.models.offer_mixin.OfferStatus", "src.pcapi.models.offer_mixin.ValidationMixin"], "src.pcapi.models.offer_mixin.OfferStatus": [], "src.pcapi.models.offer_mixin.OfferValidationStatus": [], "src.pcapi.models.offer_mixin.AccessibilityMixin": [], "src.pcapi.models.offer_mixin.StatusMixin": [], "src.pcapi.models.offer_mixin.ValidationMixin": ["<builtin>.property"], "src.pcapi.models.payment_message": ["src.pcapi.models.payment_message.PaymentMessage"], "src.pcapi.models.payment_message.PaymentMessage": ["sqlalchemy.LargeBinary", "sqlalchemy.Column", "sqlalchemy.String"], "sqlalchemy.LargeBinary": [], "src.pcapi.models.user_offerer": ["src.pcapi.models.user_offerer.UserOfferer"], "src.pcapi.models.user_offerer.UserOfferer": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.UniqueConstraint", "sqlalchemy.orm.relationship", "sqlalchemy.orm.backref"], "src.pcapi.models.api_errors": ["src.pcapi.models.api_errors.UnauthorizedError", "src.pcapi.models.api_errors.DecimalCastError", "src.pcapi.models.api_errors.DateTimeCastError", "src.pcapi.models.api_errors.ResourceNotFoundError", "src.pcapi.models.api_errors.UuidCastError", "src.pcapi.models.api_errors.ApiErrors", "src.pcapi.models.api_errors.ResourceGoneError", "src.pcapi.models.api_errors.ForbiddenError"], "src.pcapi.models.api_errors.ApiErrors": [], "src.pcapi.models.api_errors.ResourceGoneError": [], "src.pcapi.models.api_errors.ResourceNotFoundError": [], "src.pcapi.models.api_errors.ForbiddenError": [], "src.pcapi.models.api_errors.UnauthorizedError": [], "src.pcapi.models.api_errors.DecimalCastError": [], "src.pcapi.models.api_errors.DateTimeCastError": [], "src.pcapi.models.api_errors.UuidCastError": [], "src.pcapi.models": ["append", "flask_sqlalchemy.SQLAlchemy"], "flask_sqlalchemy.SQLAlchemy": [], "src.pcapi.models.payment_status": ["src.pcapi.models.payment_status.TransactionStatus", "src.pcapi.models.payment_status.PaymentStatus"], "src.pcapi.models.payment_status.TransactionStatus": [], "src.pcapi.models.payment_status.PaymentStatus": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.Enum", "sqlalchemy.ForeignKey"], "src.pcapi.models.providable_mixin": ["src.pcapi.models.providable_mixin.ProvidableMixin"], "src.pcapi.models.providable_mixin.ProvidableMixin": ["sqlalchemy.ext.declarative.declared_attr", "sqlalchemy.Column", "sqlalchemy.CheckConstraint", "sqlalchemy.dialects.postgresql.ARRAY", "sqlalchemy.String"], "sqlalchemy.ext.declarative.declared_attr": [], "sqlalchemy.dialects.postgresql.ARRAY": [], "src.pcapi.models.extra_data_mixin": ["src.pcapi.models.extra_data_mixin.ExtraDataMixin"], "src.pcapi.models.extra_data_mixin.ExtraDataMixin": ["sqlalchemy.Column"], "src.pcapi.models.feature": ["src.pcapi.models.feature.Feature", "src.pcapi.models.feature.FeatureToggle"], "src.pcapi.models.feature.FeatureToggle": [], "src.pcapi.models.feature.Feature": ["<builtin>.property", "sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.models.beneficiary_import": ["src.pcapi.models.beneficiary_import.BeneficiaryImportSources", "src.pcapi.models.beneficiary_import.BeneficiaryImport"], "src.pcapi.models.beneficiary_import.BeneficiaryImportSources": [], "src.pcapi.models.beneficiary_import.BeneficiaryImport": ["<builtin>.property", "sqlalchemy.orm.relationship", "<builtin>.classmethod", "sqlalchemy.ext.hybrid.hybrid_property"], "src.pcapi.models.has_address_mixin": ["src.pcapi.models.has_address_mixin.HasAddressMixin"], "src.pcapi.models.has_address_mixin.HasAddressMixin": ["sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.models.needs_validation_mixin": ["src.pcapi.models.needs_validation_mixin.NeedsValidationMixin"], "src.pcapi.models.needs_validation_mixin.NeedsValidationMixin": ["<builtin>.property", "sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.models.has_thumb_mixin": ["src.pcapi.models.has_thumb_mixin.HasThumbMixin"], "src.pcapi.models.has_thumb_mixin.HasThumbMixin": ["<builtin>.property", "sqlalchemy.Column", "sqlalchemy.Integer"], "sqlalchemy.Integer": [], "src.pcapi.models.pc_object": ["src.pcapi.models.pc_object.PcObject", "src.pcapi.models.pc_object.DeletedRecordException"], "src.pcapi.models.pc_object.DeletedRecordException": [], "src.pcapi.models.pc_object.PcObject": ["<builtin>.staticmethod", "sqlalchemy.sql.schema.Column"], "sqlalchemy.sql.schema.Column": [], "src.pcapi.models.deactivable_mixin": ["src.pcapi.models.deactivable_mixin.DeactivableMixin"], "src.pcapi.models.deactivable_mixin.DeactivableMixin": ["sqlalchemy.Column"], "src.pcapi.models.product": ["src.pcapi.models.product.Product", "src.pcapi.models.product.BookFormat"], "src.pcapi.models.product.BookFormat": [], "src.pcapi.models.product.Product": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.orm.relationship", "sqlalchemy.sql.expression.true", "sqlalchemy.Index", "sqlalchemy.dialects.postgresql.ARRAY", "<builtin>.property", "sqlalchemy.sql.expression.false", "sqlalchemy.ext.hybrid.hybrid_property", "sqlalchemy.String"], "sqlalchemy.sql.expression.true": [], "sqlalchemy.sql.expression.false": [], "src.pcapi.models.user_session": ["src.pcapi.models.user_session.UserSession"], "src.pcapi.models.user_session.UserSession": ["sqlalchemy.Column", "sqlalchemy.dialects.postgresql.UUID"], "src.pcapi.models.criterion": ["src.pcapi.models.criterion.Criterion"], "src.pcapi.models.criterion.Criterion": ["sqlalchemy.Column", "sqlalchemy.String"], "src.pcapi.models.local_provider_event": ["src.pcapi.models.local_provider_event.LocalProviderEvent", "src.pcapi.models.local_provider_event.LocalProviderEventType"], "src.pcapi.models.local_provider_event.LocalProviderEventType": [], "src.pcapi.models.local_provider_event.LocalProviderEvent": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.Enum", "sqlalchemy.orm.relationship", "sqlalchemy.String"], "src.pcapi.models.offer_criterion": ["src.pcapi.models.offer_criterion.OfferCriterion"], "src.pcapi.models.offer_criterion.OfferCriterion": ["sqlalchemy.orm.relationship", "sqlalchemy.Column", "sqlalchemy.ForeignKey"], "src.pcapi.models.beneficiary_import_status": ["src.pcapi.models.beneficiary_import_status.BeneficiaryImportStatus", "src.pcapi.models.beneficiary_import_status.ImportStatus"], "src.pcapi.models.beneficiary_import_status.ImportStatus": [], "src.pcapi.models.beneficiary_import_status.BeneficiaryImportStatus": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.Enum", "sqlalchemy.orm.relationship", "sqlalchemy.String"], "src.pcapi.models.payment": ["src.pcapi.models.payment.Payment"], "src.pcapi.models.payment.Payment": ["sqlalchemy.ForeignKey", "sqlalchemy.Column", "sqlalchemy.dialects.postgresql.UUID", "sqlalchemy.CheckConstraint", "sqlalchemy.orm.relationship", "<builtin>.property", "sqlalchemy.orm.backref", "sqlalchemy.ext.hybrid.hybrid_property", "sqlalchemy.Numeric", "sqlalchemy.String"], "src.pcapi.models.soft_deletable_mixin": ["src.pcapi.models.soft_deletable_mixin.SoftDeletableMixin"], "src.pcapi.models.soft_deletable_mixin.SoftDeletableMixin": ["sqlalchemy.Column"], "src.pcapi.models.wallet_balance": ["src.pcapi.models.wallet_balance.WalletBalance"], "src.pcapi.models.wallet_balance.WalletBalance": ["<builtin>.classmethod"], "src.pcapi.scheduled_tasks.clock": ["pcapi.scheduled_tasks.decorators.log_cron_with_transaction", "pcapi.utils.blueprint.Blueprint", "pcapi.scheduled_tasks.decorators.cron_require_feature", "pcapi.scheduled_tasks.decorators.cron_context"], "pcapi.scheduled_tasks.decorators.cron_require_feature": [], "pcapi.scheduled_tasks.decorators.log_cron_with_transaction": [], "pcapi.scheduled_tasks.decorators.cron_context": [], "src.pcapi.scheduled_tasks": [], "src.pcapi.scheduled_tasks.logger": ["src.pcapi.scheduled_tasks.logger.CronStatus"], "src.pcapi.scheduled_tasks.logger.CronStatus": [], "src.pcapi.scheduled_tasks.utils": [], "src.pcapi.scheduled_tasks.titelive_clock": ["pcapi.scheduled_tasks.decorators.log_cron_with_transaction", "pcapi.utils.blueprint.Blueprint", "pcapi.scheduled_tasks.decorators.cron_require_feature", "pcapi.scheduled_tasks.decorators.cron_context"], "src.pcapi.scheduled_tasks.algolia_clock": ["pcapi.scheduled_tasks.decorators.log_cron_with_transaction", "pcapi.utils.blueprint.Blueprint", "pcapi.scheduled_tasks.decorators.cron_context"], "src.pcapi.scheduled_tasks.decorators": [], "src.pcapi.scripts.update_providables": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.update_venue_type": [], "src.pcapi.scripts.clean_database": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.add_allocine_internal_ids": [], "src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns": [], "src.pcapi.scripts.batch_update_offer_withdrawal_details_for_offerer": [], "src.pcapi.scripts.grant_wallet_to_existing_users": [], "src.pcapi.scripts.bulk_activate_offers": [], "src.pcapi.scripts.fill_allocine_pivot": ["src.pcapi.scripts.fill_allocine_pivot.read_allocine_csv"], "src.pcapi.scripts.fill_allocine_pivot.read_allocine_csv": ["<builtin>.tuple", "<builtin>.open"], "<builtin>.tuple": [], "src.pcapi.scripts.delete_venue_and_offers_for_venue_id": [], "src.pcapi.scripts.delete_corrupted_allocine_stocks": [], "src.pcapi.scripts.force_19yo_dms_import": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.suspend_fraudulent_beneficiary_users": [], "src.pcapi.scripts.suspend_fraudulent_pro_users": [], "src.pcapi.scripts.bulk_inactivate_offers": [], "src.pcapi.scripts.import_unsubscribed_users": [], "src.pcapi.scripts": [], "src.pcapi.scripts.copy_is_gcu_compatible_to_is_syhnchronization_compatible": [], "src.pcapi.scripts.deactivate_300e_thing_offers": [], "src.pcapi.scripts.bulk_mark_incompatible_via_isbns": [], "src.pcapi.scripts.full_extract_offers": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.sandbox": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.generate_invoices": ["pcapi.utils.blueprint.Blueprint", "<builtin>.str"], "src.pcapi.scripts.find_not_modifiable_venues": [], "src.pcapi.scripts.delete_unused_mediations_and_assets": [], "src.pcapi.scripts.cancel_bookings_during_quarantine": [], "src.pcapi.scripts.install": [], "src.pcapi.scripts.change_some_pro_users_to_beneficiary": [], "src.pcapi.scripts.update_venue_type_codes": [], "src.pcapi.scripts.catching_up_dms_beneficiaries_addresses": [], "src.pcapi.scripts.install_data": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.full_index_offers": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.pro.migrate_has_seen_pro_tutorials": [], "src.pcapi.scripts.pro": [], "src.pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code": [], "src.pcapi.scripts.deactivate_offers_during_quarantine": [], "src.pcapi.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers": [], "src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers": [], "src.pcapi.scripts.user_offerer.delete_user_offerer_from_csv": [], "src.pcapi.scripts.user_offerer": [], "src.pcapi.scripts.booking.fill_individual_booking_deposit_id": [], "src.pcapi.scripts.booking.canceling_token_validation": [], "src.pcapi.scripts.booking": [], "src.pcapi.scripts.booking.notify_soon_to_be_expired_bookings": [], "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file": [], "src.pcapi.scripts.booking.cancel_old_unused_bookings_for_venue": [], "src.pcapi.scripts.booking.handle_expired_bookings": [], "src.pcapi.scripts.booking.correct_bookings_cancel_dates": [], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue": ["src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.UserTask"], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.UserTask": [], "src.pcapi.scripts.external_users.batch_update_users_attributes": [], "src.pcapi.scripts.external_users": [], "src.pcapi.scripts.external_users.commands": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.payment.mark_payments_as_sent": [], "src.pcapi.scripts.payment.add_custom_offer_reimbursement_rule": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.payment.batch": [], "src.pcapi.scripts.payment": [], "src.pcapi.scripts.payment.generate_payments": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.payment.banishment_command": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.payment.update_custom_reimbursements": [], "src.pcapi.scripts.payment.user_recredit": [], "src.pcapi.scripts.payment.batch_steps": [], "src.pcapi.scripts.payment.banishment": [], "src.pcapi.scripts.offerer.import_offerer_from_csv": [], "src.pcapi.scripts.offerer.delete_cascade_offerer_by_id": [], "src.pcapi.scripts.offerer": [], "src.pcapi.scripts.offerer.file_import": ["src.pcapi.scripts.offerer.file_import.OffererNotCreatedException", "src.pcapi.scripts.offerer.file_import.UserNotCreatedException"], "src.pcapi.scripts.offerer.file_import.UserNotCreatedException": [], "src.pcapi.scripts.offerer.file_import.OffererNotCreatedException": [], "src.pcapi.scripts.offerer.generate_and_save_api_key_for_offerer": [], "src.pcapi.scripts.offerer.commands": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.offerer.delete_cascade_venue_by_id": [], "src.pcapi.scripts.provider.check_provider_api": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.algolia_indexing": [], "src.pcapi.scripts.algolia_indexing.indexing": [], "src.pcapi.scripts.algolia_indexing.commands": ["pcapi.utils.blueprint.Blueprint"], "src.pcapi.scripts.educational": [], "src.pcapi.scripts.educational.update_educational_institutions_data": [], "src.pcapi.scripts.educational.import_educational_institutions_and_deposits": [], "src.pcapi.scripts.educational.update_educational_institutions_deposits": [], "src.pcapi.scripts.venue.move_all_offers_for_venue": [], "src.pcapi.scripts.venue": [], "src.pcapi.scripts.venue.modify_allocine_price_rule_for_venue": [], "src.pcapi.scripts.venue.venue_label": [], "src.pcapi.scripts.venue.venue_label.create_venue_labels": [], "src.pcapi.scripts.beneficiary": [], "src.pcapi.scripts.beneficiary.import_users": ["<builtin>.ValueError", "<builtin>.len", "<builtin>.open"], "<builtin>.ValueError": [], "src.pcapi.scripts.beneficiary.archive_dms_applications": [], "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file": [], "src.pcapi.scripts.beneficiary.send_mail_after_idcheck_outage": [], "src.pcapi.scripts.beneficiary.send_dms_application_emails": [], "src.pcapi.scripts.business_unit.reset_venues_invalid_sirets": [], "src.pcapi.scripts.business_unit.purge_virtual_venue_business_units": [], "src.pcapi.scripts.business_unit.create_bu": [], "src.pcapi.scripts.business_unit.rename_invalid_bu": [], "src.pcapi.scripts.stock": [], "src.pcapi.scripts.stock.soft_delete_stock": [], "src.pcapi.scripts.stock.fully_sync_venue": [], "src.pcapi.workers.update_all_offers_active_status_job": ["pcapi.workers.decorators.job"], "pcapi.workers.decorators.job": [], "src.pcapi.workers.worker": ["pcapi.utils.blueprint.Blueprint", "rq.Queue"], "rq.Queue": [], "src.pcapi.workers.update_all_venue_offers_withdrawal_details_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.synchronize_stocks_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.push_notification_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers": [], "src.pcapi.workers.logger": [], "src.pcapi.workers.user_emails_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.suspend_fraudulent_beneficiary_users_by_ids_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.venue_provider_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.update_all_venue_offers_accessibility_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.update_all_venue_offers_email_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.apps_flyer_job": ["src.pcapi.workers.apps_flyer_job.AppsFlyerContext", "src.pcapi.workers.apps_flyer_job.AppsFlyerMissingError", "pcapi.workers.decorators.job"], "src.pcapi.workers.apps_flyer_job.AppsFlyerContext": [], "src.pcapi.workers.apps_flyer_job.AppsFlyerMissingError": [], "src.pcapi.workers.bank_information_job": ["pcapi.workers.decorators.job"], "src.pcapi.workers.decorators": [], "src.pcapi.alembic.env": ["logging.config.fileConfig", "pcapi.models.install_models", "pcapi.alembic.run_migrations.run_migrations"], "logging.config.fileConfig": [], "pcapi.alembic.run_migrations.run_migrations": [], "src.pcapi.alembic.run_migrations": [], "src.pcapi.alembic.versions.20220119T103457_6940a75b4417_finance_add_index_on_pricingline_pricingid": [], "src.pcapi.alembic.versions.20210903_b15889430729_add_user_extradata": [], "src.pcapi.alembic.versions.20211108T174107_1f2f37dfc23d_finance_new_pricing_related_models": [], "src.pcapi.alembic.versions.20220224T165920_5c3a992204ff_": [], "src.pcapi.alembic.versions.20211027T152651_3908af1a50e5_add_beneficiary_import_eligibility_type": [], "src.pcapi.alembic.versions.20220224T103255_851568296541_post_tag_v176": [], "src.pcapi.alembic.versions.20211216T082915_d8d88115998e_add_business_unit_status_column": [], "src.pcapi.alembic.versions.20220224T150759_24321401ffaa_un_nullable_fields_for_collective_booking": [], "src.pcapi.alembic.versions.20220214T145738_e9ddaad94158_create_new_index_offer-jsondata-isbn": [], "src.pcapi.alembic.versions.20210903_d324e17d5314_remove_feature_flag_search_algolia": ["src.pcapi.alembic.versions.20210903_d324e17d5314_remove_feature_flag_search_algolia.DummyFeatureToggle"], "src.pcapi.alembic.versions.20210903_d324e17d5314_remove_feature_flag_search_algolia.DummyFeatureToggle": [], "src.pcapi.alembic.versions.20220110T155918_d71dd05eae76_edit_invoice_url": [], "src.pcapi.alembic.versions.20210629_9feb58815d16_update_check_booking_trigger": [], "src.pcapi.alembic.versions.20210602_380c28602547_add_categoryid_to_offer": [], "src.pcapi.alembic.versions.20210520_c83abec806af_offer_ranking_weight": [], "src.pcapi.alembic.versions.20220214T145740_e9ddaad94160_drop_obsolete_index_product-extradata-isbn": [], "src.pcapi.alembic.versions.20211013_ee90200aa0db_booking_deposit_id": [], "src.pcapi.alembic.versions.20210523_6999a11484ba_has_completed_id_check": [], "src.pcapi.alembic.versions.20210602_0006642d26a1_add_index_on_offer_subcategoryid": [], "src.pcapi.alembic.versions.20210831_7ec4136ab598_add_type_to_deposit": [], "src.pcapi.alembic.versions.20211125T162121_c86504df1384_create_index_on_offer_s_isbn": [], "src.pcapi.alembic.versions.20220125T142443_6bb141d40d77_deposit_unique_constraint": [], "src.pcapi.alembic.versions.20210805_c016332e7bfb_drop_iris_tables": [], "src.pcapi.alembic.versions.20210430_20290f0b5d4f_migrate_id_at_provider_part_1": [], "src.pcapi.alembic.versions.20210614_aaad66e34f30_add_app_search_feature_flags": [], "src.pcapi.alembic.versions.20210223_b00c0a0dec8f_criterion_scoredelta_nullable": [], "src.pcapi.alembic.versions.20210525_963e6e163cf0_add_ff_display_dms_redirection": [], "src.pcapi.alembic.versions.20210420_926c8df53762_fix_server_defaults": [], "src.pcapi.alembic.versions.20210415_dd8b39c4beee_add_not_null_constraint_on_allocine_id_3": [], "src.pcapi.alembic.versions.20220223T135219_71e86ae4d410_split_collective_models": [], "src.pcapi.alembic.versions.20210901_83d275671e3e_remove_feature_flag_synchronize_algolia": ["src.pcapi.alembic.versions.20210901_83d275671e3e_remove_feature_flag_synchronize_algolia.DummyFeatureToggle"], "src.pcapi.alembic.versions.20210901_83d275671e3e_remove_feature_flag_synchronize_algolia.DummyFeatureToggle": [], "src.pcapi.alembic.versions.20210531_8bdc4dd58856_feature_enable_native_id_check_verbose_debugging": [], "src.pcapi.alembic.versions.20210902_ab2f58396aa5_add_not_null_booking_offererid_step_1": [], "src.pcapi.alembic.versions.20210629_3c46248f7143_educational_institution_add_adageid_": [], "src.pcapi.alembic.versions.20210630_f51bb1ff6688_remove_offersubcategory": [], "src.pcapi.alembic.versions.20210607_2a4bf5f4d9c2_validate_update_payment_constraint": [], "src.pcapi.alembic.versions.20211115T080556_32c7ca9be253_add_not_null_venue_provider_venue_id_at_offer_provider_step_4": [], "src.pcapi.alembic.versions.20210630_61b7c21523b0_remove_subcategory_fk_from_offer": [], "src.pcapi.alembic.versions.20220203T101201_fafc5b6c2398_remove_offer_idatproviders_column": [], "src.pcapi.alembic.versions.20211117T110737_8794f331080c_update_beneficiaryfraudcheck": [], "src.pcapi.alembic.versions.20210421_40754eda1d0f_enable_phone_validation_feature": [], "src.pcapi.alembic.versions.20210603_a5c58daf6917_create_table_offer_sub_category": [], "src.pcapi.alembic.versions.20210317_08e0af71bcfe_add_apiurl_providers": [], "src.pcapi.alembic.versions.20210414_e8d9aaa3890e_replace_awaiting_by_pending_on_offer_": [], "src.pcapi.alembic.versions.20220125T092220_dc678612fef4_deposit_ix_user_type": [], "src.pcapi.alembic.versions.20210617_84706f806e3d_feature_idcheck_address_autocompletion": [], "src.pcapi.alembic.versions.20211115T073416_a0a822d365ac_add_not_null_venue_provider_venue_id_at_offer_provider_step_1": [], "src.pcapi.alembic.versions.20210318_508c975a420b_add_stock_dnbookedquantity": [], "src.pcapi.alembic.versions.20211019T122136_e1aaf0bb1ebb_drop_product_type": [], "src.pcapi.alembic.versions.20211018T134257_d65f31d992fa_add_not_null_constraint_on_product_subcategory_id_step_4": [], "src.pcapi.alembic.versions.20210628_86f064fa42a7_deposit_add_educational_deposit_table": [], "src.pcapi.alembic.versions.20211210T142011_608d334310cd_add_fraud_check_eligibility_type": [], "src.pcapi.alembic.versions.20210629_f91ee203522a_add_educational_booking_model": [], "src.pcapi.alembic.versions.20210519_e63d336e9da8_populate_provider_prices_in_cents": [], "src.pcapi.alembic.versions.20210517_40afbb732e70_remove_activity_triggers_and_function": [], "src.pcapi.alembic.versions.20210707_7e3f507fd0f3_adding_offerid_and_venueid_to_bookings": [], "src.pcapi.alembic.versions.20210902_323451197018_add_not_null_booking_offererid_step_2": [], "src.pcapi.alembic.versions.20211117T155421_9ea402b1785f_finance_add_cashflow_models": [], "src.pcapi.alembic.versions.20211013_25ed998d46e8_subscription_message_s_popover_icon_is_": [], "src.pcapi.alembic.versions.20210319_0f9f0a4ae98d_fill_missing_department_code_on_user": [], "src.pcapi.alembic.versions.20210527_77d29ab6c382_add_index_for_last_validation_date": [], "src.pcapi.alembic.versions.20210523_0fe847be8089_feature_enable_idcheck_fraud_control": [], "src.pcapi.alembic.versions.20220224T135029_ca95cbf376a1_create_offerer_tag_table": [], "src.pcapi.alembic.versions.20211103T151720_bf9641a0f5a8_ine_whitelist_table": [], "src.pcapi.alembic.versions.20210317_182e2a6284e0_add_not_null_venue_creation_date_step_3": [], "src.pcapi.alembic.versions.20220126T165050_a19e526170d0_finance_add_cashflow_businessunitid": [], "src.pcapi.alembic.versions.20220221T195851_ddedcf7e2c67_cascade_for_offer_criterion_criterionid": [], "src.pcapi.alembic.versions.20210902_2c3e910c9109_add_not_null_booking_venuid_step_4": [], "src.pcapi.alembic.versions.20210630_29c8b67b67a5_add_beneficiary_validation_after_fraud_": [], "src.pcapi.alembic.versions.20210419_ddd5b5980f31_create_activation_code_table": [], "src.pcapi.alembic.versions.20210310_fccbd701588b_remove_pro_tuto_feature_flipping": [], "src.pcapi.alembic.versions.20210607_d93ff67e391f_add_custom_reimbursement_rule": [], "src.pcapi.alembic.versions.20210521_e442fb5ac4e6_feature_disable_booking_recap": ["src.pcapi.alembic.versions.20210521_e442fb5ac4e6_feature_disable_booking_recap.FeatureToggle"], "src.pcapi.alembic.versions.20210521_e442fb5ac4e6_feature_disable_booking_recap.FeatureToggle": [], "src.pcapi.alembic.versions.20210630_5c5141274495_add_withdrawalDetails_to_venue": [], "src.pcapi.alembic.versions.20210602_239aff25d73d_add_fk_constraint_on_categoryid": [], "src.pcapi.alembic.versions.20210826_e65789e45741_add_feature_toggle_eac_indiv": [], "src.pcapi.alembic.versions.20210316_ee190d0fbe21_remove_apikey_from_providers": [], "src.pcapi.alembic.versions.20210520_bcfd5eaf856f_remove_webapp_profile_page_feature_flipping": [], "src.pcapi.alembic.versions.20220106T150402_d308a590eaf4_change_database_save_cancellation_date_trigger": [], "src.pcapi.alembic.versions.20211018T132002_1345cc1cffe4_add_not_null_constraint_on_offer_subcategory_id_step_3": [], "src.pcapi.alembic.versions.20211115T080547_010aba57cb3e_add_not_null_venue_provider_venue_id_at_offer_provider_step_2": [], "src.pcapi.alembic.versions.20210625_d49958abc723_create_educational_institution_table": [], "src.pcapi.alembic.versions.20220225T091343_4406f656b314_cascade_for_venue_criterion_criterionid": [], "src.pcapi.alembic.versions.20211029T085042_9e5ae228e4ab_add_is_synchronization_compatible_product": [], "src.pcapi.alembic.versions.20210524_9908a2709641_add_idx_offer_validation": [], "src.pcapi.alembic.versions.20220211T171758_0d942b3261b7_create_venue_criterion_table": [], "src.pcapi.alembic.versions.20220214T145737_e9ddaad94157_create_new_index_product-jsondata-isbn": [], "src.pcapi.alembic.versions.20220201T142758_6953dca6e622_add_not_null_constraint_on_booking_status_column_step3": [], "src.pcapi.alembic.versions.20210628_f0cad4632e56_create_educational_year_table": [], "src.pcapi.alembic.versions.20210329_202ae94f2c8f_add_internal_id_to_allocine_venue_": [], "src.pcapi.alembic.versions.20220209T175049_e6b4ede78bb3_drop_unused_columns_from_models": [], "src.pcapi.alembic.versions.20210707_02c37d39e46c_adding_perf_venue_stats_feature_flag": [], "src.pcapi.alembic.versions.20211027T122612_6a3db6c2a7b1_denormalize_booking_status": [], "src.pcapi.alembic.versions.20210630_b59aa6de9662_remove_offercategory": [], "src.pcapi.alembic.versions.20210517_2c062a40154e_add_author_to_offer": [], "src.pcapi.alembic.versions.20220201T143041_b76548e8af14_add_not_null_constraint_on_booking_status_column_step4": [], "src.pcapi.alembic.versions.20210831_19a51bd2cf55_payment_reimbursement_rule_check": [], "src.pcapi.alembic.versions.20210803_bebba9216847_add_feature_toggle_webapp_v2_enabled": [], "src.pcapi.alembic.versions.20210712_1ee2283828e7_remove_feature_flipping_for_bookings_": ["src.pcapi.alembic.versions.20210712_1ee2283828e7_remove_feature_flipping_for_bookings_.FeatureToggle"], "src.pcapi.alembic.versions.20210712_1ee2283828e7_remove_feature_flipping_for_bookings_.FeatureToggle": [], "src.pcapi.alembic.versions.20210623_6f68a45d6d9a_add_external_ids_to_user": [], "src.pcapi.alembic.versions.20211110T121107_5ff1b52e2f08_change_default_eligibility_type": [], "src.pcapi.alembic.versions.20210603_2861278ffd7d_create_table_offer_category": [], "src.pcapi.alembic.versions.20211208T112351_fa5a3135848e_finance_add_invoice_url": [], "src.pcapi.alembic.versions.20220228T103033_afafe32c82b3_": [], "src.pcapi.alembic.versions.20210607_b74c334c8095_add_payment_custom_reimbursement_rule_id": [], "src.pcapi.alembic.versions.20210703_2f8574b8f1f0_create_offer_report_tables": [], "src.pcapi.alembic.versions.20210322_bd142e43ea07_add_feature_flag_offer_validation_": [], "src.pcapi.alembic.versions.20210913_1c48ca792f7d_remove_provider_requireprovideridentifier": [], "src.pcapi.alembic.versions.20210415_2f3af262e528_remove_pro_homepage_feature_flipping": [], "src.pcapi.alembic.versions.20211018T134253_d6028fa2c32b_add_not_null_constraint_on_product_subcategory_id_step_2": [], "src.pcapi.alembic.versions.20211103T152612_194844a36610_venue_to_businessunit_relation": [], "src.pcapi.alembic.versions.20211025T103031_5efbe08eff49_update_check_booking": [], "src.pcapi.alembic.versions.20211124T102819_91827317eb25_payments_rule_rate_precision": [], "src.pcapi.alembic.versions.20211213T094539_538cec694a7b_finance_add_pricing_siret": [], "src.pcapi.alembic.versions.20220106T174108_eb6c7fc2d56f_add_indexes_to_bookings": [], "src.pcapi.alembic.versions.20210304_6cc6a0de4be6_add_validation_to_offer": [], "src.pcapi.alembic.versions.20210613_212db74b847d_beneficiary_fraud_check": [], "src.pcapi.alembic.versions.20220207T155219_ffafc4d7210f_fork_post_deploy": [], "src.pcapi.alembic.versions.20210901_0261c634e632_remove_overlapping_constraint_on_customreimbursementrule": [], "src.pcapi.alembic.versions.20210216_f460dc2c9f93_init_db": [], "src.pcapi.alembic.versions.20210412_ccf69bc028ef_remove_has_allowed_reco": [], "src.pcapi.alembic.versions.20210719_d1c3b30ef70d_add_subcategory_to_product": [], "src.pcapi.alembic.versions.20210810_f5997ab962be_add_accessibility_and_description_to_": [], "src.pcapi.alembic.versions.20211201T154901_f76061a19b8f_users_migrate_suspension_reason": [], "src.pcapi.alembic.versions.20210630_a249e90c9677_feature_enable_venue_withdrawal_details": [], "src.pcapi.alembic.versions.20220110T114500_7b8966ff7913_add_invoice_models": [], "src.pcapi.alembic.versions.20210427_ff04dc8fe18e_add_unique_constraint_for_activation": [], "src.pcapi.alembic.versions.20220225T091329_95e10dd9db7a_cascade_for_offer_criterion_offerid": [], "src.pcapi.alembic.versions.20211102T160639_4584c4d37792_add_thirpartyid_index": [], "src.pcapi.alembic.versions.20211006_418152da3d41_make_some_redactor_fields_optional": [], "src.pcapi.alembic.versions.20211115T080553_f2cb5833253a_add_not_null_venue_provider_venue_id_at_offer_provider_step_3": [], "src.pcapi.alembic.versions.20210519_e7a7fdd9c4e1_add_provider_prices_in_cents": [], "src.pcapi.alembic.versions.20220207T154955_d3da2eac435d_fork_pre_deploy": [], "src.pcapi.alembic.versions.20210623_ab0e07746494_api_key_secret": [], "src.pcapi.alembic.versions.20210629_bb6bf7b9cdbd_educational_deposit_add_educational_": [], "src.pcapi.alembic.versions.20210611_3d9c82930092_remove_venue_provider_sync_worker_id": [], "src.pcapi.alembic.versions.20210831_31422b3fe853_remove_reset_password_token_columns_on_": [], "src.pcapi.alembic.versions.20210806_1c5bec8d2aec_booking_make_userid_nullable_for_eac": [], "src.pcapi.alembic.versions.20211018T132000_2db527b06f6b_add_not_null_constraint_on_offer_subcategory_id_step_1": [], "src.pcapi.alembic.versions.20211018T134251_00da19d9eaae_add_not_null_constraint_on_product_subcategory_id_step_1": [], "src.pcapi.alembic.versions.20210428_9cff93fc69f2_feature_new_batch_index_offers": [], "src.pcapi.alembic.versions.20210506_58df8264fe50_enable_native_id_check_version": [], "src.pcapi.alembic.versions.20211103T114851_72743d0e21c2_finance_add_business_unit_model": [], "src.pcapi.alembic.versions.20210902_1c32a0f0f539_add_not_null_booking_offererid_step_4": [], "src.pcapi.alembic.versions.20220201T142216_1fbaca679195_add_not_null_constraint_on_booking_status_column_step1": [], "src.pcapi.alembic.versions.20210518_97553c40978d_drop_if_exists_user_canbookfreeoffers": [], "src.pcapi.alembic.versions.20211025T102912_b0fdf88b7df5_update_get_wallet_balance": [], "src.pcapi.alembic.versions.20211018T132003_e2144d8988c1_add_not_null_constraint_on_offer_subcategory_id_step_4": [], "src.pcapi.alembic.versions.20211202T112702_503904c2cab7_add_number_of_tickets_to_stock_model_for_eac_collective_offers": [], "src.pcapi.alembic.versions.20211216T080317_4e61b6f62735_drop_eligibility_type_default": [], "src.pcapi.alembic.versions.20210317_48125f3899cb_add_not_null_venue_creation_date_step_2": [], "src.pcapi.alembic.versions.20210604_25468af34cb8_make_require_provider_identifier": [], "src.pcapi.alembic.versions.20220225T093715_e289b8d9cbe9_create_template_offer_table": [], "src.pcapi.alembic.versions.20220221T104132_932e613984b3_add_ministry_enum_field_to_educational_deposit": [], "src.pcapi.alembic.versions.20220214T111936_e9ddaad94156_set_jsonb_fields_as_used_ones": [], "src.pcapi.alembic.versions.20210602_a3a703bc054b_validate_fk_constraint_on_categoryid": [], "src.pcapi.alembic.versions.20210224_021d3f2434f0_add_on_cascade_delete_on_tokens": [], "src.pcapi.alembic.versions.20210816_f65cb6d7ef9b_change_cancellation_date_psql_function": [], "src.pcapi.alembic.versions.20220223T094200_7f2d9876eb6e_index_educationel_offer": [], "src.pcapi.alembic.versions.20210701_d37e6052a854_add_confirmation_date_and_limit_date_on_educational_booking": [], "src.pcapi.alembic.versions.20210519_8bdc4df58856_feature_new_venue_pages": [], "src.pcapi.alembic.versions.20220203T154542_28a13156d2d8_validate_idAtProvider_check_constraint_to_offer": [], "src.pcapi.alembic.versions.20210805_ffce4944b6b7_add_venue_type_code": [], "src.pcapi.alembic.versions.20210402_5e52ca521f36_feature_auto_activate_bookings": [], "src.pcapi.alembic.versions.20211203T123430_b2f89508f9e0_finance_add_invoice_model": [], "src.pcapi.alembic.versions.20211115T135126_e2ec54a156f2_add_recredit_amount_to_show": [], "src.pcapi.alembic.versions.20210712_f151ee109bd4_add_on_delete_cascade_to_offer_report_": [], "src.pcapi.alembic.versions.20210415_3278abfdbf25_add_not_null_constraint_on_allocine_id_1": [], "src.pcapi.alembic.versions.20210517_865dbe4bec27_force_phone_validation": [], "src.pcapi.alembic.versions.20210720_19b36a0b880a_rename_booking_column": [], "src.pcapi.alembic.versions.20220217T154632_ab181e95a4c5_remove_field_offer_validation_config_specsOld": [], "src.pcapi.alembic.versions.20211207T180358_a3cae615e188_finance_add_index_on_invoice_businessunitid": [], "src.pcapi.alembic.versions.20211029T183341_7376d1cdc5a7_add_user_ine_hash": [], "src.pcapi.alembic.versions.20210602_2_32bea863ac77_add_unique_constraint_on_user_step3": [], "src.pcapi.alembic.versions.20210531_eb1fe3e8a43f_id_piece_number_step1": [], "src.pcapi.alembic.versions.20210614_0affae55cf74_add_beneficiary_fraud_result_table": [], "src.pcapi.alembic.versions.20210831_4317a4dc233e_custom_reimbursement_rule": [], "src.pcapi.alembic.versions.20220106T152851_b85084de1d58_change_database_check_booking_trigger": [], "src.pcapi.alembic.versions.20210826_289494f36088_add_not_null_booking_venuid_step_1": [], "src.pcapi.alembic.versions.20210913_e8e76a19c43c_remove_userofferer_rightstype": [], "src.pcapi.alembic.versions.20210902_c28df6e8d502_add_not_null_booking_venuid_step_3": [], "src.pcapi.alembic.versions.20211007_e788c9f3cd3b_subscriptionmesage_set_nullable_cta_": [], "src.pcapi.alembic.versions.20210803_2ed5959876f1_create_venue_contact": [], "src.pcapi.alembic.versions.20210621_d8b409a3cf0c_add_beneficiary_fraud_review_table": [], "src.pcapi.alembic.versions.20211206T090159_3b2ea23b8cf0_add_comment_to_users": [], "src.pcapi.alembic.versions.20211115T114806_1e8ffcd7645a_booking_add_index_on_dateused": [], "src.pcapi.alembic.versions.20211029T085043_ef03491f9e6f_add_reason_codes_to_fraud_result": [], "src.pcapi.alembic.versions.20210630_a9a2e51e8e24_add_index_on_offer_subcategory_id": [], "src.pcapi.alembic.versions.20210505_c2e2425fbac6_add_offer_validation_config": [], "src.pcapi.alembic.versions.20220217T154633_ab181e95a4c6_remove_field_product_extraData": [], "src.pcapi.alembic.versions.20211222T172353_e07f81517c8a_finance_add_reference_scheme": [], "src.pcapi.alembic.versions.20220107T095725_1e92f54267a9_change_database_check_stock_trigger": [], "src.pcapi.alembic.versions.20220201T133334_b7a2d1d87495_remove_isused_column_from_booking_trigger": [], "src.pcapi.alembic.versions.20211019T121904_7a18546db0d5_drop_offer_type": [], "src.pcapi.alembic.versions.20211207T180002_5223415d2eb7_finance_index_on_cashflow_batchid": [], "src.pcapi.alembic.versions.20211104T135321_49f58959dbd4_recredit_table": [], "src.pcapi.alembic.versions.20220201T112224_a9cb91d93ea0_drop_is_cancelled_column_from_booking_table": [], "src.pcapi.alembic.versions.20210329_5a767131f3ec_add_internal_id_to_allocine_pivot": [], "src.pcapi.alembic.versions.20220119T145431_f477748a5c40_rm_deviceid": [], "src.pcapi.alembic.versions.20220228T140418_cc59756a1974_fix_nullable_fields_to_reflect_business_constraints": [], "src.pcapi.alembic.versions.20220217T154631_ab181e95a4c4_remove_field_offer_extraData": [], "src.pcapi.alembic.versions.20220106T152731_525b100612c2_change_database_get_deposit_balance_function": [], "src.pcapi.alembic.versions.20220228T141708_3dfc18c758cf_add_columns_on_educational_institution_model": [], "src.pcapi.alembic.versions.20210913_d9a21d14e3ae_remove_criterion_scoredelta": [], "src.pcapi.alembic.versions.20210826_7fb77ba30cde_remove_feature_disable_booking_recap": ["src.pcapi.alembic.versions.20210826_7fb77ba30cde_remove_feature_disable_booking_recap.FeatureToggle"], "src.pcapi.alembic.versions.20210826_7fb77ba30cde_remove_feature_disable_booking_recap.FeatureToggle": [], "src.pcapi.alembic.versions.20220121T105010_1c78fd29dcf6_remove_offer_idatproviders_checks": [], "src.pcapi.alembic.versions.20220217T154630_ab181e95a4c3_remove_field_email_contentOld": [], "src.pcapi.alembic.versions.20210430_e8199ef92975_migrate_id_at_provider_part_2": [], "src.pcapi.alembic.versions.20210315_bcb0407d88ea_add_payments_transaction_enum": [], "src.pcapi.alembic.versions.20210326_2a602bd22f5d_add_rawProviderQuantity_column_to_stock": [], "src.pcapi.alembic.versions.20220131T162328_b400b5a91243_rename_invoice_line_columns": [], "src.pcapi.alembic.versions.20211213T135317_854968b5a6c0_add_stock_price_detail_for_educational_stocks": [], "src.pcapi.alembic.versions.20210628_76d2efd6ad7e_make_departement_code_nullable": [], "src.pcapi.alembic.versions.20210826_af9c0fcd03e3_add_last_modification_date_to_offer": [], "src.pcapi.alembic.versions.20220215T141341_2a111d4feac2_create_user_suspension_foreign_keys": [], "src.pcapi.alembic.versions.20220119T134451_c0aecae92e70_upsert_invoice_reference_into_reference_scheme": [], "src.pcapi.alembic.versions.20211018T132001_9aa27d32e946_add_not_null_constraint_on_offer_subcategory_id_step_2": [], "src.pcapi.alembic.versions.20210226_9531102bcb21_user_notification_subscriptions": [], "src.pcapi.alembic.versions.20210902_0649c0784b54_add_not_null_booking_offererid_step_3": [], "src.pcapi.alembic.versions.20210607_558aec8c0580_update_payment_constraints": [], "src.pcapi.alembic.versions.20211125T180047_3cb2b2fb88d3_create_index_on_product_s_isbn": [], "src.pcapi.alembic.versions.20210602_1_8bad2344ab11_add_index_on_user_idpiecenumber_step2": [], "src.pcapi.alembic.versions.20210629_5ac75d2310d0_educational_deposit_change_year_foreign_": [], "src.pcapi.alembic.versions.20210623_8e28c5ce97c9_add_user_roles": [], "src.pcapi.alembic.versions.20220201T142630_e338d68fa7f1_add_not_null_constraint_on_booking_status_column_step2": [], "src.pcapi.alembic.versions.20210526_3605366e5ded_add_validation_date_to_offer": [], "src.pcapi.alembic.versions.20211029T083046_3be7014806b6_add_third_party_id_column_to_beneficiary_import": [], "src.pcapi.alembic.versions.20211206T160226_f6efe8c78450_bankinformation_applicationid_nullable": [], "src.pcapi.alembic.versions.20210708_6c410aedecbd_offer_add_is_educational_field": [], "src.pcapi.alembic.versions.20210528_5bca073597c4_add_feature_flipping_for_bookings_page_": ["src.pcapi.alembic.versions.20210528_5bca073597c4_add_feature_flipping_for_bookings_page_.FeatureToggle"], "src.pcapi.alembic.versions.20210528_5bca073597c4_add_feature_flipping_for_bookings_page_.FeatureToggle": [], "src.pcapi.alembic.versions.20211209T110721_b5eab9709bdd_add_user_email_history_table": [], "src.pcapi.alembic.versions.20210408_84cab0060952_feature_enable_activation_codes": [], "src.pcapi.alembic.versions.20210728_ff887e7b4f89_add_indexes_concurrently": [], "src.pcapi.alembic.versions.20211108T153533_98a7c44f7ca1_deposit_date_updated": [], "src.pcapi.alembic.versions.20210806_a2d94a595ade_add_feature_toggle_pro_reimbursements_": [], "src.pcapi.alembic.versions.20211004_5129a4e3aabb_create_subscription_messages": [], "src.pcapi.alembic.versions.20220222T083056_90c1a1eeeee0_add_index_on_booking_reimbursementdate": [], "src.pcapi.alembic.versions.20220221T154105_70461af31b6e_drop_suspensionreason_from_user": [], "src.pcapi.alembic.versions.20211201T164147_1ab309876ab0_add_user_school_type": [], "src.pcapi.alembic.versions.20220211T120000_4e4384ac4c8f_create_user_suspension_table": [], "src.pcapi.alembic.versions.20211001_2d5bcf0c4a22_update_beneficiarystatus_types": [], "src.pcapi.alembic.versions.20210531_2a24a51d4735_add_payment_batch_date": [], "src.pcapi.alembic.versions.20210415_87dbafddbf19_add_not_null_constraint_on_allocine_id_4": [], "src.pcapi.alembic.versions.20220214T145739_e9ddaad94159_drop_obsolete_index_offer-extradata-isbn": [], "src.pcapi.alembic.versions.20210317_069e6621725a_add_not_null_venue_creation_date_step_4": [], "src.pcapi.alembic.versions.20210907_10d5ed93544c_drop_offer_type_constraints": [], "src.pcapi.alembic.versions.20210811_854d09f3b5b7_add_redactor_to_educational_bookings": [], "src.pcapi.alembic.versions.20220225T091354_56c6d018551c_cascade_for_venue_criterion_venueid": [], "src.pcapi.alembic.versions.20210701_bb84cb0e65c2_add_informations_to_educational_deposit": [], "src.pcapi.alembic.versions.20210415_d8a4ae2a6a1c_add_not_null_constraint_on_allocine_id_2": [], "src.pcapi.alembic.versions.20211018T134255_77c0608f9db3_add_not_null_constraint_on_product_subcategory_id_step_3": [], "src.pcapi.alembic.versions.20211022T130326_5641f4266d73_use_roles_instead_of_isbeneficiary_colums": [], "src.pcapi.alembic.versions.20210907_f9bf2692bd95_drop_product_type_constraints": [], "src.pcapi.alembic.versions.20210816_7fcfdc9beb40_add_institution_head_to_cancellation_reasons": [], "src.pcapi.alembic.versions.20210720_0211bd1e44e2_offerer_date_validated_column": [], "src.pcapi.alembic.versions.20210621_2e918169bb66_add_user_profiling_fraud_check_feature_": [], "src.pcapi.alembic.versions.20210719_e910e1cc2112_add_index_on_product_subcategoryid": [], "src.pcapi.alembic.versions.20210604_e85a73abc5a7_feature_enable_id_check_retention": [], "src.pcapi.alembic.versions.20210325_4a0337b7cbbc_add_notification_subscriptions_default": [], "src.pcapi.alembic.versions.20210630_f8f80e3ca099_add_subcategory_id_to_offer": [], "src.pcapi.alembic.versions.20211119T141526_22d472b6e867_add_subscription_state_in_user_model": [], "src.pcapi.alembic.versions.20210521_5d6f3407546c_add_is_used_to_token": [], "src.pcapi.alembic.versions.20210505_8824ce692699_booking_displayasended": [], "src.pcapi.alembic.versions.20210728_888f037beae1_add_individual_booking_model": [], "src.pcapi.alembic.versions.20210317_3d149d0afa76_add_not_null_venue_creation_date_step_1": [], "src.pcapi.alembic.versions.20220215T082938_5507ba019ce1_": [], "src.pcapi.alembic.versions.20210817_1ff543866ff9_add_banner_to_venue": [], "src.pcapi.alembic.versions.20210429_3af77a192c66_add_phonevalidationstatus_to_user": [], "src.pcapi.alembic.versions.20210907_228a4b2e4213_add_enable_dms_graphql_api_featuretoggle": [], "src.pcapi.alembic.versions.20210902_e25793bed276_add_not_null_booking_venuid_step_2": [], "src.pcapi.alembic.versions.20211116T111111_42ebfa8a45aa_add_fraud_result_eligibilitytype": [], "src.pcapi.alembic.versions.20210825_5d94e6b5f8f3_educationalbooking_make_": [], "src.pcapi.alembic.versions.20210413_719b8b8e632f_add_draft_to_validation_status_enum": [], "src.pcapi.alembic.versions.20210607_e5cda043c0ee_feature_enable_isbn_required_in_livre_": [], "src.pcapi.alembic.versions.20210323_100648792e74_add_booking_cancellation_reason_fraud": [], "src.pcapi.alembic.versions.20211104T163224_a5f8cf0d75da_payments_add_customreimbursementrule_subcategories": [], "src.pcapi.alembic.versions.20220203T161915_70946e8b0622_jsonb_everywhere": [], "src.pcapi.local_providers.local_provider": ["src.pcapi.local_providers.local_provider.LocalProvider"], "src.pcapi.local_providers.local_provider.LocalProvider": ["<builtin>.property", "abc.abstractmethod"], "abc.abstractmethod": [], "src.pcapi.local_providers.provider_manager": [], "src.pcapi.local_providers.chunk_manager": [], "src.pcapi.local_providers": [], "src.pcapi.local_providers.providable_info": ["src.pcapi.local_providers.providable_info.ProvidableInfo"], "src.pcapi.local_providers.providable_info.ProvidableInfo": [], "src.pcapi.local_providers.install": [], "src.pcapi.local_providers.titelive_things.titelive_things": ["src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings"], "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings": [], "src.pcapi.local_providers.titelive_things": [], "src.pcapi.local_providers.allocine.allocine_stocks": ["src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks"], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks": [], "src.pcapi.local_providers.allocine": [], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs": ["src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs"], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs": [], "src.pcapi.local_providers.titelive_thing_thumbs": [], "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions": ["src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions"], "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions": [], "src.pcapi.local_providers.titelive_thing_descriptions": [], "src.pcapi.local_providers.provider_api.provider_api_stocks": [], "src.pcapi.local_providers.provider_api.synchronize_provider_api": [], "src.pcapi.local_providers.provider_api": [], "src.pcapi.use_cases.save_offerer_bank_informations": ["src.pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations"], "src.pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations": [], "src.pcapi.use_cases.save_venue_bank_informations": ["src.pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations"], "src.pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations": [], "src.pcapi.use_cases": [], "src.pcapi.use_cases.connect_venue_to_allocine": [], "src.pcapi.infrastructure": [], "src.pcapi.infrastructure.worker_container": ["pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations", "pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository", "pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository": [], "pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository": [], "pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations": [], "pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations": [], "src.pcapi.infrastructure.repository": [], "src.pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter": [], "src.pcapi.infrastructure.repository.pro_offers": [], "src.pcapi.infrastructure.repository.offerer": [], "src.pcapi.infrastructure.repository.venue": [], "src.pcapi.infrastructure.repository.venue.venue_label": [], "src.pcapi.infrastructure.repository.venue.venue_with_offerer_name": [], "src.pcapi.infrastructure.repository.venue.venue_with_basic_information": [], "src.pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository": ["src.pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "src.pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository": [], "src.pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_domain_converter": [], "src.pcapi.infrastructure.repository.beneficiary": [], "src.pcapi.infrastructure.repository.stock_provider": [], "src.pcapi.infrastructure.repository.stock_provider.provider_api": ["src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPIException", "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI"], "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPIException": [], "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI": [], "src.pcapi.infrastructure.repository.bank_informations": [], "src.pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository": ["src.pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository"], "src.pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository": [], "src.pcapi.infrastructure.repository.bank_informations.bank_informations_domain_converter": [], "src.pcapi.infrastructure.repository.pro_offerers": [], "src.pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository": ["src.pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository"], "src.pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository": [], "src.pcapi.domain.bank_information": ["src.pcapi.domain.bank_information.CannotRegisterBankInformation"], "src.pcapi.domain.bank_information.CannotRegisterBankInformation": [], "src.pcapi.domain.show_types": [], "src.pcapi.domain.demarches_simplifiees": ["src.pcapi.domain.demarches_simplifiees.ApplicationDetail"], "src.pcapi.domain.demarches_simplifiees.ApplicationDetail": [], "src.pcapi.domain.payments": ["src.pcapi.domain.payments.UnmatchedPayments", "src.pcapi.domain.payments.Transaction", "src.pcapi.domain.payments.PaymentDetails"], "src.pcapi.domain.payments.UnmatchedPayments": [], "src.pcapi.domain.payments.Transaction": [], "src.pcapi.domain.payments.PaymentDetails": [], "src.pcapi.domain.allocine": [], "src.pcapi.domain.offer_report_emails": [], "src.pcapi.domain.titelive": [], "src.pcapi.domain.users": ["src.pcapi.domain.users.UnauthorizedForAdminUser", "src.pcapi.domain.users.ClientError"], "src.pcapi.domain.users.ClientError": [], "src.pcapi.domain.users.UnauthorizedForAdminUser": [], "src.pcapi.domain.bank_account": [], "src.pcapi.domain": [], "src.pcapi.domain.reimbursement": ["src.pcapi.domain.reimbursement.PhysicalOffersReimbursement", "src.pcapi.domain.reimbursement.MaxReimbursementByOfferer", "src.pcapi.domain.reimbursement.EducationalOffersReimbursement", "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000", "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000", "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000", "src.pcapi.domain.reimbursement.ReimbursementRateByVenueBetween40000And150000", "src.pcapi.domain.reimbursement.DigitalThingsReimbursement", "src.pcapi.domain.reimbursement.ReimbursementRateForBookAbove20000", "src.pcapi.domain.reimbursement.ReimbursementRateByVenueBetween20000And40000", "src.pcapi.domain.reimbursement.CustomRuleFinder", "src.pcapi.domain.reimbursement.BookingReimbursement", "src.pcapi.domain.reimbursement.ReimbursementRateForBookBelow20000", "src.pcapi.domain.reimbursement.ReimbursementRateByVenueAbove150000"], "src.pcapi.domain.reimbursement.DigitalThingsReimbursement": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.EducationalOffersReimbursement": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.PhysicalOffersReimbursement": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.MaxReimbursementByOfferer": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.ReimbursementRateByVenueBetween20000And40000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.ReimbursementRateByVenueBetween40000And150000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.ReimbursementRateByVenueAbove150000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.ReimbursementRateForBookBelow20000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.ReimbursementRateForBookAbove20000": ["decimal.Decimal"], "src.pcapi.domain.reimbursement.BookingReimbursement": [], "src.pcapi.domain.reimbursement.CustomRuleFinder": [], "src.pcapi.domain.admin_emails": [], "src.pcapi.domain.price_rule": ["src.pcapi.domain.price_rule.AllocineStocksPriceRule", "src.pcapi.domain.price_rule.PriceRule"], "src.pcapi.domain.price_rule.AllocineStocksPriceRule": [], "src.pcapi.domain.price_rule.PriceRule": ["functools.partial"], "functools.partial": [], "src.pcapi.domain.client_exceptions": ["src.pcapi.domain.client_exceptions.ClientError"], "src.pcapi.domain.client_exceptions.ClientError": [], "src.pcapi.domain.music_types": [], "src.pcapi.domain.password": [], "src.pcapi.domain.ts_vector": [], "src.pcapi.domain.user_emails": [], "src.pcapi.domain.user_activation": [], "src.pcapi.domain.pro_offers.offers_recap": ["src.pcapi.domain.pro_offers.offers_recap.OfferRecap", "src.pcapi.domain.pro_offers.offers_recap.OffersRecap", "src.pcapi.domain.pro_offers.offers_recap.OfferRecapStock", "src.pcapi.domain.pro_offers.offers_recap.OfferRecapVenue"], "src.pcapi.domain.pro_offers.offers_recap.OfferRecapStock": [], "src.pcapi.domain.pro_offers.offers_recap.OfferRecapVenue": [], "src.pcapi.domain.pro_offers.offers_recap.OfferRecap": [], "src.pcapi.domain.pro_offers.offers_recap.OffersRecap": [], "src.pcapi.domain.pro_offers": [], "src.pcapi.domain.postal_code": [], "src.pcapi.domain.postal_code.postal_code": ["src.pcapi.domain.postal_code.postal_code.PostalCode"], "src.pcapi.domain.postal_code.postal_code.PostalCode": [], "src.pcapi.domain.booking_recap.booking_recap": ["src.pcapi.domain.booking_recap.booking_recap.BookingRecap", "src.pcapi.domain.booking_recap.booking_recap.BookingRecapStatus"], "src.pcapi.domain.booking_recap.booking_recap.BookingRecapStatus": [], "src.pcapi.domain.booking_recap.booking_recap.BookingRecap": ["<builtin>.property"], "src.pcapi.domain.booking_recap.bookings_recap_paginated": ["src.pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated"], "src.pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated": [], "src.pcapi.domain.booking_recap.booking_recap_history": ["src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapValidatedHistory", "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapReimbursedHistory", "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapCancelledHistory", "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapPendingHistory", "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapHistory", "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapConfirmedHistory"], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapHistory": [], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapConfirmedHistory": [], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapValidatedHistory": [], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapReimbursedHistory": [], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapCancelledHistory": [], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapPendingHistory": [], "src.pcapi.domain.booking_recap": [], "src.pcapi.domain.booking_recap.utils": [], "src.pcapi.domain.identifier": [], "src.pcapi.domain.venue": [], "src.pcapi.domain.venue.venue_with_offerer_name": [], "src.pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information": ["src.pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information.VenueWithBasicInformation"], "src.pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information.VenueWithBasicInformation": [], "src.pcapi.domain.venue.venue_with_basic_information": [], "src.pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information_repository": ["src.pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information_repository.VenueWithBasicInformationRepository"], "src.pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information_repository.VenueWithBasicInformationRepository": ["abc.abstractmethod"], "src.pcapi.domain.bank_informations.bank_informations": ["src.pcapi.domain.bank_informations.bank_informations.BankInformations"], "src.pcapi.domain.bank_informations.bank_informations.BankInformations": [], "src.pcapi.domain.bank_informations": [], "src.pcapi.domain.bank_informations.bank_informations_repository": ["src.pcapi.domain.bank_informations.bank_informations_repository.BankInformationsRepository"], "src.pcapi.domain.bank_informations.bank_informations_repository.BankInformationsRepository": ["abc.abstractmethod"], "src.pcapi.domain.pro_offerers.paginated_offerers_repository": ["src.pcapi.domain.pro_offerers.paginated_offerers_repository.PaginatedOfferersRepository"], "src.pcapi.domain.pro_offerers.paginated_offerers_repository.PaginatedOfferersRepository": ["abc.abstractmethod"], "src.pcapi.domain.pro_offerers": [], "src.pcapi.domain.pro_offerers.paginated_offerers": ["src.pcapi.domain.pro_offerers.paginated_offerers.PaginatedOfferers"], "src.pcapi.domain.pro_offerers.paginated_offerers.PaginatedOfferers": [], "src.pcapi.domain.services": [], "src.pcapi.domain.services.notification": [], "src.pcapi.routes": [], "src.pcapi.routes.apis": ["flask.Blueprint", "pcapi.serialization.spec_tree.ExtendedSpecTree", "flask_cors.CORS"], "flask.Blueprint": [], "flask_cors.CORS": [], "pcapi.serialization.spec_tree.ExtendedSpecTree": [], "src.pcapi.routes.adage.security": [], "src.pcapi.routes.adage": [], "src.pcapi.routes.adage.v1.venue": ["pcapi.routes.adage.security.adage_api_key_required", "pcapi.serialization.decorator.spectree_serialize"], "pcapi.routes.adage.security.adage_api_key_required": [], "src.pcapi.routes.adage.v1.blueprint": ["flask.Blueprint", "spectree.SpecTree", "spectree.SecurityScheme"], "spectree.SecurityScheme": [], "spectree.SpecTree": [], "src.pcapi.routes.adage.v1": [], "src.pcapi.routes.adage.v1.prebooking": ["pcapi.routes.adage.security.adage_api_key_required", "pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.adage.v1.educational_institution": ["pcapi.routes.adage.security.adage_api_key_required", "pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.adage.v1.serialization.config": ["src.pcapi.routes.adage.v1.serialization.config.AdageBaseResponseModel"], "src.pcapi.routes.adage.v1.serialization.config.AdageBaseResponseModel": ["src.pcapi.routes.adage.v1.serialization.config.AdageBaseResponseModel.Config"], "src.pcapi.routes.adage.v1.serialization.config.AdageBaseResponseModel.Config": [], "src.pcapi.routes.adage.v1.serialization.venue": ["src.pcapi.routes.adage.v1.serialization.venue.VenueModel", "src.pcapi.routes.adage.v1.serialization.venue.GetVenuesResponseModel"], "src.pcapi.routes.adage.v1.serialization.venue.VenueModel": ["src.pcapi.routes.adage.v1.serialization.venue.VenueModel.Config"], "src.pcapi.routes.adage.v1.serialization.venue.VenueModel.Config": [], "src.pcapi.routes.adage.v1.serialization.venue.GetVenuesResponseModel": [], "src.pcapi.routes.adage.v1.serialization.constants": [], "src.pcapi.routes.adage.v1.serialization": [], "src.pcapi.routes.adage.v1.serialization.prebooking": ["src.pcapi.routes.adage.v1.serialization.prebooking.GetEducationalBookingsRequest", "src.pcapi.routes.adage.v1.serialization.prebooking.Contact", "src.pcapi.routes.adage.v1.serialization.prebooking.Redactor", "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingEdition", "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingPerYearResponse", "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingResponse", "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingsPerYearResponse", "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingsResponse"], "src.pcapi.routes.adage.v1.serialization.prebooking.GetEducationalBookingsRequest": ["pydantic.fields.Field", "src.pcapi.routes.adage.v1.serialization.prebooking.GetEducationalBookingsRequest.Config"], "pydantic.fields.Field": [], "src.pcapi.routes.adage.v1.serialization.prebooking.GetEducationalBookingsRequest.Config": [], "src.pcapi.routes.adage.v1.serialization.prebooking.Redactor": ["src.pcapi.routes.adage.v1.serialization.prebooking.Redactor.Config"], "src.pcapi.routes.adage.v1.serialization.prebooking.Redactor.Config": [], "src.pcapi.routes.adage.v1.serialization.prebooking.Contact": [], "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingResponse": ["src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingResponse.Config", "pydantic.fields.Field"], "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingResponse.Config": [], "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingsResponse": ["src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingsResponse.Config"], "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingsResponse.Config": [], "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingPerYearResponse": [], "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingsPerYearResponse": [], "src.pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingEdition": ["pydantic.fields.Field"], "src.pcapi.routes.adage.v1.serialization.educational_institution": ["src.pcapi.routes.adage.v1.serialization.educational_institution.EducationalInstitutionResponse"], "src.pcapi.routes.adage.v1.serialization.educational_institution.EducationalInstitutionResponse": ["pydantic.fields.Field", "src.pcapi.routes.adage.v1.serialization.educational_institution.EducationalInstitutionResponse.Config"], "src.pcapi.routes.adage.v1.serialization.educational_institution.EducationalInstitutionResponse.Config": [], "src.pcapi.routes.pro.user_offerers": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "flask_login.login_required": [], "src.pcapi.routes.pro.stocks": ["pcapi.validation.routes.users_authentifications.api_key_required", "pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "pcapi.validation.routes.users_authentifications.api_key_required": [], "src.pcapi.routes.pro.finance": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.signup": ["pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.pro.venue_labels": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.users": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.blueprint": ["flask.Blueprint", "spectree.SecurityScheme", "pcapi.serialization.spec_tree.ExtendedSpecTree", "flask_cors.CORS"], "src.pcapi.routes.pro.bookings": ["pcapi.utils.rate_limiting.ip_rate_limiter", "pcapi.validation.routes.users_authentifications.login_or_api_key_required", "pcapi.serialization.spec_tree.ExtendResponse", "pcapi.utils.rate_limiting.basic_auth_rate_limiter", "pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "pcapi.validation.routes.users_authentifications.login_or_api_key_required": [], "pcapi.serialization.spec_tree.ExtendResponse": [], "pcapi.utils.rate_limiting.basic_auth_rate_limiter": [], "pcapi.utils.rate_limiting.ip_rate_limiter": [], "src.pcapi.routes.pro.venues": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro": [], "src.pcapi.routes.pro.offers": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.venue_types": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.providers": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.validate": ["pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.pro.offerers": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.reimbursements": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.pro.venue_providers": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.native.security": [], "src.pcapi.routes.native": [], "src.pcapi.routes.native.utils": [], "src.pcapi.routes.native.v1.subscription": ["pcapi.serialization.decorator.spectree_serialize", "pcapi.routes.native.security.authenticated_user_required"], "pcapi.routes.native.security.authenticated_user_required": [], "src.pcapi.routes.native.v1.blueprint": ["flask.Blueprint", "flask_cors.extension.CORS", "pcapi.serialization.spec_tree.ExtendedSpecTree", "spectree.SecurityScheme"], "flask_cors.extension.CORS": [], "src.pcapi.routes.native.v1.bookings": ["pcapi.serialization.decorator.spectree_serialize", "pcapi.routes.native.security.authenticated_user_required"], "src.pcapi.routes.native.v1": [], "src.pcapi.routes.native.v1.offers": ["pcapi.serialization.decorator.spectree_serialize", "pcapi.routes.native.security.authenticated_user_required"], "src.pcapi.routes.native.v1.favorites": ["pcapi.serialization.decorator.spectree_serialize", "pcapi.routes.native.security.authenticated_user_required"], "src.pcapi.routes.native.v1.authentication": ["pcapi.utils.rate_limiting.ip_rate_limiter", "flask_jwt_extended.jwt_required", "pcapi.serialization.decorator.spectree_serialize", "pcapi.routes.native.security.authenticated_user_required", "pcapi.utils.rate_limiting.email_rate_limiter"], "pcapi.utils.rate_limiting.email_rate_limiter": [], "flask_jwt_extended.jwt_required": [], "src.pcapi.routes.native.v1.settings": ["pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.native.v1.offerers": ["pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.native.v1.universal_links": [], "src.pcapi.routes.native.v1.account": ["pcapi.serialization.decorator.spectree_serialize", "pcapi.routes.native.security.authenticated_user_required"], "src.pcapi.routes.native.v1.serialization.subscription": ["src.pcapi.routes.native.v1.serialization.subscription.ProfileUpdateRequest", "src.pcapi.routes.native.v1.serialization.subscription.ProfileOptionsResponse", "src.pcapi.routes.native.v1.serialization.subscription.ActivityResponseModel", "src.pcapi.routes.native.v1.serialization.subscription.SchoolTypeResponseModel", "src.pcapi.routes.native.v1.serialization.subscription.NextSubscriptionStepResponse"], "src.pcapi.routes.native.v1.serialization.subscription.NextSubscriptionStepResponse": ["src.pcapi.routes.native.v1.serialization.subscription.NextSubscriptionStepResponse.Config"], "src.pcapi.routes.native.v1.serialization.subscription.NextSubscriptionStepResponse.Config": [], "src.pcapi.routes.native.v1.serialization.subscription.ProfileUpdateRequest": ["pydantic.validator", "src.pcapi.routes.native.v1.serialization.subscription.ProfileUpdateRequest.Config"], "src.pcapi.routes.native.v1.serialization.subscription.ProfileUpdateRequest.Config": [], "pydantic.validator": [], "src.pcapi.routes.native.v1.serialization.subscription.SchoolTypeResponseModel": ["src.pcapi.routes.native.v1.serialization.subscription.SchoolTypeResponseModel.Config"], "src.pcapi.routes.native.v1.serialization.subscription.SchoolTypeResponseModel.Config": [], "src.pcapi.routes.native.v1.serialization.subscription.ActivityResponseModel": ["src.pcapi.routes.native.v1.serialization.subscription.ActivityResponseModel.Config"], "src.pcapi.routes.native.v1.serialization.subscription.ActivityResponseModel.Config": [], "src.pcapi.routes.native.v1.serialization.subscription.ProfileOptionsResponse": [], "src.pcapi.routes.native.v1.serialization.bookings": ["src.pcapi.routes.native.v1.serialization.bookings.BookingVenueResponse", "src.pcapi.routes.native.v1.serialization.bookings.BookingOfferResponse", "src.pcapi.routes.native.v1.serialization.bookings.BookingStockResponse", "src.pcapi.routes.native.v1.serialization.bookings.BookingsResponse", "src.pcapi.routes.native.v1.serialization.bookings.BookingDisplayStatusRequest", "src.pcapi.routes.native.v1.serialization.bookings.BookOfferResponse", "src.pcapi.routes.native.v1.serialization.bookings.BookingOfferExtraData", "src.pcapi.routes.native.v1.serialization.bookings.BookingReponse", "src.pcapi.routes.native.v1.serialization.bookings.BookOfferRequest", "src.pcapi.routes.native.v1.serialization.bookings.BookingActivationCodeResponse"], "src.pcapi.routes.native.v1.serialization.bookings.BookOfferRequest": ["src.pcapi.routes.native.v1.serialization.bookings.BookOfferRequest.Config"], "src.pcapi.routes.native.v1.serialization.bookings.BookOfferRequest.Config": [], "src.pcapi.routes.native.v1.serialization.bookings.BookOfferResponse": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingVenueResponse": ["<builtin>.classmethod", "src.pcapi.routes.native.v1.serialization.bookings.BookingVenueResponse.Config"], "src.pcapi.routes.native.v1.serialization.bookings.BookingVenueResponse.Config": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingOfferExtraData": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingOfferResponse": ["src.pcapi.routes.native.v1.serialization.bookings.BookingOfferResponse.Config"], "src.pcapi.routes.native.v1.serialization.bookings.BookingOfferResponse.Config": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingStockResponse": ["src.pcapi.routes.native.v1.serialization.bookings.BookingStockResponse.Config"], "src.pcapi.routes.native.v1.serialization.bookings.BookingStockResponse.Config": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingActivationCodeResponse": ["src.pcapi.routes.native.v1.serialization.bookings.BookingActivationCodeResponse.Config"], "src.pcapi.routes.native.v1.serialization.bookings.BookingActivationCodeResponse.Config": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingReponse": ["pydantic.class_validators.validator", "<builtin>.classmethod", "src.pcapi.routes.native.v1.serialization.bookings.BookingReponse.Config"], "src.pcapi.routes.native.v1.serialization.bookings.BookingReponse.Config": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingsResponse": ["src.pcapi.routes.native.v1.serialization.bookings.BookingsResponse.Config"], "src.pcapi.routes.native.v1.serialization.bookings.BookingsResponse.Config": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingDisplayStatusRequest": [], "src.pcapi.routes.native.v1.serialization": [], "src.pcapi.routes.native.v1.serialization.offers": ["src.pcapi.routes.native.v1.serialization.offers.OfferReportReasons", "src.pcapi.routes.native.v1.serialization.offers.ReportedOffer", "src.pcapi.routes.native.v1.serialization.offers.SubcategoriesResponseModel", "src.pcapi.routes.native.v1.serialization.offers.OfferExtraData", "src.pcapi.routes.native.v1.serialization.offers.OfferImageResponse", "src.pcapi.routes.native.v1.serialization.offers.OfferAccessibilityResponse", "src.pcapi.routes.native.v1.serialization.offers.SearchGroupResponseModel", "src.pcapi.routes.native.v1.serialization.offers.HomepageLabelResponseModel", "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse", "src.pcapi.routes.native.v1.serialization.offers.OfferVenueResponse", "src.pcapi.routes.native.v1.serialization.offers.OfferResponse", "src.pcapi.routes.native.v1.serialization.offers.OfferReportRequest", "src.pcapi.routes.native.v1.serialization.offers.SubcategoryResponseModel", "src.pcapi.routes.native.v1.serialization.offers.OfferOffererResponse", "src.pcapi.routes.native.v1.serialization.offers.UserReportedOffersResponse", "src.pcapi.routes.native.v1.serialization.offers.OfferStockActivationCodeResponse"], "src.pcapi.routes.native.v1.serialization.offers.OfferOffererResponse": ["src.pcapi.routes.native.v1.serialization.offers.OfferOffererResponse.Config"], "src.pcapi.routes.native.v1.serialization.offers.OfferOffererResponse.Config": [], "src.pcapi.routes.native.v1.serialization.offers.OfferStockActivationCodeResponse": [], "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse": ["<builtin>.staticmethod", "pydantic.class_validators.validator", "<builtin>.classmethod", "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse.Config"], "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse.Config": [], "src.pcapi.routes.native.v1.serialization.offers.OfferVenueResponse": ["pydantic.fields.Field", "src.pcapi.routes.native.v1.serialization.offers.OfferVenueResponse.Config", "<builtin>.classmethod"], "src.pcapi.routes.native.v1.serialization.offers.OfferVenueResponse.Config": [], "src.pcapi.routes.native.v1.serialization.offers.OfferExtraData": ["pydantic.class_validators.validator", "src.pcapi.routes.native.v1.serialization.offers.get_id_converter"], "src.pcapi.routes.native.v1.serialization.offers.get_id_converter": [], "src.pcapi.routes.native.v1.serialization.offers.OfferAccessibilityResponse": [], "src.pcapi.routes.native.v1.serialization.offers.OfferImageResponse": ["src.pcapi.routes.native.v1.serialization.offers.OfferImageResponse.Config"], "src.pcapi.routes.native.v1.serialization.offers.OfferImageResponse.Config": [], "src.pcapi.routes.native.v1.serialization.offers.OfferResponse": ["src.pcapi.routes.native.v1.serialization.offers.OfferResponse.Config", "<builtin>.classmethod"], "src.pcapi.routes.native.v1.serialization.offers.OfferResponse.Config": [], "src.pcapi.routes.native.v1.serialization.offers.OfferReportRequest": ["pydantic.class_validators.validator", "src.pcapi.routes.native.v1.serialization.offers.OfferReportRequest.Config"], "src.pcapi.routes.native.v1.serialization.offers.OfferReportRequest.Config": [], "src.pcapi.routes.native.v1.serialization.offers.OfferReportReasons": ["src.pcapi.routes.native.v1.serialization.offers.OfferReportReasons.Config"], "src.pcapi.routes.native.v1.serialization.offers.OfferReportReasons.Config": [], "src.pcapi.routes.native.v1.serialization.offers.ReportedOffer": ["src.pcapi.routes.native.v1.serialization.offers.ReportedOffer.Config"], "src.pcapi.routes.native.v1.serialization.offers.ReportedOffer.Config": [], "src.pcapi.routes.native.v1.serialization.offers.UserReportedOffersResponse": ["src.pcapi.routes.native.v1.serialization.offers.UserReportedOffersResponse.Config"], "src.pcapi.routes.native.v1.serialization.offers.UserReportedOffersResponse.Config": [], "src.pcapi.routes.native.v1.serialization.offers.SubcategoryResponseModel": ["src.pcapi.routes.native.v1.serialization.offers.SubcategoryResponseModel.Config"], "src.pcapi.routes.native.v1.serialization.offers.SubcategoryResponseModel.Config": [], "src.pcapi.routes.native.v1.serialization.offers.SearchGroupResponseModel": ["src.pcapi.routes.native.v1.serialization.offers.SearchGroupResponseModel.Config"], "src.pcapi.routes.native.v1.serialization.offers.SearchGroupResponseModel.Config": [], "src.pcapi.routes.native.v1.serialization.offers.HomepageLabelResponseModel": ["src.pcapi.routes.native.v1.serialization.offers.HomepageLabelResponseModel.Config"], "src.pcapi.routes.native.v1.serialization.offers.HomepageLabelResponseModel.Config": [], "src.pcapi.routes.native.v1.serialization.offers.SubcategoriesResponseModel": [], "src.pcapi.routes.native.v1.serialization.favorites": ["src.pcapi.routes.native.v1.serialization.favorites.FavoriteMediationResponse", "src.pcapi.routes.native.v1.serialization.favorites.FavoriteResponse", "src.pcapi.routes.native.v1.serialization.favorites.PaginatedFavoritesResponse", "src.pcapi.routes.native.v1.serialization.favorites.Coordinates", "src.pcapi.routes.native.v1.serialization.favorites.FavoriteRequest", "src.pcapi.routes.native.v1.serialization.favorites.FavoriteOfferResponse", "src.pcapi.routes.native.v1.serialization.favorites.FavoritesCountResponse"], "src.pcapi.routes.native.v1.serialization.favorites.Coordinates": [], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteMediationResponse": ["src.pcapi.routes.native.v1.serialization.favorites.FavoriteMediationResponse.Config"], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteMediationResponse.Config": [], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteOfferResponse": ["pydantic.class_validators.validator", "<builtin>.classmethod", "src.pcapi.routes.native.v1.serialization.favorites.FavoriteOfferResponse.Config"], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteOfferResponse.Config": [], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteResponse": ["src.pcapi.routes.native.v1.serialization.favorites.FavoriteResponse.Config"], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteResponse.Config": [], "src.pcapi.routes.native.v1.serialization.favorites.PaginatedFavoritesResponse": ["src.pcapi.routes.native.v1.serialization.favorites.PaginatedFavoritesResponse.Config"], "src.pcapi.routes.native.v1.serialization.favorites.PaginatedFavoritesResponse.Config": [], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteRequest": [], "src.pcapi.routes.native.v1.serialization.favorites.FavoritesCountResponse": [], "src.pcapi.routes.native.v1.serialization.authentication": ["src.pcapi.routes.native.v1.serialization.authentication.SigninRequest", "src.pcapi.routes.native.v1.serialization.authentication.ChangePasswordRequest", "src.pcapi.routes.native.v1.serialization.authentication.ResetPasswordRequest", "src.pcapi.routes.native.v1.serialization.authentication.RefreshResponse", "src.pcapi.routes.native.v1.serialization.authentication.RequestPasswordResetRequest", "src.pcapi.routes.native.v1.serialization.authentication.SigninResponse", "src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailResponse", "src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailRequest"], "src.pcapi.routes.native.v1.serialization.authentication.SigninRequest": [], "src.pcapi.routes.native.v1.serialization.authentication.SigninResponse": ["src.pcapi.routes.native.v1.serialization.authentication.SigninResponse.Config"], "src.pcapi.routes.native.v1.serialization.authentication.SigninResponse.Config": [], "src.pcapi.routes.native.v1.serialization.authentication.RefreshResponse": ["src.pcapi.routes.native.v1.serialization.authentication.RefreshResponse.Config"], "src.pcapi.routes.native.v1.serialization.authentication.RefreshResponse.Config": [], "src.pcapi.routes.native.v1.serialization.authentication.RequestPasswordResetRequest": [], "src.pcapi.routes.native.v1.serialization.authentication.ResetPasswordRequest": ["src.pcapi.routes.native.v1.serialization.authentication.ResetPasswordRequest.Config"], "src.pcapi.routes.native.v1.serialization.authentication.ResetPasswordRequest.Config": [], "src.pcapi.routes.native.v1.serialization.authentication.ChangePasswordRequest": ["src.pcapi.routes.native.v1.serialization.authentication.ChangePasswordRequest.Config"], "src.pcapi.routes.native.v1.serialization.authentication.ChangePasswordRequest.Config": [], "src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailRequest": ["src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailRequest.Config"], "src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailRequest.Config": [], "src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailResponse": ["src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailResponse.Config"], "src.pcapi.routes.native.v1.serialization.authentication.ValidateEmailResponse.Config": [], "src.pcapi.routes.native.v1.serialization.settings": ["src.pcapi.routes.native.v1.serialization.settings.SettingsResponse", "src.pcapi.routes.native.v1.serialization.settings.DepositAmountsByAge"], "src.pcapi.routes.native.v1.serialization.settings.DepositAmountsByAge": ["pcapi.routes.native.utils.convert_to_cent"], "pcapi.routes.native.utils.convert_to_cent": [], "src.pcapi.routes.native.v1.serialization.settings.SettingsResponse": ["src.pcapi.routes.native.v1.serialization.settings.SettingsResponse.Config"], "src.pcapi.routes.native.v1.serialization.settings.SettingsResponse.Config": [], "src.pcapi.routes.native.v1.serialization.offerers": ["src.pcapi.routes.native.v1.serialization.offerers.VenueAccessibilityModel", "src.pcapi.routes.native.v1.serialization.offerers.VenueResponse"], "src.pcapi.routes.native.v1.serialization.offerers.VenueAccessibilityModel": [], "src.pcapi.routes.native.v1.serialization.offerers.VenueResponse": [], "src.pcapi.routes.native.v1.serialization.common_models": ["src.pcapi.routes.native.v1.serialization.common_models.Coordinates"], "src.pcapi.routes.native.v1.serialization.common_models.Coordinates": [], "src.pcapi.routes.native.v1.serialization.account": ["src.pcapi.routes.native.v1.serialization.account.Credit", "src.pcapi.routes.native.v1.serialization.account.BeneficiaryInformationUpdateRequest", "src.pcapi.routes.native.v1.serialization.account.ResendEmailValidationRequest", "src.pcapi.routes.native.v1.serialization.account.SendPhoneValidationRequest", "src.pcapi.routes.native.v1.serialization.account.NotificationSubscriptions", "src.pcapi.routes.native.v1.serialization.account.IdentificationSessionRequest", "src.pcapi.routes.native.v1.serialization.account.ChangeEmailTokenContent", "src.pcapi.routes.native.v1.serialization.account.ChangeBeneficiaryEmailBody", "src.pcapi.routes.native.v1.serialization.account.UserProfileUpdateRequest", "src.pcapi.routes.native.v1.serialization.account.CallToActionMessage", "src.pcapi.routes.native.v1.serialization.account.IdentificationSessionResponse", "src.pcapi.routes.native.v1.serialization.account.AccountRequest", "src.pcapi.routes.native.v1.serialization.account.CulturalSurveyRequest", "src.pcapi.routes.native.v1.serialization.account.UserProfilingSessionIdResponse", "src.pcapi.routes.native.v1.serialization.account.DomainsCredit", "src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage", "src.pcapi.routes.native.v1.serialization.account.ValidatePhoneNumberRequest", "src.pcapi.routes.native.v1.serialization.account.UserProfilingFraudRequest", "src.pcapi.routes.native.v1.serialization.account.UploadIdentityDocumentRequest", "src.pcapi.routes.native.v1.serialization.account.ValidateEmailRequest", "src.pcapi.routes.native.v1.serialization.account.UserProfileEmailUpdate", "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse", "src.pcapi.routes.native.v1.serialization.account.UpdateEmailTokenExpiration", "src.pcapi.routes.native.v1.serialization.account.InstitutionalProjectRedactorAccountRequest"], "src.pcapi.routes.native.v1.serialization.account.AccountRequest": ["src.pcapi.routes.native.v1.serialization.account.AccountRequest.Config"], "src.pcapi.routes.native.v1.serialization.account.AccountRequest.Config": [], "src.pcapi.routes.native.v1.serialization.account.InstitutionalProjectRedactorAccountRequest": ["src.pcapi.routes.native.v1.serialization.account.InstitutionalProjectRedactorAccountRequest.Config"], "src.pcapi.routes.native.v1.serialization.account.InstitutionalProjectRedactorAccountRequest.Config": [], "src.pcapi.routes.native.v1.serialization.account.CulturalSurveyRequest": ["src.pcapi.routes.native.v1.serialization.account.CulturalSurveyRequest.Config"], "src.pcapi.routes.native.v1.serialization.account.CulturalSurveyRequest.Config": [], "src.pcapi.routes.native.v1.serialization.account.NotificationSubscriptions": ["src.pcapi.routes.native.v1.serialization.account.NotificationSubscriptions.Config"], "src.pcapi.routes.native.v1.serialization.account.NotificationSubscriptions.Config": [], "src.pcapi.routes.native.v1.serialization.account.Credit": ["pydantic.class_validators.validator", "src.pcapi.routes.native.v1.serialization.account.Credit.Config"], "src.pcapi.routes.native.v1.serialization.account.Credit.Config": [], "src.pcapi.routes.native.v1.serialization.account.DomainsCredit": ["src.pcapi.routes.native.v1.serialization.account.DomainsCredit.Config"], "src.pcapi.routes.native.v1.serialization.account.DomainsCredit.Config": [], "src.pcapi.routes.native.v1.serialization.account.CallToActionMessage": ["src.pcapi.routes.native.v1.serialization.account.CallToActionMessage.Config"], "src.pcapi.routes.native.v1.serialization.account.CallToActionMessage.Config": [], "src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage": ["src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage.Config", "<builtin>.classmethod"], "src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage.Config": [], "src.pcapi.routes.native.v1.serialization.account.ChangeBeneficiaryEmailBody": [], "src.pcapi.routes.native.v1.serialization.account.ChangeEmailTokenContent": ["pydantic.class_validators.validator", "<builtin>.classmethod"], "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse": ["pydantic.fields.Field", "<builtin>.classmethod", "pydantic.class_validators.validator", "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse.Config", "<builtin>.staticmethod"], "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse.Config": [], "src.pcapi.routes.native.v1.serialization.account.UserProfileUpdateRequest": [], "src.pcapi.routes.native.v1.serialization.account.UserProfileEmailUpdate": [], "src.pcapi.routes.native.v1.serialization.account.ValidateEmailRequest": [], "src.pcapi.routes.native.v1.serialization.account.UpdateEmailTokenExpiration": [], "src.pcapi.routes.native.v1.serialization.account.BeneficiaryInformationUpdateRequest": ["src.pcapi.routes.native.v1.serialization.account.BeneficiaryInformationUpdateRequest.Config"], "src.pcapi.routes.native.v1.serialization.account.BeneficiaryInformationUpdateRequest.Config": [], "src.pcapi.routes.native.v1.serialization.account.ResendEmailValidationRequest": [], "src.pcapi.routes.native.v1.serialization.account.ValidatePhoneNumberRequest": [], "src.pcapi.routes.native.v1.serialization.account.SendPhoneValidationRequest": [], "src.pcapi.routes.native.v1.serialization.account.UploadIdentityDocumentRequest": [], "src.pcapi.routes.native.v1.serialization.account.UserProfilingFraudRequest": ["pydantic.class_validators.root_validator", "pydantic.class_validators.validator"], "pydantic.class_validators.root_validator": [], "src.pcapi.routes.native.v1.serialization.account.UserProfilingSessionIdResponse": [], "src.pcapi.routes.native.v1.serialization.account.IdentificationSessionRequest": [], "src.pcapi.routes.native.v1.serialization.account.IdentificationSessionResponse": [], "src.pcapi.routes.error_handlers.bookings_error_handlers": [], "src.pcapi.routes.error_handlers": [], "src.pcapi.routes.error_handlers.generic_error_handlers": [], "src.pcapi.routes.error_handlers.utils": [], "src.pcapi.routes.error_handlers.thumbnails_error_handlers": [], "src.pcapi.routes.serialization.offers_recap_serialize": [], "src.pcapi.routes.serialization.dictifier": ["functools.singledispatch"], "functools.singledispatch": [], "src.pcapi.routes.serialization.venue_labels_serialize": ["src.pcapi.routes.serialization.venue_labels_serialize.VenueLabelResponseModel", "src.pcapi.routes.serialization.venue_labels_serialize.VenueLabelListResponseModel"], "src.pcapi.routes.serialization.venue_labels_serialize.VenueLabelResponseModel": ["src.pcapi.routes.serialization.venue_labels_serialize.VenueLabelResponseModel.Config", "pcapi.serialization.utils.humanize_field"], "pcapi.serialization.utils.humanize_field": [], "src.pcapi.routes.serialization.venue_labels_serialize.VenueLabelResponseModel.Config": [], "src.pcapi.routes.serialization.venue_labels_serialize.VenueLabelListResponseModel": [], "src.pcapi.routes.serialization.reimbursement_csv_serialize": ["src.pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementCsvQueryModel", "src.pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails"], "src.pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails": [], "src.pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementCsvQueryModel": [], "src.pcapi.routes.serialization.stock_serialize": ["src.pcapi.routes.serialization.stock_serialize.StockIdResponseModel", "src.pcapi.routes.serialization.stock_serialize.StockEditionBodyModel", "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel", "src.pcapi.routes.serialization.stock_serialize.StockResponseModel", "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel", "src.pcapi.routes.serialization.stock_serialize.StockEditionResponseModel", "src.pcapi.routes.serialization.stock_serialize.UpdateVenueStockBodyModel", "src.pcapi.routes.serialization.stock_serialize.StockCreationBodyModel", "src.pcapi.routes.serialization.stock_serialize.StocksResponseModel", "src.pcapi.routes.serialization.stock_serialize.UpdateVenueStocksBodyModel", "src.pcapi.routes.serialization.stock_serialize.StocksUpsertBodyModel", "src.pcapi.routes.serialization.stock_serialize.StockIdsResponseModel"], "src.pcapi.routes.serialization.stock_serialize.StockResponseModel": ["src.pcapi.routes.serialization.stock_serialize.StockResponseModel.Config", "pcapi.serialization.utils.humanize_field", "<builtin>.classmethod", "pydantic.Field"], "src.pcapi.routes.serialization.stock_serialize.StockResponseModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.StocksResponseModel": ["src.pcapi.routes.serialization.stock_serialize.StocksResponseModel.Config"], "src.pcapi.routes.serialization.stock_serialize.StocksResponseModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.StockEditionResponseModel": ["pcapi.serialization.utils.humanize_field", "<builtin>.classmethod", "src.pcapi.routes.serialization.stock_serialize.StockEditionResponseModel.Config"], "src.pcapi.routes.serialization.stock_serialize.StockEditionResponseModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.StockCreationBodyModel": ["src.pcapi.routes.serialization.stock_serialize.StockCreationBodyModel.Config"], "src.pcapi.routes.serialization.stock_serialize.StockCreationBodyModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel": ["pcapi.serialization.utils.dehumanize_field", "pydantic.validator", "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel.Config"], "pcapi.serialization.utils.dehumanize_field": [], "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel": ["pydantic.validator", "pydantic.Field", "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel.Config"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.StockEditionBodyModel": ["pcapi.serialization.utils.dehumanize_field", "src.pcapi.routes.serialization.stock_serialize.StockEditionBodyModel.Config"], "src.pcapi.routes.serialization.stock_serialize.StockEditionBodyModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.StockIdResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.stock_serialize.StockIdResponseModel.Config"], "src.pcapi.routes.serialization.stock_serialize.StockIdResponseModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.StocksUpsertBodyModel": ["pcapi.serialization.utils.dehumanize_field", "src.pcapi.routes.serialization.stock_serialize.StocksUpsertBodyModel.Config"], "src.pcapi.routes.serialization.stock_serialize.StocksUpsertBodyModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.StockIdsResponseModel": [], "src.pcapi.routes.serialization.stock_serialize.UpdateVenueStockBodyModel": ["src.pcapi.routes.serialization.stock_serialize.UpdateVenueStockBodyModel.Config", "pydantic.condecimal", "pydantic.validator", "pydantic.Field"], "pydantic.condecimal": [], "src.pcapi.routes.serialization.stock_serialize.UpdateVenueStockBodyModel.Config": [], "src.pcapi.routes.serialization.stock_serialize.UpdateVenueStocksBodyModel": ["src.pcapi.routes.serialization.stock_serialize.UpdateVenueStocksBodyModel.Config"], "src.pcapi.routes.serialization.stock_serialize.UpdateVenueStocksBodyModel.Config": [], "src.pcapi.routes.serialization.bookings_serialize": ["src.pcapi.routes.serialization.bookings_serialize.BookingFormula", "src.pcapi.routes.serialization.bookings_serialize.ActivationCode", "src.pcapi.routes.serialization.bookings_serialize.LegacyBookingResponse", "src.pcapi.routes.serialization.bookings_serialize.PostBookingStockModel", "src.pcapi.routes.serialization.bookings_serialize.BookingOfferType", "src.pcapi.routes.serialization.bookings_serialize.PostBookingBodyModel", "src.pcapi.routes.serialization.bookings_serialize.UserHasBookingResponse", "src.pcapi.routes.serialization.bookings_serialize.GetBookingResponse"], "src.pcapi.routes.serialization.bookings_serialize.BookingOfferType": [], "src.pcapi.routes.serialization.bookings_serialize.BookingFormula": [], "src.pcapi.routes.serialization.bookings_serialize.LegacyBookingResponse": [], "src.pcapi.routes.serialization.bookings_serialize.GetBookingResponse": [], "src.pcapi.routes.serialization.bookings_serialize.UserHasBookingResponse": [], "src.pcapi.routes.serialization.bookings_serialize.PostBookingStockModel": [], "src.pcapi.routes.serialization.bookings_serialize.PostBookingBodyModel": ["src.pcapi.routes.serialization.bookings_serialize.PostBookingBodyModel.Config"], "src.pcapi.routes.serialization.bookings_serialize.PostBookingBodyModel.Config": [], "src.pcapi.routes.serialization.bookings_serialize.ActivationCode": [], "src.pcapi.routes.serialization.users": ["src.pcapi.routes.serialization.users.PatchProUserBodyModel", "src.pcapi.routes.serialization.users.PatchProUserResponseModel", "src.pcapi.routes.serialization.users.ProUserCreationBodyModel", "src.pcapi.routes.serialization.users.SharedCurrentUserResponseModel", "src.pcapi.routes.serialization.users.LoginUserBodyModel", "src.pcapi.routes.serialization.users.SharedLoginUserResponseModel"], "src.pcapi.routes.serialization.users.PatchProUserBodyModel": ["src.pcapi.routes.serialization.users.PatchProUserBodyModel.Config", "pcapi.serialization.utils.validate_not_empty_string_when_provided", "pcapi.serialization.utils.validate_phone_number_format"], "pcapi.serialization.utils.validate_not_empty_string_when_provided": [], "pcapi.serialization.utils.validate_phone_number_format": [], "src.pcapi.routes.serialization.users.PatchProUserBodyModel.Config": [], "src.pcapi.routes.serialization.users.PatchProUserResponseModel": ["src.pcapi.routes.serialization.users.PatchProUserResponseModel.Config"], "src.pcapi.routes.serialization.users.PatchProUserResponseModel.Config": [], "src.pcapi.routes.serialization.users.ProUserCreationBodyModel": ["pydantic.class_validators.validator", "src.pcapi.routes.serialization.users.ProUserCreationBodyModel.Config", "pcapi.serialization.utils.validate_phone_number_format"], "src.pcapi.routes.serialization.users.ProUserCreationBodyModel.Config": [], "src.pcapi.routes.serialization.users.LoginUserBodyModel": [], "src.pcapi.routes.serialization.users.SharedLoginUserResponseModel": ["src.pcapi.routes.serialization.users.SharedLoginUserResponseModel.Config", "pcapi.serialization.utils.humanize_field", "<builtin>.classmethod"], "src.pcapi.routes.serialization.users.SharedLoginUserResponseModel.Config": [], "src.pcapi.routes.serialization.users.SharedCurrentUserResponseModel": ["src.pcapi.routes.serialization.users.SharedCurrentUserResponseModel.Config", "pcapi.serialization.utils.humanize_field", "<builtin>.classmethod"], "src.pcapi.routes.serialization.users.SharedCurrentUserResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize": ["src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesQueryModel", "src.pcapi.routes.serialization.offerers_serialize.OffererApiKey", "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetOffererNameResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererVenueResponseModel", "src.pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel", "src.pcapi.routes.serialization.offerers_serialize.UserOffererResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetOffererVenueResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetOfferersListResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersQueryModel", "src.pcapi.routes.serialization.offerers_serialize.GetOfferersResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetOffererResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetOffererListQueryModel", "src.pcapi.routes.serialization.offerers_serialize.GenerateOffererApiKeyResponse", "src.pcapi.routes.serialization.offerers_serialize.ListUserOfferersResponseModel", "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererResponseModel"], "src.pcapi.routes.serialization.offerers_serialize.GetOffererVenueResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offerers_serialize.GetOffererVenueResponseModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetOffererVenueResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.OffererApiKey": [], "src.pcapi.routes.serialization.offerers_serialize.GetOffererResponseModel": ["src.pcapi.routes.serialization.offerers_serialize.GetOffererResponseModel.Config", "pcapi.serialization.utils.humanize_field", "<builtin>.classmethod"], "src.pcapi.routes.serialization.offerers_serialize.GetOffererResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetOffererNameResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offerers_serialize.GetOffererNameResponseModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetOffererNameResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesResponseModel": ["src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesResponseModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesQueryModel": ["src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesQueryModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetOfferersNamesQueryModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererVenueResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererVenueResponseModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererVenueResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererResponseModel": ["src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererResponseModel.Config", "pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOffererResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersResponseModel": ["src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersResponseModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersQueryModel": ["src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersQueryModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersQueryModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GenerateOffererApiKeyResponse": [], "src.pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel": ["src.pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.UserOffererResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offerers_serialize.UserOffererResponseModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.UserOffererResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.ListUserOfferersResponseModel": [], "src.pcapi.routes.serialization.offerers_serialize.GetOfferersResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offerers_serialize.GetOfferersResponseModel.Config"], "src.pcapi.routes.serialization.offerers_serialize.GetOfferersResponseModel.Config": [], "src.pcapi.routes.serialization.offerers_serialize.GetOfferersListResponseModel": [], "src.pcapi.routes.serialization.offerers_serialize.GetOffererListQueryModel": [], "src.pcapi.routes.serialization.mediations_serialize": ["src.pcapi.routes.serialization.mediations_serialize.UpdateMediationBodyModel", "src.pcapi.routes.serialization.mediations_serialize.CreateMediationBodyModel", "src.pcapi.routes.serialization.mediations_serialize.MediationResponseIdModel", "src.pcapi.routes.serialization.mediations_serialize.UpdateMediationResponseModel"], "src.pcapi.routes.serialization.mediations_serialize.CreateMediationBodyModel": ["<builtin>.property", "pcapi.serialization.utils.dehumanize_field", "pydantic.Field", "src.pcapi.routes.serialization.mediations_serialize.CreateMediationBodyModel.Config"], "src.pcapi.routes.serialization.mediations_serialize.CreateMediationBodyModel.Config": [], "src.pcapi.routes.serialization.mediations_serialize.MediationResponseIdModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.mediations_serialize.MediationResponseIdModel.Config"], "src.pcapi.routes.serialization.mediations_serialize.MediationResponseIdModel.Config": [], "src.pcapi.routes.serialization.mediations_serialize.UpdateMediationResponseModel": ["src.pcapi.routes.serialization.mediations_serialize.UpdateMediationResponseModel.Config", "pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.mediations_serialize.UpdateMediationResponseModel.Config": [], "src.pcapi.routes.serialization.mediations_serialize.UpdateMediationBodyModel": [], "src.pcapi.routes.serialization.bookings_recap_serialize": ["src.pcapi.routes.serialization.bookings_recap_serialize.OfferType", "src.pcapi.routes.serialization.bookings_recap_serialize.PatchBookingByTokenQueryModel", "src.pcapi.routes.serialization.bookings_recap_serialize.ListBookingsQueryModel", "src.pcapi.routes.serialization.bookings_recap_serialize.ListBookingsResponseModel"], "src.pcapi.routes.serialization.bookings_recap_serialize.OfferType": [], "src.pcapi.routes.serialization.bookings_recap_serialize.ListBookingsQueryModel": ["src.pcapi.routes.serialization.bookings_recap_serialize.ListBookingsQueryModel.Config", "pcapi.serialization.utils.dehumanize_field"], "src.pcapi.routes.serialization.bookings_recap_serialize.ListBookingsQueryModel.Config": [], "src.pcapi.routes.serialization.bookings_recap_serialize.ListBookingsResponseModel": [], "src.pcapi.routes.serialization.bookings_recap_serialize.PatchBookingByTokenQueryModel": [], "src.pcapi.routes.serialization": ["src.pcapi.routes.serialization.BaseModel"], "src.pcapi.routes.serialization.BaseModel": ["src.pcapi.routes.serialization.BaseModel.Config", "pydantic.validator"], "src.pcapi.routes.serialization.BaseModel.Config": ["<builtin>.staticmethod"], "src.pcapi.routes.serialization.offers_serialize": ["src.pcapi.routes.serialization.offers_serialize.CompletedEducationalOfferModel", "src.pcapi.routes.serialization.offers_serialize.ListOffersStockResponseModel", "src.pcapi.routes.serialization.offers_serialize.GetOfferProductResponseModel", "src.pcapi.routes.serialization.offers_serialize.PatchOfferBodyModel", "src.pcapi.routes.serialization.offers_serialize.SubcategoryResponseModel", "src.pcapi.routes.serialization.offers_serialize.EducationalOfferBodyModel", "src.pcapi.routes.serialization.offers_serialize.EducationalOfferShadowStockBodyModel", "src.pcapi.routes.serialization.offers_serialize.GetOfferManagingOffererResponseModel", "src.pcapi.routes.serialization.offers_serialize.EducationalOfferExtraDataOfferVenueBodyModel", "src.pcapi.routes.serialization.offers_serialize.PatchOfferActiveStatusBodyModel", "src.pcapi.routes.serialization.offers_serialize.GetOfferResponseModel", "src.pcapi.routes.serialization.offers_serialize.PostOfferBodyModel", "src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferExtraDataBodyModel", "src.pcapi.routes.serialization.offers_serialize.PatchEducationalOfferBodyModel", "src.pcapi.routes.serialization.offers_serialize.CategoryResponseModel", "src.pcapi.routes.serialization.offers_serialize.EducationalOfferPartialExtraDataBodyModel", "src.pcapi.routes.serialization.offers_serialize.ListOffersOfferResponseModel", "src.pcapi.routes.serialization.offers_serialize.GetOfferVenueResponseModel", "src.pcapi.routes.serialization.offers_serialize.OfferResponseIdModel", "src.pcapi.routes.serialization.offers_serialize.GetOfferStockResponseModel", "src.pcapi.routes.serialization.offers_serialize.ListOffersQueryModel", "src.pcapi.routes.serialization.offers_serialize.ImageBodyModel", "src.pcapi.routes.serialization.offers_serialize.ListOffersVenueResponseModel", "src.pcapi.routes.serialization.offers_serialize.GetOfferLastProviderResponseModel", "src.pcapi.routes.serialization.offers_serialize.ListOffersResponseModel", "src.pcapi.routes.serialization.offers_serialize.CategoriesResponseModel", "src.pcapi.routes.serialization.offers_serialize.OfferAddressType", "src.pcapi.routes.serialization.offers_serialize.EducationalOfferExtraDataBodyModel", "src.pcapi.routes.serialization.offers_serialize.PatchAllOffersActiveStatusBodyModel", "src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferBodyModel", "src.pcapi.routes.serialization.offers_serialize.PatchAllOffersActiveStatusResponseModel", "src.pcapi.routes.serialization.offers_serialize.GetOfferMediationResponseModel"], "src.pcapi.routes.serialization.offers_serialize.SubcategoryResponseModel": ["src.pcapi.routes.serialization.offers_serialize.SubcategoryResponseModel.Config"], "src.pcapi.routes.serialization.offers_serialize.SubcategoryResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.CategoryResponseModel": ["src.pcapi.routes.serialization.offers_serialize.CategoryResponseModel.Config"], "src.pcapi.routes.serialization.offers_serialize.CategoryResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.PostOfferBodyModel": ["src.pcapi.routes.serialization.offers_serialize.PostOfferBodyModel.Config", "pydantic.validator"], "src.pcapi.routes.serialization.offers_serialize.PostOfferBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.OfferAddressType": [], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferExtraDataOfferVenueBodyModel": ["src.pcapi.routes.serialization.offers_serialize.EducationalOfferExtraDataOfferVenueBodyModel.Config"], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferExtraDataOfferVenueBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferExtraDataBodyModel": ["src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferExtraDataBodyModel.Config"], "src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferExtraDataBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferBodyModel": ["src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferBodyModel.Config", "pydantic.validator"], "src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferExtraDataBodyModel": [], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferBodyModel": [], "src.pcapi.routes.serialization.offers_serialize.CompletedEducationalOfferModel": [], "src.pcapi.routes.serialization.offers_serialize.PatchOfferBodyModel": ["src.pcapi.routes.serialization.offers_serialize.PatchOfferBodyModel.Config", "pydantic.validator"], "src.pcapi.routes.serialization.offers_serialize.PatchOfferBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferPartialExtraDataBodyModel": ["src.pcapi.routes.serialization.offers_serialize.EducationalOfferPartialExtraDataBodyModel.Config"], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferPartialExtraDataBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.PatchEducationalOfferBodyModel": ["pydantic.validator", "src.pcapi.routes.serialization.offers_serialize.PatchEducationalOfferBodyModel.Config"], "src.pcapi.routes.serialization.offers_serialize.PatchEducationalOfferBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.OfferResponseIdModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offers_serialize.OfferResponseIdModel.Config"], "src.pcapi.routes.serialization.offers_serialize.OfferResponseIdModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.PatchOfferActiveStatusBodyModel": ["pcapi.serialization.utils.dehumanize_list_field", "src.pcapi.routes.serialization.offers_serialize.PatchOfferActiveStatusBodyModel.Config"], "pcapi.serialization.utils.dehumanize_list_field": [], "src.pcapi.routes.serialization.offers_serialize.PatchOfferActiveStatusBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.PatchAllOffersActiveStatusBodyModel": ["pcapi.serialization.utils.dehumanize_field", "src.pcapi.routes.serialization.offers_serialize.PatchAllOffersActiveStatusBodyModel.Config"], "src.pcapi.routes.serialization.offers_serialize.PatchAllOffersActiveStatusBodyModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.PatchAllOffersActiveStatusResponseModel": [], "src.pcapi.routes.serialization.offers_serialize.ListOffersVenueResponseModel": [], "src.pcapi.routes.serialization.offers_serialize.ListOffersStockResponseModel": ["pydantic.validator"], "src.pcapi.routes.serialization.offers_serialize.ListOffersOfferResponseModel": [], "src.pcapi.routes.serialization.offers_serialize.ListOffersResponseModel": ["src.pcapi.routes.serialization.offers_serialize.ListOffersResponseModel.Config"], "src.pcapi.routes.serialization.offers_serialize.ListOffersResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.ListOffersQueryModel": ["pcapi.serialization.utils.dehumanize_field", "src.pcapi.routes.serialization.offers_serialize.ListOffersQueryModel.Config"], "src.pcapi.routes.serialization.offers_serialize.ListOffersQueryModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.GetOfferProductResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offers_serialize.GetOfferProductResponseModel.Config"], "src.pcapi.routes.serialization.offers_serialize.GetOfferProductResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.GetOfferStockResponseModel": ["<builtin>.classmethod", "pydantic.Field", "pydantic.validator", "src.pcapi.routes.serialization.offers_serialize.GetOfferStockResponseModel.Config", "pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.offers_serialize.GetOfferStockResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.GetOfferManagingOffererResponseModel": ["src.pcapi.routes.serialization.offers_serialize.GetOfferManagingOffererResponseModel.Config", "pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.offers_serialize.GetOfferManagingOffererResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.GetOfferVenueResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offers_serialize.GetOfferVenueResponseModel.Config"], "src.pcapi.routes.serialization.offers_serialize.GetOfferVenueResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.GetOfferLastProviderResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offers_serialize.GetOfferLastProviderResponseModel.Config"], "src.pcapi.routes.serialization.offers_serialize.GetOfferLastProviderResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.GetOfferMediationResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.offers_serialize.GetOfferMediationResponseModel.Config"], "src.pcapi.routes.serialization.offers_serialize.GetOfferMediationResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.GetOfferResponseModel": ["src.pcapi.routes.serialization.offers_serialize.GetOfferResponseModel.Config", "pcapi.serialization.utils.humanize_field", "pydantic.validator", "<builtin>.classmethod"], "src.pcapi.routes.serialization.offers_serialize.GetOfferResponseModel.Config": [], "src.pcapi.routes.serialization.offers_serialize.ImageBodyModel": [], "src.pcapi.routes.serialization.offers_serialize.CategoriesResponseModel": [], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferShadowStockBodyModel": ["pydantic.validator", "src.pcapi.routes.serialization.offers_serialize.EducationalOfferShadowStockBodyModel.Config"], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferShadowStockBodyModel.Config": [], "src.pcapi.routes.serialization.providers_serialize": ["src.pcapi.routes.serialization.providers_serialize.ProviderResponse", "src.pcapi.routes.serialization.providers_serialize.ListProviderResponse"], "src.pcapi.routes.serialization.providers_serialize.ProviderResponse": ["src.pcapi.routes.serialization.providers_serialize.ProviderResponse.Config", "pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.providers_serialize.ProviderResponse.Config": [], "src.pcapi.routes.serialization.providers_serialize.ListProviderResponse": [], "src.pcapi.routes.serialization.password_serialize": ["src.pcapi.routes.serialization.password_serialize.NewPasswordBodyModel", "src.pcapi.routes.serialization.password_serialize.ResetPasswordBodyModel", "src.pcapi.routes.serialization.password_serialize.ChangePasswordBodyModel"], "src.pcapi.routes.serialization.password_serialize.ResetPasswordBodyModel": ["pydantic.class_validators.validator"], "src.pcapi.routes.serialization.password_serialize.ChangePasswordBodyModel": ["pcapi.serialization.utils.validate_not_empty_string_when_provided"], "src.pcapi.routes.serialization.password_serialize.NewPasswordBodyModel": ["pcapi.serialization.utils.validate_not_empty_string_when_provided"], "src.pcapi.routes.serialization.thumbnails_serialize": ["src.pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailResponseModel", "src.pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailBodyModel"], "src.pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailBodyModel": ["<builtin>.property", "src.pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailBodyModel.Config", "pcapi.serialization.utils.dehumanize_field"], "src.pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailBodyModel.Config": [], "src.pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailResponseModel": ["pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.venue_types_serialize": ["src.pcapi.routes.serialization.venue_types_serialize.VenueTypeResponseModel", "src.pcapi.routes.serialization.venue_types_serialize.VenueTypeListResponseModel"], "src.pcapi.routes.serialization.venue_types_serialize.VenueTypeResponseModel": [], "src.pcapi.routes.serialization.venue_types_serialize.VenueTypeListResponseModel": [], "src.pcapi.routes.serialization.venues_serialize": ["src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel", "src.pcapi.routes.serialization.venues_serialize.VenueListItemResponseModel", "src.pcapi.routes.serialization.venues_serialize.GetVenueManagingOffererResponseModel", "src.pcapi.routes.serialization.venues_serialize.VenueResponseModel", "src.pcapi.routes.serialization.venues_serialize.BannerMetaModel", "src.pcapi.routes.serialization.venues_serialize.VenueStatsResponseModel", "src.pcapi.routes.serialization.venues_serialize.VenueListQueryModel", "src.pcapi.routes.serialization.venues_serialize.EditVenueBodyModel", "src.pcapi.routes.serialization.venues_serialize.GetVenueResponseModel", "src.pcapi.routes.serialization.venues_serialize.PostVenueBodyModel", "src.pcapi.routes.serialization.venues_serialize.GetVenueListResponseModel"], "src.pcapi.routes.serialization.venues_serialize.PostVenueBodyModel": ["pydantic.validator", "src.pcapi.routes.serialization.venues_serialize.PostVenueBodyModel.Config"], "src.pcapi.routes.serialization.venues_serialize.PostVenueBodyModel.Config": [], "src.pcapi.routes.serialization.venues_serialize.VenueResponseModel": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.venues_serialize.VenueResponseModel.Config"], "src.pcapi.routes.serialization.venues_serialize.VenueResponseModel.Config": [], "src.pcapi.routes.serialization.venues_serialize.VenueStatsResponseModel": [], "src.pcapi.routes.serialization.venues_serialize.GetVenueManagingOffererResponseModel": ["src.pcapi.routes.serialization.venues_serialize.GetVenueManagingOffererResponseModel.Config", "pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.venues_serialize.GetVenueManagingOffererResponseModel.Config": [], "src.pcapi.routes.serialization.venues_serialize.BannerMetaModel": [], "src.pcapi.routes.serialization.venues_serialize.GetVenueResponseModel": ["src.pcapi.routes.serialization.venues_serialize.GetVenueResponseModel.Config", "pcapi.serialization.utils.humanize_field", "<builtin>.classmethod"], "src.pcapi.routes.serialization.venues_serialize.GetVenueResponseModel.Config": [], "src.pcapi.routes.serialization.venues_serialize.EditVenueBodyModel": ["pcapi.serialization.utils.dehumanize_field"], "src.pcapi.routes.serialization.venues_serialize.VenueListItemResponseModel": ["pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.venues_serialize.GetVenueListResponseModel": [], "src.pcapi.routes.serialization.venues_serialize.VenueListQueryModel": ["src.pcapi.routes.serialization.venues_serialize.VenueListQueryModel.Config", "pcapi.serialization.utils.dehumanize_field", "pcapi.serialization.utils.string_to_boolean_field"], "pcapi.serialization.utils.string_to_boolean_field": [], "src.pcapi.routes.serialization.venues_serialize.VenueListQueryModel.Config": [], "src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel": ["<builtin>.property", "pydantic.root_validator", "src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel.Config", "<builtin>.classmethod"], "src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel.Config": [], "pydantic.root_validator": [], "src.pcapi.routes.serialization.serializer": ["functools.singledispatch"], "src.pcapi.routes.serialization.venue_provider_serialize": ["src.pcapi.routes.serialization.venue_provider_serialize.PostVenueProviderBody", "src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderQuery", "src.pcapi.routes.serialization.venue_provider_serialize.VenueProviderResponse", "src.pcapi.routes.serialization.venue_provider_serialize.ProviderResponse", "src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderResponse"], "src.pcapi.routes.serialization.venue_provider_serialize.PostVenueProviderBody": [], "src.pcapi.routes.serialization.venue_provider_serialize.ProviderResponse": ["pcapi.serialization.utils.humanize_field", "src.pcapi.routes.serialization.venue_provider_serialize.ProviderResponse.Config"], "src.pcapi.routes.serialization.venue_provider_serialize.ProviderResponse.Config": [], "src.pcapi.routes.serialization.venue_provider_serialize.VenueProviderResponse": ["src.pcapi.routes.serialization.venue_provider_serialize.VenueProviderResponse.Config", "pcapi.serialization.utils.humanize_field"], "src.pcapi.routes.serialization.venue_provider_serialize.VenueProviderResponse.Config": [], "src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderResponse": ["src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderResponse.Config"], "src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderResponse.Config": [], "src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderQuery": ["pcapi.serialization.utils.dehumanize_field", "src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderQuery.Config"], "src.pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderQuery.Config": [], "src.pcapi.routes.serialization.finance_serialize": ["src.pcapi.routes.serialization.finance_serialize.BusinessUnitEditionBodyModel", "src.pcapi.routes.serialization.finance_serialize.InvoiceResponseModel", "src.pcapi.routes.serialization.finance_serialize.InvoiceListQueryModel", "src.pcapi.routes.serialization.finance_serialize.BusinessUnitResponseModel", "src.pcapi.routes.serialization.finance_serialize.BusinessUnitListQueryModel", "src.pcapi.routes.serialization.finance_serialize.BusinessUnitListResponseModel", "src.pcapi.routes.serialization.finance_serialize.InvoiceListResponseModel"], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitListQueryModel": ["src.pcapi.routes.serialization.finance_serialize.BusinessUnitListQueryModel.Config"], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitListQueryModel.Config": [], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitResponseModel": ["<builtin>.classmethod", "src.pcapi.routes.serialization.finance_serialize.BusinessUnitResponseModel.Config"], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitResponseModel.Config": [], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitListResponseModel": ["src.pcapi.routes.serialization.finance_serialize.BusinessUnitListResponseModel.Config"], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitListResponseModel.Config": [], "src.pcapi.routes.serialization.finance_serialize.InvoiceListQueryModel": ["src.pcapi.routes.serialization.finance_serialize.InvoiceListQueryModel.Config"], "src.pcapi.routes.serialization.finance_serialize.InvoiceListQueryModel.Config": [], "src.pcapi.routes.serialization.finance_serialize.InvoiceResponseModel": ["src.pcapi.routes.serialization.finance_serialize.InvoiceResponseModel.Config", "<builtin>.classmethod"], "src.pcapi.routes.serialization.finance_serialize.InvoiceResponseModel.Config": [], "src.pcapi.routes.serialization.finance_serialize.InvoiceListResponseModel": [], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitEditionBodyModel": ["src.pcapi.routes.serialization.finance_serialize.BusinessUnitEditionBodyModel.Config"], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitEditionBodyModel.Config": [], "src.pcapi.routes.serialization.base": ["src.pcapi.routes.serialization.base.BaseVenueResponse", "src.pcapi.routes.serialization.base.VenueContactModel"], "src.pcapi.routes.serialization.base.VenueContactModel": ["pydantic.validator", "src.pcapi.routes.serialization.base.VenueContactModel.Config"], "src.pcapi.routes.serialization.base.VenueContactModel.Config": [], "src.pcapi.routes.serialization.base.BaseVenueResponse": [], "src.pcapi.routes.internal.sandboxes": [], "src.pcapi.routes.internal": [], "src.pcapi.routes.internal.storage": ["<builtin>.print"], "src.pcapi.routes.internal.health_check": [], "src.pcapi.routes.shared.users": ["pcapi.utils.rate_limiting.ip_rate_limiter", "pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required", "pcapi.utils.rate_limiting.email_rate_limiter"], "src.pcapi.routes.shared": [], "src.pcapi.routes.shared.features": [], "src.pcapi.routes.shared.passwords": ["pcapi.serialization.decorator.spectree_serialize", "flask_login.login_required"], "src.pcapi.routes.adage_iframe.blueprint": ["flask.Blueprint", "spectree.SpecTree", "flask_cors.extension.CORS", "spectree.SecurityScheme"], "src.pcapi.routes.adage_iframe.bookings": ["pcapi.routes.adage_iframe.security.adage_jwt_required", "pcapi.serialization.decorator.spectree_serialize"], "pcapi.routes.adage_iframe.security.adage_jwt_required": [], "src.pcapi.routes.adage_iframe.venues": ["pcapi.routes.adage_iframe.security.adage_jwt_required", "pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.adage_iframe.security": [], "src.pcapi.routes.adage_iframe": [], "src.pcapi.routes.adage_iframe.offers": ["pcapi.routes.adage_iframe.security.adage_jwt_required", "pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.adage_iframe.authentication": ["pcapi.routes.adage_iframe.security.adage_jwt_required", "pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.adage_iframe.serialization.venues": ["src.pcapi.routes.adage_iframe.serialization.venues.VenueResponse"], "src.pcapi.routes.adage_iframe.serialization.venues.VenueResponse": ["src.pcapi.routes.adage_iframe.serialization.venues.VenueResponse.Config"], "src.pcapi.routes.adage_iframe.serialization.venues.VenueResponse.Config": [], "src.pcapi.routes.adage_iframe.serialization.adage_authentication": ["src.pcapi.routes.adage_iframe.serialization.adage_authentication.RedactorInformation", "src.pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "src.pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedResponse", "src.pcapi.routes.adage_iframe.serialization.adage_authentication.AdageFrontRoles"], "src.pcapi.routes.adage_iframe.serialization.adage_authentication.AdageFrontRoles": [], "src.pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation": [], "src.pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedResponse": ["src.pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedResponse.Config"], "src.pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedResponse.Config": [], "src.pcapi.routes.adage_iframe.serialization.adage_authentication.RedactorInformation": [], "src.pcapi.routes.adage_iframe.serialization.offers": ["src.pcapi.routes.adage_iframe.serialization.offers.CategoriesResponseModel", "src.pcapi.routes.adage_iframe.serialization.offers.OfferResponse", "src.pcapi.routes.adage_iframe.serialization.offers.OfferManagingOffererResponse", "src.pcapi.routes.adage_iframe.serialization.offers.OfferStockResponse", "src.pcapi.routes.adage_iframe.serialization.offers.SubcategoryResponseModel", "src.pcapi.routes.adage_iframe.serialization.offers.CategoryResponseModel", "src.pcapi.routes.adage_iframe.serialization.offers.OfferVenueResponse"], "src.pcapi.routes.adage_iframe.serialization.offers.OfferManagingOffererResponse": ["src.pcapi.routes.adage_iframe.serialization.offers.OfferManagingOffererResponse.Config"], "src.pcapi.routes.adage_iframe.serialization.offers.OfferManagingOffererResponse.Config": [], "src.pcapi.routes.adage_iframe.serialization.offers.OfferStockResponse": ["pydantic.class_validators.validator", "src.pcapi.routes.adage_iframe.serialization.offers.OfferStockResponse.Config"], "src.pcapi.routes.adage_iframe.serialization.offers.OfferStockResponse.Config": [], "src.pcapi.routes.adage_iframe.serialization.offers.OfferVenueResponse": ["<builtin>.classmethod", "src.pcapi.routes.adage_iframe.serialization.offers.OfferVenueResponse.Config"], "src.pcapi.routes.adage_iframe.serialization.offers.OfferVenueResponse.Config": [], "src.pcapi.routes.adage_iframe.serialization.offers.OfferResponse": ["src.pcapi.routes.adage_iframe.serialization.offers.OfferResponse.Config", "<builtin>.classmethod"], "src.pcapi.routes.adage_iframe.serialization.offers.OfferResponse.Config": [], "src.pcapi.routes.adage_iframe.serialization.offers.CategoryResponseModel": ["src.pcapi.routes.adage_iframe.serialization.offers.CategoryResponseModel.Config"], "src.pcapi.routes.adage_iframe.serialization.offers.CategoryResponseModel.Config": [], "src.pcapi.routes.adage_iframe.serialization.offers.SubcategoryResponseModel": ["src.pcapi.routes.adage_iframe.serialization.offers.SubcategoryResponseModel.Config"], "src.pcapi.routes.adage_iframe.serialization.offers.SubcategoryResponseModel.Config": [], "src.pcapi.routes.adage_iframe.serialization.offers.CategoriesResponseModel": ["src.pcapi.routes.adage_iframe.serialization.offers.CategoriesResponseModel.Config"], "src.pcapi.routes.adage_iframe.serialization.offers.CategoriesResponseModel.Config": [], "src.pcapi.routes.adage_iframe.serialization.educational_booking": ["src.pcapi.routes.adage_iframe.serialization.educational_booking.BookEducationalOfferRequest", "src.pcapi.routes.adage_iframe.serialization.educational_booking.BookEducationalOfferResponse"], "src.pcapi.routes.adage_iframe.serialization.educational_booking.BookEducationalOfferRequest": [], "src.pcapi.routes.adage_iframe.serialization.educational_booking.BookEducationalOfferResponse": [], "src.pcapi.routes.external.unsubscribe_users": ["pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.external.bank_informations": ["pcapi.serialization.decorator.spectree_serialize", "pcapi.validation.routes.dms.require_dms_token"], "pcapi.validation.routes.dms.require_dms_token": [], "src.pcapi.routes.external": [], "src.pcapi.routes.external.users_subscription": ["pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.routes.saml.educonnect": ["pcapi.routes.native.security.authenticated_user_required"], "src.pcapi.routes.saml.blueprint": ["flask.Blueprint", "flask_cors.extension.CORS"], "src.pcapi.routes.saml": [], "src.pcapi.notifications": [], "src.pcapi.notifications.sms.sending_limit": [], "src.pcapi.notifications.sms": [], "src.pcapi.notifications.sms.testing": [], "src.pcapi.notifications.sms.backends.sendinblue": ["src.pcapi.notifications.sms.backends.sendinblue.ToDevSendinblueBackend", "src.pcapi.notifications.sms.backends.sendinblue.SendinblueBackend"], "src.pcapi.notifications.sms.backends.sendinblue.SendinblueBackend": [], "src.pcapi.notifications.sms.backends.sendinblue.ToDevSendinblueBackend": [], "src.pcapi.notifications.sms.backends": [], "src.pcapi.notifications.sms.backends.logger": ["src.pcapi.notifications.sms.backends.logger.LoggerBackend"], "src.pcapi.notifications.sms.backends.logger.LoggerBackend": [], "src.pcapi.notifications.sms.backends.testing": ["src.pcapi.notifications.sms.backends.testing.TestingBackend"], "src.pcapi.notifications.sms.backends.testing.TestingBackend": [], "src.pcapi.notifications.internal": [], "src.pcapi.notifications.internal.testing": [], "src.pcapi.notifications.internal.backends": [], "src.pcapi.notifications.internal.backends.logger": ["src.pcapi.notifications.internal.backends.logger.LoggerBackend"], "src.pcapi.notifications.internal.backends.logger.LoggerBackend": [], "src.pcapi.notifications.internal.backends.testing": ["src.pcapi.notifications.internal.backends.testing.TestingBackend"], "src.pcapi.notifications.internal.backends.testing.TestingBackend": [], "src.pcapi.notifications.internal.backends.slack": ["src.pcapi.notifications.internal.backends.slack.SlackBackend"], "src.pcapi.notifications.internal.backends.slack.SlackBackend": [], "src.pcapi.notifications.internal.transactional.change_feature_flip": [], "src.pcapi.notifications.push.models": ["src.pcapi.notifications.push.models.UpdateAttributeRequestResult"], "src.pcapi.notifications.push.models.UpdateAttributeRequestResult": [], "src.pcapi.notifications.push": [], "src.pcapi.notifications.push.transactional_notifications": ["src.pcapi.notifications.push.transactional_notifications.TransactionalNotificationData", "src.pcapi.notifications.push.transactional_notifications.GroupId", "src.pcapi.notifications.push.transactional_notifications.TransactionalNotificationMessage"], "src.pcapi.notifications.push.transactional_notifications.GroupId": [], "src.pcapi.notifications.push.transactional_notifications.TransactionalNotificationMessage": [], "src.pcapi.notifications.push.transactional_notifications.TransactionalNotificationData": [], "src.pcapi.notifications.push.testing": [], "src.pcapi.notifications.push.backends.batch": ["src.pcapi.notifications.push.backends.batch.BatchAPI", "src.pcapi.notifications.push.backends.batch.BatchBackend", "src.pcapi.notifications.push.backends.batch.UserUpdateData"], "src.pcapi.notifications.push.backends.batch.UserUpdateData": [], "src.pcapi.notifications.push.backends.batch.BatchAPI": [], "src.pcapi.notifications.push.backends.batch.BatchBackend": [], "src.pcapi.notifications.push.backends": [], "src.pcapi.notifications.push.backends.logger": ["src.pcapi.notifications.push.backends.logger.LoggerBackend"], "src.pcapi.notifications.push.backends.logger.LoggerBackend": [], "src.pcapi.notifications.push.backends.testing": ["src.pcapi.notifications.push.backends.testing.TestingBackend"], "src.pcapi.notifications.push.backends.testing.TestingBackend": [], "src.pcapi.validation": [], "src.pcapi.validation.models.user": [], "src.pcapi.validation.models.bank_information": [], "src.pcapi.validation.models.offer": [], "src.pcapi.validation.models.venue": [], "src.pcapi.validation.models.generic": [], "src.pcapi.validation.models": [], "src.pcapi.validation.models.stock": [], "src.pcapi.validation.models.has_address_mixin": [], "src.pcapi.validation.models.offerer": [], "src.pcapi.validation.models.product": [], "src.pcapi.validation.models.entity_validator": [], "src.pcapi.validation.routes.ubble": ["src.pcapi.validation.routes.ubble.WebhookDummyReponse", "src.pcapi.validation.routes.ubble.WebhookRequest", "src.pcapi.validation.routes.ubble.WebhookRequestHeaders", "src.pcapi.validation.routes.ubble.Configuration"], "src.pcapi.validation.routes.ubble.Configuration": [], "src.pcapi.validation.routes.ubble.WebhookRequest": [], "src.pcapi.validation.routes.ubble.WebhookRequestHeaders": ["src.pcapi.validation.routes.ubble.WebhookRequestHeaders.Config"], "src.pcapi.validation.routes.ubble.WebhookRequestHeaders.Config": [], "src.pcapi.validation.routes.ubble.WebhookDummyReponse": [], "src.pcapi.validation.routes.dms": ["src.pcapi.validation.routes.dms.BankInformationDmsResponseModel", "src.pcapi.validation.routes.dms.DMSWebhookRequest", "src.pcapi.validation.routes.dms.BankInformationDmsFormModel"], "src.pcapi.validation.routes.dms.DMSWebhookRequest": [], "src.pcapi.validation.routes.dms.BankInformationDmsFormModel": [], "src.pcapi.validation.routes.dms.BankInformationDmsResponseModel": [], "src.pcapi.validation.routes.bookings": [], "src.pcapi.validation.routes.users_authorizations": [], "src.pcapi.validation.routes": [], "src.pcapi.validation.routes.offers": [], "src.pcapi.validation.routes.validate": [], "src.pcapi.validation.routes.users_authentifications": ["werkzeug.local.LocalProxy"], "werkzeug.local.LocalProxy": [], "src.pcapi.scripts.business_unit.create_bu.create_business_unit": ["<builtin>.print", "pcapi.core.finance.models.BusinessUnit", "pcapi.models.bank_information.BankInformation"], "pcapi.models.bank_information.BankInformation": [], "pcapi.core.finance.models.BusinessUnit": [], "src.pcapi.scripts.business_unit.create_bu.create_business_units_for_venues_with_siret": ["append", "src.pcapi.scripts.business_unit.create_bu.have_bank_information"], "src.pcapi.scripts.business_unit.create_bu.have_bank_information": [], "src.pcapi.scripts.business_unit.create_bu.create_offerer_business_units": ["append", "src.pcapi.scripts.business_unit.create_bu.have_bank_information"], "src.pcapi.scripts.business_unit.create_bu.populate_business_unit": ["<builtin>.print", "src.pcapi.scripts.business_unit.create_bu.have_bank_information"], "src.pcapi.scripts.business_unit.create_bu.create_offerer_business_units_witout_siret": ["src.pcapi.scripts.business_unit.create_bu.have_bank_information", "src.pcapi.scripts.business_unit.create_bu.create_business_unit"], "src.pcapi.scripts.business_unit.create_bu.create_business_units_without_siret": ["<map>.values", "src.pcapi.scripts.business_unit.create_bu.have_bank_information", "src.pcapi.scripts.business_unit.create_bu.get_tmp_business_unit_id", "src.pcapi.scripts.business_unit.create_bu.create_business_unit"], "src.pcapi.scripts.business_unit.create_bu.get_tmp_business_unit_id": [], "src.pcapi.scripts.business_unit.create_bu.create_all_business_units": ["src.pcapi.scripts.business_unit.create_bu.populate_business_unit", "src.pcapi.scripts.business_unit.create_bu.create_business_units_without_siret", "src.pcapi.scripts.business_unit.create_bu.create_business_units_for_venues_with_siret", "src.pcapi.scripts.business_unit.create_bu.have_bank_information", "src.pcapi.scripts.business_unit.create_bu.create_offerer_business_units", "<builtin>.len", "src.pcapi.scripts.business_unit.create_bu.create_offerer_business_units_witout_siret"], "tests.local_providers.provider_api_stocks_test.ProviderApiStocksTest.test_synchronize_venue_providers": ["pcapi.local_providers.provider_api.provider_api_stocks.synchronize_stocks", "unittest.mock.call", "<builtin>.reversed", "<builtin>.len"], "pcapi.local_providers.provider_api.provider_api_stocks.synchronize_stocks": [], "unittest.mock.call": [], "<builtin>.reversed": [], "tests.routes.login_manager_test.BasicAuthenticationTest.test_good_password": ["<str>.encode"], "<str>.encode": [], "tests.routes.login_manager_test.BasicAuthenticationTest.test_wrong_password": ["<str>.encode"], "tests.utils.db_test.GetBatchesTest.test_basics": ["<builtin>.isinstance", "<builtin>.sorted", "<builtin>.list", "<builtin>.len"], "<builtin>.list": [], "tests.utils.db_test.GetBatchesTest.test_empty": ["<builtin>.list"], "tests.utils.image_conversion_test.ImageConversionTest.when_image_is_correctly_cropped": ["pcapi.utils.image_conversion._crop_image"], "pcapi.utils.image_conversion._crop_image": [], "tests.utils.image_conversion_test.ImageConversionTest.when_image_has_an_original_orientation": ["pcapi.utils.image_conversion._transpose_image"], "pcapi.utils.image_conversion._transpose_image": [], "tests.utils.image_conversion_test.ImageConversionTest.when_resize_image_that_have_width_less_than_max_width": ["pcapi.utils.image_conversion._resize_image"], "pcapi.utils.image_conversion._resize_image": [], "tests.utils.image_conversion_test.ImageConversionTest.test_image_ratio_portrait": ["pcapi.utils.image_conversion.standardize_image"], "pcapi.utils.image_conversion.standardize_image": [], "tests.utils.image_conversion_test.ImageConversionTest.test_image_ratio_landscape": ["pcapi.utils.image_conversion.standardize_image"], "src.pcapi.core.mails.transactional.pro.welcome_to_pro.get_welcome_to_pro_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData": [], "src.pcapi.core.mails.transactional.pro.welcome_to_pro.send_welcome_to_pro_email": ["src.pcapi.core.mails.transactional.pro.welcome_to_pro.get_welcome_to_pro_email_data"], "src.pcapi.notifications.push.backends.testing.TestingBackend.update_user_attributes": ["<builtin>.super"], "src.pcapi.notifications.push.backends.testing.TestingBackend.update_users_attributes": ["<builtin>.super"], "src.pcapi.notifications.push.backends.testing.TestingBackend.send_transactional_notification": ["<builtin>.super"], "src.pcapi.notifications.push.backends.testing.TestingBackend.delete_user_attributes": ["<builtin>.super"], "tests.scripts.payment.generate_new_payments_test.total_amount": ["<builtin>.sum"], "<builtin>.sum": [], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_records_new_payment_lines_in_database": ["pcapi.core.testing.assert_num_queries"], "pcapi.core.testing.assert_num_queries": [], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_creates_pending_and_not_processable_payments": ["pcapi.scripts.payment.batch_steps.generate_new_payments", "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments", "tests.scripts.payment.generate_new_payments_test.get_pending_payments"], "pcapi.scripts.payment.batch_steps.generate_new_payments": [], "tests.scripts.payment.generate_new_payments_test.get_pending_payments": [], "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments": [], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_reimburses_offerer_if_he_has_more_than_20000_euros_in_bookings_on_several_venues": ["tests.scripts.payment.generate_new_payments_test.total_amount", "pcapi.scripts.payment.batch_steps.generate_new_payments", "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments", "tests.scripts.payment.generate_new_payments_test.get_pending_payments"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_reimburses_offerer_with_degressive_rate_for_venues_with_bookings_exceeding_20000_euros": ["tests.scripts.payment.generate_new_payments_test.total_amount", "pcapi.scripts.payment.batch_steps.generate_new_payments", "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments", "tests.scripts.payment.generate_new_payments_test.get_pending_payments"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_full_reimburses_book_product_when_bookings_are_below_20000_euros": ["tests.scripts.payment.generate_new_payments_test.total_amount", "pcapi.scripts.payment.batch_steps.generate_new_payments", "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments", "tests.scripts.payment.generate_new_payments_test.get_pending_payments"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_reimburses_95_percent_for_book_product_when_bookings_exceed_20000_euros": ["tests.scripts.payment.generate_new_payments_test.total_amount", "pcapi.scripts.payment.batch_steps.generate_new_payments", "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments", "tests.scripts.payment.generate_new_payments_test.get_pending_payments"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_reimburses_95_percent_for_book_product_when_bookings_exceed_40000_euros": ["tests.scripts.payment.generate_new_payments_test.total_amount", "pcapi.scripts.payment.batch_steps.generate_new_payments", "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments", "tests.scripts.payment.generate_new_payments_test.get_pending_payments"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_reimburses_95_percent_for_book_product_when_bookings_exceed_100000_euros": ["tests.scripts.payment.generate_new_payments_test.total_amount", "pcapi.scripts.payment.batch_steps.generate_new_payments", "tests.scripts.payment.generate_new_payments_test.get_not_processable_payments", "tests.scripts.payment.generate_new_payments_test.get_pending_payments"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_use_custom_reimbursement_rule_with_amount": ["pcapi.scripts.payment.batch_steps.generate_new_payments"], "tests.scripts.payment.generate_new_payments_test.GenerateNewPaymentsTest.test_use_custom_reimbursement_rule_with_rate": ["pcapi.scripts.payment.batch_steps.generate_new_payments", "decimal.Decimal"], "src.pcapi.core.bookings.exceptions.OfferIsAlreadyBooked.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.QuantityIsInvalid.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.StockIsNotBookable.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.PhysicalExpenseLimitHasBeenReached.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.DigitalExpenseLimitHasBeenReached.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.CannotBookFreeOffers.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.NoActivationCodeAvailable.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.EducationalOfferCannotBeBooked.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.OfferCategoryNotBookableByUser.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.UserHasInsufficientFunds.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.BookingIsAlreadyUsed.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.BookingHasAlreadyBeenUsed.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.BookingIsAlreadyCancelled.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.BookingIsNotCancelledCannotBeUncancelled.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.BookingIsCancelled.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.CannotCancelConfirmedBooking.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.BookingDoesntExist.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.CannotDeleteOffererWithBookingsException.__init__": ["<builtin>.super"], "src.pcapi.core.bookings.exceptions.CannotDeleteVenueWithBookingsException.__init__": ["<builtin>.super"], "src.pcapi.routes.native.v1.settings.get_settings": ["src.pcapi.routes.native.v1.settings._get_features"], "src.pcapi.routes.native.v1.settings._get_features": [], "tests.scripts.beneficiary.send_mail_after_idcheck_outage_test.SendMailAfterIdcheckOutageTest.test_get_eligible_users_created_between": ["datetime.datetime", "datetime.timedelta", "pcapi.scripts.beneficiary.send_mail_after_idcheck_outage._get_eligible_users_created_between"], "pcapi.scripts.beneficiary.send_mail_after_idcheck_outage._get_eligible_users_created_between": [], "src.pcapi.validation.models.offer.validate": ["pcapi.core.offerers.repository.find_venue_by_id"], "pcapi.core.offerers.repository.find_venue_by_id": [], "src.pcapi.core.finance.utils.to_eurocents": ["<builtin>.int"], "src.pcapi.core.finance.utils.fr_currency_filter": ["<builtin>.abs", "src.pcapi.core.finance.utils.to_euros"], "<builtin>.abs": [], "src.pcapi.core.finance.utils.to_euros": [], "tests.scripts.payment.update_custom_reimbursements_test.test_update_from_csv_file_basics": ["pcapi.utils.human_ids.humanize", "pcapi.scripts.payment.update_custom_reimbursements.update_from_csv_file"], "pcapi.utils.human_ids.humanize": [], "pcapi.scripts.payment.update_custom_reimbursements.update_from_csv_file": [], "tests.scripts.payment.update_custom_reimbursements_test.test_update_from_csv_file_unknown_offer": ["pcapi.scripts.payment.update_custom_reimbursements.update_from_csv_file"], "tests.scripts.payment.update_custom_reimbursements_test.test_update_from_csv_file_detects_existing_rules_and_mismatches": ["pcapi.utils.human_ids.humanize", "pcapi.scripts.payment.update_custom_reimbursements.update_from_csv_file"], "tests.routes.external.unsubscribe_user_test.UnsubscribeUserTest.test_unsubscribe_user": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.users.factories.UserFactory"], "pcapi.core.users.factories.UserFactory": [], "tests.conftest.TestClient.__init__": [], "tests.conftest.TestClient.post": ["tests.conftest.TestClient._print_spec"], "tests.conftest.TestClient._print_spec": ["<builtin>.print", "pprint.pprint"], "pprint.pprint": [], "tests.routes.external.unsubscribe_user_test.UnsubscribeUserTest.test_unsubscribe_user_from_forbidden_ip": ["pcapi.core.users.factories.UserFactory", "pcapi.core.testing.override_settings"], "tests.routes.external.unsubscribe_user_test.UnsubscribeUserTest.test_unsubscribe_user_bad_request": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.users.factories.UserFactory"], "tests.routes.external.unsubscribe_user_test.UnsubscribeUserTest.test_unsubscribe_user_does_not_exist": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingTest.test_check_user_offerer_can_validate_bookings": ["pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings"], "pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings": [], "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingTest.test_check_anonymous_user_cannot_validate_bookings": ["pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings", "flask_login.AnonymousUserMixin"], "flask_login.AnonymousUserMixin": [], "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingTest.test_check_non_offerer_raise_error": ["pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings", "pcapi.core.users.models.User"], "pcapi.core.users.models.User": [], "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingV2Test.test_ok_if_user_offerer": ["pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings_v2"], "pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings_v2": [], "tests.validation.routes.users_authorizations_test.CheckUserCanValidateBookingV2Test.test_error_if_non_offerer": ["pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings_v2", "pcapi.core.users.models.User"], "tests.validation.routes.users_authorizations_test.CheckApiKeyAllowsToValidateBookingTest.test_does_not_raise_error_when_api_key_is_provided_and_is_related_to_offerer_id": ["pcapi.core.offerers.models.ApiKey", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.validation.routes.users_authorizations.check_api_key_allows_to_validate_booking"], "pcapi.model_creators.generic_creators.create_offerer": [], "pcapi.model_creators.generic_creators.create_user_offerer": [], "pcapi.core.offerers.models.ApiKey": [], "pcapi.validation.routes.users_authorizations.check_api_key_allows_to_validate_booking": [], "tests.validation.routes.users_authorizations_test.CheckApiKeyAllowsToValidateBookingTest.test_raises_exception_when_api_key_is_provided_but_related_offerer_does_not_have_rights_on_booking": ["pcapi.core.offerers.models.ApiKey", "pcapi.validation.routes.users_authorizations.check_api_key_allows_to_validate_booking"], "src.pcapi.sandboxes.scripts.utils.helpers.get_booking_helper": ["<builtin>.dict", "pcapi.routes.serialization.as_dict"], "pcapi.routes.serialization.as_dict": [], "src.pcapi.sandboxes.scripts.utils.helpers.get_offer_helper": ["<builtin>.dict", "pcapi.routes.serialization.as_dict"], "src.pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper": ["<builtin>.dict", "pcapi.routes.serialization.as_dict"], "src.pcapi.sandboxes.scripts.utils.helpers.get_stock_helper": ["pcapi.routes.serialization.as_dict"], "src.pcapi.sandboxes.scripts.utils.helpers.get_pro_helper": ["<builtin>.dict", "src.pcapi.sandboxes.scripts.utils.helpers._get_reset_password_token", "pcapi.routes.serialization.as_dict"], "src.pcapi.sandboxes.scripts.utils.helpers._get_reset_password_token": [], "src.pcapi.sandboxes.scripts.utils.helpers.get_venue_helper": ["pcapi.routes.serialization.as_dict"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_thing_products.create_industrial_thing_products": ["<map>.values", "<builtin>.enumerate", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "<builtin>.range", "<builtin>.str", "<builtin>.len"], "<builtin>.enumerate": [], "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory": [], "src.pcapi.serialization.spec_tree.get_model_schema": ["<builtin>.issubclass"], "<builtin>.issubclass": [], "src.pcapi.serialization.spec_tree.add_security_scheme": ["<builtin>.hasattr"], "<builtin>.hasattr": [], "src.pcapi.serialization.spec_tree.ExtendedSpecTree.__init__": ["<builtin>.super"], "src.pcapi.serialization.spec_tree.ExtendedSpecTree._generate_spec": ["<builtin>.getattr", "<builtin>.super", "src.pcapi.serialization.spec_tree.build_operation_id"], "<builtin>.getattr": [], "src.pcapi.serialization.spec_tree.build_operation_id": [], "src.pcapi.serialization.spec_tree.ExtendedSpecTree._add_model": ["src.pcapi.serialization.spec_tree.get_model_schema", "copy.deepcopy", "src.pcapi.serialization.spec_tree.get_model_key"], "src.pcapi.serialization.spec_tree.get_model_key": [], "copy.deepcopy": [], "src.pcapi.serialization.spec_tree.ExtendResponse.generate_spec": ["spectree.utils.parse_code", "src.pcapi.serialization.spec_tree.get_model_key"], "spectree.utils.parse_code": [], "tests.routes.pro.get_booking_by_token_test.Returns200Test.when_user_has_rights_and_regular_offer": ["pcapi.routes.serialization.serialize", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.utils.human_ids.humanize"], "pcapi.core.bookings.factories.IndividualBookingFactory": [], "pcapi.routes.serialization.serialize": [], "tests.routes.pro.get_booking_by_token_test.Returns200Test.when_user_has_rights_and_regular_offer_and_token_in_lower_case": ["pcapi.routes.serialization.serialize", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_booking_by_token_test.Returns200Test.when_user_has_rights_and_email_with_special_characters_url_encoded": ["pcapi.core.bookings.factories.IndividualBookingFactory", "urllib.parse.urlencode"], "urllib.parse.urlencode": [], "tests.routes.pro.get_booking_by_token_test.Returns204Test.when_user_not_logged_in_and_gives_right_email": ["pcapi.core.bookings.factories.IndividualBookingFactory"], "tests.routes.pro.get_booking_by_token_test.Returns204Test.when_user_not_logged_in_and_give_right_email_and_event_offer_id": ["datetime.timedelta", "pcapi.utils.human_ids.humanize", "pcapi.core.bookings.factories.IndividualBookingFactory"], "tests.routes.pro.get_booking_by_token_test.Returns204Test.when_user_not_logged_in_and_give_right_email_and_offer_id_thing": ["pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_booking_by_token_test.Returns404Test.when_user_not_logged_in_and_wrong_email": ["pcapi.core.bookings.factories.IndividualBookingFactory"], "tests.routes.pro.get_booking_by_token_test.Returns404Test.when_user_not_logged_in_right_email_and_wrong_offer": ["pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_booking_by_token_test.Returns404Test.when_user_has_rights_and_email_with_special_characters_not_url_encoded": ["pcapi.core.bookings.factories.IndividualBookingFactory"], "tests.routes.pro.get_booking_by_token_test.Returns400Test.when_user_not_logged_in_and_doesnt_give_email": ["pcapi.core.bookings.factories.IndividualBookingFactory"], "tests.routes.pro.get_booking_by_token_test.Returns400Test.when_user_doesnt_have_rights_and_token_exists": ["pcapi.core.bookings.factories.IndividualBookingFactory"], "tests.routes.pro.get_booking_by_token_test.Returns403Test.when_booking_not_confirmed": ["pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_booking_by_token_test.Returns403Test.when_booking_is_refunded": ["pcapi.utils.human_ids.humanize", "pcapi.core.payments.factories.PaymentFactory", "pcapi.core.bookings.factories.UsedIndividualBookingFactory"], "pcapi.core.bookings.factories.UsedIndividualBookingFactory": [], "pcapi.core.payments.factories.PaymentFactory": [], "tests.routes.pro.get_booking_by_token_test.Returns410Test.when_booking_is_cancelled": ["pcapi.core.bookings.factories.CancelledIndividualBookingFactory", "pcapi.utils.human_ids.humanize"], "pcapi.core.bookings.factories.CancelledIndividualBookingFactory": [], "tests.routes.pro.get_booking_by_token_test.Returns410Test.when_booking_is_already_validated": ["pcapi.utils.human_ids.humanize", "pcapi.core.bookings.factories.UsedIndividualBookingFactory"], "tests.connectors.api_allocine_test.GetMovieShowtimeListTest.test_should_return_request_response_from_api": ["unittest.mock.MagicMock", "pcapi.connectors.api_allocine.get_movies_showtimes_from_allocine"], "unittest.mock.MagicMock": [], "pcapi.connectors.api_allocine.get_movies_showtimes_from_allocine": [], "tests.connectors.api_allocine_test.GetMovieShowtimeListTest.test_should_raise_exception_when_api_call_fails": ["<builtin>.str", "unittest.mock.MagicMock", "pcapi.connectors.api_allocine.get_movies_showtimes_from_allocine"], "tests.connectors.api_allocine_test.GetMovieShowtimeListTest.test_should_raise_exception_when_api_call_fails_with_connection_error": ["<builtin>.str", "pcapi.connectors.api_allocine.get_movies_showtimes_from_allocine"], "tests.connectors.api_allocine_test.GetMoviePosterFromAllocineTest.test_should_return_poster_content_from_allocine_api": ["<builtin>.bytes", "unittest.mock.MagicMock", "pcapi.connectors.api_allocine.get_movie_poster_from_allocine"], "<builtin>.bytes": [], "pcapi.connectors.api_allocine.get_movie_poster_from_allocine": [], "tests.connectors.api_allocine_test.GetMoviePosterFromAllocineTest.test_should_raise_exception_when_allocine_api_call_fails": ["<builtin>.bytes", "<builtin>.str", "unittest.mock.MagicMock", "pcapi.connectors.api_allocine.get_movie_poster_from_allocine"], "src.pcapi.core.object_storage.backends.gcp.GCPBackend.get_gcp_storage_client_bucket": ["google.cloud.storage.Client"], "google.cloud.storage.Client": [], "src.pcapi.core.object_storage.backends.gcp.GCPBackend.store_public_object": ["src.pcapi.core.object_storage.backends.gcp.GCPBackend.get_gcp_storage_client_bucket"], "src.pcapi.core.object_storage.backends.gcp.GCPBackend.delete_public_object": ["src.pcapi.core.object_storage.backends.gcp.GCPBackend.get_gcp_storage_client_bucket"], "tests.scripts.update_bookings_during_quarantine_test.test_should_update_booking_if_happening_during_quarantine": ["datetime.timedelta", "pcapi.scripts.cancel_bookings_during_quarantine.cancel_booking_status_for_events_happening_during_quarantine"], "pcapi.scripts.cancel_bookings_during_quarantine.cancel_booking_status_for_events_happening_during_quarantine": [], "tests.scripts.update_bookings_during_quarantine_test.test_should_not_update_booking_if_happened_before_quarantine": ["datetime.datetime", "pcapi.scripts.cancel_bookings_during_quarantine.cancel_booking_status_for_events_happening_during_quarantine"], "src.pcapi.admin.custom_views.category_view.CategoryView.categories": ["dataclasses.fields"], "dataclasses.fields": [], "src.pcapi.admin.custom_views.category_view.SubcategoryView.subcategories": ["dataclasses.fields"], "tests.domain.postal_code_test.PostalCodeTest.test_get_departement_code_for_mainland_France": ["pcapi.domain.postal_code.postal_code.PostalCode"], "pcapi.domain.postal_code.postal_code.PostalCode": [], "tests.domain.postal_code_test.PostalCodeTest.test_get_departement_code_for_overseas_France": ["pcapi.domain.postal_code.postal_code.PostalCode"], "src.pcapi.core.object_storage._get_backends": ["<builtin>.set"], "src.pcapi.core.object_storage.store_public_object": ["pcapi.utils.module_loading.import_string", "src.pcapi.core.object_storage._get_backends"], "src.pcapi.core.object_storage.delete_public_object": ["pcapi.utils.module_loading.import_string", "src.pcapi.core.object_storage._get_backends"], "src.pcapi.core.mails.backends.mailjet.MailjetBackend.__init__": ["<builtin>.super"], "src.pcapi.core.mails.backends.mailjet.MailjetBackend._send": ["src.pcapi.core.mails.backends.mailjet._add_template_debugging", "models.models.MailResult"], "src.pcapi.core.mails.backends.mailjet._add_template_debugging": [], "models.models.MailResult": [], "src.pcapi.core.mails.backends.mailjet.ToDevMailjetBackend.send_mail": ["<builtin>.super", "<builtin>.set", "src.pcapi.core.mails.backends.mailjet.ToDevMailjetBackend._inject_html_test_notice"], "src.pcapi.core.mails.backends.mailjet.ToDevMailjetBackend._inject_html_test_notice": [], "tests.routes.pro.post_thumbnail_test.CreateThumbnailWithoutImageTest.test_no_image": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.conftest.TestClient.with_session_auth": ["tests.conftest.TestClient.post"], "tests.routes.pro.post_thumbnail_test.CreateThumbnailFromFileTest.test_import_from_file": ["tests.conftest.TestClient.__init__", "io.BytesIO", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "io.BytesIO": [], "tests.routes.pro.post_thumbnail_test.CreateThumbnailFromFileTest.test_wrong_content_type_from_file": ["tests.conftest.TestClient.__init__", "io.BytesIO", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_thumbnail_test.CreateThumbnailFromFileTest.test_image_too_small": ["tests.conftest.TestClient.__init__", "io.BytesIO", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_thumbnail_test.CreateThumbnailFromFileTest.test_content_too_large": ["tests.conftest.TestClient.__init__", "io.BytesIO", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.validation.models.has_address_mixin_test.test_should_return_error_message_when_postal_code_is_invalid": ["pcapi.validation.models.has_address_mixin.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors"], "pcapi.models.api_errors.ApiErrors": [], "pcapi.validation.models.has_address_mixin.validate": [], "tests.validation.models.has_address_mixin_test.test_should_not_return_error_message_when_postal_code_is_valid": ["pcapi.validation.models.has_address_mixin.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.mails.send": ["<builtin>.isinstance", "pcapi.utils.module_loading.import_string", "src.pcapi.core.mails._save_email", "src.pcapi.core.mails.get_email_backend", "<builtin>.ValueError"], "src.pcapi.core.mails.get_email_backend": [], "src.pcapi.core.mails._save_email": [], "src.pcapi.admin.custom_views.beneficiary_user_view.filter_email": ["pcapi.core.users.utils.sanitize_email"], "pcapi.core.users.utils.sanitize_email": [], "src.pcapi.admin.custom_views.beneficiary_user_view.FilterByDepositTypeEqual.apply": ["sqlalchemy.and_", "sqlalchemy.orm.aliased"], "sqlalchemy.orm.aliased": [], "src.pcapi.admin.custom_views.beneficiary_user_view.FilterByDepositTypeNotEqual.apply": ["sqlalchemy.and_", "sqlalchemy.orm.aliased"], "src.pcapi.admin.custom_views.beneficiary_user_view.beneficiary_deposit_type_formatter": ["<map>.get", "markupsafe.Markup"], "markupsafe.Markup": [], "<map>.get": [], "src.pcapi.admin.custom_views.beneficiary_user_view.beneficiary_total_amount_initial_formatter": ["markupsafe.Markup"], "src.pcapi.admin.custom_views.beneficiary_user_view.beneficiary_total_amount_remaining_formatter": ["markupsafe.Markup"], "src.pcapi.admin.custom_views.beneficiary_user_view.beneficiary_physical_remaining_formatter": ["markupsafe.Markup"], "src.pcapi.admin.custom_views.beneficiary_user_view.beneficiary_digital_remaining_formatter": ["markupsafe.Markup"], "src.pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView.get_create_form": ["<builtin>.super", "wtforms.validators.DataRequired", "wtforms.SelectField"], "wtforms.SelectField": [], "src.pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView.on_model_change": ["<builtin>.super", "<builtin>.int"], "src.pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView.after_model_change": ["pcapi.domain.user_emails.send_activation_email", "pcapi.utils.mailing.build_pc_webapp_reset_password_link", "flask.helpers.flash", "<builtin>.super", "pcapi.core.users.external.update_external_user"], "pcapi.core.users.external.update_external_user": [], "pcapi.domain.user_emails.send_activation_email": [], "pcapi.utils.mailing.build_pc_webapp_reset_password_link": [], "flask.helpers.flash": [], "src.pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView.get_query": ["sqlalchemy.orm.joinedload"], "sqlalchemy.orm.joinedload": [], "tests.notifications.push.backends_test.test_update_user_attributes": ["pcapi.notifications.push.update_user_attributes"], "pcapi.notifications.push.update_user_attributes": [], "src.pcapi.scripts.update_venue_type_codes.update_venues_codes": ["src.pcapi.scripts.update_venue_type_codes._update_venues_with_label", "<builtin>.print", "<builtin>.set", "<builtin>.str", "<builtin>.len"], "src.pcapi.scripts.update_venue_type_codes._update_venues_with_label": [], "tests.connectors.user_profiling_test.test_get_profiling_data": ["<builtin>.isinstance", "<builtin>.int", "<builtin>.float"], "tests.connectors.user_profiling_test.test_get_profiling_data_without_correct_session_id": ["<builtin>.isinstance", "<map>.copy"], "<map>.copy": [], "tests.connectors.user_profiling_test.test_get_profiling_data_empty_fields": ["<builtin>.isinstance", "<map>.copy"], "tests.scripts.business_unit.purge_virtual_venue_business_units_test.test_purge_virtual_venue_business_units": ["append", "pcapi.scripts.business_unit.purge_virtual_venue_business_units.purge_virtual_venue_business_units", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.finance.factories.BusinessUnitFactory", "<builtin>.len", "pcapi.core.offers.factories.VenueFactory"], "pcapi.core.finance.factories.BusinessUnitFactory": [], "pcapi.core.offers.factories.VenueFactory": [], "pcapi.core.offers.factories.OfferFactory": [], "pcapi.scripts.business_unit.purge_virtual_venue_business_units.purge_virtual_venue_business_units": [], "src.pcapi.scripts.provider.check_provider_api.check_provider_api": ["<builtin>.isinstance", "<builtin>.int", "<builtin>.print", "pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI", "<builtin>.len"], "pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI": [], "src.pcapi.models.providable_mixin.ProvidableMixin.lastProviderId": ["sqlalchemy.Column", "sqlalchemy.ForeignKey"], "src.pcapi.models.providable_mixin.ProvidableMixin.lastProvider": ["sqlalchemy.orm.relationship"], "tests.scripts.beneficiary.test_send_dms_application_emails.SendDMSApplicationEMailsTest.test_run": ["<builtin>.sorted", "<builtin>.len"], "tests.local_providers.allocine_stocks_functions_test.ParseMovieDurationTest.test_should_convert_duration_string_to_minutes": ["pcapi.local_providers.allocine.allocine_stocks._parse_movie_duration"], "pcapi.local_providers.allocine.allocine_stocks._parse_movie_duration": [], "tests.local_providers.allocine_stocks_functions_test.ParseMovieDurationTest.test_should_return_None_when_null_value_given": ["pcapi.local_providers.allocine.allocine_stocks._parse_movie_duration"], "tests.local_providers.allocine_stocks_functions_test.RetrieveMovieInformationTest.test_should_retrieve_information_from_wanted_json_nodes": ["pcapi.local_providers.allocine.allocine_stocks.retrieve_movie_information"], "pcapi.local_providers.allocine.allocine_stocks.retrieve_movie_information": [], "tests.local_providers.allocine_stocks_functions_test.RetrieveMovieInformationTest.test_should_not_add_operating_visa_and_stage_director_keys_when_nodes_are_missing": ["pcapi.local_providers.allocine.allocine_stocks.retrieve_movie_information"], "tests.local_providers.allocine_stocks_functions_test.RetrieveMovieInformationTest.test_should_return_empty_value_when_missing_poster_information": ["pcapi.local_providers.allocine.allocine_stocks.retrieve_movie_information"], "tests.local_providers.allocine_stocks_functions_test.RetrieveMovieInformationTest.test_should_create_product_and_new_offer_with_none_person_in_credits": ["pcapi.local_providers.allocine.allocine_stocks.retrieve_movie_information"], "tests.local_providers.allocine_stocks_functions_test.RetrieveShowtimeInformationTest.test_should_retrieve_showtime_information_from_allocine_json_response": ["datetime.datetime", "pcapi.local_providers.allocine.allocine_stocks.retrieve_showtime_information"], "pcapi.local_providers.allocine.allocine_stocks.retrieve_showtime_information": [], "tests.local_providers.allocine_stocks_functions_test.FormatPosterUrlTest.test_should_return_url_in_correct_format": ["pcapi.local_providers.allocine.allocine_stocks._format_poster_url"], "pcapi.local_providers.allocine.allocine_stocks._format_poster_url": [], "tests.local_providers.allocine_stocks_functions_test.FormatDateFromLocalTimezoneToUtcTest.test_should_convert_date_to_utc_timezone": ["datetime.datetime", "pcapi.local_providers.allocine.allocine_stocks._format_date_from_local_timezone_to_utc"], "pcapi.local_providers.allocine.allocine_stocks._format_date_from_local_timezone_to_utc": [], "tests.local_providers.allocine_stocks_functions_test.FilterOnlyDigitalAndNonExperiencedShowtimesTest.test_should_filter_only_digital_and_non_experience_showtimes": ["pcapi.local_providers.allocine.allocine_stocks._filter_only_digital_and_non_experience_showtimes"], "pcapi.local_providers.allocine.allocine_stocks._filter_only_digital_and_non_experience_showtimes": [], "tests.local_providers.allocine_stocks_functions_test.GetShowtimeUUIDFromIdAtProviderTest.test_should_return_the_right_uuid": ["pcapi.local_providers.allocine.allocine_stocks._get_showtimes_uuid_by_idAtProvider"], "pcapi.local_providers.allocine.allocine_stocks._get_showtimes_uuid_by_idAtProvider": [], "tests.local_providers.allocine_stocks_functions_test.FormatNaiveDateToUtcTest.test_should_convert_date_to_utc_timezone": ["datetime.datetime", "pcapi.local_providers.allocine.allocine_stocks._format_date_from_local_timezone_to_utc"], "tests.local_providers.allocine_stocks_functions_test.FindShowtimesByShowtimeUUIDTest.test_should_return_showtime_matching_the_given_beginning_datetime": ["pcapi.local_providers.allocine.allocine_stocks._find_showtime_by_showtime_uuid"], "pcapi.local_providers.allocine.allocine_stocks._find_showtime_by_showtime_uuid": [], "tests.local_providers.allocine_stocks_functions_test.FindShowtimesByShowtimeUUIDTest.test_should_return_none_when_no_showtimes_found": ["pcapi.local_providers.allocine.allocine_stocks._find_showtime_by_showtime_uuid"], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest.test_validation_view_validate_user_from_jouve_data_staging": ["<builtin>.len"], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest.test_validation_view_validate_user_from_dms_data_staging": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest.test_validation_view_validate_user_from_educonnect": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest.test_validation_view_validate_user_from_ubble": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest.test_validation_view_validate_not_super_user_fails": ["pcapi.core.testing.override_settings"], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest.test_validation_prod_requires_super_admin": ["pcapi.core.testing.override_settings"], "tests.admin.custom_views.support_view_test.BeneficiaryValidationViewTest.test_review_ko_does_not_activate_the_beneficiary": ["pcapi.core.testing.override_settings"], "tests.admin.custom_views.support_view_test.BeneficiaryActivationStatusTest.test_not_eligible": ["dateutil.relativedelta.relativedelta", "pcapi.admin.custom_views.support_view.api.get_beneficiary_activation_status"], "pcapi.admin.custom_views.support_view.api.get_beneficiary_activation_status": [], "tests.admin.custom_views.support_view_test.BeneficiaryActivationStatusTest.test_beneficiary": ["pcapi.admin.custom_views.support_view.api.get_beneficiary_activation_status"], "tests.admin.custom_views.support_view_test.BeneficiaryActivationStatusTest.test_ex_underage": ["dateutil.relativedelta.relativedelta", "pcapi.admin.custom_views.support_view.api.get_beneficiary_activation_status"], "tests.admin.custom_views.support_view_test.BeneficiaryActivationStatusTest.test_ex_underage_with_some_fraud_check_ko": ["dateutil.relativedelta.relativedelta", "pcapi.admin.custom_views.support_view.api.get_beneficiary_activation_status"], "src.pcapi.core.providers.exceptions.VenueSiretNotRegistered.__init__": ["<builtin>.super"], "tests.routes.pro.get_venues_test.test_response_serialization": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.conftest.TestClient.get": ["tests.conftest.TestClient._print_spec"], "tests.routes.pro.get_venues_test.test_default_call": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venues_test.test_default_admin_call": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venues_test.test_admin_call_num_queries": ["tests.conftest.TestClient.__init__", "<builtin>.len", "pcapi.core.testing.assert_num_queries", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venues_test.test_invalid_offerer_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_venues_test.test_full_valid_call": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venues_test.test_full_valid_call_with_false": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venues_test.test_invalid_validated": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venues_test.test_invalid_validated_for_user": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venues_test.test_invalid_active_offerer_only": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.routes.native.v1.favorites._fill_favorite_offer": ["src.pcapi.routes.native.v1.favorites._fill_offer_date", "src.pcapi.routes.native.v1.favorites._fill_offer_price", "src.pcapi.routes.native.v1.favorites._fill_offer_expired"], "src.pcapi.routes.native.v1.favorites._fill_offer_price": [], "src.pcapi.routes.native.v1.favorites._fill_offer_date": [], "src.pcapi.routes.native.v1.favorites._fill_offer_expired": [], "src.pcapi.routes.native.v1.favorites.get_favorites_for": ["src.pcapi.routes.native.v1.favorites._fill_favorite_offer", "sqlalchemy.orm.Load", "sqlalchemy.and_", "sqlalchemy.orm.joinedload", "sqlalchemy.not_"], "sqlalchemy.not_": [], "sqlalchemy.orm.Load": [], "src.pcapi.routes.native.v1.favorites.get_favorites": ["src.pcapi.routes.native.v1.favorites.get_favorites_for", "<builtin>.len"], "src.pcapi.routes.native.v1.favorites.create_favorite": ["pcapi.repository.transaction", "pcapi.models.api_errors.ApiErrors", "pcapi.core.users.external.update_external_user", "src.pcapi.routes.native.v1.favorites.get_favorites_for"], "pcapi.repository.transaction": [], "src.pcapi.routes.native.v1.favorites.delete_favorite": ["pcapi.repository.transaction"], "tests.core.providers.test_api.create_offer": ["tests.core.providers.test_api.create_product"], "tests.core.providers.test_api.create_product": [], "tests.core.providers.test_api.create_stock": ["tests.core.providers.test_api.create_offer"], "tests.core.providers.test_api.test_reset_stock_quantity": ["pcapi.core.bookings.factories.CancelledBookingFactory", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.offers.factories.StockFactory", "pcapi.core.bookings.factories.BookingFactory"], "pcapi.core.offers.factories.StockFactory": [], "pcapi.core.bookings.factories.CancelledBookingFactory": [], "pcapi.core.bookings.factories.BookingFactory": [], "tests.core.providers.test_api.test_update_last_provider_id": ["pcapi.core.offers.factories.OfferFactory", "pcapi.core.offers.factories.VenueFactory"], "tests.core.providers.test_api.test_change_venue_provider": ["<builtin>.len", "pcapi.core.offers.factories.StockFactory", "pcapi.core.bookings.factories.BookingFactory"], "tests.core.providers.test_api.SynchronizeStocksTest.test_execution": ["pcapi.core.bookings.factories.BookingFactory", "tests.core.providers.test_api.create_offer", "tests.core.providers.test_api.create_product", "decimal.Decimal", "<builtin>.len", "tests.core.providers.test_api.create_stock", "pcapi.core.offers.factories.VenueFactory"], "tests.core.providers.test_api.SynchronizeStocksTest.test_build_new_offers_from_stock_details": ["<builtin>.len", "pcapi.core.offers.factories.VenueFactory", "pcapi.models.product.Product", "pcapi.core.providers.models.StockDetail"], "pcapi.core.providers.models.StockDetail": [], "pcapi.models.product.Product": [], "tests.core.providers.test_api.SynchronizeStocksTest.test_get_stocks_to_upsert": ["<builtin>.set", "pcapi.models.product.Product", "pcapi.core.providers.models.StockDetail"], "src.pcapi.core.mails.transactional.users.email_address_change_confirmation.get_email_confirmation_email_data": ["<builtin>.int", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.urls.generate_firebase_dynamic_link"], "pcapi.utils.urls.generate_firebase_dynamic_link": [], "src.pcapi.core.mails.transactional.users.email_address_change_confirmation.send_email_confirmation_email": ["src.pcapi.core.mails.transactional.users.email_address_change_confirmation.get_email_confirmation_email_data"], "tests.connectors.api_recaptcha_test._build_mocked_request_response": ["unittest.mock.MagicMock"], "tests.connectors.api_recaptcha_test.generate_fake_token": ["<builtin>.str"], "tests.connectors.api_recaptcha_test.GetTokenValidationAndScoreTest.test_should_call_captcha_api_using_secret": ["pcapi.connectors.api_recaptcha.get_token_validation_and_score", "tests.connectors.api_recaptcha_test._build_mocked_request_response"], "pcapi.connectors.api_recaptcha.get_token_validation_and_score": [], "tests.connectors.api_recaptcha_test.GetTokenValidationAndScoreTest.test_should_return_validation_fields_for_v3": ["pcapi.connectors.api_recaptcha.get_token_validation_and_score", "tests.connectors.api_recaptcha_test._build_mocked_request_response"], "tests.connectors.api_recaptcha_test.GetTokenValidationAndScoreTest.test_should_return_validation_fields_for_v2": ["pcapi.connectors.api_recaptcha.get_token_validation_and_score", "tests.connectors.api_recaptcha_test._build_mocked_request_response"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_v2_should_be_ok": ["tests.connectors.api_recaptcha_test.generate_fake_token", "pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid"], "pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid": [], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_v3_should_be_ok": ["tests.connectors.api_recaptcha_test.generate_fake_token", "pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_should_raise_when_score_is_too_low": ["tests.connectors.api_recaptcha_test.generate_fake_token"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_should_raise_when_action_is_not_matching_the_original_action": ["tests.connectors.api_recaptcha_test.generate_fake_token", "pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid", "<builtin>.str"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_should_raise_when_token_is_too_old_or_already_used": ["tests.connectors.api_recaptcha_test.generate_fake_token"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_should_raise_exception_for_any_other_error_code": ["tests.connectors.api_recaptcha_test.generate_fake_token"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_v3_should_raise_exception_with_details": ["tests.connectors.api_recaptcha_test.generate_fake_token", "pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid", "<builtin>.str"], "tests.connectors.api_recaptcha_test.CheckRecaptchaTokenIsValidTest.test_v2_should_raise_exception_with_details": ["tests.connectors.api_recaptcha_test.generate_fake_token", "pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid", "<builtin>.str"], "tests.routes.pro.get_offers_test.Returns200Test.should_filter_by_venue_when_user_is_admin_and_request_specific_venue_with_no_rights_on_it": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns200Test.should_filter_by_venue_when_user_is_not_admin_and_request_specific_venue_with_rights_on_it": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offers_test.Returns200Test.should_filter_offers_by_given_venue_id": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns200Test.should_filter_offers_by_given_status": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns200Test.should_filter_offers_by_given_offerer_id": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns200Test.should_filter_offers_by_given_creation_mode": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns200Test.test_results_are_filtered_by_given_period_beginning_date": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns200Test.test_results_are_filtered_by_given_period_ending_date": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns200Test.should_filter_offers_by_given_category_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns404Test.when_requested_venue_does_not_exist": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns404Test.should_return_no_offers_when_user_has_no_rights_on_requested_venue": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offers_test.Returns404Test.should_return_no_offers_when_user_offerer_is_not_validated": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.scripts.payment.generate_payments.generate_payments": ["pcapi.scripts.payment.batch.generate_and_send_payments"], "pcapi.scripts.payment.batch.generate_and_send_payments": [], "src.pcapi.sandboxes.scripts.sandbox_allocine.save_sandbox": ["pcapi.sandboxes.scripts.creators.allocine.save_allocine_sandbox"], "pcapi.sandboxes.scripts.creators.allocine.save_allocine_sandbox": [], "src.pcapi.core.payments.models.ReimbursementRule.is_relevant": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "src.pcapi.core.payments.models.ReimbursementRule.description": ["<builtin>.NotImplementedError"], "src.pcapi.core.payments.models.ReimbursementRule.matches": ["src.pcapi.core.payments.models.ReimbursementRule.is_active", "src.pcapi.core.payments.models.ReimbursementRule.is_relevant"], "src.pcapi.core.payments.models.ReimbursementRule.is_active": [], "src.pcapi.core.payments.models.ReimbursementRule.apply": ["decimal.Decimal"], "src.pcapi.core.payments.models.ReimbursementRule.group": ["<builtin>.NotImplementedError"], "src.pcapi.core.payments.models.CustomReimbursementRule.__init__": ["<builtin>.super", "src.pcapi.core.payments.models.CustomReimbursementRule._make_timespan"], "src.pcapi.core.payments.models.CustomReimbursementRule._make_timespan": [], "src.pcapi.core.payments.models.CustomReimbursementRule.description": ["<builtin>.TypeError"], "<builtin>.TypeError": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_mediations.prepare_mediations_folders": ["shutil.copyfile", "<builtin>.list", "<builtin>.range", "itertools.cycle", "<builtin>.len", "itertools.islice", "pathlib.Path"], "itertools.cycle": [], "itertools.islice": [], "shutil.copyfile": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_mediations.create_industrial_mediations": ["<map>.values", "<builtin>.list", "pcapi.sandboxes.scripts.utils.storage_utils.store_public_object_from_sandbox_assets", "<builtin>.len", "pcapi.model_creators.generic_creators.create_mediation", "pcapi.sandboxes.scripts.utils.select.remove_every"], "pcapi.sandboxes.scripts.utils.select.remove_every": [], "pcapi.model_creators.generic_creators.create_mediation": [], "pcapi.sandboxes.scripts.utils.storage_utils.store_public_object_from_sandbox_assets": [], "src.pcapi.use_cases.connect_venue_to_allocine.connect_venue_to_allocine": ["pcapi.core.providers.exceptions.NoPriceSpecified", "src.pcapi.use_cases.connect_venue_to_allocine._create_allocine_venue_provider", "pcapi.core.providers.exceptions.NoAllocinePivot", "pcapi.repository.allocine_pivot_queries.get_allocine_pivot_for_venue", "src.pcapi.use_cases.connect_venue_to_allocine._create_allocine_venue_provider_price_rule"], "pcapi.repository.allocine_pivot_queries.get_allocine_pivot_for_venue": [], "pcapi.core.providers.exceptions.NoAllocinePivot": [], "pcapi.core.providers.exceptions.NoPriceSpecified": [], "src.pcapi.use_cases.connect_venue_to_allocine._create_allocine_venue_provider": ["pcapi.core.providers.models.AllocineVenueProvider"], "pcapi.core.providers.models.AllocineVenueProvider": [], "src.pcapi.use_cases.connect_venue_to_allocine._create_allocine_venue_provider_price_rule": ["pcapi.core.providers.models.AllocineVenueProviderPriceRule"], "pcapi.core.providers.models.AllocineVenueProviderPriceRule": [], "src.pcapi.connectors.api_adage.AdageException.__init__": ["<builtin>.super"], "src.pcapi.scripts.algolia_indexing.commands.process_offers_from_database": ["pcapi.scripts.algolia_indexing.indexing.batch_indexing_offers_in_algolia_from_database"], "pcapi.scripts.algolia_indexing.indexing.batch_indexing_offers_in_algolia_from_database": [], "src.pcapi.notifications.internal.backends.slack.SlackBackend.__init__": ["slack_sdk.WebClient"], "slack_sdk.WebClient": [], "src.pcapi.notifications.internal.backends.slack.SlackBackend.send_internal_message": ["<builtin>.str"], "tests.core.bookings.test_validation.CheckStockIsBookableTest.test_raise_if_not_bookable": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test.test_physical_limit": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test._get_beneficiary": [], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test.test_physical_limit_on_uncapped_type": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test.test_digital_limit": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test.test_digital_limit_on_uncapped_type": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test.test_global_limit": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion1Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test.test_raise_if_deposit_expired": ["datetime.timedelta", "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test._get_beneficiary": [], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test.test_physical_limit": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test.test_digital_limit": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test.test_digital_limit_on_uncapped_type": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test._get_beneficiary"], "tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test.test_global_limit": ["tests.core.bookings.test_validation.CheckExpenseLimitsDepositVersion2Test._get_beneficiary"], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest._expire_deposit": ["datetime.timedelta"], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest.test_insufficient_funds_when_user_has_negative_deposit": ["tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest._expire_deposit"], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest.test_user_can_cancel_even_if_expired_deposit": ["tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest._expire_deposit"], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest.test_user_can_book_a_free_offer_even_if_expired_deposit": ["tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest._expire_deposit", "<builtin>.filter"], "<builtin>.filter": [], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest.test_cannot_change_quantity_with_expired_deposit": ["tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest._expire_deposit", "<builtin>.str"], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest.test_cannot_change_amount_with_expired_deposit": ["tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest._expire_deposit"], "tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest.test_cannot_uncancel_with_expired_deposit": ["tests.core.bookings.test_validation.InsufficientFundsSQLCheckTest._expire_deposit"], "tests.core.bookings.test_validation.CheckIsUsableTest.should_pass_when_event_begins_in_less_than_48_hours": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckIsUsableTest.should_pass_when_event_begins_in_more_than_72_hours_and_booking_created_more_than_48_hours_ago": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckIsUsableTest.should_not_validate_when_event_booking_not_confirmed": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckIsUsableTest.should_use_timezone_of_venue_departmentCode": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckBeneficiaryCanCancelBookingTest.test_can_cancel_if_event_is_in_a_long_time": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckBeneficiaryCanCancelBookingTest.test_raise_if_event_too_close": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckBeneficiaryCanCancelBookingTest.test_raise_if_booked_long_ago": ["datetime.timedelta"], "tests.core.bookings.test_validation.CheckBeneficiaryCanCancelBookingTest.test_raise_if_event_too_close_and_booked_long_ago": ["datetime.timedelta"], "src.pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.send_event_offer_postponement_confirmation_email_to_pro": ["src.pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.get_event_offer_postponed_confirmation_to_pro_email_data"], "src.pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.get_event_offer_postponed_confirmation_to_pro_email_data": ["babel.dates.format_date", "pcapi.utils.mailing.get_event_datetime", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "pcapi.utils.mailing.get_event_datetime": [], "babel.dates.format_date": [], "src.pcapi.scripts.full_extract_offers.decimal_default": ["<builtin>.isinstance", "<builtin>.float"], "src.pcapi.scripts.full_extract_offers.save_offers": ["<builtin>.print"], "src.pcapi.scripts.full_extract_offers.full_extract_offers": ["append", "src.pcapi.scripts.full_extract_offers._get_eta", "src.pcapi.scripts.full_extract_offers.full_extract_offers.enqueue_or_index", "<builtin>.print", "<builtin>.str", "<builtin>.ValueError", "sqlalchemy.orm.joinedload", "<builtin>.min"], "<builtin>.min": [], "src.pcapi.scripts.full_extract_offers.full_extract_offers.enqueue_or_index": ["append", "src.pcapi.scripts.full_extract_offers.save_offers"], "src.pcapi.scripts.full_extract_offers._get_eta": [], "src.pcapi.routes.adage_iframe.offers.get_offer": ["sqlalchemy.orm.contains_eager", "sqlalchemy.orm.joinedload"], "sqlalchemy.orm.contains_eager": [], "src.pcapi.local_providers.provider_api.provider_api_stocks.synchronize_stocks": ["sqlalchemy.orm.util.aliased"], "sqlalchemy.orm.util.aliased": [], "src.pcapi.sandboxes.scripts.getters.pro_06_offers.get_existing_pro_validated_user_with_at_least_one_visible_activated_offer": ["pcapi.sandboxes.scripts.utils.helpers.get_offer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "pcapi.sandboxes.scripts.utils.helpers.get_offer_helper": [], "pcapi.sandboxes.scripts.utils.helpers.get_pro_helper": [], "src.pcapi.sandboxes.scripts.getters.pro_06_offers.get_existing_pro_validated_user_with_at_least_one_offer_with_at_least_one_thumbnail": ["pcapi.sandboxes.scripts.utils.helpers.get_offer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "tests.routes.saml.educonnect_test.build_date_of_birth_from_age": ["dateutil.relativedelta.relativedelta"], "tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect": ["flask_jwt_extended.utils.create_access_token", "<builtin>.len"], "flask_jwt_extended.utils.create_access_token": [], "tests.routes.saml.educonnect_test.EduconnectTest.test_get_educonnect_login": ["tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect", "<builtin>.int"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_login_no_redirect": ["flask_jwt_extended.utils.create_access_token"], "tests.routes.saml.educonnect_test.EduconnectTest.test_get_educonnect_login_production": ["flask_jwt_extended.utils.create_access_token", "<builtin>.int", "<builtin>.len"], "tests.routes.saml.educonnect_test.EduconnectTest.test_on_educonnect_authentication_response": ["unittest.mock.MagicMock"], "tests.routes.saml.educonnect_test.EduconnectTest.test_connexion_date_missing": ["unittest.mock.MagicMock"], "tests.routes.saml.educonnect_test.EduconnectTest.test_birth_date_missing": ["unittest.mock.MagicMock"], "tests.routes.saml.educonnect_test.EduconnectTest.test_user_type_not_student": ["unittest.mock.MagicMock", "<builtin>.str"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_redirects_to_success_page_with_warning_log": ["tests.routes.saml.educonnect_test.build_date_of_birth_from_age", "tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_redirects_to_error_page_too_young": ["tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect", "<builtin>.len"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_redirects_to_error_page_18_years_old": ["tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect", "<builtin>.len"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_redirects_to_error_page_too_old": ["tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect", "<builtin>.len"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_connection_synchronizes_data": ["tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect", "dateutil.relativedelta.relativedelta"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_not_eligible_fails_twice": ["tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect"], "tests.routes.saml.educonnect_test.EduconnectTest.test_educonnect_connection_updates_user_birth_date": ["tests.routes.saml.educonnect_test.EduconnectTest.connect_to_educonnect", "dateutil.relativedelta.relativedelta"], "tests.routes.saml.educonnect_test.PerformanceTest.test_performance_tests": ["dateutil.relativedelta.relativedelta", "<builtin>.str"], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithTemplateTest.test_send_transactional_email_with_template_id_expect_api_error": ["pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest": [], "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email": [], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithTemplateTest.test_send_transactional_email_with_template_id_success": ["pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithTemplateTest.test_send_transactional_email_with_reply_to_success": ["pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithTemplateTest.test_send_transactional_email_with_template_id_success_empty_params": ["pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithTemplateTest.test_to_dev_send_email_confirmation_email": ["pcapi.core.mails.transactional.users.email_address_change_confirmation.send_email_confirmation_email"], "pcapi.core.mails.transactional.users.email_address_change_confirmation.send_email_confirmation_email": [], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithoutTemplateTest.test_send_transactional_email_expect_api_error": ["pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithoutTemplateTest.test_send_transactional_email_success": ["pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "tests.core.mails.transactional.test_send_transactional_email.TransactionalEmailWithoutTemplateTest.test_send_transactional_email_success_empty_attachement": ["pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "tests.models.allocine_venue_provider_test.AllocineVenueProviderTest.test_allocine_venue_provider_should_inherit_from_venue_provider": ["<builtin>.isinstance", "pcapi.core.providers.api.activate_provider"], "pcapi.core.providers.api.activate_provider": [], "tests.models.allocine_venue_provider_test.AllocineVenueProviderTest.test_query_venue_provider_load_allocine_venue_provider_attributes_when_connected_to_allocine": ["<builtin>.isinstance", "pcapi.core.offers.factories.VenueFactory"], "src.pcapi.sandboxes.scripts.sandbox_industrial.save_sandbox": ["pcapi.sandboxes.scripts.creators.industrial.save_industrial_sandbox"], "pcapi.sandboxes.scripts.creators.industrial.save_industrial_sandbox": [], "src.pcapi.validation.routes.users_authentifications.check_user_is_logged_in_or_email_is_provided": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.validation.routes.users_authentifications.login_or_api_key_required": ["functools.wraps", "pcapi.serialization.spec_tree.add_security_scheme"], "pcapi.serialization.spec_tree.add_security_scheme": [], "src.pcapi.validation.routes.users_authentifications.api_key_required": ["functools.wraps", "pcapi.serialization.spec_tree.add_security_scheme"], "src.pcapi.validation.routes.users_authentifications._fill_current_api_key": ["pcapi.core.offerers.api.find_api_key"], "pcapi.core.offerers.api.find_api_key": [], "src.pcapi.validation.routes.users_authentifications.basic_authentication": ["pcapi.models.api_errors.UnauthorizedError", "<builtin>.str", "pcapi.utils.login_manager.get_request_authorization"], "pcapi.utils.login_manager.get_request_authorization": [], "pcapi.models.api_errors.UnauthorizedError": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.SendBeneficiaryUserDrivenCancellationEmailToOffererTest.test_should_send_booking_cancellation_email_to_offerer": ["dataclasses.asdict", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.send_booking_cancellation_by_beneficiary_to_pro_email", "<builtin>.len"], "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.send_booking_cancellation_by_beneficiary_to_pro_email": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.MakeOffererBookingRecapEmailAfterUserCancellationTest.test_should_return_mailjet_data_with_no_ongoing_booking": ["datetime.datetime", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.get_booking_cancellation_by_beneficiary_to_pro_email_data"], "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.get_booking_cancellation_by_beneficiary_to_pro_email_data": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.MakeOffererBookingRecapEmailAfterUserCancellationTest.test_should_return_mailjet_data_with_ongoing_bookings": ["datetime.datetime", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.get_booking_cancellation_by_beneficiary_to_pro_email_data"], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro_test.MakeOffererBookingRecapEmailAfterUserCancellationTest.test_should_return_numerique_when_venue_is_virtual": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.get_booking_cancellation_by_beneficiary_to_pro_email_data"], "tests.scripts.force_19_yo_dms_import_test.User19YearOldActivationTest.test_user_should_be_activated": ["dateutil.relativedelta.relativedelta", "pcapi.scripts.force_19yo_dms_import.force_19yo_dms_import"], "pcapi.scripts.force_19yo_dms_import.force_19yo_dms_import": [], "tests.scripts.force_19_yo_dms_import_test.User19YearOldActivationTest.test_user_required_to_validate_user_profiling": ["dateutil.relativedelta.relativedelta", "pcapi.scripts.force_19yo_dms_import.force_19yo_dms_import"], "tests.scripts.force_19_yo_dms_import_test.User19YearOldActivationTest.test_user_should_not_be_activated_dry_run": ["dateutil.relativedelta.relativedelta"], "tests.scripts.force_19_yo_dms_import_test.User19YearOldActivationTest.test_user_should_not_be_activated": ["dateutil.relativedelta.relativedelta", "pcapi.scripts.force_19yo_dms_import.force_19yo_dms_import"], "src.pcapi.scripts.booking.handle_expired_bookings.handle_expired_bookings": ["src.pcapi.scripts.booking.handle_expired_bookings.handle_expired_educational_bookings", "src.pcapi.scripts.booking.handle_expired_bookings.handle_expired_individual_bookings"], "src.pcapi.scripts.booking.handle_expired_bookings.handle_expired_individual_bookings": ["src.pcapi.scripts.booking.handle_expired_bookings.cancel_expired_individual_bookings", "src.pcapi.scripts.booking.handle_expired_bookings.notify_offerers_of_expired_individual_bookings", "src.pcapi.scripts.booking.handle_expired_bookings.notify_users_of_expired_individual_bookings"], "src.pcapi.scripts.booking.handle_expired_bookings.cancel_expired_individual_bookings": ["src.pcapi.scripts.booking.handle_expired_bookings.cancel_expired_bookings"], "src.pcapi.scripts.booking.handle_expired_bookings.cancel_expired_bookings": ["pcapi.core.bookings.api.recompute_dnBookedQuantity"], "pcapi.core.bookings.api.recompute_dnBookedQuantity": [], "src.pcapi.scripts.booking.handle_expired_bookings.notify_users_of_expired_individual_bookings": ["append", "<builtin>.len", "pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.send_expired_bookings_to_beneficiary_email"], "pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.send_expired_bookings_to_beneficiary_email": [], "src.pcapi.scripts.booking.handle_expired_bookings.notify_offerers_of_expired_individual_bookings": ["operator.attrgetter", "append", "<builtin>.dict", "pcapi.core.mails.transactional.bookings.booking_expiration_to_pro.send_bookings_expiration_to_pro_email", "<builtin>.list", "itertools.groupby", "<builtin>.len"], "operator.attrgetter": [], "itertools.groupby": [], "pcapi.core.mails.transactional.bookings.booking_expiration_to_pro.send_bookings_expiration_to_pro_email": [], "src.pcapi.scripts.booking.handle_expired_bookings.handle_expired_educational_bookings": ["src.pcapi.scripts.booking.handle_expired_bookings.cancel_expired_educational_bookings", "src.pcapi.scripts.booking.handle_expired_bookings.notify_offerers_of_expired_educational_bookings"], "src.pcapi.scripts.booking.handle_expired_bookings.cancel_expired_educational_bookings": ["src.pcapi.scripts.booking.handle_expired_bookings.cancel_expired_bookings"], "src.pcapi.scripts.booking.handle_expired_bookings.notify_offerers_of_expired_educational_bookings": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_institution.send_education_booking_cancellation_by_institution_email", "<builtin>.len"], "pcapi.core.mails.transactional.bookings.booking_cancellation_by_institution.send_education_booking_cancellation_by_institution_email": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.GetOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_call_build_offers_query": ["pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.get_offers_with_max_stock_date_between_today_and_end_of_quarantine"], "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.get_offers_with_max_stock_date_between_today_and_end_of_quarantine": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.BuildQueryOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_not_get_offers_with_dates_only_before_today": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_venue", "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine", "datetime.timedelta"], "pcapi.model_creators.generic_creators.create_venue": [], "pcapi.model_creators.specific_creators.create_offer_with_event_product": [], "pcapi.model_creators.generic_creators.create_stock": [], "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.BuildQueryOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_get_offer_with_a_date_between_today_and_15_04": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "datetime.datetime", "pcapi.model_creators.generic_creators.create_venue", "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine"], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.BuildQueryOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_not_get_offer_with_a_date_after_15_04": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "datetime.datetime", "pcapi.model_creators.generic_creators.create_venue", "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine"], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.BuildQueryOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_not_get_offer_with_a_date_between_today_and_the_15_04_and_another_after_15_04": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "datetime.datetime", "pcapi.model_creators.generic_creators.create_venue", "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine"], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.BuildQueryOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_not_get_offers_on_things": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine"], "pcapi.model_creators.specific_creators.create_offer_with_thing_product": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.DeactivateOffersTest.test_should_deactivate_given_offers": ["pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers", "pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.DeactivateOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_deactivate_offers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock", "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers_with_max_stock_date_between_today_and_end_of_quarantine", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers_with_max_stock_date_between_today_and_end_of_quarantine": [], "tests.scripts.deactivate_offers_during_quarantine.deactivate_offers_test.DeactivateOffersWithMaxStockDateBetweenTodayAndEndOfQuarantineTest.test_should_unindex_offers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock", "pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers_with_max_stock_date_between_today_and_end_of_quarantine", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.sandboxes.scripts.creators.industrial.save_industrial_sandbox": ["pcapi.sandboxes.scripts.creators.industrial.create_industrial_search_objects.create_industrial_search_indexed_objects", "pcapi.scripts.venue.venue_label.create_venue_labels.create_venue_labels", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_educational_bookings", "pcapi.sandboxes.scripts.creators.industrial.create_industrial_criterion.associate_criterion_to_one_offer_with_mediation", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_activation_offers", "<builtin>.dict", "pcapi.sandboxes.scripts.creators.industrial.create_industrial_criterion.create_industrial_criteria", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_offers_with_activation_codes"], "pcapi.sandboxes.scripts.creators.industrial.create_industrial_criterion.create_industrial_criteria": [], "pcapi.sandboxes.scripts.creators.industrial.create_industrial_criterion.associate_criterion_to_one_offer_with_mediation": [], "pcapi.sandboxes.scripts.creators.industrial.create_industrial_search_objects.create_industrial_search_indexed_objects": [], "pcapi.scripts.venue.venue_label.create_venue_labels.create_venue_labels": [], "src.pcapi.repository.product_queries.delete_unwanted_existing_product": ["append", "src.pcapi.repository.product_queries.find_active_book_product_by_isbn", "pcapi.core.users.repository.get_favorites_for_offers", "pcapi.repository.mediation_queries.get_mediations_for_offers", "pcapi.repository.offer_queries.get_offers_by_product_id"], "src.pcapi.repository.product_queries.find_active_book_product_by_isbn": [], "pcapi.repository.offer_queries.get_offers_by_product_id": [], "pcapi.repository.mediation_queries.get_mediations_for_offers": [], "pcapi.core.users.repository.get_favorites_for_offers": [], "src.pcapi.scheduled_tasks.decorators.cron_context": ["functools.wraps"], "src.pcapi.scheduled_tasks.decorators.log_cron_with_transaction": ["functools.wraps"], "src.pcapi.core.offers.factories.ProductFactory._create": ["<builtin>.super"], "src.pcapi.core.offers.factories.OfferFactory._create": ["<builtin>.super"], "tests.routes.pro.validate_offerer_attachment_test.Returns202Test.expect_user_offerer_attachment_to_be_validated": ["<builtin>.len"], "src.pcapi.admin.base_configuration.BaseAdminMixin.create_form": ["flask_admin.helpers.get_form_data"], "flask_admin.helpers.get_form_data": [], "src.pcapi.admin.base_configuration.BaseAdminMixin.edit_form": ["flask_admin.helpers.get_form_data"], "src.pcapi.admin.base_configuration.BaseAdminView.inaccessible_callback": ["flask.url_for", "werkzeug.utils.redirect"], "flask.url_for": [], "werkzeug.utils.redirect": [], "src.pcapi.admin.base_configuration.BaseAdminView.after_model_change": ["<builtin>.str"], "src.pcapi.admin.base_configuration.AdminIndexView.index": ["<builtin>.super", "flask.url_for", "werkzeug.utils.redirect"], "src.pcapi.admin.base_configuration.AdminIndexView.login_view": ["flask.url_for"], "src.pcapi.admin.base_configuration.AdminIndexView.logout_view": ["flask.url_for", "flask_login.logout_user", "werkzeug.utils.redirect"], "flask_login.logout_user": [], "src.pcapi.admin.base_configuration.AdminIndexView.authorize": ["flask_login.login_user", "flask.url_for", "werkzeug.exceptions.Forbidden", "werkzeug.utils.redirect"], "werkzeug.exceptions.Forbidden": [], "flask_login.login_user": [], "src.pcapi.admin.base_configuration.AdminIndexView.no_user_found_view": ["flask.url_for", "werkzeug.utils.redirect"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.get_expired_bookings_to_beneficiary_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary._extract_bookings_information_from_bookings_list"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary._extract_bookings_information_from_bookings_list": ["append"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.send_expired_bookings_to_beneficiary_email": ["src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.get_expired_bookings_to_beneficiary_data", "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary._filter_books_bookings"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary._filter_books_bookings": ["append"], "src.pcapi.core.offers.models.Stock.hasBookingLimitDatetimePassed": ["<builtin>.bool"], "src.pcapi.core.offers.models.Stock.isEventExpired": ["<builtin>.bool"], "src.pcapi.core.offers.models.Stock.restize_internal_error": ["<builtin>.str"], "src.pcapi.core.offers.models.before_insert": ["datetime.timedelta"], "src.pcapi.core.offers.models.Offer.activeMediation": ["<builtin>.list", "<builtin>.sorted", "<builtin>.filter"], "src.pcapi.core.offers.models.Offer.dateRange": ["pcapi.utils.date.DateTimes", "<builtin>.min", "<builtin>.max"], "pcapi.utils.date.DateTimes": [], "<builtin>.max": [], "src.pcapi.core.offers.models.Offer.hasBookingLimitDatetimesPassed": ["<builtin>.all"], "<builtin>.all": [], "src.pcapi.core.offers.models.Offer.is_forbidden_to_underage": ["<builtin>.all"], "src.pcapi.core.offers.models.Offer.subcategory": ["<builtin>.ValueError"], "src.pcapi.core.offers.models.Offer.max_price": ["<builtin>.max"], "src.pcapi.core.offers.models.Reason.get_meta": ["src.pcapi.core.offers.models.Reason.get_full_meta"], "src.pcapi.core.offers.models.Reason.get_full_meta": [], "src.pcapi.core.fraud.ubble.api._ubble_result_fraud_item": ["src.pcapi.core.fraud.ubble.api._ubble_readable_score", "<builtin>.min"], "src.pcapi.core.fraud.ubble.api._ubble_readable_score": [], "src.pcapi.core.fraud.ubble.api.ubble_fraud_checks": ["append", "src.pcapi.core.fraud.ubble.api._ubble_result_fraud_item"], "src.pcapi.core.fraud.ubble.api.start_ubble_fraud_check": ["<builtin>.str"], "tests.validation.models.offerer_test.test_should_return_error_message_when_siren_has_not_exactly_9_characters": ["pcapi.validation.models.offerer.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors"], "pcapi.validation.models.offerer.validate": [], "tests.validation.models.offerer_test.test_should_not_return_error_message_when_siren_has_exactly_9_characters": ["pcapi.validation.models.offerer.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.offerer_test.test_should_return_error_message_when_siren_has_no_characters": ["pcapi.validation.models.offerer.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.notifications.push.update_user_attributes": ["pcapi.utils.module_loading.import_string"], "src.pcapi.notifications.push.update_users_attributes": ["pcapi.utils.module_loading.import_string"], "src.pcapi.notifications.push.send_transactional_notification": ["pcapi.utils.module_loading.import_string"], "src.pcapi.notifications.push.delete_user_attributes": ["pcapi.utils.module_loading.import_string"], "src.pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_beneficiary_email_data": ["<builtin>.int", "<builtin>.ValueError", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_underage_beneficiary_email_data": ["<builtin>.int", "<builtin>.ValueError", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.users.accepted_as_beneficiary.send_accepted_as_beneficiary_email": ["src.pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_beneficiary_email_data", "src.pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_underage_beneficiary_email_data"], "src.pcapi.routes.native.v1.bookings.book_offer": ["pcapi.routes.native.v1.serialization.bookings.BookOfferResponse", "pcapi.models.api_errors.ApiErrors"], "pcapi.routes.native.v1.serialization.bookings.BookOfferResponse": [], "src.pcapi.routes.native.v1.bookings.get_bookings": ["append", "pcapi.routes.native.v1.serialization.bookings.BookingsResponse", "src.pcapi.routes.native.v1.bookings.is_ended_booking", "<builtin>.sorted", "sqlalchemy.orm.joinedload"], "src.pcapi.routes.native.v1.bookings.is_ended_booking": [], "pcapi.routes.native.v1.serialization.bookings.BookingsResponse": [], "src.pcapi.routes.native.v1.bookings.cancel_booking": ["pcapi.models.api_errors.ApiErrors"], "tests.admin.custom_views.pro_user_view_test.ProUserViewTest.test_pro_user_creation": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "<builtin>.len", "datetime.timedelta", "sqlalchemy.and_"], "tests.admin.custom_views.pro_user_view_test.ProUserViewTest.test_it_gives_a_random_password_to_user": ["<builtin>.dict", "pcapi.admin.custom_views.pro_user_view.ProUserView", "pcapi.core.users.models.User"], "pcapi.admin.custom_views.pro_user_view.ProUserView": [], "tests.admin.custom_views.pro_user_view_test.ProUserViewTest.test_should_create_the_public_name": ["wtforms.form.Form", "pcapi.admin.custom_views.pro_user_view.ProUserView", "pcapi.core.users.models.User"], "wtforms.form.Form": [], "tests.admin.custom_views.pro_user_view_test.ProUserViewTest.test_order_by_works": ["pcapi.admin.custom_views.pro_user_view.ProUserView"], "tests.admin.custom_views.pro_user_view_test.ProUserViewTest.test_suspend_pro": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.pro_user_view_test.ProUserViewTest.test_unsuspend_pro": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.scripts.force_19yo_dms_import.force_19yo_dms_import_cli": ["src.pcapi.scripts.force_19yo_dms_import.force_19yo_dms_import"], "src.pcapi.scripts.force_19yo_dms_import.force_19yo_dms_import": ["append", "<builtin>.all", "<builtin>.len"], "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file._find_users_to_suspend": ["<builtin>.set"], "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file._delete_users_and_favorites": ["<builtin>.Exception"], "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file._suspend_users": ["pcapi.core.users.api.suspend_account"], "pcapi.core.users.api.suspend_account": [], "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file.suspend_or_delete_users_by_email": ["<builtin>.print", "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file._delete_users_and_favorites", "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file._suspend_users", "<builtin>.len", "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file._find_users_to_suspend"], "src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file.suspend_or_delete_from_file": ["src.pcapi.scripts.beneficiary.delete_or_suspend_account_from_file.suspend_or_delete_users_by_email", "<builtin>.set", "<builtin>.open"], "tests.models.allocine_venue_provider_price_rule_test.AllocineVenueProviderPriceRuleTest.test_should_add_price_rules_to_venue_provider": ["<builtin>.len"], "tests.models.allocine_venue_provider_price_rule_test.AllocineVenueProviderPriceRuleTest.test_should_raise_error_when_price_is_negative": ["pcapi.core.providers.models.AllocineVenueProviderPriceRule"], "tests.models.allocine_venue_provider_price_rule_test.AllocineVenueProviderPriceRuleTest.test_should_raise_error_when_saving_existing_rule_price": ["pcapi.core.providers.models.AllocineVenueProviderPriceRule"], "tests.models.allocine_venue_provider_price_rule_test.AllocineVenueProviderPriceRuleTest.test_should_raise_error_when_saving_wrong_format_price": ["pcapi.core.providers.models.AllocineVenueProviderPriceRule"], "tests.models.allocine_venue_provider_price_rule_test.SaveAllocineVenueProviderPriceRuleTest.test_should_not_save_new_venue_provider_price_rule": ["pcapi.core.providers.models.AllocineVenueProviderPriceRule"], "tests.local_providers.chunk_manager_test.SaveChunksTest.test_save_chunks_insert_1_offer_in_chunk": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.chunk_manager.save_chunks", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.local_providers.chunk_manager.save_chunks": [], "tests.local_providers.chunk_manager_test.SaveChunksTest.test_save_chunks_insert_1_offer_and_1_stock_in_chunk": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.chunk_manager.save_chunks", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "sqlalchemy.Sequence"], "sqlalchemy.Sequence": [], "tests.local_providers.chunk_manager_test.SaveChunksTest.test_save_chunks_update_1_offer_in_chunk": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.chunk_manager.save_chunks", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue"], "tests.local_providers.chunk_manager_test.SaveChunksTest.test_save_chunks_update_2_offers_and_1_stock_in_chunk": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.chunk_manager.save_chunks", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len", "<builtin>.any"], "src.pcapi.utils.blueprint.Blueprint.__init__": ["<builtin>.super"], "src.pcapi.scripts.external_users.commands.run_unstack_batch_queue": ["unstack_batch_cloud_task_queue.unstack_batch_queue", "<builtin>.print", "<builtin>.len"], "unstack_batch_cloud_task_queue.unstack_batch_queue": [], "src.pcapi.scripts.delete_unused_mediations_and_assets._update_favorites_mediations": ["<builtin>.len"], "src.pcapi.scripts.delete_unused_mediations_and_assets.delete_obsolete_mediations": ["<builtin>.set", "src.pcapi.scripts.delete_unused_mediations_and_assets._update_favorites_mediations"], "src.pcapi.scripts.delete_unused_mediations_and_assets.delete_assets_tied_to_mediationsqlentities": ["pcapi.utils.module_loading.import_string", "<builtin>.set", "<builtin>.len", "<builtin>.ImportError"], "<builtin>.ImportError": [], "src.pcapi.scripts.delete_unused_mediations_and_assets.delete_assets_without_mediation": ["pcapi.utils.module_loading.import_string", "pcapi.utils.human_ids.dehumanize", "<builtin>.set", "<builtin>.len", "pcapi.utils.human_ids.humanize", "<builtin>.ImportError"], "pcapi.utils.human_ids.dehumanize": [], "src.pcapi.scripts.delete_unused_mediations_and_assets.delete_mediations_without_uploaded_assets": ["pcapi.utils.module_loading.import_string", "src.pcapi.scripts.delete_unused_mediations_and_assets._update_favorites_mediations", "pcapi.utils.human_ids.dehumanize", "<builtin>.set", "<builtin>.len", "<builtin>.ImportError"], "src.pcapi.scripts.copy_is_gcu_compatible_to_is_syhnchronization_compatible.copy_is_gcu_compatible_to_is_synchronization_compatible": ["sqlalchemy.and_", "<builtin>.range"], "src.pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_bookings": ["append"], "src.pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking": ["src.pcapi.routes.adage.v1.serialization.prebooking._get_educational_offer_address", "src.pcapi.routes.adage.v1.serialization.prebooking._get_educational_offer_contact", "pcapi.core.offers.utils.offer_app_link", "src.pcapi.routes.adage.v1.serialization.prebooking.get_educational_booking_status", "src.pcapi.routes.adage.v1.serialization.prebooking._get_educational_offer_accessibility"], "src.pcapi.routes.adage.v1.serialization.prebooking._get_educational_offer_accessibility": ["append"], "src.pcapi.routes.adage.v1.serialization.prebooking._get_educational_offer_address": [], "src.pcapi.routes.adage.v1.serialization.prebooking._get_educational_offer_contact": [], "src.pcapi.routes.adage.v1.serialization.prebooking.get_educational_booking_status": [], "pcapi.core.offers.utils.offer_app_link": [], "tests.routes.native.v1.settings_test.SettingsTest.test_get_settings_feature_combination_1": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.routes.native.v1.settings_test.SettingsTest.test_get_settings_feature_combination_2": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.setup_method": ["pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_dms_state_is_refused_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response": [], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_dms_state_is_without_continuation_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_dms_state_is_closed_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_dms_state_is_received_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_dms_state_is_initiated_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_no_offerer_is_found_and_state_is_closed_should_not_create_bank_information_and_raise": ["tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_no_offerer_is_found_and_state_is_not_closed_should_not_create_bank_information_and_not_raise": ["tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.SaveNewBankInformationsTest.test_when_state_is_unknown": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByApplicationIdTest.setup_method": ["pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByApplicationIdTest.test_when_rib_and_offerer_change_everything_should_be_updated": ["datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByApplicationIdTest.test_when_status_change_rib_should_be_correctly_updated": ["datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByApplicationIdTest.test_when_overriding_another_bank_information_should_raise": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByOffererIdTest.setup_method": ["pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByOffererIdTest.test_when_receive_new_closed_application_should_override_previous_one": ["datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByOffererIdTest.test_when_receive_new_application_with_draft_state_should_update_previously_rejected_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByOffererIdTest.test_when_receive_new_application_with_lower_status_should_reject": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "tests.use_cases.save_offerer_bank_informations_test.SaveOffererBankInformationsTest.UpdateBankInformationsByOffererIdTest.test_when_receive_older_application_should_reject": ["datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response"], "src.pcapi.core.finance.api.price_bookings": ["<builtin>.set", "<builtin>.str", "src.pcapi.core.finance.api.price_booking"], "src.pcapi.core.finance.api.price_booking": ["pcapi.repository.transaction"], "src.pcapi.core.finance.api._get_siret_and_current_revenue": ["src.pcapi.core.finance.api._get_revenue_period"], "src.pcapi.core.finance.api._get_revenue_period": [], "src.pcapi.core.finance.api._price_booking": ["src.pcapi.core.finance.api._get_siret_and_current_revenue", "<builtin>.isinstance", "src.pcapi.core.finance.api._get_initial_pricing_status", "append"], "src.pcapi.core.finance.api._get_initial_pricing_status": [], "src.pcapi.core.finance.api._delete_dependent_pricings": ["src.pcapi.core.finance.api._get_revenue_period"], "src.pcapi.core.finance.api.cancel_pricing": ["pcapi.repository.transaction"], "src.pcapi.core.finance.api.generate_cashflows_and_payment_files": ["src.pcapi.core.finance.api.generate_payment_files", "src.pcapi.core.finance.api.generate_cashflows"], "src.pcapi.core.finance.api.generate_cashflows": ["pcapi.repository.transaction"], "src.pcapi.core.finance.api.generate_payment_files": ["src.pcapi.core.finance.api._generate_wallets_file", "<map>.values", "src.pcapi.core.finance.api._generate_business_units_file", "<builtin>.str", "<builtin>.ValueError", "src.pcapi.core.finance.api._generate_payments_file"], "src.pcapi.core.finance.api._generate_business_units_file": ["src.pcapi.core.finance.api._write_csv"], "src.pcapi.core.finance.api._write_csv": ["src.pcapi.core.finance.api._payment_details_row_formatter", "src.pcapi.core.finance.api.<lambda1>", "src.pcapi.core.finance.api._generate_business_units_file.<lambda1>", "src.pcapi.core.finance.api._generate_wallets_file.<lambda1>", "<builtin>.str", "src.pcapi.core.finance.api.generate_invoice_file.<lambda1>", "<builtin>.open"], "src.pcapi.core.finance.api.<lambda1>": [], "src.pcapi.core.finance.api._generate_business_units_file.<lambda1>": ["src.pcapi.core.finance.api._clean_for_accounting"], "src.pcapi.core.finance.api._clean_for_accounting": ["<builtin>.isinstance"], "src.pcapi.core.finance.api._generate_payments_file": ["src.pcapi.core.finance.api._write_csv"], "src.pcapi.core.finance.api._payment_details_row_formatter": ["<builtin>.ValueError", "src.pcapi.core.finance.api._clean_for_accounting"], "src.pcapi.core.finance.api._generate_wallets_file": ["src.pcapi.core.finance.api._write_csv"], "src.pcapi.core.finance.api._generate_wallets_file.<lambda1>": [], "src.pcapi.core.finance.api.edit_business_unit": ["<builtin>.ValueError"], "src.pcapi.core.finance.api.find_reimbursement_rule": ["<builtin>.isinstance"], "src.pcapi.core.finance.api._make_invoice_line": ["<builtin>.list", "<builtin>.sum"], "src.pcapi.core.finance.api.generate_invoices": ["pcapi.repository.transaction", "src.pcapi.core.finance.api.generate_invoice_file", "<builtin>.str"], "src.pcapi.core.finance.api.generate_invoice_file": ["src.pcapi.core.finance.api._write_csv", "sqlalchemy.cast"], "sqlalchemy.cast": [], "src.pcapi.core.finance.api.generate_invoice_file.<lambda1>": ["<builtin>.abs"], "src.pcapi.core.finance.api.generate_and_store_invoice": ["src.pcapi.core.finance.api._generate_invoice", "pcapi.core.mails.transactional.pro.invoice_available_to_pro.send_invoice_available_to_pro_email", "src.pcapi.core.finance.api._store_invoice_pdf", "src.pcapi.core.finance.api._generate_invoice_html"], "src.pcapi.core.finance.api._generate_invoice": ["<builtin>.isinstance", "append", "collections.defaultdict", "<builtin>.tuple", "<builtin>.list", "src.pcapi.core.finance.api.find_reimbursement_rule", "src.pcapi.core.finance.api._make_invoice_line"], "collections.defaultdict": [], "src.pcapi.core.finance.api._generate_invoice_html": ["flask.render_template", "src.pcapi.core.finance.api._prepare_invoice_context"], "src.pcapi.core.finance.api._prepare_invoice_context": ["operator.attrgetter", "append", "<builtin>.dict", "<builtin>.list", "<builtin>.sorted", "<builtin>.sum"], "flask.render_template": [], "src.pcapi.core.finance.api._store_invoice_pdf": ["pcapi.core.object_storage.store_public_object"], "pcapi.core.object_storage.store_public_object": [], "pcapi.core.mails.transactional.pro.invoice_available_to_pro.send_invoice_available_to_pro_email": [], "src.pcapi.core.finance.api.merge_cashflow_batches": ["pcapi.repository.transaction", "<builtin>.len"], "src.pcapi.repository.local_provider_event_queries.find_latest_sync_part_end_event": ["datetime.timedelta"], "src.pcapi.domain.admin_emails.maybe_send_offerer_validation_email": ["pcapi.utils.mailing.make_validation_email_object"], "pcapi.utils.mailing.make_validation_email_object": [], "src.pcapi.domain.admin_emails.send_payment_message_email": ["pcapi.utils.mailing.make_payment_message_email"], "pcapi.utils.mailing.make_payment_message_email": [], "src.pcapi.domain.admin_emails.send_payment_details_email": ["pcapi.utils.mailing.make_payment_details_email"], "pcapi.utils.mailing.make_payment_details_email": [], "src.pcapi.domain.admin_emails.send_wallet_balances_email": ["pcapi.utils.mailing.make_wallet_balances_email"], "pcapi.utils.mailing.make_wallet_balances_email": [], "src.pcapi.domain.admin_emails.send_payments_report_emails": ["pcapi.utils.mailing.make_payments_report_email"], "pcapi.utils.mailing.make_payments_report_email": [], "src.pcapi.domain.admin_emails.send_offer_creation_notification_to_administration": ["pcapi.utils.mailing.make_offer_creation_notification_email"], "pcapi.utils.mailing.make_offer_creation_notification_email": [], "src.pcapi.domain.admin_emails.send_offer_rejection_notification_to_administration": ["pcapi.utils.mailing.make_offer_rejection_notification_email"], "pcapi.utils.mailing.make_offer_rejection_notification_email": [], "src.pcapi.domain.admin_emails.send_offer_validation_notification_to_administration": ["src.pcapi.domain.admin_emails._check_offer_subcategory_before_send", "src.pcapi.domain.admin_emails.send_offer_rejection_notification_to_administration", "src.pcapi.domain.admin_emails.send_offer_creation_notification_to_administration"], "src.pcapi.domain.admin_emails._check_offer_subcategory_before_send": [], "src.pcapi.domain.admin_emails.send_suspended_fraudulent_users_email": ["pcapi.utils.mailing.make_suspended_fraudulent_beneficiary_by_ids_notification_email"], "pcapi.utils.mailing.make_suspended_fraudulent_beneficiary_by_ids_notification_email": [], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_should_generate_a_random_password_on_creation": ["wtforms.Form", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.core.users.models.User"], "pcapi.admin.custom_views.partner_user_view.PartnerUserView": [], "wtforms.Form": [], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_should_preserve_password_on_edition": ["wtforms.Form", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.core.users.models.User"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_a_partner_should_never_be_a_beneficiary": ["wtforms.Form", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.core.users.models.User"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_a_partner_should_never_be_an_admin": ["wtforms.Form", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.core.users.models.User"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_a_partner_should_not_need_to_fill_cultural_survey": ["wtforms.Form", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.core.users.models.User"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_a_partner_should_not_need_to_see_beneficiaries_tutorial": ["wtforms.Form", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.core.users.models.User"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_should_create_the_public_name": ["wtforms.Form", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.core.users.models.User"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_super_admin_can_suspend_then_unsuspend_partner": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.partner_user_view_test.PartnerUserViewTest.test_resend_validation_email_to_partner": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.core.users.external.external_pro_test.test_update_external_pro_user_attributes": ["pcapi.core.offerers.factories.VenueLabelFactory", "pcapi.core.bookings.factories.BookingFactory", "pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.users.models.NotificationSubscriptions", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.offers.factories.StockFactory", "<builtin>.range", "pcapi.core.users.external.get_pro_attributes", "dataclasses.asdict", "pcapi.core.offers.factories.BankInformationFactory", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.offers.factories.VenueFactory"], "pcapi.core.users.models.NotificationSubscriptions": [], "pcapi.core.users.factories.ProFactory": [], "pcapi.core.offerers.factories.VenueLabelFactory": [], "pcapi.core.offers.factories.OffererFactory": [], "pcapi.core.offers.factories.UserOffererFactory": [], "pcapi.core.offers.factories.BankInformationFactory": [], "pcapi.core.users.external.get_pro_attributes": [], "tests.core.users.external.external_pro_test.test_update_external_pro_user_attributes_no_offerer_no_venue": ["pcapi.core.users.factories.ProFactory", "<builtin>.set", "pcapi.core.users.external.get_pro_attributes"], "tests.core.users.external.external_pro_test.test_update_external_pro_booking_email_attributes": ["<builtin>.set", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.external.get_pro_attributes"], "src.pcapi.sandboxes.scripts.getters.pro_11_lost_password.get_pro_validated_no_reset_password_token_user": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "src.pcapi.sandboxes.scripts.getters.pro_11_lost_password.get_pro_validated_with_reset_password_token_user": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "tests.core.mails.transactional.users.email_address_change_confirmation_test.SendinblueAddressEmailChangeConfirmationTest.test_should_return_sendinblue_data_when_feature_toggled": ["pcapi.core.mails.transactional.users.email_address_change_confirmation.get_email_confirmation_email_data"], "pcapi.core.mails.transactional.users.email_address_change_confirmation.get_email_confirmation_email_data": [], "src.pcapi.scripts.business_unit.reset_venues_invalid_sirets.dump_venue": ["<builtin>.print", "pcapi.utils.human_ids.humanize"], "src.pcapi.scripts.business_unit.reset_venues_invalid_sirets.reset_venues_invalid_sirets": ["src.pcapi.scripts.business_unit.reset_venues_invalid_sirets.normalize_venue_postal_code", "<builtin>.print", "<builtin>.len", "src.pcapi.scripts.business_unit.reset_venues_invalid_sirets.reset_venue_siret", "src.pcapi.scripts.business_unit.reset_venues_invalid_sirets.dump_venue"], "src.pcapi.scripts.business_unit.reset_venues_invalid_sirets.reset_venue_siret": [], "src.pcapi.scripts.business_unit.reset_venues_invalid_sirets.normalize_venue_postal_code": [], "src.pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.get_recredit_to_underage_beneficiary_email_data": ["<builtin>.int", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.core.users.api.get_domains_credit"], "pcapi.core.users.api.get_domains_credit": [], "src.pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.send_recredit_email_to_underage_beneficiary": ["src.pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.get_recredit_to_underage_beneficiary_email_data"], "tests.connectors.beneficiaries.ubble_test.StartIdentificationTest.test_start_identification": ["<builtin>.isinstance", "<builtin>.str", "<builtin>.len"], "tests.connectors.beneficiaries.ubble_test.StartIdentificationTest.test_start_identification_connection_error": ["<builtin>.len"], "tests.connectors.beneficiaries.ubble_test.StartIdentificationTest.test_start_identification_http_error_status": ["<builtin>.len"], "tests.connectors.beneficiaries.ubble_test.GetContentTest.test_get_content_http_error": ["<builtin>.len"], "tests.core.users.external.batch_test.FormatUserAttributesTest.test_format_attributes": ["pcapi.core.users.external.batch.format_user_attributes", "<builtin>.len"], "pcapi.core.users.external.batch.format_user_attributes": [], "tests.core.users.external.batch_test.FormatUserAttributesTest.test_format_attributes_without_bookings": ["pcapi.core.users.external.batch.format_user_attributes", "copy.deepcopy"], "tests.infrastructure.repository.stock_provider.provider_api_test.StocksTest.setup_method": ["pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI"], "tests.infrastructure.repository.stock_provider.provider_api_test.StocksTest.should_call_api_with_authentication_token_if_given": ["pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI"], "tests.infrastructure.repository.stock_provider.provider_api_test.StocksTest.should_raise_error_when_provider_api_request_fails": ["<builtin>.str"], "tests.infrastructure.repository.stock_provider.provider_api_test.IsSiretRegisteredTest.setup_method": ["pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI"], "tests.infrastructure.repository.stock_provider.provider_api_test.IsSiretRegisteredTest.should_call_api_with_authentication_token_if_given": ["pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI"], "src.pcapi.routes.saml.educonnect.login_educonnect": ["werkzeug.wrappers.Response", "flask.redirect"], "werkzeug.wrappers.Response": [], "flask.redirect": [], "src.pcapi.routes.saml.educonnect.on_educonnect_authentication_response": ["src.pcapi.routes.saml.educonnect._on_educonnect_authentication_errors", "urllib.parse.urlencode", "flask.redirect", "src.pcapi.routes.saml.educonnect._user_id_from_saml_request_id"], "src.pcapi.routes.saml.educonnect._user_id_from_saml_request_id": [], "src.pcapi.routes.saml.educonnect._on_educonnect_authentication_errors": ["urllib.parse.urlencode", "flask.redirect"], "src.pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.send_batch_booking_postponement_email_to_users": ["src.pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.send_booking_postponement_email_to_users"], "src.pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.send_booking_postponement_email_to_users": ["src.pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.get_booking_postponed_by_pro_to_beneficiary_email_data"], "src.pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.get_booking_postponed_by_pro_to_beneficiary_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.urls.booking_app_link", "babel.dates.format_date", "pcapi.utils.mailing.format_booking_hours_for_email", "pcapi.utils.mailing.get_event_datetime"], "pcapi.utils.mailing.format_booking_hours_for_email": [], "pcapi.utils.urls.booking_app_link": [], "src.pcapi.core.educational.validation.check_institution_fund": ["pcapi.core.educational.repository.get_confirmed_educational_bookings_amount"], "pcapi.core.educational.repository.get_confirmed_educational_bookings_amount": [], "tests.routes.adage_iframe.get_authenticate_test.Returns200Test._create_adage_valid_token": ["<map>.get", "tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token": ["<builtin>.open"], "tests.routes.adage_iframe.get_authenticate_test.Returns200Test.test_should_return_redactor_role_when_token_has_an_uai_code": ["tests.conftest.TestClient.__init__", "<map>.get", "tests.conftest.TestClient.get", "tests.routes.adage_iframe.get_authenticate_test.Returns200Test._create_adage_valid_token"], "tests.routes.adage_iframe.get_authenticate_test.Returns200Test.test_should_return_readonly_role_when_token_has_no_uai_code": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.routes.adage_iframe.get_authenticate_test.Returns200Test._create_adage_valid_token"], "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest._create_adage_valid_token_from_expiration_date": ["<map>.get", "tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest._create_adage_invalid_token": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_invalid_token"], "tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_invalid_token": ["datetime.timedelta", "<builtin>.open"], "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest.test_should_return_error_response_when_jwt_invalid": ["tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest._create_adage_invalid_token", "tests.conftest.TestClient.get", "tests.conftest.TestClient.__init__"], "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest.test_should_return_error_response_when_jwt_expired": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest._create_adage_valid_token_from_expiration_date"], "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest.test_should_return_error_response_when_no_expiration_date_in_token": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.routes.adage_iframe.get_authenticate_test.ReturnsErrorTest._create_adage_valid_token_from_expiration_date"], "src.pcapi.routes.serialization.base.VenueContactModel.validate_phone_number": ["<builtin>.ValueError"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro.get_bookings_expiration_to_pro_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.domain.postal_code.postal_code.PostalCode", "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro._extract_bookings_information_from_bookings_list"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro._extract_bookings_information_from_bookings_list": ["append"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro.send_bookings_expiration_to_pro_email": ["src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro._filter_books_bookings", "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro.get_bookings_expiration_to_pro_email_data"], "src.pcapi.core.mails.transactional.bookings.booking_expiration_to_pro._filter_books_bookings": ["append"], "src.pcapi.core.users.external.update_external_user": ["src.pcapi.core.users.external.get_user_attributes", "batch.update_user_attributes", "sendinblue.update_contact_attributes", "src.pcapi.core.users.external.update_external_pro"], "src.pcapi.core.users.external.get_user_attributes": ["pcapi.core.users.api.get_domains_credit", "pcapi.core.users.external.models.UserAttributes", "<builtin>.len", "src.pcapi.core.users.external._get_bookings_categories_and_subcategories", "src.pcapi.core.users.external._get_user_bookings"], "src.pcapi.core.users.external._get_user_bookings": ["sqlalchemy.orm.joinedload"], "src.pcapi.core.users.external._get_bookings_categories_and_subcategories": ["<builtin>.list", "<builtin>.set"], "batch.update_user_attributes": [], "sendinblue.update_contact_attributes": [], "src.pcapi.core.users.external.update_external_pro": ["pcapi.tasks.serialization.sendinblue_tasks.UpdateProAttributesRequest"], "pcapi.tasks.serialization.sendinblue_tasks.UpdateProAttributesRequest": [], "src.pcapi.core.users.external.get_user_or_pro_attributes": ["src.pcapi.core.users.external.get_user_attributes", "src.pcapi.core.users.external.get_pro_attributes"], "src.pcapi.core.users.external.get_pro_attributes": ["pcapi.core.users.repository.find_pro_user_by_email", "<builtin>.set", "pcapi.core.offerers.repository.find_venues_by_offerers", "<builtin>.bool", "<map>.update", "pcapi.core.offerers.repository.find_venues_by_booking_email", "<builtin>.len", "pcapi.core.users.external.models.ProAttributes", "<builtin>.min"], "pcapi.core.users.repository.find_pro_user_by_email": [], "pcapi.core.offerers.repository.find_venues_by_offerers": [], "<map>.update": [], "pcapi.core.offerers.repository.find_venues_by_booking_email": [], "tests.routes.adage.v1.serialization.get_educational_booking_status_test.GetEducationalBookingStatusTest.test_get_educational_booking_status_returns_used": ["pcapi.routes.adage.v1.serialization.prebooking.get_educational_booking_status"], "pcapi.routes.adage.v1.serialization.prebooking.get_educational_booking_status": [], "tests.routes.adage.v1.serialization.get_educational_booking_status_test.GetEducationalBookingStatusTest.test_get_educational_booking_status_returns_used_when_reimbursed": ["pcapi.routes.adage.v1.serialization.prebooking.get_educational_booking_status"], "tests.routes.adage.v1.serialization.get_educational_booking_status_test.GetEducationalBookingStatusTest.test_get_educational_booking_status_returns_educational_status": ["pcapi.routes.adage.v1.serialization.prebooking.get_educational_booking_status"], "tests.routes.adage.v1.serialization.get_educational_booking_status_test.GetEducationalBookingStatusTest.test_get_educational_booking_status_returns_booking_status": ["pcapi.routes.adage.v1.serialization.prebooking.get_educational_booking_status"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest.test_check_subcategories": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule", "<builtin>.str"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule": [], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest.test_check_start_date": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest.test_check_end_date": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest.test_check_no_conflict_if_timespans_do_not_overlap": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest.test_check_no_conflict_if_different_subcategories": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest.test_check_conflicts_if_subcategories_overlap": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule"], "tests.core.payments.test_validation.CustomReimbursementRuleValidationTest.test_check_conflicts_if_existing_rule_on_all_subcategories": ["tests.core.payments.test_validation.CustomReimbursementRuleValidationTest._make_rule"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "babel.dates.format_date", "pcapi.utils.mailing.get_event_datetime", "pcapi.utils.mailing.format_booking_hours_for_email"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.send_booking_cancellation_by_pro_to_beneficiary_email": ["src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data"], "src.pcapi.scheduled_tasks.titelive_clock.synchronize_titelive_things": ["pcapi.local_providers.provider_manager.synchronize_data_for_provider"], "pcapi.local_providers.provider_manager.synchronize_data_for_provider": [], "src.pcapi.scheduled_tasks.titelive_clock.synchronize_titelive_thing_descriptions": ["pcapi.local_providers.provider_manager.synchronize_data_for_provider"], "src.pcapi.scheduled_tasks.titelive_clock.synchronize_titelive_thing_thumbs": ["pcapi.local_providers.provider_manager.synchronize_data_for_provider"], "src.pcapi.scheduled_tasks.titelive_clock.titelive_clock": ["sentry_sdk.set_tag", "apscheduler.schedulers.blocking.BlockingScheduler"], "apscheduler.schedulers.blocking.BlockingScheduler": [], "src.pcapi.routes.error_handlers.utils._format_statement_value": ["<builtin>.isinstance", "<builtin>.str", "append"], "src.pcapi.routes.error_handlers.utils.format_sql_statement_params": ["src.pcapi.routes.error_handlers.utils._format_statement_value"], "src.pcapi.routes.adage_iframe.serialization.adage_authentication.get_redactor_information_from_adage_authentication": ["pcapi.core.educational.exceptions.MissingRequiredRedactorInformation"], "pcapi.core.educational.exceptions.MissingRequiredRedactorInformation": [], "tests.scripts.payment.batch_test.test_generate_and_send_payments": ["pcapi.scripts.payment.batch.generate_and_send_payments", "<builtin>.len", "<builtin>.set"], "tests.core.mails.transactional.users.pre_subscription_dms_error_test.PreSubscriptionDmsErrorEmailSendinblueTest.test_return_correct_email_metadata": ["pcapi.core.mails.transactional.users.pre_subscription_dms_error.get_pre_subscription_dms_error_email_data"], "pcapi.core.mails.transactional.users.pre_subscription_dms_error.get_pre_subscription_dms_error_email_data": [], "tests.core.mails.transactional.users.pre_subscription_dms_error_test.PreSubscriptionDmsErrorEmailSendinblueTest.test_send_mail": ["pcapi.core.mails.transactional.users.pre_subscription_dms_error.send_pre_subscription_from_dms_error_email_to_beneficiary"], "pcapi.core.mails.transactional.users.pre_subscription_dms_error.send_pre_subscription_from_dms_error_email_to_beneficiary": [], "tests.scripts.deactivate_300e_thing_offers_test.Deactivate300eThingOffersTest.test_should_deactivate_thing_offers_that_are_higher_than_300e_and_non_educational": ["pcapi.core.offers.factories.EventStockFactory", "pcapi.core.offers.factories.ThingStockFactory", "pcapi.core.offers.factories.EducationalThingOfferFactory", "<builtin>.len", "pcapi.scripts.deactivate_300e_thing_offers.deactivate_300e_thing_offers"], "pcapi.core.offers.factories.ThingStockFactory": [], "pcapi.core.offers.factories.EducationalThingOfferFactory": [], "pcapi.core.offers.factories.EventStockFactory": [], "pcapi.scripts.deactivate_300e_thing_offers.deactivate_300e_thing_offers": [], "tests.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers_test.FetchUserEmailsForOffersTest.test_should_call_build_offers_query": ["pcapi.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers.fetch_user_emails_for_offers_with_max_stock_date_between_today_and_end_of_quarantine", "datetime.datetime"], "pcapi.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers.fetch_user_emails_for_offers_with_max_stock_date_between_today_and_end_of_quarantine": [], "tests.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers_test.FetchUserEmailsForOffersTest.test_should_return_all_user_emails": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "datetime.datetime", "<builtin>.set", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len", "pcapi.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers.fetch_user_emails_for_offers_with_max_stock_date_between_today_and_end_of_quarantine", "datetime.timedelta"], "tests.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers_test.FetchUserEmailsForOffersTest.test_should_return_only_pro_user_emails": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "datetime.datetime", "<builtin>.set", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len", "pcapi.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers.fetch_user_emails_for_offers_with_max_stock_date_between_today_and_end_of_quarantine", "datetime.timedelta"], "tests.routes.pro.validate_user_test.test_validate_user_token": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.patch"], "tests.conftest.TestClient.patch": ["tests.conftest.TestClient._print_spec"], "tests.routes.pro.validate_user_test.test_fail_if_unknown_token": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.patch"], "src.pcapi.core.users.factories.UserFactory._create": ["<builtin>.super"], "src.pcapi.core.users.factories.UserFactory._build": ["<builtin>.super"], "src.pcapi.core.users.factories.AdminFactory._create": ["<builtin>.super"], "src.pcapi.core.users.factories.AdminFactory._build": ["<builtin>.super"], "src.pcapi.core.users.factories.BeneficiaryGrant18Factory.<lambda2>": ["datetime.time", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.factories.BeneficiaryGrant18Factory._create": ["<builtin>.super"], "src.pcapi.core.users.factories.BeneficiaryGrant18Factory._build": ["<builtin>.super"], "src.pcapi.core.users.factories.UnderageBeneficiaryFactory.<lambda1>": ["datetime.time", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.factories.UnderageBeneficiaryFactory.<lambda2>": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.factories.ProFactory._create": ["<builtin>.super"], "src.pcapi.core.users.factories.ProFactory._build": ["<builtin>.super"], "src.pcapi.core.users.factories.UserSessionFactory._create": ["<builtin>.super", "<builtin>.ValueError"], "src.pcapi.core.users.factories.DepositGrantFactory._create": ["<builtin>.super", "<builtin>.ValueError"], "src.pcapi.core.users.factories.EduconnectUserFactory.<lambda1>": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.factories.EduconnectUserFactory.<lambda2>": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.factories.UserSuspensionFactory.<lambda1>": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.utils_test.CheckClientVersionTest.test_with_invalid_version": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.native.v1.utils_test.CheckClientVersionTest.test_with_exact_version": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.native.v1.utils_test.CheckClientVersionTest.test_with_newer_version": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.native.v1.utils_test.CheckClientVersionTest.test_with_older_version": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_users": ["src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_other_users", "<builtin>.dict", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_short_email_beneficiaries", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_underage_beneficiaries", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_beneficiaries", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_general_public_users"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_beneficiaries": ["<builtin>.enumerate", "<builtin>.len", "<builtin>.str"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_underage_beneficiaries": ["<builtin>.enumerate", "<builtin>.len", "<builtin>.str"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_other_users": ["<builtin>.enumerate", "datetime.timedelta", "<builtin>.len", "<builtin>.str"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_general_public_users": ["<builtin>.enumerate", "datetime.timedelta", "<builtin>.len", "<builtin>.str"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_short_email_beneficiaries": ["append", "freezegun.freeze_time", "dateutil.relativedelta.relativedelta", "faker.Faker"], "faker.Faker": [], "src.pcapi.core.users.external.batch.update_user_attributes": ["src.pcapi.core.users.external.batch.format_user_attributes"], "src.pcapi.core.users.external.batch.format_user_attributes": ["<builtin>.int", "src.pcapi.core.users.external.batch._format_date"], "src.pcapi.core.users.external.batch._format_date": [], "tests.core.mails.transactional.pro.new_offerer_validation_test.SendNewOffererValidationEmailTest.test_send_mail": ["dataclasses.asdict", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.mails.transactional.pro.new_offerer_validation.send_new_offerer_validation_email_to_pro"], "pcapi.core.mails.transactional.pro.new_offerer_validation.send_new_offerer_validation_email_to_pro": [], "tests.domain.ftp_titelive_test.test_put_today_file_at_end_of_list_order_file_as_expected": ["<builtin>.list", "<builtin>.len", "pcapi.domain.titelive.put_today_file_at_end_of_list"], "pcapi.domain.titelive.put_today_file_at_end_of_list": [], "tests.scripts.booking.cancel_bookings_of_events_from_file_test.CancelBookingsOfEventsFromFileTest.test_cancel_bookings_of_offers_from_rows": ["pcapi.core.bookings.factories.BookingFactory", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.ThingStockFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.bookings.factories.UsedBookingFactory", "pcapi.scripts.booking.cancel_bookings_of_events_from_file._cancel_bookings_of_offers_from_rows", "pcapi.core.offers.factories.ThingOfferFactory"], "pcapi.core.offers.factories.ThingOfferFactory": [], "pcapi.core.bookings.factories.UsedBookingFactory": [], "pcapi.scripts.booking.cancel_bookings_of_events_from_file._cancel_bookings_of_offers_from_rows": [], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_return_value_and_order": ["<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_empty_return_value": ["<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_all_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user": [], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_all_validated_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_all_not_validated_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_venues_for_offerer_id": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_all_validated_for_user_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_all_not_validated_for_user_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_all_venues_from_active_offerers_only": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest.test_get_all_venues_from_active_and_inactive_offerers": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForProUserTest._setup_venues_for_pro_user", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest.test_get_all_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest._setup_venues_for_users", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest._setup_venues_for_users": [], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest.test_get_all_validated_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest._setup_venues_for_users", "<builtin>.len"], "tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest.test_get_all_not_validated_venues": ["tests.core.offerers.test_repository_get_venues.GetFilteredVenuesForAdminTest._setup_venues_for_users", "<builtin>.len"], "src.pcapi.sandboxes.scripts.sandbox_bookings_recap.save_sandbox": ["pcapi.sandboxes.scripts.creators.bookings_recap.bookings_recap.save_bookings_recap_sandbox"], "pcapi.sandboxes.scripts.creators.bookings_recap.bookings_recap.save_bookings_recap_sandbox": [], "src.pcapi.sandboxes.scripts.getters.pro_02_signin.get_existing_pro_validated_user_without_offer": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "src.pcapi.scripts.venue.venue_label.create_venue_labels.create_venue_labels": ["src.pcapi.scripts.venue.venue_label.create_venue_labels.save_new_venue_labels"], "src.pcapi.scripts.venue.venue_label.create_venue_labels.save_new_venue_labels": ["append", "pcapi.core.offerers.models.VenueLabel"], "pcapi.core.offerers.models.VenueLabel": [], "src.pcapi.routes.serialization.BaseModel.do_not_allow_nan": ["math.isfinite"], "math.isfinite": [], "src.pcapi.routes.serialization.BaseModel.Config.schema_extra": ["<builtin>.issubclass"], "tests.admin.custom_views.suspend_fraudulent_users_by_ids_test.SuspendFraudulentUsersByIdsTest.test_suspend_users_by_ids": ["pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "pcapi.core.users.factories.AdminFactory": [], "pcapi.core.users.factories.BeneficiaryGrant18Factory": [], "src.pcapi.connectors.beneficiaries.ubble._get_included_attributes": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.connectors.beneficiaries.ubble._extract_useful_content_from_response": ["<builtin>.getattr", "src.pcapi.connectors.beneficiaries.ubble._get_included_attributes", "src.pcapi.connectors.beneficiaries.ubble._get_data_attribute"], "src.pcapi.connectors.beneficiaries.ubble._get_data_attribute": [], "src.pcapi.connectors.beneficiaries.ubble.start_identification": ["src.pcapi.connectors.beneficiaries.ubble.build_url", "src.pcapi.connectors.beneficiaries.ubble._extract_useful_content_from_response", "<builtin>.str", "src.pcapi.connectors.beneficiaries.ubble.configure_session"], "src.pcapi.connectors.beneficiaries.ubble.configure_session": [], "src.pcapi.connectors.beneficiaries.ubble.build_url": [], "src.pcapi.connectors.beneficiaries.ubble.get_content": ["src.pcapi.connectors.beneficiaries.ubble.build_url", "src.pcapi.connectors.beneficiaries.ubble._extract_useful_content_from_response", "src.pcapi.connectors.beneficiaries.ubble.configure_session"], "tests.routes.pro.get_reimbursements_csv_test.test_with_venue_filter": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "datetime.timedelta", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_reimbursements_csv_test.test_with_reimbursement_period_filter": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "datetime.timedelta"], "tests.routes.pro.get_reimbursements_csv_test.test_with_non_given_reimbursement_period": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_reimbursements_csv_test.test_admin_can_access_reimbursements_data_with_venue_filter": ["datetime.timedelta", "pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.get_reimbursements_csv_test.test_admin_cannot_access_reimbursements_data_without_venue_filter": ["datetime.timedelta"], "src.pcapi.scripts.payment.banishment.do_ban_payments": ["pcapi.repository.payment_queries.find_payments_by_message", "pcapi.domain.payments.apply_banishment"], "pcapi.repository.payment_queries.find_payments_by_message": [], "pcapi.domain.payments.apply_banishment": [], "src.pcapi.routes.native.v1.account.update_user_profile": ["pcapi.core.users.external.update_external_user"], "src.pcapi.routes.native.v1.account.update_user_email": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.native.v1.account.validate_user_email": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.native.v1.account.update_cultural_survey": ["pcapi.repository.transaction"], "src.pcapi.routes.native.v1.account.create_account": ["pcapi.models.api_errors.ApiErrors", "pcapi.core.users.repository.find_user_by_email"], "pcapi.core.users.repository.find_user_by_email": [], "src.pcapi.routes.native.v1.account.resend_email_validation": ["pcapi.models.api_errors.ApiErrors", "pcapi.core.users.repository.find_user_by_email"], "src.pcapi.routes.native.v1.account.send_phone_validation_code": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.native.v1.account.validate_phone_number": ["pcapi.repository.transaction"], "src.pcapi.routes.native.v1.account.suspend_account": ["pcapi.core.mails.transactional.users.delete_account.send_user_request_to_delete_account_reception_email"], "pcapi.core.mails.transactional.users.delete_account.send_user_request_to_delete_account_reception_email": [], "src.pcapi.routes.native.v1.account.profiling_fraud_score": ["pcapi.models.api_errors.ApiErrors", "pcapi.core.logging.get_or_set_correlation_id"], "pcapi.core.logging.get_or_set_correlation_id": [], "src.pcapi.routes.native.v1.account.profiling_session_id": ["<builtin>.str"], "src.pcapi.routes.native.v1.account.start_identification_session": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_soon_to_be_expired_individual_bookings": ["src.pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_users_of_soon_to_be_expired_individual_bookings"], "src.pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_users_of_soon_to_be_expired_individual_bookings": ["operator.attrgetter", "append", "<builtin>.dict", "pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary.send_soon_to_be_expired_individual_bookings_recap_email_to_beneficiary", "<builtin>.list", "itertools.groupby", "<builtin>.len"], "pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary.send_soon_to_be_expired_individual_bookings_recap_email_to_beneficiary": [], "src.pcapi.scripts.sandbox.sandbox": ["pcapi.sandboxes.scripts.save_sandbox.save_sandbox"], "pcapi.sandboxes.scripts.save_sandbox.save_sandbox": [], "src.pcapi.scripts.sandbox.sandbox_to_testcafe": ["pcapi.sandboxes.scripts.testcafe_helpers.print_testcafe_helpers", "pcapi.sandboxes.scripts.testcafe_helpers.print_testcafe_helper", "<builtin>.print", "pcapi.sandboxes.scripts.testcafe_helpers.print_all_testcafe_helpers", "<builtin>.str", "pprint.pprint", "<builtin>.vars"], "pcapi.sandboxes.scripts.testcafe_helpers.print_testcafe_helper": [], "pcapi.sandboxes.scripts.testcafe_helpers.print_testcafe_helpers": [], "pcapi.sandboxes.scripts.testcafe_helpers.print_all_testcafe_helpers": [], "<builtin>.vars": [], "src.pcapi.utils.login_manager.get_user_with_id": ["pcapi.repository.user_session_queries.existing_user_session"], "pcapi.repository.user_session_queries.existing_user_session": [], "src.pcapi.utils.login_manager.send_401": ["pcapi.models.api_errors.ApiErrors", "flask.jsonify"], "flask.jsonify": [], "src.pcapi.utils.login_manager.stamp_session": ["pcapi.repository.user_session_queries.register_user_session"], "pcapi.repository.user_session_queries.register_user_session": [], "src.pcapi.utils.login_manager.discard_session": ["pcapi.repository.user_session_queries.delete_user_session"], "pcapi.repository.user_session_queries.delete_user_session": [], "src.pcapi.scripts.install.install_commands": ["<builtin>.getattr"], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest.test_should_delete_product_when_isbn_found": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.delete_unwanted_existing_product"], "pcapi.repository.product_queries.delete_unwanted_existing_product": [], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest.test_should_not_delete_product_when_isbn_not_found": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.delete_unwanted_existing_product"], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest.test_should_delete_nothing_when_product_not_found": ["pcapi.repository.product_queries.delete_unwanted_existing_product", "pcapi.core.offers.factories.ProductFactory"], "pcapi.core.offers.factories.ProductFactory": [], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest.test_should_delete_product_when_it_has_offer_and_stock_but_not_booked": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.delete_unwanted_existing_product", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue"], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest.test_should_set_isGcuCompatible_and_isSynchronizationCompatible_at_false_in_product_and_deactivate_offer_when_bookings_related_to_offer": ["pcapi.core.offers.factories.ProductFactory"], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest.test_should_delete_product_when_related_offer_has_mediation": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.delete_unwanted_existing_product", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.generic_creators.create_mediation"], "tests.repository.product_queries_test.DeleteUnwantedExistingProductTest.test_should_delete_product_when_related_offer_is_on_user_favorite_list": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.delete_unwanted_existing_product", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_favorite", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.generic_creators.create_mediation"], "pcapi.model_creators.generic_creators.create_favorite": [], "tests.repository.product_queries_test.FindActiveBookProductByIsbnTest.test_should_return_active_book_product_when_existing_isbn_is_given": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.find_active_book_product_by_isbn"], "pcapi.repository.product_queries.find_active_book_product_by_isbn": [], "tests.repository.product_queries_test.FindActiveBookProductByIsbnTest.test_should_return_nothing_when_non_existing_isbn_is_given": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.find_active_book_product_by_isbn"], "tests.repository.product_queries_test.FindActiveBookProductByIsbnTest.test_should_not_return_not_gcu_compatible_product": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.repository.product_queries.find_active_book_product_by_isbn"], "tests.repository.product_queries_test.FindActiveBookProductByIsbnTest.test_should_not_return_not_synchronization_compatible_product": ["pcapi.repository.product_queries.find_active_book_product_by_isbn", "pcapi.core.offers.factories.ProductFactory"], "src.pcapi.core.testing.BaseFactory._save": ["<builtin>.isinstance", "<builtin>.super", "<builtin>.set", "<builtin>.sorted", "<builtin>.ValueError"], "src.pcapi.core.testing.BaseFactory._get_or_create": ["<builtin>.super"], "src.pcapi.core.testing.assert_num_queries": ["<builtin>.enumerate", "src.pcapi.core.testing._format_sql_query", "<builtin>.len"], "src.pcapi.core.testing._format_sql_query": ["<builtin>.int"], "src.pcapi.core.testing._record_end_of_query": ["<builtin>.hasattr"], "src.pcapi.core.testing.TestContextDecorator.enable": ["<builtin>.NotImplementedError"], "src.pcapi.core.testing.TestContextDecorator.disable": ["<builtin>.NotImplementedError"], "src.pcapi.core.testing.TestContextDecorator.__enter__": ["src.pcapi.core.testing.TestContextDecorator.enable"], "src.pcapi.core.testing.TestContextDecorator.__exit__": ["src.pcapi.core.testing.TestContextDecorator.disable"], "src.pcapi.core.testing.TestContextDecorator.decorate_class": ["<builtin>.getattr"], "src.pcapi.core.testing.TestContextDecorator.__call__": ["<builtin>.isinstance", "src.pcapi.core.testing.TestContextDecorator.decorate_class", "src.pcapi.core.testing.TestContextDecorator.decorate_callable", "<builtin>.getattr", "<builtin>.callable", "<builtin>.TypeError"], "<builtin>.callable": [], "src.pcapi.core.testing.TestContextDecorator.decorate_callable": [], "src.pcapi.core.testing.override_settings.enable": ["<builtin>.getattr", "<builtin>.setattr"], "<builtin>.setattr": [], "src.pcapi.core.testing.override_settings.disable": ["<builtin>.setattr"], "src.pcapi.core.testing.override_features.enable": ["<builtin>.hasattr", "<builtin>.dict"], "src.pcapi.core.testing.override_features.disable": ["<builtin>.hasattr", "<map>.items"], "src.pcapi.domain.postal_code.postal_code.PostalCode.get_departement_code": ["src.pcapi.domain.postal_code.postal_code.PostalCode._is_overseas_departement"], "src.pcapi.domain.postal_code.postal_code.PostalCode._is_overseas_departement": ["<builtin>.int"], "src.pcapi.repository.repository.save": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings_v2": ["pcapi.models.api_errors.ForbiddenError"], "pcapi.models.api_errors.ForbiddenError": [], "src.pcapi.validation.routes.users_authorizations.check_user_can_alter_venue": ["pcapi.models.api_errors.ForbiddenError"], "src.pcapi.validation.routes.users_authorizations.check_api_key_allows_to_validate_booking": ["pcapi.models.api_errors.ForbiddenError"], "src.pcapi.validation.routes.users_authorizations.check_api_key_allows_to_cancel_booking": ["pcapi.models.api_errors.ForbiddenError"], "tests.routes.pro.get_venue_stats_test.Returns200Test.when_pro_user_has_rights_on_managing_offerer": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_venue_stats_test.Returns403Test.when_pro_user_does_not_have_rights": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.admin.custom_views.support_view.utils.beneficiary_fraud_review_formatter": ["markupsafe.Markup"], "src.pcapi.admin.custom_views.support_view.utils.beneficiary_fraud_checks_formatter": ["markupsafe.Markup"], "src.pcapi.admin.custom_views.support_view.utils.beneficiary_subscription_status_formatter": ["markupsafe.Markup"], "src.pcapi.routes.serialization.reimbursement_csv_serialize.format_number_as_french": ["<builtin>.str"], "src.pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails.__init__": ["pcapi.core.offers.serialize.serialize_offer_type_educational_or_individual", "<builtin>.hasattr", "<builtin>.int", "src.pcapi.routes.serialization.reimbursement_csv_serialize.format_number_as_french"], "pcapi.core.offers.serialize.serialize_offer_type_educational_or_individual": [], "src.pcapi.routes.serialization.reimbursement_csv_serialize.generate_reimbursement_details_csv": ["io.StringIO"], "io.StringIO": [], "src.pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerer_reimbursement_details": ["src.pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerers_reimbursement_details"], "src.pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerers_reimbursement_details": ["pcapi.repository.reimbursement_queries.find_all_offerers_payments", "src.pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails.__init__"], "pcapi.repository.reimbursement_queries.find_all_offerers_payments": [], "src.pcapi.routes.serialization.reimbursement_csv_serialize.validate_reimbursement_period": ["append", "pcapi.models.api_errors.ApiErrors", "<builtin>.len"], "src.pcapi.core.mails.transactional.pro.new_offerer_validation.get_new_offerer_validation_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.pro.new_offerer_validation.send_new_offerer_validation_email_to_pro": ["pcapi.core.offerers.repository.find_new_offerer_user_email", "src.pcapi.core.mails.transactional.pro.new_offerer_validation.get_new_offerer_validation_email_data"], "pcapi.core.offerers.repository.find_new_offerer_user_email": [], "src.pcapi.alembic.versions.20210402_5e52ca521f36_feature_auto_activate_bookings.upgrade": ["sqlalchemy.sql.text"], "sqlalchemy.sql.text": [], "src.pcapi.alembic.versions.20210402_5e52ca521f36_feature_auto_activate_bookings.downgrade": ["sqlalchemy.sql.text"], "tests.core.users.test_repository.GetNewlyEligibleUsersTest.test_eligible_user": ["datetime.datetime", "<builtin>.set", "datetime.date"], "tests.core.users.test_repository.GetApplicantOfOffererUnderValidationTest.test_return_user_with_validated_attachment": ["pcapi.core.users.repository.get_users_with_validated_attachment_by_offerer", "<builtin>.len"], "pcapi.core.users.repository.get_users_with_validated_attachment_by_offerer": [], "src.pcapi.scripts.beneficiary.send_mail_after_idcheck_outage._get_eligible_users_created_between": ["dateutil.relativedelta.relativedelta"], "src.pcapi.scripts.beneficiary.send_mail_after_idcheck_outage.send_mail_to_potential_beneficiaries": ["<builtin>.enumerate", "<builtin>.print", "pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user.send_birthday_age_18_email_to_newly_eligible_user", "src.pcapi.scripts.beneficiary.send_mail_after_idcheck_outage._get_eligible_users_created_between"], "pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user.send_birthday_age_18_email_to_newly_eligible_user": [], "tests.routes.pro.validate_offerer_test.Returns202Test.expect_offerer_to_be_validated": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "freezegun.freeze_time", "datetime.datetime", "<builtin>.len"], "tests.routes.pro.validate_offerer_test.Returns202Test.expect_offerer_to_be_validated_even_when_user_offerer_has_already_been_activated": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "<builtin>.len"], "tests.routes.pro.validate_offerer_test.Returns404Test.expect_offerer_not_to_be_validated_with_unknown_token": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_algolia_object_with_required_information": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "datetime.datetime", "pcapi.model_creators.generic_creators.create_venue", "decimal.Decimal", "datetime.timedelta", "pcapi.utils.human_ids.humanize"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_an_author_when_exists": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_a_stage_director_when_exists": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_distinct_should_return_visa_when_exists": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_distinct_should_return_isbn_when_exists": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_distinct_should_return_offer_id_by_default": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.str"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_a_speaker_when_exists": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_a_performer_when_exists": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_the_first_stock_price": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "decimal.Decimal", "pcapi.model_creators.generic_creators.create_venue"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_default_coordinates_when_one_coordinate_is_missing": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_event_beginning_datetimes_as_timestamp_sorted_from_oldest_to_newest_when_event": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_venue", "datetime.timedelta"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_not_return_event_beginning_datetimes_as_timestamp_when_thing": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_event_beginning_times_in_seconds": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "<builtin>.sorted", "pcapi.model_creators.generic_creators.create_venue", "datetime.timedelta"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_default_coordinates_when_offer_is_numeric": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_algolia_object_with_one_tag_when_one_criterion": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_criterion", "datetime.datetime", "pcapi.model_creators.generic_creators.create_venue", "decimal.Decimal", "datetime.timedelta", "pcapi.utils.human_ids.humanize"], "pcapi.model_creators.generic_creators.create_criterion": [], "tests.core.search.test_serialize_algolia.BuildObjectTest.test_should_return_algolia_object_with_two_tags_when_two_criterion": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.generic_creators.create_criterion", "datetime.datetime", "<builtin>.set", "pcapi.model_creators.generic_creators.create_venue", "decimal.Decimal", "datetime.timedelta", "pcapi.utils.human_ids.humanize"], "tests.core.search.test_serialize_algolia.test_serialize_venue": ["pcapi.core.search.backends.algolia.AlgoliaBackend", "<builtin>.float"], "pcapi.core.search.backends.algolia.AlgoliaBackend": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_venues.create_industrial_venues": ["<builtin>.enumerate", "<builtin>.float", "pcapi.core.offers.factories.VirtualVenueFactory", "<builtin>.str", "<builtin>.len", "pcapi.core.offers.factories.BankInformationFactory", "pcapi.core.offers.factories.VenueFactory"], "pcapi.core.offers.factories.VirtualVenueFactory": [], "src.pcapi.core.payments.validation.validate_reimbursement_rule": ["src.pcapi.core.payments.validation._check_reimbursement_rule_dates", "src.pcapi.core.payments.validation._check_reimbursement_rule_conflicts", "src.pcapi.core.payments.validation._check_reimbursement_rule_subcategories"], "src.pcapi.core.payments.validation._check_reimbursement_rule_subcategories": [], "src.pcapi.core.payments.validation._check_reimbursement_rule_dates": ["<builtin>.isinstance"], "src.pcapi.core.payments.validation._check_reimbursement_rule_conflicts": ["sqlalchemy.or_", "<builtin>.str"], "sqlalchemy.or_": [], "tests.domain.user_activation_test.IsImportStatusChangeAllowedTest.test_duplicate_can_be_rejected_or_retried": ["pcapi.domain.user_activation.is_import_status_change_allowed"], "pcapi.domain.user_activation.is_import_status_change_allowed": [], "tests.domain.user_activation_test.IsImportStatusChangeAllowedTest.test_error_cannot_be_changed": ["pcapi.domain.user_activation.is_import_status_change_allowed"], "tests.domain.user_activation_test.IsImportStatusChangeAllowedTest.test_created_cannot_be_changed": ["pcapi.domain.user_activation.is_import_status_change_allowed"], "tests.domain.user_activation_test.IsImportStatusChangeAllowedTest.test_rejected_cannot_be_changed": ["pcapi.domain.user_activation.is_import_status_change_allowed"], "tests.domain.user_activation_test.IsImportStatusChangeAllowedTest.test_retry_cannot_be_changed": ["pcapi.domain.user_activation.is_import_status_change_allowed"], "src.pcapi.notifications.push.transactional_notifications.get_soon_expiring_bookings_with_offers_notification_data": ["pcapi.utils.urls.booking_app_link"], "src.pcapi.admin.custom_views.booking_view._get_exception_message": ["<builtin>.isinstance", "<builtin>.list", "<builtin>.str"], "src.pcapi.admin.custom_views.booking_view.BookingView.search": ["sqlalchemy.orm.joinedload", "flask.helpers.flash"], "src.pcapi.admin.custom_views.booking_view.BookingView.uncancel_and_mark_as_used": ["flask.helpers.url_for", "src.pcapi.admin.custom_views.booking_view._get_exception_message", "flask.redirect", "flask.helpers.flash"], "flask.helpers.url_for": [], "src.pcapi.admin.custom_views.booking_view.BookingView.cancel": ["flask.helpers.url_for", "flask.helpers.flash", "flask.redirect", "src.pcapi.admin.custom_views.booking_view._get_exception_message"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_list_beneficiaries": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_beneficiary_user_creation": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "datetime.timedelta"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_beneficiary_user_creation_for_deposit_v2": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "<builtin>.len"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_the_deposit_version_is_specified": ["pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView", "<builtin>.dict"], "pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView": [], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_form_has_no_deposit_field_for_production": ["<builtin>.hasattr", "requests.auth._basic_auth_str"], "requests.auth._basic_auth_str": [], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_beneficiary_user_creation_is_restricted_in_prod": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "<builtin>.len"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_suspend_beneficiary": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_unsuspend_beneficiary": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_suspend_beneficiary_is_restricted": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_allow_suspension_and_unsuspension": ["pcapi.admin.custom_views.mixins.suspension_mixin._allow_suspension_and_unsuspension"], "pcapi.admin.custom_views.mixins.suspension_mixin._allow_suspension_and_unsuspension": [], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_beneficiary_user_edition_does_not_send_email": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "<builtin>.len"], "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_resend_validation_email_to_beneficiary": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.validation.models.product_test.test_should_return_error_message_when_product_is_digital_and_offline": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.product.validate"], "pcapi.validation.models.product.validate": [], "tests.validation.models.product_test.test_should_not_return_error_message_when_product_is_not_digital": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.product.validate"], "tests.validation.models.product_test.test_should_not_return_error_message_when_product_is_online": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.product.validate"], "src.pcapi.domain.client_exceptions.ClientError.__init__": ["<builtin>.super"], "tests.scripts.payment.user_recredit_test.UserRecreditTest.test_has_celebrated_their_birthday_since_activation": ["pcapi.scripts.payment.user_recredit.has_celebrated_their_birthday_since_activation"], "pcapi.scripts.payment.user_recredit.has_celebrated_their_birthday_since_activation": [], "tests.scripts.payment.user_recredit_test.UserRecreditTest.test_has_been_recredited": ["pcapi.scripts.payment.user_recredit.has_been_recredited", "dateutil.relativedelta.relativedelta"], "pcapi.scripts.payment.user_recredit.has_been_recredited": [], "tests.scripts.payment.user_recredit_test.UserRecreditTest.test_recredit_underage_users": ["freezegun.freeze_time", "<builtin>.len"], "tests.scripts.payment.user_recredit_test.UserRecreditTest.test_recredit_around_the_year": ["freezegun.freeze_time"], "tests.scripts.payment.user_recredit_test.UserRecreditTest.test_recredit_when_account_activated_on_the_birthday": ["freezegun.freeze_time"], "src.pcapi.scripts.batch_update_offer_withdrawal_details_for_offerer.batch_update_offer_withdrawal_details_for_offerer": ["<builtin>.print", "<builtin>.range"], "tests.scripts.user_offerer.delete_user_offerers_from_file_test.test_should_delete_user_offerers_in_csv": ["pcapi.scripts.user_offerer.delete_user_offerer_from_csv._delete_user_offerers_from_rows"], "pcapi.scripts.user_offerer.delete_user_offerer_from_csv._delete_user_offerers_from_rows": [], "tests.routes.adage.v1.refuse_prebookings_test.Returns200Test.test_refuse_educational_booking": ["tests.conftest.TestClient.__init__", "pcapi.core.educational.factories.EducationalRedactorFactory", "<builtin>.float", "tests.conftest.TestClient.post", "<builtin>.int", "pcapi.core.offers.factories.EventStockFactory", "pcapi.core.offers.utils.offer_app_link", "datetime.datetime", "pcapi.utils.date.format_into_utc_date", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token", "<builtin>.len"], "pcapi.core.educational.factories.EducationalRedactorFactory": [], "pcapi.core.bookings.factories.EducationalBookingFactory": [], "tests.conftest.TestClient.with_eac_token": [], "pcapi.utils.date.format_into_utc_date": [], "tests.routes.adage.v1.refuse_prebookings_test.Returns200Test.test_refuse_educational_booking_when_pending": ["datetime.datetime", "pcapi.core.bookings.factories.EducationalBookingFactory"], "tests.routes.adage.v1.refuse_prebookings_test.Returns400Test.test_returns_error_when_not_refusable": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.refuse_prebookings_test.Returns400Test.test_returns_error_when_already_cancelled": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.refuse_prebookings_test.Returns400Test.test_returns_error_when_no_educational_booking_found": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.refuse_prebookings_test.Returns400Test.test_returns_error_when_cancellation_limit_date_is_passed": ["datetime.datetime", "pcapi.core.bookings.factories.EducationalBookingFactory"], "src.pcapi.routes.serialization.dictifier.as_dict": ["pcapi.routes.serialization.serializer.serialize"], "pcapi.routes.serialization.serializer.serialize": [], "src.pcapi.routes.serialization.dictifier._": ["<builtin>.filter", "src.pcapi.routes.serialization.dictifier.as_dict"], "src.pcapi.routes.serialization.dictifier._joins_to_serialize": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.routes.serialization.dictifier._keys_to_serialize": ["src.pcapi.routes.serialization.dictifier._included_properties", "<builtin>.set", "src.pcapi.routes.serialization.dictifier._excluded_keys"], "src.pcapi.routes.serialization.dictifier._included_properties": ["<builtin>.set", "<builtin>.filter"], "src.pcapi.routes.serialization.dictifier._excluded_keys": ["<builtin>.map", "<builtin>.set", "<builtin>.filter"], "<builtin>.map": [], "tests.utils.string_processing_test.test_tokennize_for_search_removes_special_characters": ["pcapi.utils.string_processing.tokenize_for_search"], "pcapi.utils.string_processing.tokenize_for_search": [], "tests.utils.string_processing_test.test_tokenize_for_search_on_url": ["pcapi.utils.string_processing.tokenize_for_search"], "tests.utils.string_processing_test.test_remove_single_letters_for_search": ["pcapi.utils.string_processing.remove_single_letters_for_search"], "pcapi.utils.string_processing.remove_single_letters_for_search": [], "src.pcapi.admin.custom_views.offerer_view.OffererTagFilter.operation": ["flask_admin.babel.lazy_gettext"], "flask_admin.babel.lazy_gettext": [], "src.pcapi.admin.custom_views.offerer_view.OffererView.delete_model": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id", "flask.flash", "pcapi.core.users.external.update_external_pro"], "pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id": [], "flask.flash": [], "pcapi.core.users.external.update_external_pro": [], "src.pcapi.admin.custom_views.offerer_view.OffererView.update_model": ["<builtin>.super", "pcapi.core.users.external.update_external_pro"], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_should_not_return_payment_info_with_error_status": ["pcapi.repository.reimbursement_queries.find_all_offerer_payments", "<builtin>.len"], "pcapi.repository.reimbursement_queries.find_all_offerer_payments": [], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_should_return_one_payment_info_with_sent_status": ["<builtin>.set", "pcapi.repository.reimbursement_queries.find_all_offerer_payments", "decimal.Decimal", "<builtin>.len"], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_should_return_one_payment_info_with_sent_status_when_offer_educational": ["pcapi.repository.reimbursement_queries.find_all_offerer_payments", "decimal.Decimal", "<builtin>.len"], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_should_return_last_matching_status_based_on_date_for_each_payment": ["pcapi.repository.reimbursement_queries.find_all_offerer_payments", "decimal.Decimal", "<builtin>.len"], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_should_return_payments_from_multiple_venues": ["pcapi.core.offers.factories.OffererFactory", "pcapi.repository.reimbursement_queries.find_all_offerer_payments", "<builtin>.len"], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_should_return_payments_filtered_by_venue": ["pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.repository.reimbursement_queries.find_all_offerer_payments", "<builtin>.len"], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_should_return_payments_filtered_by_payment_date": ["pcapi.repository.reimbursement_queries.find_all_offerer_payments", "pcapi.core.offers.factories.OffererFactory", "<builtin>.len", "datetime.timedelta", "pcapi.core.offers.factories.VenueFactory"], "tests.repository.reimbursement_queries_test.FindAllOffererPaymentsTest.test_with_new_models": ["pcapi.repository.reimbursement_queries.find_all_offerer_payments", "<builtin>.getattr", "<builtin>.set", "decimal.Decimal", "<map>.keys", "<map>.items"], "<map>.keys": [], "src.pcapi.validation.routes.offers.check_offer_name_length_is_valid": ["pcapi.models.api_errors.ApiErrors", "<builtin>.len"], "src.pcapi.validation.routes.offers.check_offer_isbn_is_valid": ["pcapi.models.api_errors.ApiErrors", "<builtin>.len"], "tests.core.users.test_models.UserTest.DepositTest.test_return_expired_deposit_if_only_expired_deposits_exists": ["datetime.timedelta", "dateutil.relativedelta.relativedelta"], "tests.core.users.test_models.UserTest.DepositTest.test_return_last_expired_deposit_if_only_expired_deposits_exists": ["freezegun.freeze_time", "dateutil.relativedelta.relativedelta"], "tests.core.users.test_models.UserTest.UserRoleTest.test_add_admin_role_only_once": ["<builtin>.len"], "tests.core.users.test_models.UserTest.UserRoleTest.test_add_beneficiary_role_only_once": ["<builtin>.len"], "tests.core.users.test_models.UserTest.UserRoleTest.test_add_pro_role_only_once": ["<builtin>.len"], "tests.core.users.test_models.UserTest.UserAgeTest.test_get_birthday_with_leap_year": ["freezegun.freeze_time"], "tests.core.users.test_models.SubscriptionStateTest.test_trigger_load_event": ["<builtin>.hasattr"], "tests.routes.native.v1.subscription_test.NextStepTest.test_next_subscription_test": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.NextStepTest.test_next_subscription_test_profile_completion": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.NextStepTest.test_next_subscription_maintenance_page_test": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.NextStepTest.test_next_subscription_test_ubble": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.NextStepTest.test_next_subscription_full_ubble_turned_18": ["freezegun.freeze_time", "dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.NextStepTest.test_ubble_subcription_limited": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.NextStepTest.test_ubble_restart_workflow": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.UpdateProfileTest.test_fulfill_profile": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.subscription_test.UpdateProfileTest.test_fulfill_profile_invalid_character": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.UpdateProfileTest.test_fulfill_profile_empty_field": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.UpdateProfileTest.test_fulfill_profile_missing_mandatory_field": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.UpdateProfileTest.test_fulfill_profile_valid_character": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.subscription_test.UpdateProfileTest.test_fulfill_profile_activation": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.subscription_test.HonorStatementTest.test_create_honor_statement_fraud_check": ["dateutil.relativedelta.relativedelta"], "tests.workers.update_all_venue_offers_withdrawal_details_job_test.test_update_all_venue_offers_withdrawal_details_job_test": ["pcapi.workers.update_all_venue_offers_withdrawal_details_job.update_all_venue_offers_withdrawal_details_job"], "pcapi.workers.update_all_venue_offers_withdrawal_details_job.update_all_venue_offers_withdrawal_details_job": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.SendSendiblueBeneficiaryBookingCancellationEmailTest.test_should_called_send_email_with_valid_data": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.send_booking_cancellation_by_beneficiary_email"], "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.send_booking_cancellation_by_beneficiary_email": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.MakeBeneficiaryBookingCancellationEmailSendinblueDataTest.test_should_return_thing_data_when_booking_is_a_thing": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.get_booking_cancellation_by_beneficiary_email_data", "datetime.timedelta", "pcapi.core.offers.factories.ThingStockFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.get_booking_cancellation_by_beneficiary_email_data": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.MakeBeneficiaryBookingCancellationEmailSendinblueDataTest.test_should_return_event_data_when_booking_is_an_event": ["pcapi.core.offers.factories.EventStockFactory", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.get_booking_cancellation_by_beneficiary_email_data", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.MakeBeneficiaryBookingCancellationEmailSendinblueDataTest.test_should_return_is_free_offer_when_offer_price_equals_to_zero": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.get_booking_cancellation_by_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_test.MakeBeneficiaryBookingCancellationEmailSendinblueDataTest.test_should_return_the_price_multiplied_by_quantity_when_it_is_a_duo_offer": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.get_booking_cancellation_by_beneficiary_email_data"], "src.pcapi.routes.native.utils.convert_to_cent": ["<builtin>.int"], "src.pcapi.routes.native.utils.check_client_version": ["pcapi.models.api_errors.ForbiddenError"], "src.pcapi.core.finance.validation.check_business_unit_siret": ["<builtin>.len"], "src.pcapi.utils.pylint.MarkupSafeChecker.visit_call": ["<builtin>.getattr", "<builtin>.next", "<builtin>.isinstance"], "<builtin>.next": [], "src.pcapi.alembic.versions.20210518_97553c40978d_drop_if_exists_user_canbookfreeoffers.upgrade": ["sqlalchemy.sql.text"], "src.pcapi.scripts.offerer.commands.delete_offerer": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "src.pcapi.scripts.offerer.commands.delete_venue": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id": [], "src.pcapi.scripts.offerer.commands.generate_and_save_api_key": ["pcapi.scripts.offerer.generate_and_save_api_key_for_offerer.generate_and_save_api_key_for_offerer"], "pcapi.scripts.offerer.generate_and_save_api_key_for_offerer.generate_and_save_api_key_for_offerer": [], "tests.routes.pro.get_stocks_test.Returns200Test.test_returns_an_event_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_stocks_test.Returns200Test.test_returns_an_editable_educational_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_stocks_test.Returns200Test.test_returns_a_non_editable_educational_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_stocks_test.Returns200Test.test_returns_a_thing_stock_without_activation_codes": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_stocks_test.Returns200Test.test_returns_a_thing_stock_with_activation_codes": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries"], "tests.routes.pro.get_stocks_test.Returns200Test.test_does_not_return_soft_deleted_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_stocks_test.Returns200Test.test_query_performance": ["tests.conftest.TestClient.__init__", "pcapi.core.testing.assert_num_queries", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_stocks_test.Returns403Test.test_returns_an_event_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_stocks_test.Returns404Test.test_no_offerer_found_for_offer_id": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.core.educational.adage_backends.notify_prebooking": ["pcapi.utils.module_loading.import_string"], "src.pcapi.core.educational.adage_backends.notify_offer_or_stock_edition": ["pcapi.utils.module_loading.import_string"], "src.pcapi.core.educational.adage_backends.get_adage_offerer": ["pcapi.utils.module_loading.import_string"], "src.pcapi.core.educational.adage_backends.notify_booking_cancellation_by_offerer": ["pcapi.utils.module_loading.import_string"], "tests.domain.demarches_simplifiees_test.GetOffererBankInformation_applicationDetailsByApplicationIdTest.test_retrieve_and_format_all_fields": ["<builtin>.isinstance", "datetime.datetime", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response", "pcapi.domain.demarches_simplifiees.get_offerer_bank_information_application_details_by_application_id"], "pcapi.domain.demarches_simplifiees.get_offerer_bank_information_application_details_by_application_id": [], "tests.domain.demarches_simplifiees_test.GetOffererBankInformation_applicationDetailsByApplicationIdTest.test_format_bic_and_iban": ["datetime.datetime", "tests.connector_creators.demarches_simplifiees_creators.offerer_demarche_simplifiee_application_detail_response", "pcapi.domain.demarches_simplifiees.get_offerer_bank_information_application_details_by_application_id", "unittest.mock.call"], "tests.domain.demarches_simplifiees_test.GetVenueBankInformation_applicationDetailsByApplicationIdTest.test_retrieve_and_format_all_fields_when_with_siret": ["<builtin>.isinstance", "datetime.datetime", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret", "pcapi.domain.demarches_simplifiees.get_venue_bank_information_application_details_by_application_id"], "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret": [], "pcapi.domain.demarches_simplifiees.get_venue_bank_information_application_details_by_application_id": [], "tests.domain.demarches_simplifiees_test.GetVenueBankInformation_applicationDetailsByApplicationIdTest.test_retrieve_and_format_all_fields_v2": ["<builtin>.isinstance", "datetime.datetime", "pcapi.domain.demarches_simplifiees.get_venue_bank_information_application_details_by_application_id"], "tests.domain.demarches_simplifiees_test.GetVenueBankInformation_applicationDetailsByApplicationIdTest.test_retrieve_and_format_all_fields_when_without_siret": ["pcapi.domain.demarches_simplifiees.get_venue_bank_information_application_details_by_application_id", "datetime.datetime", "<builtin>.isinstance", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret": [], "tests.domain.demarches_simplifiees_test.GetVenueBankInformation_applicationDetailsByApplicationIdTest.test_format_bic_and_iban_when_with_siret": ["datetime.datetime", "unittest.mock.call", "pcapi.domain.demarches_simplifiees.get_offerer_bank_information_application_details_by_application_id", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.domain.demarches_simplifiees_test.GetVenueBankInformation_applicationDetailsByApplicationIdTest.test_format_bic_and_iban_when_without_siret": ["datetime.datetime", "unittest.mock.call", "pcapi.domain.demarches_simplifiees.get_offerer_bank_information_application_details_by_application_id", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.domain.demarches_simplifiees_test.GetStatusFromDemarchesSimplifieesApplicationStateTest.test_correctly_infer_status_from_state": ["pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state"], "pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state": [], "tests.domain.demarches_simplifiees_test.GetStatusFromDemarchesSimplifieesApplicationStateTest.test_raise_error_in_unknown_state": ["pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state"], "tests.domain.demarches_simplifiees_test.ParseRawBicDataTest.test_parsing_works": ["pcapi.domain.demarches_simplifiees.parse_raw_bic_data"], "pcapi.domain.demarches_simplifiees.parse_raw_bic_data": [], "src.pcapi.notifications.sms.backends.testing.TestingBackend.send_transactional_sms": ["<builtin>.super"], "tests.routes.pro.put_venue_provider_test.Returns200Test.test_allocine_venue_provider_is_successfully_updated": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.put", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.conftest.TestClient.put": ["tests.conftest.TestClient._print_spec"], "tests.routes.pro.put_venue_provider_test.Returns400Test.test_provider_is_not_allocine": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.put", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.put_venue_provider_test.Returns401Test.test_user_is_not_logged_in": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.put"], "tests.routes.pro.put_venue_provider_test.Returns403Test.test_user_has_right_on_venue": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.put", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.scripts.find_not_modifiable_venues_test.GetNonEditableVenuesTest.test_should_return_offerer_has_no_name": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.scripts.find_not_modifiable_venues._get_non_editable_venues", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "pcapi.scripts.find_not_modifiable_venues._get_non_editable_venues": [], "tests.scripts.find_not_modifiable_venues_test.GetNonEditableVenuesTest.test_should_return_venue_when_siret_does_not_match_offerer_siren": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.scripts.find_not_modifiable_venues._get_non_editable_venues", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "tests.scripts.find_not_modifiable_venues_test.GetNonEditableVenuesTest.test_should_return_venue_when_offerer_siren_is_none": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.scripts.find_not_modifiable_venues._get_non_editable_venues", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "tests.scripts.find_not_modifiable_venues_test.GetNonEditableVenuesTest.test_should_return_venue_when_siret_is_none_and_offerer_siren_is_none": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.scripts.find_not_modifiable_venues._get_non_editable_venues", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "tests.scripts.find_not_modifiable_venues_test.GenerateNonEditableVenuesCsvTest.test_should_generate_non_editable_venues_csv_with_correct_header_and_correct_informations": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.utils.human_ids.humanize", "pcapi.model_creators.generic_creators.create_venue", "pcapi.scripts.find_not_modifiable_venues.generate_non_editable_venues_csv"], "pcapi.scripts.find_not_modifiable_venues.generate_non_editable_venues_csv": [], "src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage.from_model": ["<builtin>.any"], "src.pcapi.routes.native.v1.serialization.account.ChangeEmailTokenContent.validate_emails": ["pcapi.core.users.utils.sanitize_email", "<builtin>.ValueError"], "src.pcapi.routes.native.v1.serialization.account.ChangeEmailTokenContent.from_token": ["pcapi.core.users.utils.decode_jwt_token", "<builtin>.set", "jwt.InvalidTokenError"], "pcapi.core.users.utils.decode_jwt_token": [], "jwt.InvalidTokenError": [], "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse._show_eligible_card": ["dateutil.relativedelta.relativedelta"], "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse._get_booked_offers": ["sqlalchemy.orm.joinedload"], "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse._get_subscription_message": ["src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage.from_model", "src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage.beneficiary_maintenance_message"], "src.pcapi.routes.native.v1.serialization.account.SubscriptionMessage.beneficiary_maintenance_message": [], "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse.from_orm": ["src.pcapi.routes.native.v1.serialization.account.UserProfileResponse._get_booked_offers", "<builtin>.super", "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse._get_subscription_message", "src.pcapi.routes.native.v1.serialization.account.UserProfileResponse._show_eligible_card"], "src.pcapi.routes.native.v1.serialization.account.UserProfilingFraudRequest.session_id_alphanumerics": ["<builtin>.ValueError"], "src.pcapi.routes.native.v1.serialization.account.UserProfilingFraudRequest.agent_type_validation": ["<builtin>.ValueError"], "tests.models.user_offerer_test.test_save_user_offerer_raise_api_error_when_not_unique": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "src.pcapi.models.payment.Payment.currentStatus": ["<builtin>.sorted"], "src.pcapi.models.payment.Payment.lastProcessedDate": ["<builtin>.sorted", "<builtin>.len"], "src.pcapi.models.payment.Payment.setStatus": ["pcapi.models.payment_status.PaymentStatus"], "pcapi.models.payment_status.PaymentStatus": [], "src.pcapi.local_providers.chunk_manager.get_existing_pc_obj": ["src.pcapi.local_providers.chunk_manager.get_object_from_current_chunks", "pcapi.repository.providable_queries.get_existing_object"], "src.pcapi.local_providers.chunk_manager.get_object_from_current_chunks": ["<builtin>.isinstance"], "pcapi.repository.providable_queries.get_existing_object": [], "src.pcapi.local_providers.chunk_manager.save_chunks": ["pcapi.repository.providable_queries.update_chunk", "pcapi.repository.providable_queries.insert_chunk", "<builtin>.len"], "pcapi.repository.providable_queries.insert_chunk": [], "pcapi.repository.providable_queries.update_chunk": [], "src.pcapi.routes.pro.venue_providers.list_venue_providers": ["src.pcapi.routes.pro.venue_providers._allocine_venue_provider_price", "pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderResponse"], "src.pcapi.routes.pro.venue_providers._allocine_venue_provider_price": [], "pcapi.routes.serialization.venue_provider_serialize.ListVenueProviderResponse": [], "src.pcapi.routes.pro.venue_providers.create_venue_provider": ["src.pcapi.routes.pro.venue_providers._allocine_venue_provider_price", "pcapi.core.providers.models.VenueProviderCreationPayload", "pcapi.serialization.utils.dehumanize_id", "pcapi.models.api_errors.ApiErrors"], "pcapi.serialization.utils.dehumanize_id": [], "src.pcapi.routes.pro.venue_providers.update_venue_provider": ["src.pcapi.routes.pro.venue_providers._allocine_venue_provider_price", "pcapi.validation.routes.users_authorizations.check_user_can_alter_venue", "pcapi.serialization.utils.dehumanize_id", "pcapi.core.providers.api.update_allocine_venue_provider", "pcapi.models.api_errors.ApiErrors", "pcapi.core.providers.repository.get_venue_provider_by_venue_and_provider_ids"], "pcapi.validation.routes.users_authorizations.check_user_can_alter_venue": [], "pcapi.core.providers.repository.get_venue_provider_by_venue_and_provider_ids": [], "pcapi.core.providers.api.update_allocine_venue_provider": [], "src.pcapi.admin.custom_views.user_email_history_view.UserEmailHistoryView.index": ["<builtin>.super"], "src.pcapi.admin.custom_views.user_email_history_view.UserEmailHistoryView.validate_user_email": ["flask.url_for", "flask.redirect", "flask.helpers.flash"], "src.pcapi.core.fraud.dms.api.get_fraud_check": ["<builtin>.str"], "src.pcapi.core.fraud.dms.api.create_fraud_check": ["<builtin>.str"], "src.pcapi.core.fraud.dms.api.get_or_create_fraud_check": ["src.pcapi.core.fraud.dms.api.get_fraud_check", "src.pcapi.core.fraud.dms.api.create_fraud_check"], "src.pcapi.core.fraud.dms.api.on_dms_parsing_error": ["<builtin>.list", "src.pcapi.core.fraud.dms.api.get_or_create_fraud_check"], "src.pcapi.core.fraud.dms.api.on_dms_eligibility_error": ["pcapi.connectors.dms.api.DMSGraphQLClient"], "pcapi.connectors.dms.api.DMSGraphQLClient": [], "src.pcapi.domain.booking_recap.booking_recap.BookingRecap.__init__": ["src.pcapi.domain.booking_recap.booking_recap.BookingRecap.build_status_history"], "src.pcapi.domain.booking_recap.booking_recap.BookingRecap.build_status_history": ["pcapi.domain.booking_recap.booking_recap_history.BookingRecapHistory", "pcapi.domain.booking_recap.booking_recap_history.BookingRecapCancelledHistory", "pcapi.domain.booking_recap.booking_recap_history.BookingRecapValidatedHistory", "pcapi.domain.booking_recap.booking_recap_history.BookingRecapPendingHistory", "pcapi.domain.booking_recap.booking_recap_history.BookingRecapReimbursedHistory", "pcapi.domain.booking_recap.booking_recap_history.BookingRecapConfirmedHistory"], "pcapi.domain.booking_recap.booking_recap_history.BookingRecapPendingHistory": [], "pcapi.domain.booking_recap.booking_recap_history.BookingRecapReimbursedHistory": [], "pcapi.domain.booking_recap.booking_recap_history.BookingRecapCancelledHistory": [], "pcapi.domain.booking_recap.booking_recap_history.BookingRecapValidatedHistory": [], "pcapi.domain.booking_recap.booking_recap_history.BookingRecapConfirmedHistory": [], "pcapi.domain.booking_recap.booking_recap_history.BookingRecapHistory": [], "src.pcapi.domain.booking_recap.booking_recap.BookingRecap.<lambda1>": ["src.pcapi.domain.booking_recap.booking_recap.BookingRecap._get_booking_token"], "src.pcapi.domain.booking_recap.booking_recap.BookingRecap._get_booking_token": [], "src.pcapi.domain.booking_recap.booking_recap.BookingRecap.<lambda2>": ["src.pcapi.domain.booking_recap.booking_recap.BookingRecap._set_booking_token"], "src.pcapi.domain.booking_recap.booking_recap.BookingRecap._set_booking_token": [], "src.pcapi.tasks.sendinblue_tasks.update_contact_attributes_task": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.tasks.sendinblue_tasks.send_transactional_email_primary_task": ["pcapi.models.api_errors.ApiErrors", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "src.pcapi.tasks.sendinblue_tasks.send_transactional_email_secondary_task": ["pcapi.models.api_errors.ApiErrors", "pcapi.core.mails.transactional.send_transactional_email.send_transactional_email"], "src.pcapi.tasks.sendinblue_tasks.update_pro_attributes_task": ["pcapi.core.users.external.sendinblue.update_contact_attributes", "pcapi.core.users.external.get_pro_attributes"], "pcapi.core.users.external.sendinblue.update_contact_attributes": [], "tests.scripts.catching_up_dms_beneficiaries_addresses_test.CatchingUpDMSBeneficiariesAddressesTest.test_catching_up_dms_beneficiaries_addresses": ["pcapi.scripts.catching_up_dms_beneficiaries_addresses._process_file"], "pcapi.scripts.catching_up_dms_beneficiaries_addresses._process_file": [], "src.pcapi.core.mails.transactional.pro.email_validation.get_email_validation_to_pro_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_pro_email": ["src.pcapi.core.mails.transactional.pro.email_validation.get_email_validation_to_pro_email_data"], "src.pcapi.core.mails.transactional.pro.email_validation.get_email_validation_to_admin_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_admin_email": ["src.pcapi.core.mails.transactional.pro.email_validation.get_email_validation_to_admin_email_data"], "src.pcapi.sandboxes.scripts.sandbox_beneficiaries.save_sandbox": ["pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.save_beneficiaries_sandbox"], "pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.save_beneficiaries_sandbox": [], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.GetReferentVenueTest.setup_method": ["pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository", "pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.GetReferentVenueTest.test_raises_an_error_if_no_venue_found_by_siret": ["pcapi.domain.demarches_simplifiees.ApplicationDetail"], "pcapi.domain.demarches_simplifiees.ApplicationDetail": [], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.GetReferentVenueTest.test_raises_an_error_if_no_venue_found_by_name": ["pcapi.core.offerers.factories.OffererFactory", "pcapi.domain.demarches_simplifiees.ApplicationDetail"], "pcapi.core.offerers.factories.OffererFactory": [], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.GetReferentVenueTest.test_raises_an_error_if_more_than_one_venue_found": ["pcapi.core.offerers.factories.OffererFactory", "pcapi.domain.demarches_simplifiees.ApplicationDetail"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.setup_method": ["pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository", "pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_dms_state_is_refused_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_dms_state_is_without_continuation_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_dms_state_is_closed_should_create_the_correct_bank_information": ["datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_dms_state_is_received_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_siret_is_not_valid_should_not_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_dms_state_is_initiated_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_no_offerer_is_found_and_status_is_closed_should_raise_and_not_create_bank_information": ["tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_no_offerer_is_found_but_status_is_not_closed_should_not_create_bank_information_and_not_raise": ["tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_no_venue_is_found_and_status_is_closed_should_raise_and_not_create_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWithSiretTest.test_when_no_venue_is_found_but_status_is_not_closed_should_not_create_bank_information_and_not_raise": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.setup_method": ["pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository", "pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_dms_state_is_refused_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_dms_state_is_without_continuation_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_dms_state_is_closed_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_dms_state_is_received_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_dms_state_is_initiated_should_create_the_correct_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_no_offerer_is_found_but_status_is_not_closed_should_not_raise": ["tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_no_offerer_is_found_and_state_is_closed_should_raise_and_not_create_bank_information": ["tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_no_venue_without_siret_is_found_and_state_is_closed_should_raise_and_not_create_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.SaveBankInformationTest.VenueWitoutSiretTest.test_when_no_venue_is_found_but_status_is_not_closed_should_not_raise": ["pcapi.model_creators.generic_creators.create_offerer", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_without_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByApplicationIdTest.setup_method": ["pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository", "pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByApplicationIdTest.test_when_rib_and_offerer_change_everything_should_be_updated": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByApplicationIdTest.test_when_status_change_rib_should_be_correctly_updated": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByApplicationIdTest.test_when_overriding_another_bank_information_should_raise": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest.setup_method": ["pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations", "pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository", "pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest.test_when_receive_new_closed_application_should_override_previous_one": ["datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest.test_when_receive_new_application_with_draft_state_should_update_previously_rejected_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest.test_when_receive_new_application_with_lower_status_should_reject": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest.test_when_receive_older_application_should_reject": ["datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "tests.use_cases.save_venue_bank_informations_test.SaveVenueBankInformationsTest.UpdateBankInformationByVenueIdTest.test_when_state_is_unknown": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "tests.connector_creators.demarches_simplifiees_creators.venue_demarche_simplifiee_application_detail_response_with_siret"], "src.pcapi.sandboxes.scripts.save_sandbox.save_sandbox": ["<builtin>.getattr", "pcapi.repository.clean_database.clean_all_database"], "pcapi.repository.clean_database.clean_all_database": [], "src.pcapi.utils.custom_logic.sanitize_str": ["<builtin>.isinstance", "pcapi.utils.clean_accents.clean_accents"], "pcapi.utils.clean_accents.clean_accents": [], "src.pcapi.utils.custom_logic.sanitize_list": ["<builtin>.map", "<builtin>.list"], "src.pcapi.utils.custom_logic.soft_equals": ["<builtin>.isinstance", "<builtin>.bool", "src.pcapi.utils.custom_logic.sanitize_str", "<builtin>.str"], "src.pcapi.utils.custom_logic.less": ["<builtin>.float", "<builtin>.type", "src.pcapi.utils.custom_logic.less", "<builtin>.set"], "<builtin>.type": [], "src.pcapi.utils.custom_logic.less_or_equal": ["src.pcapi.utils.custom_logic.soft_equals", "src.pcapi.utils.custom_logic.less_or_equal", "src.pcapi.utils.custom_logic.less"], "src.pcapi.utils.custom_logic.contains": ["<builtin>.isinstance", "src.pcapi.utils.custom_logic.sanitize_str", "<builtin>.dir", "<builtin>.TypeError", "<builtin>.any"], "<builtin>.dir": [], "src.pcapi.utils.custom_logic.contains_exact": ["src.pcapi.utils.custom_logic.sanitize_str", "<builtin>.dir", "src.pcapi.utils.custom_logic.sanitize_list", "<builtin>.any"], "src.pcapi.utils.custom_logic.<lambda1>": ["src.pcapi.utils.custom_logic.soft_equals"], "src.pcapi.utils.custom_logic.<lambda2>": ["src.pcapi.utils.custom_logic.less"], "src.pcapi.utils.custom_logic.<lambda3>": ["src.pcapi.utils.custom_logic.soft_equals", "src.pcapi.utils.custom_logic.less"], "src.pcapi.utils.custom_logic.<lambda4>": ["src.pcapi.utils.custom_logic.sanitize_str", "<builtin>.dir", "src.pcapi.utils.custom_logic.sanitize_list"], "src.pcapi.utils.custom_logic.<lambda5>": ["src.pcapi.utils.custom_logic.sanitize_str", "<builtin>.dir", "src.pcapi.utils.custom_logic.sanitize_list"], "tests.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro_test.SendEventOfferPosponedConfirmationToProEmailTest.test_sends_email_to_pro_user": ["dataclasses.asdict", "datetime.datetime", "<builtin>.len", "pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.send_event_offer_postponement_confirmation_email_to_pro"], "pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.send_event_offer_postponement_confirmation_email_to_pro": [], "tests.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro_test.SendEventOfferPosponedConfirmationToProEmailTest.test_get_email_metadata": ["pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.get_event_offer_postponed_confirmation_to_pro_email_data", "datetime.datetime"], "pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.get_event_offer_postponed_confirmation_to_pro_email_data": [], "src.pcapi.utils.string_processing.remove_single_letters_for_search": ["<builtin>.list", "<builtin>.filter"], "tests.emails.offerer_validation_test.test_write_object_validation_email": ["bs4.BeautifulSoup", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.utils.mailing.make_validation_email_object"], "bs4.BeautifulSoup": [], "tests.emails.offerer_validation_test.test_validation_email_object_does_not_include_validation_link_if_user_offerer_is_already_validated": ["bs4.BeautifulSoup", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.utils.mailing.make_validation_email_object"], "tests.emails.offerer_validation_test.test_validation_email_object_does_not_include_validation_link_if_offerer_is_already_validated": ["bs4.BeautifulSoup", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.utils.mailing.make_validation_email_object"], "tests.emails.offerer_validation_test.test_validation_email_should_neither_return_clearTextPassword_nor_totallysafepsswd": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.utils.mailing.make_validation_email_object", "<builtin>.str", "bs4.BeautifulSoup"], "tests.validation.models.stock_test.test_should_return_error_message_when_stock_is_negative": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.stock.validate"], "pcapi.validation.models.stock.validate": [], "tests.validation.models.stock_test.test_should_not_return_error_message_when_stock_is_positive": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.stock.validate"], "tests.validation.models.stock_test.test_should_not_return_error_message_when_stock_is_unlimited": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.stock.validate"], "tests.validation.models.stock_test.test_should_not_return_error_message_when_datetime_is_valid": ["pcapi.model_creators.generic_creators.create_stock", "datetime.datetime", "pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.stock.validate"], "src.pcapi.routes.native.v1.offers.get_offer": ["sqlalchemy.orm.joinedload"], "src.pcapi.routes.native.v1.offers.report_offer": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.native.v1.offers.send_offer_app_link": ["pcapi.core.mails.transactional.users.offer_link_to_ios_user.send_offer_link_to_ios_user_email", "sqlalchemy.orm.joinedload"], "pcapi.core.mails.transactional.users.offer_link_to_ios_user.send_offer_link_to_ios_user_email": [], "src.pcapi.routes.native.v1.offerers.get_venue": ["flask.abort"], "flask.abort": [], "tests.scripts.booking.notify_soon_to_be_expired_bookings_test.NotifyUsersOfSoonToBeExpiredBookingsTest.should_call_email_service_for_individual_bookings_which_will_expire_in_7_days": ["datetime.timedelta", "pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_users_of_soon_to_be_expired_individual_bookings", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.offers.factories.ProductFactory"], "pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_users_of_soon_to_be_expired_individual_bookings": [], "tests.scripts.booking.notify_soon_to_be_expired_bookings_test.NotifyUsersOfSoonToBeExpiredBookingsTest.should_not_call_email_service_for_educational_bookings_which_will_expire_in_7_days": ["datetime.timedelta", "pcapi.core.bookings.factories.EducationalBookingFactory", "pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_users_of_soon_to_be_expired_individual_bookings", "pcapi.core.offers.factories.ProductFactory"], "src.pcapi.workers.user_emails_job.send_booking_cancellation_emails_to_user_and_offerer_job": ["pcapi.core.mails.transactional.bookings.booking_cancellation.send_booking_cancellation_emails_to_user_and_offerer"], "pcapi.core.mails.transactional.bookings.booking_cancellation.send_booking_cancellation_emails_to_user_and_offerer": [], "src.pcapi.routes.serialization.finance_serialize.BusinessUnitResponseModel.from_orm": ["<builtin>.super"], "src.pcapi.routes.serialization.finance_serialize.InvoiceResponseModel.from_orm": ["<builtin>.super"], "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse._get_cancellation_limit_datetime": ["pcapi.core.bookings.api.compute_cancellation_limit_date"], "pcapi.core.bookings.api.compute_cancellation_limit_date": [], "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse.from_orm": ["src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse._get_non_scrappable_activation_code", "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse._get_cancellation_limit_datetime", "<builtin>.super"], "src.pcapi.routes.native.v1.serialization.offers.OfferStockResponse._get_non_scrappable_activation_code": [], "src.pcapi.routes.native.v1.serialization.offers.OfferVenueResponse.from_orm": ["<builtin>.super"], "src.pcapi.routes.native.v1.serialization.offers.get_id_converter.convert_id_into_label": ["<builtin>.int"], "src.pcapi.routes.native.v1.serialization.offers.OfferResponse.from_orm": ["<builtin>.super", "pcapi.core.offers.api.get_expense_domains"], "pcapi.core.offers.api.get_expense_domains": [], "src.pcapi.routes.native.v1.serialization.offers.OfferReportRequest.custom_reason_must_not_be_too_long": ["<builtin>.ValueError", "<builtin>.len"], "src.pcapi.routes.native.v1.serialization.offers.OfferReportRequest.reason_is_valid_enum_value": ["<builtin>.ValueError"], "src.pcapi.install_database_extensions.install_database_extensions": ["src.pcapi.install_database_extensions._create_index_btree_gist_extension", "src.pcapi.install_database_extensions._create_text_search_configuration_if_not_exists", "src.pcapi.install_database_extensions._create_postgis_extension", "src.pcapi.install_database_extensions._create_pgcrypto_extension"], "src.pcapi.install_database_extensions._create_text_search_configuration_if_not_exists": [], "src.pcapi.install_database_extensions._create_index_btree_gist_extension": [], "src.pcapi.install_database_extensions._create_postgis_extension": [], "src.pcapi.install_database_extensions._create_pgcrypto_extension": [], "src.pcapi.scripts.user_offerer.delete_user_offerer_from_csv.run": ["src.pcapi.scripts.user_offerer.delete_user_offerer_from_csv._delete_user_offerers_from_rows", "<builtin>.open"], "src.pcapi.scripts.user_offerer.delete_user_offerer_from_csv._delete_user_offerers_from_rows": ["append", "src.pcapi.scripts.user_offerer.delete_user_offerer_from_csv._is_blank_row", "<builtin>.int", "<builtin>.dict", "<builtin>.iter", "<builtin>.zip", "<builtin>.len", "<builtin>.next", "pcapi.repository.user_offerer_queries.find_one_or_none_by_user_id_and_offerer_id"], "<builtin>.iter": [], "src.pcapi.scripts.user_offerer.delete_user_offerer_from_csv._is_blank_row": [], "<builtin>.zip": [], "pcapi.repository.user_offerer_queries.find_one_or_none_by_user_id_and_offerer_id": [], "src.pcapi.alembic.versions.20210519_e63d336e9da8_populate_provider_prices_in_cents.upgrade": ["sqlalchemy.sql.text"], "tests.routes.adage.v1.confirm_prebooking_test.Returns200Test.test_confirm_prebooking": ["tests.conftest.TestClient.__init__", "pcapi.core.educational.factories.EducationalRedactorFactory", "<builtin>.float", "tests.conftest.TestClient.post", "<builtin>.int", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.core.offers.utils.offer_app_link", "datetime.datetime", "pcapi.utils.date.format_into_utc_date", "pcapi.core.bookings.factories.EducationalBookingFactory", "pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal", "tests.conftest.TestClient.with_eac_token"], "pcapi.core.educational.factories.EducationalInstitutionFactory": [], "pcapi.core.educational.factories.EducationalYearFactory": [], "pcapi.core.educational.models.EducationalDeposit": [], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest.test_no_educational_booking": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest.test_no_deposit": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "datetime.datetime", "pcapi.core.bookings.factories.EducationalBookingFactory", "decimal.Decimal", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest.test_insufficient_fund": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "datetime.datetime", "pcapi.core.bookings.factories.EducationalBookingFactory", "pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest.test_insufficient_temporary_fund": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "datetime.datetime", "pcapi.core.bookings.factories.EducationalBookingFactory", "pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest.test_educational_booking_is_refused": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest.test_educational_booking_is_cancelled": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.confirm_prebooking_test.ReturnsErrorTest.test_confirmation_limit_date_has_passed": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "datetime.datetime", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token"], "src.pcapi.utils.human_ids.dehumanize": ["src.pcapi.utils.human_ids.int_from_bytes", "<builtin>.len", "base64.b32decode"], "base64.b32decode": [], "src.pcapi.utils.human_ids.int_from_bytes": [], "src.pcapi.utils.human_ids.humanize": ["src.pcapi.utils.human_ids.int_to_bytes", "base64.b32encode"], "src.pcapi.utils.human_ids.int_to_bytes": [], "base64.b32encode": [], "src.pcapi.utils.human_ids.dehumanize_ids_list": ["<builtin>.map", "<builtin>.list"], "src.pcapi.utils.human_ids.command_humanize": ["<builtin>.print", "src.pcapi.utils.human_ids.humanize"], "src.pcapi.utils.human_ids.command_dehumanize": ["<builtin>.print", "src.pcapi.utils.human_ids.dehumanize"], "tests.routes.pro.patch_booking_use_by_token_test.Returns204Test.WithApiKeyAuthTest.test_when_api_key_is_provided_and_rights_and_regular_offer": ["pcapi.core.offerers.factories.ApiKeyFactory"], "pcapi.core.offerers.factories.ApiKeyFactory": [], "tests.routes.pro.patch_booking_use_by_token_test.Returns403Test.WithApiKeyAuthTest.test_when_api_key_given_not_related_to_booking_offerer": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.routes.pro.patch_booking_use_by_token_test.Returns410Test.test_when_api_key_is_provided_and_booking_has_been_cancelled_already": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.admin.custom_views.criteria_view_test.CriteriaViewTest.test_delete_criterion": ["<builtin>.dict", "<builtin>.len"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.__init__": ["<builtin>.super"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.enqueue_venue_ids": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend._enqueue_venue_ids"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend._enqueue_venue_ids": [], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.enqueue_venue_ids_in_error": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend._enqueue_venue_ids"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.enqueue_venue_ids_for_offers": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend._enqueue_venue_ids_legacy_for_list"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend._enqueue_venue_ids_legacy_for_list": [], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.pop_offer_ids_from_queue": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend.redis_lpop"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.redis_lpop": ["<builtin>.set", "<builtin>.int"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.pop_venue_ids_from_queue": ["<builtin>.int", "<builtin>.set"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.pop_venue_ids_for_offers_from_queue": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend.redis_lpop"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.index_offers": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend.serialize_offer"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.serialize_offer": ["<builtin>.map", "src.pcapi.core.search.backends.algolia.url_path", "<builtin>.list", "<str>.strip", "<builtin>.set", "<builtin>.str", "src.pcapi.core.search.backends.algolia.remove_stopwords", "src.pcapi.core.search.backends.algolia.position", "<builtin>.sorted"], "<str>.strip": [], "src.pcapi.core.search.backends.algolia.remove_stopwords": [], "src.pcapi.core.search.backends.algolia.url_path": [], "src.pcapi.core.search.backends.algolia.position": ["<builtin>.float"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.index_venues": ["src.pcapi.core.search.backends.algolia.AlgoliaBackend.serialize_venue"], "src.pcapi.core.search.backends.algolia.AlgoliaBackend.serialize_venue": ["<builtin>.getattr", "src.pcapi.core.search.backends.algolia.position"], "src.pcapi.scripts.educational.update_educational_institutions_data.import_educational_institutions_data": ["<str>.endswith", "<builtin>.print", "<builtin>.set", "src.pcapi.scripts.educational.update_educational_institutions_data._process_educational_csv", "<builtin>.open"], "<str>.endswith": [], "src.pcapi.scripts.educational.update_educational_institutions_data._process_educational_csv": ["<builtin>.print"], "tests.scripts.payment.banishment_test.DoBanPaymentsTest.test_modify_statuses_on_given_payments": ["pcapi.scripts.payment.banishment.do_ban_payments", "pcapi.model_creators.generic_creators.create_payment_message", "pcapi.model_creators.generic_creators.create_payment"], "pcapi.model_creators.generic_creators.create_payment_message": [], "pcapi.model_creators.generic_creators.create_payment": [], "pcapi.scripts.payment.banishment.do_ban_payments": [], "tests.scripts.payment.banishment_test.DoBanPaymentsTest.test_does_not_modify_statuses_on_given_payments_if_a_payment_id_is_not_found": ["pcapi.scripts.payment.banishment.do_ban_payments", "pcapi.model_creators.generic_creators.create_payment_message", "pcapi.model_creators.generic_creators.create_payment"], "src.pcapi.core.mails.transactional.send_transactional_email.send_transactional_email": ["<builtin>.isinstance"], "tests.routes.pro.get_offerers_test.Returns200Test.when_logged_in_and_return_an_offerer_with_one_managed_venue": ["pcapi.utils.human_ids.dehumanize"], "tests.routes.pro.get_offerers_test.Returns200Test.when_logged_in_and_return_a_list_of_offerers_sorted_alphabetically": ["<builtin>.len"], "tests.routes.pro.get_offerers_test.Returns200Test.when_logged_in_and_return_a_list_of_offerers_including_non_validated_structures": ["<builtin>.len"], "tests.routes.pro.get_offerers_test.Returns200Test.when_current_user_is_not_admin_and_returns_only_offers_managed_by_him": ["<builtin>.len"], "tests.routes.pro.get_offerers_test.Returns200Test.when_current_user_is_admin_and_returns_all_offerers": ["<builtin>.len"], "tests.routes.pro.get_offerers_test.Returns200Test.when_no_bank_information_for_offerer": ["<builtin>.len"], "tests.routes.pro.get_offerers_test.Returns200Test.test_returns_only_active_offerers": ["<builtin>.len"], "src.pcapi.connectors.notion.add_to_synchronization_error_database": ["notion_client.Client", "<builtin>.str"], "notion_client.Client": [], "src.pcapi.connectors.dms.api.DMSGraphQLClient.__init__": ["gql.transport.requests.RequestsHTTPTransport"], "gql.transport.requests.RequestsHTTPTransport": [], "src.pcapi.connectors.dms.api.DMSGraphQLClient.get_applications_with_details": ["src.pcapi.connectors.dms.api.DMSGraphQLClient.build_query", "src.pcapi.connectors.dms.api.DMSGraphQLClient.get_applications_with_details", "<builtin>.len", "src.pcapi.connectors.dms.api.DMSGraphQLClient.execute_query"], "src.pcapi.connectors.dms.api.DMSGraphQLClient.build_query": [], "src.pcapi.connectors.dms.api.DMSGraphQLClient.execute_query": [], "src.pcapi.connectors.dms.api.DMSGraphQLClient.send_user_message": ["src.pcapi.connectors.dms.api.DMSGraphQLClient.build_query", "src.pcapi.connectors.dms.api.DMSGraphQLClient.execute_query"], "src.pcapi.connectors.dms.api.DMSGraphQLClient.archive_application": ["src.pcapi.connectors.dms.api.DMSGraphQLClient.build_query", "src.pcapi.connectors.dms.api.DMSGraphQLClient.execute_query"], "src.pcapi.connectors.dms.api.DMSGraphQLClient.get_single_application_details": ["src.pcapi.connectors.dms.api.DMSGraphQLClient.build_query", "src.pcapi.connectors.dms.api.DMSGraphQLClient.execute_query"], "src.pcapi.connectors.dms.api.DMSGraphQLClient.get_bic": ["src.pcapi.connectors.dms.api.DMSGraphQLClient.build_query", "src.pcapi.connectors.dms.api.DMSGraphQLClient.execute_query"], "src.pcapi.connectors.dms.api.parse_beneficiary_information_graphql": ["<builtin>.str", "pcapi.utils.date.FrenchParserInfo"], "pcapi.utils.date.FrenchParserInfo": [], "tests.scripts.booking.fill_individual_booking_deposit_id_test.test_fill_individual_booking_deposit_id": ["dateutil.relativedelta.relativedelta"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_bookings.create_industrial_bookings": ["<map>.values", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_bookings._create_bookings_for_other_beneficiaries", "<builtin>.len", "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_bookings._create_has_booked_some_bookings"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_bookings._create_bookings_for_other_beneficiaries": ["append", "<builtin>.enumerate", "<builtin>.list", "pcapi.core.bookings.factories.IndividualBookingFactory", "<builtin>.str", "datetime.timedelta"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_bookings._create_has_booked_some_bookings": ["<builtin>.enumerate", "<builtin>.float", "pcapi.core.users.api.get_domains_credit", "<builtin>.list", "pcapi.core.bookings.factories.IndividualBookingFactory", "random.choice", "datetime.timedelta"], "random.choice": [], "src.pcapi.core.mails.transactional.pro.offerer_attachment_validation.get_offerer_attachment_validation_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.pro.offerer_attachment_validation.send_offerer_attachment_validation_email_to_pro": ["src.pcapi.core.mails.transactional.pro.offerer_attachment_validation.get_offerer_attachment_validation_email_data"], "src.pcapi.scripts.add_allocine_internal_ids.add_allocine_internal_ids": ["<builtin>.len", "sqlalchemy.orm.util.aliased"], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_if_latitude_is_not_a_decimal": ["pcapi.core.offerers.validation.validate_coordinates"], "pcapi.core.offerers.validation.validate_coordinates": [], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_if_longitude_is_not_a_decimal": ["pcapi.core.offerers.validation.validate_coordinates"], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_for_both_latitude_and_longitude": ["pcapi.core.offerers.validation.validate_coordinates"], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_if_latitude_is_greater_than_90": ["pcapi.core.offerers.validation.validate_coordinates"], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_if_latitude_is_lower_than_minus_90": ["pcapi.core.offerers.validation.validate_coordinates"], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_if_longitude_is_greater_than_180": ["pcapi.core.offerers.validation.validate_coordinates"], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_if_longitude_is_lower_than_minus_180": ["pcapi.core.offerers.validation.validate_coordinates"], "tests.core.offerers.test_validation.test_validate_coordinates_raises_an_api_errors_if_both_latitude_and_longitude_are_out_of_bounds": ["pcapi.core.offerers.validation.validate_coordinates"], "src.pcapi.emails.beneficiary_activation.get_activation_email_data": ["urllib.parse.quote"], "urllib.parse.quote": [], "tests.core.mails.transactional.bookings.booking_cancellation_test.SendOffererDrivenCancellationEmailToOffererTest.test_should_send_cancellation_by_offerer_email_to_offerer": ["<builtin>.len", "pcapi.core.mails.transactional.bookings.booking_cancellation.send_offerer_driven_cancellation_email_to_offerer"], "pcapi.core.mails.transactional.bookings.booking_cancellation.send_offerer_driven_cancellation_email_to_offerer": [], "tests.admin.custom_views.offerer_tag_view_test.OffererTagViewTest.test_delete_tag": ["<builtin>.len"], "src.pcapi.admin.custom_views.venue_view._offers_link": ["markupsafe.Markup", "markupsafe.escape", "flask.url_for"], "markupsafe.escape": [], "src.pcapi.admin.custom_views.venue_view._get_venue_provider_link": ["markupsafe.Markup", "flask.url_for"], "src.pcapi.admin.custom_views.venue_view.VenueCriteriaFilter.operation": ["flask_admin.babel.lazy_gettext"], "src.pcapi.admin.custom_views.venue_view.VenueView.get_query": ["<builtin>.super", "sqlalchemy.orm.joinedload", "src.pcapi.admin.custom_views.venue_view.VenueView._extend_query"], "src.pcapi.admin.custom_views.venue_view.VenueView._extend_query": [], "src.pcapi.admin.custom_views.venue_view.VenueView.get_count_query": ["<builtin>.super", "src.pcapi.admin.custom_views.venue_view.VenueView._extend_query"], "src.pcapi.admin.custom_views.venue_view.VenueView.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.venue_view.VenueView.delete_model": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id", "flask.flash"], "src.pcapi.admin.custom_views.venue_view.VenueView.update_model": ["pcapi.core.users.external.update_external_pro", "pcapi.core.offers.api.update_stock_id_at_providers", "<builtin>.getattr", "<builtin>.super", "<builtin>.hasattr"], "pcapi.core.offers.api.update_stock_id_at_providers": [], "src.pcapi.admin.custom_views.venue_view.VenueView.action_bulk_edit": ["flask.redirect", "flask_admin.helpers.get_redirect_target"], "flask_admin.helpers.get_redirect_target": [], "src.pcapi.admin.custom_views.venue_view.VenueView.index": ["flask_admin.helpers.get_redirect_target", "<builtin>.len"], "src.pcapi.admin.custom_views.venue_view.VenueView.update_view": ["flask.flash", "flask.redirect", "flask_admin.helpers.get_redirect_target"], "tests.test_cors_config.build_permutations": ["urllib.parse.urlsplit", "append"], "urllib.parse.urlsplit": [], "tests.test_cors_config.create_app": ["tests.test_cors_config.get_cors_allowed_origins", "flask.Flask", "flask_cors.CORS"], "tests.test_cors_config.get_cors_allowed_origins": [], "tests.test_cors_config.CorsConfigPrivateApiTest.test_allowed_origins": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.test_cors_config.create_app"], "tests.test_cors_config.CorsConfigPrivateApiTest.test_not_allowed_origins": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.test_cors_config.create_app", "tests.test_cors_config.build_permutations"], "tests.test_cors_config.CorsConfigNativeTest.test_allowed_origins_native": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.test_cors_config.create_app"], "tests.test_cors_config.CorsConfigNativeTest.test_not_allowed_origins_native": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.test_cors_config.create_app", "tests.test_cors_config.build_permutations"], "src.pcapi.scripts.beneficiary.import_users.create_or_update_users": ["append", "pcapi.core.users.utils.sanitize_email", "datetime.datetime", "pcapi.core.users.repository.find_user_by_email", "<builtin>.ValueError"], "src.pcapi.scripts.beneficiary.import_users._read_file": ["src.pcapi.scripts.beneficiary.import_users.create_or_update_users"], "src.pcapi.models.product.Product.subcategory": ["<builtin>.ValueError"], "src.pcapi.repository.providable_queries.update_chunk": ["src.pcapi.repository.providable_queries._filter_matching_pc_object_in_chunk", "<builtin>.getattr", "<builtin>.set", "src.pcapi.repository.providable_queries._extract_model_name_from_chunk_key", "src.pcapi.repository.providable_queries._extract_dict_values_from_chunk"], "src.pcapi.repository.providable_queries._extract_model_name_from_chunk_key": [], "src.pcapi.repository.providable_queries._filter_matching_pc_object_in_chunk": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.repository.providable_queries._extract_dict_values_from_chunk": ["<builtin>.list", "src.pcapi.repository.providable_queries.dictify_pc_object"], "src.pcapi.repository.providable_queries.dictify_pc_object": [], "tests.scripts.educational.import_educational_institutions_and_deposits_test.ImportEducationalInstitutionTest.test_import_educational_institutions_and_deposits": ["pcapi.scripts.educational.import_educational_institutions_and_deposits.import_educational_institutions_and_deposits", "datetime.datetime", "<builtin>.all", "<builtin>.len"], "pcapi.scripts.educational.import_educational_institutions_and_deposits.import_educational_institutions_and_deposits": [], "tests.scripts.educational.import_educational_institutions_and_deposits_test.ImportEducationalInstitutionTest.test_import_educational_institutions_and_deposits_with_existing_data_on_current_year": ["datetime.datetime", "decimal.Decimal", "pcapi.scripts.educational.import_educational_institutions_and_deposits._process_educational_csv"], "pcapi.scripts.educational.import_educational_institutions_and_deposits._process_educational_csv": [], "tests.scripts.educational.import_educational_institutions_and_deposits_test.ImportEducationalInstitutionTest.test_import_educational_institutions_and_deposits_with_existing_data_on_future_year": ["datetime.datetime", "decimal.Decimal", "pcapi.scripts.educational.import_educational_institutions_and_deposits._process_educational_csv"], "tests.scripts.educational.import_educational_institutions_and_deposits_test.ImportEducationalInstitutionTest.test_stop_execution_when_no_educational_year_found": ["pcapi.scripts.educational.import_educational_institutions_and_deposits.import_educational_institutions_and_deposits", "<builtin>.len"], "tests.scripts.educational.import_educational_institutions_and_deposits_test.ImportEducationalInstitutionTest.test_stop_execution_when_csv_is_invalid": ["pcapi.scripts.educational.import_educational_institutions_and_deposits.import_educational_institutions_and_deposits", "<builtin>.len"], "tests.tasks.decorator_test.generate_task": ["tests.tasks.decorator_test.generate_task.VoidTaskPayload", "pcapi.tasks.decorator.task"], "tests.tasks.decorator_test.generate_task.VoidTaskPayload": [], "tests.tasks.decorator_test.CloudTaskDecoratorTest.test_calling_task": ["tests.tasks.decorator_test.generate_task.test_task", "tests.tasks.decorator_test.generate_task", "unittest.mock.call", "unittest.mock.MagicMock"], "tests.tasks.decorator_test.generate_task.test_task": [], "tests.tasks.decorator_test.CloudTaskDecoratorTest.test_calling_task_in_dev": ["tests.tasks.decorator_test.generate_task.test_task", "tests.tasks.decorator_test.generate_task", "unittest.mock.MagicMock"], "tests.tasks.decorator_test.CloudTaskDecoratorTest.test_calling_google_cloud_task_client": ["tests.tasks.decorator_test.generate_task", "unittest.mock.MagicMock"], "tests.tasks.decorator_test.CloudTaskDecoratorTest.test_creates_a_handler_endoint": ["tests.tasks.decorator_test.generate_task", "unittest.mock.MagicMock"], "src.pcapi.core.users.external.sendinblue.SendinblueAttributes.list": ["<builtin>.map", "<builtin>.list"], "src.pcapi.core.users.external.sendinblue.update_contact_attributes": ["src.pcapi.core.users.external.sendinblue.make_update_request", "pcapi.models.api_errors.ApiErrors", "pcapi.tasks.serialization.sendinblue_tasks.UpdateSendinblueContactRequest", "src.pcapi.core.users.external.sendinblue.format_user_attributes"], "src.pcapi.core.users.external.sendinblue.format_user_attributes": ["src.pcapi.core.users.external.sendinblue._get_attr"], "src.pcapi.core.users.external.sendinblue._get_attr": ["src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda3>", "src.pcapi.core.users.external.sendinblue.format_list_or_str", "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda4>", "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda2>", "<builtin>.getattr", "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda1>", "src.pcapi.core.users.external.sendinblue.format_list", "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda5>"], "src.pcapi.core.users.external.sendinblue.format_list": [], "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda1>": [], "src.pcapi.core.users.external.sendinblue.format_list_or_str": ["<builtin>.isinstance", "src.pcapi.core.users.external.sendinblue.format_list"], "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda2>": [], "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda3>": [], "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda4>": [], "src.pcapi.core.users.external.sendinblue.format_user_attributes.<lambda5>": [], "pcapi.tasks.serialization.sendinblue_tasks.UpdateSendinblueContactRequest": [], "src.pcapi.core.users.external.sendinblue.make_update_request": [], "src.pcapi.core.users.external.sendinblue.send_import_contacts_request": ["<builtin>.print"], "src.pcapi.core.users.external.sendinblue.format_file_value": ["<builtin>.isinstance", "<builtin>.str"], "src.pcapi.core.users.external.sendinblue.build_file_body": ["src.pcapi.core.users.external.sendinblue.format_file_value", "src.pcapi.core.users.external.sendinblue.SendinblueAttributes.list", "<builtin>.sorted"], "src.pcapi.core.users.external.sendinblue.import_contacts_in_sendinblue": ["src.pcapi.core.users.external.sendinblue.send_import_contacts_request", "src.pcapi.core.users.external.sendinblue.build_file_body"], "src.pcapi.core.users.external.sendinblue._wait_for_process": ["time.sleep"], "time.sleep": [], "src.pcapi.core.users.external.sendinblue._send_import_request": ["<builtin>.len"], "src.pcapi.core.users.external.sendinblue.add_contacts_to_list": ["src.pcapi.core.users.external.sendinblue._wait_for_process", "src.pcapi.core.users.external.sendinblue.add_contacts_to_list.chunk", "append"], "src.pcapi.core.users.external.sendinblue.add_contacts_to_list.chunk": ["<builtin>.iter"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_request": ["tests.scripts.beneficiary.fixture.make_single_application"], "tests.scripts.beneficiary.fixture.make_single_application": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.fixture.make_graphql_application": ["<builtin>.range"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_request_with_existing_user": ["tests.scripts.beneficiary.fixture.make_single_application"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_request_draft_application": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_request_on_going_application": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_request_refused_application": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_double_parsing_error": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_request_with_unexisting_user": ["tests.scripts.beneficiary.fixture.make_single_application"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_id_piece_number_error": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_first_name_error": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_full_name_error": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_postal_code_error": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_birth_date_error": ["tests.scripts.beneficiary.fixture.make_single_application", "<builtin>.len"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_application_on_going": ["tests.scripts.beneficiary.fixture.make_single_application"], "tests.routes.external.user_subscription_test.DmsWebhookApplicationTest.test_dms_parsing_error_then_corrected": ["tests.scripts.beneficiary.fixture.make_single_application"], "tests.routes.external.user_subscription_test.UbbleWebhookTest._get_signature": ["<builtin>.int", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._get_request_body", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest._get_request_body": [], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_webhook_signature_ok": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook"], "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._get_signature"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_webhook_signature_bad": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_webhook_signature_missing": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_exception_during_workflow_update": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._get_signature"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_fraud_check_initiated": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_fraud_check_aborted": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_fraud_check_processing": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "<builtin>.list", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.filter", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_fraud_check_valid": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "<builtin>.list", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.filter", "<builtin>.len", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_fraud_check_invalid": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "<builtin>.list", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.filter", "<builtin>.len", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_fraud_check_unprocessable": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._init_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._assert_email_sent", "<builtin>.list", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.filter", "<builtin>.len", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest._assert_email_sent": ["<builtin>.len"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_birth_date_overrided_with_ubble_test_emails": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._get_request_body", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_birth_date_not_overridden_with_non_ubble_test_emails": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._get_request_body", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_ubble_test_emails_not_actives_on_production": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._get_request_body", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._get_request_body", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_age_cannot_become_beneficiary": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._get_request_body", "tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str", "<builtin>.len"], "tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug": [], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_duplicate_user": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str", "<builtin>.len"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_duplicate_id_piece_number": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str", "<builtin>.len"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_reference_data_check_failed": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._assert_email_sent", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_document_not_supported": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._assert_email_sent", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_document_expired": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._assert_email_sent", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_invalid_for_another_reason": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str", "<builtin>.len"], "tests.routes.external.user_subscription_test.UbbleWebhookTest.test_decision_unprocessable": ["tests.routes.external.user_subscription_test.UbbleWebhookTest._log_for_debug", "tests.routes.external.user_subscription_test.UbbleWebhookTest._assert_email_sent", "tests.routes.external.user_subscription_test.UbbleWebhookTest._init_decision_test", "tests.routes.external.user_subscription_test.UbbleWebhookTest._post_webhook", "<builtin>.str"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_thing_stocks.create_industrial_thing_stocks": ["append", "count", "<map>.values", "<builtin>.list", "utils.get_price_by_short_name", "<builtin>.str", "<builtin>.len", "utils.get_occurrence_short_name", "pcapi.model_creators.specific_creators.create_stock_from_offer", "pcapi.sandboxes.scripts.utils.select.remove_every"], "utils.get_occurrence_short_name": [], "utils.get_price_by_short_name": [], "count": [], "pcapi.model_creators.specific_creators.create_stock_from_offer": [], "src.pcapi.scripts.algolia_indexing.indexing.batch_indexing_offers_in_algolia_from_database": ["<builtin>.len"], "src.pcapi.sandboxes.scripts.sandbox_api_key.save_sandbox": ["pcapi.sandboxes.scripts.creators.industrial.create_pro_account_with_api_key_and_offers"], "pcapi.sandboxes.scripts.creators.industrial.create_pro_account_with_api_key_and_offers": [], "tests.routes.error_handlers.generic_error_handlers_test.FormatQueryParamsTest.test_format_params": ["datetime.datetime"], "tests.workers.bank_information_job_test.synchronizeBankInformationsTest.when_provider_name_is_offerer_should_save_offerer_bank_informations": ["pcapi.workers.bank_information_job.bank_information_job"], "pcapi.workers.bank_information_job.bank_information_job": [], "tests.workers.bank_information_job_test.synchronizeBankInformationsTest.when_provider_name_is_venue_should_save_venue_bank_informations": ["pcapi.workers.bank_information_job.bank_information_job"], "tests.workers.bank_information_job_test.synchronizeBankInformationsTest.when_provider_name_is_another_should_launch_nothing": ["pcapi.workers.bank_information_job.bank_information_job"], "tests.core.object_storage.object_storage_test.StorePublicObjectTest.test_local_backend_call": ["pcapi.core.object_storage.store_public_object"], "tests.core.object_storage.object_storage_test.StorePublicObjectTest.test_ovh_backend_call": ["pcapi.core.object_storage.store_public_object"], "tests.core.object_storage.object_storage_test.StorePublicObjectTest.test_gcp_backend_call": ["pcapi.core.object_storage.store_public_object"], "tests.core.object_storage.object_storage_test.StorePublicObjectTest.test_ovh_gcp_backends_call": ["pcapi.core.object_storage.store_public_object"], "tests.core.object_storage.object_storage_test.CheckBackendSettingTest.test_empty_setting": ["pcapi.core.object_storage._check_backend_setting"], "pcapi.core.object_storage._check_backend_setting": [], "tests.core.object_storage.object_storage_test.CheckBackendSettingTest.test_correct_setting": ["pcapi.core.object_storage._check_backend_setting"], "tests.core.object_storage.object_storage_test.DeletePublicObjectTest.test_local_backend_call": ["pcapi.core.object_storage.delete_public_object"], "pcapi.core.object_storage.delete_public_object": [], "tests.core.object_storage.object_storage_test.DeletePublicObjectTest.test_ovh_backend_call": ["pcapi.core.object_storage.delete_public_object"], "tests.core.object_storage.object_storage_test.DeletePublicObjectTest.test_gcp_backend_call": ["pcapi.core.object_storage.delete_public_object"], "tests.core.object_storage.object_storage_test.DeletePublicObjectTest.test_gcp_backend_call_when_gcp_return_return_not_found_error_not_raises_exception": ["google.cloud.exceptions.NotFound", "unittest.mock.MagicMock", "pcapi.core.object_storage.delete_public_object"], "google.cloud.exceptions.NotFound": [], "tests.core.object_storage.object_storage_test.DeletePublicObjectTest.test_ovh_gcp_backends_call": ["pcapi.core.object_storage.delete_public_object"], "tests.core.object_storage.object_storage_test.GetThumbStorageIdTest.test_with_mediation": ["pcapi.core.offers.models.Mediation"], "pcapi.core.offers.models.Mediation": [], "tests.core.object_storage.object_storage_test.GetThumbStorageIdTest.test_with_product": ["pcapi.models.product.Product"], "tests.core.object_storage.object_storage_test.GetThumbStorageIdTest.test_with_index_above_0": ["pcapi.models.product.Product"], "tests.utils.pdf_creation_test.GeneratePdfFromHtmlTest.example_html_fixture": ["<builtin>.open"], "src.pcapi.core.offers.exceptions.TooLateToDeleteStock.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.FileSizeExceeded.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.ImageTooSmall.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.UnacceptedFileType.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.MissingImage.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.SubcategoryNotEligibleForEducationalOffer.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.OfferCannotBeDuoAndEducational.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.UnknownOfferSubCategory.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.SubCategoryIsInactive.__init__": ["<builtin>.super"], "src.pcapi.core.offers.exceptions.EducationalOfferStockBookedAndBookingNotPending.__init__": ["<builtin>.super"], "tests.routes.pro.patch_user_has_seen_tuto_test.test_mark_as_seen": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns204Test.when_user_is_logged_in": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns404Test.when_user_does_not_exist": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns403Test.when_user_is_not_logged_in": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch"], "tests.routes.pro.patch_user_has_seen_tuto_test.LegacyRouteTest.Returns403Test.when_user_has_no_rights": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.can_offerer_create_educational_offer_test.CanOffererCreateEducationalOfferTest.test_offerer_can_create_educational_offer": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.can_offerer_create_educational_offer_test.CanOffererCreateEducationalOfferTest.test_offerer_cannot_create_educational_offer_because_not_in_adage": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.can_offerer_create_educational_offer_test.CanOffererCreateEducationalOfferTest.test_offerer_cannot_create_educational_offer_because_adage_failed": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.core.mails.transactional.users.reset_password_test.MailjetSendResetPasswordUserEmailTest.test_email": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.core.mails.transactional.users.reset_password.get_reset_password_user_email_data"], "pcapi.core.mails.transactional.users.reset_password.get_reset_password_user_email_data": [], "tests.core.mails.transactional.users.reset_password_test.MailjetSendResetPasswordUserEmailTest.when_feature_send_emails_enabled_sends_a_reset_password_email_to_user": ["<builtin>.len", "pcapi.core.mails.transactional.users.reset_password.send_reset_password_email_to_user"], "pcapi.core.mails.transactional.users.reset_password.send_reset_password_email_to_user": [], "tests.core.mails.transactional.users.reset_password_test.SendinblueSendResetPasswordUserEmailTest.test_send_a_reset_password_email_to_native_app_user_via_sendinblue": ["dataclasses.asdict", "pcapi.core.mails.transactional.users.reset_password.send_reset_password_email_to_native_app_user", "<builtin>.len"], "pcapi.core.mails.transactional.users.reset_password.send_reset_password_email_to_native_app_user": [], "tests.core.mails.transactional.users.reset_password_test.SendinblueSendResetPasswordUserEmailTest.test_native_app_email": ["pcapi.core.mails.transactional.users.reset_password.get_reset_password_native_app_email_data", "datetime.datetime"], "pcapi.core.mails.transactional.users.reset_password.get_reset_password_native_app_email_data": [], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.setup_method": ["pcapi.infrastructure.repository.bank_informations.bank_informations_sql_repository.BankInformationsSQLRepository"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_returns_bank_informations_when_offerer_has_bank_informations": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_returns_none_when_offerer_has_no_bank_informations": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_returns_bank_informations_when_venue_has_bank_informations": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_returns_none_when_venue_has_no_bank_informations": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_returns_bank_informations_when_there_is_bank_informations_associated_with_this_application_id": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_returns_none_when_there_is_no_bank_informations_associated_with_this_application_id": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_create_bank_informations_on_save_when_bank_informations_does_not_exist": ["pcapi.domain.bank_informations.bank_informations.BankInformations", "datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer"], "pcapi.domain.bank_informations.bank_informations.BankInformations": [], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_not_create_bank_informations_on_save_when_no_offerer_associated_in_database": ["pcapi.domain.bank_informations.bank_informations.BankInformations"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_not_create_bank_informations_on_save_when_bank_infos_is_already_associated_to_an_offerer_in_database": ["pcapi.domain.bank_informations.bank_informations.BankInformations", "pcapi.model_creators.generic_creators.create_offerer"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_update_bank_informations_when_bank_informations_already_exist_for_offerer": ["pcapi.domain.bank_informations.bank_informations.BankInformations", "datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_not_update_bank_informations_when_bank_informations_do_not_exist_for_offerer": ["pcapi.domain.bank_informations.bank_informations.BankInformations"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_update_bank_informations_when_bank_informations_already_exist_for_application": ["pcapi.domain.bank_informations.bank_informations.BankInformations", "datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_not_update_bank_informations_when_bank_informations_do_not_exist_for_this_application": ["pcapi.domain.bank_informations.bank_informations.BankInformations"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_update_bank_informations_when_bank_informations_already_exist_for_venue": ["pcapi.domain.bank_informations.bank_informations.BankInformations", "datetime.datetime", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.infrastructure.repository.bank_informations.bank_informations_sql_repository_test.BankInformationsSQLRepositoryTest.test_should_not_update_bank_informations_when_bank_informations_do_not_exist_for_venue": ["pcapi.domain.bank_informations.bank_informations.BankInformations"], "src.pcapi.scripts.delete_venue_and_offers_for_venue_id.delete_venue_and_offers_for_venue_id": ["pcapi.core.offerers.repository.find_venue_by_id", "pcapi.utils.human_ids.dehumanize", "pcapi.repository.offer_queries.get_offers_by_venue_id", "<builtin>.any", "<builtin>.AttributeError"], "pcapi.repository.offer_queries.get_offers_by_venue_id": [], "<builtin>.AttributeError": [], "src.pcapi.domain.pro_offers.offers_recap.OfferRecap.__init__": ["src.pcapi.domain.pro_offers.offers_recap.OfferRecapVenue.__init__", "src.pcapi.domain.pro_offers.offers_recap.OfferRecapStock.__init__"], "src.pcapi.domain.pro_offers.offers_recap.OfferRecapVenue.__init__": [], "src.pcapi.domain.pro_offers.offers_recap.OfferRecapStock.__init__": [], "tests.repository.providable_queries_test.test_get_last_update_for_provider_should_return_date_modified_at_last_provider_when_provided": ["pcapi.core.offers.models.Stock", "datetime.datetime", "pcapi.repository.providable_queries.get_last_update_for_provider"], "pcapi.core.offers.models.Stock": [], "pcapi.repository.providable_queries.get_last_update_for_provider": [], "tests.repository.providable_queries_test.test_get_last_update_for_provider_should_return_none_when_last_provider_id_does_not_match_given_id": ["pcapi.core.offers.models.Stock", "datetime.datetime", "pcapi.repository.providable_queries.get_last_update_for_provider"], "tests.repository.providable_queries_test.test_get_last_update_for_provider_should_return_none_when_last_provider_id_matches_given_id_and_date_modified_at_last_provider_is_none": ["pcapi.core.offers.models.Stock", "pcapi.repository.providable_queries.get_last_update_for_provider"], "tests.scripts.algolia_indexing.indexing_test.BatchIndexingOffersInAlgoliaFromDatabaseTest.test_should_index_offers_once_when_offers_per_page_is_one_and_only_one_page": ["pcapi.scripts.algolia_indexing.indexing.batch_indexing_offers_in_algolia_from_database"], "tests.scripts.algolia_indexing.indexing_test.BatchIndexingOffersInAlgoliaFromDatabaseTest.test_should_index_offers_twice_when_offers_per_page_is_one_and_two_pages": ["pcapi.scripts.algolia_indexing.indexing.batch_indexing_offers_in_algolia_from_database"], "tests.scripts.algolia_indexing.indexing_test.BatchIndexingOffersInAlgoliaFromDatabaseTest.test_should_index_offers_from_first_page_only_when_ending_page_is_provided": ["pcapi.scripts.algolia_indexing.indexing.batch_indexing_offers_in_algolia_from_database"], "tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory.<lambda2>": ["<builtin>.str"], "tests.core.subscription.test_factories.UbbleIdentificationDataAttributesFactory.status": ["<map>.get"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsAttributesFactory.<lambda1>": ["dateutil.relativedelta.relativedelta", "<builtin>.str"], "tests.core.subscription.test_factories.UbbleIdentificationIncludedDocumentsAttributesFactory.<lambda2>": ["<builtin>.range"], "tests.core.subscription.test_factories.UbbleIdentificationResponseFactory.included": ["collections.defaultdict"], "src.pcapi.scripts.payment.batch_steps.get_venues_to_reimburse": ["sqlalchemy.sql.functions.coalesce"], "sqlalchemy.sql.functions.coalesce": [], "src.pcapi.scripts.payment.batch_steps.generate_new_payments": ["pcapi.domain.payments.filter_out_bookings_without_cost", "pcapi.domain.reimbursement.find_all_booking_reimbursements", "pcapi.domain.reimbursement.CustomRuleFinder", "pcapi.domain.payments.create_payment_for_booking", "pcapi.domain.payments.filter_out_already_paid_for_bookings", "<builtin>.len", "src.pcapi.scripts.payment.batch_steps.get_venues_to_reimburse"], "pcapi.domain.reimbursement.CustomRuleFinder": [], "pcapi.domain.reimbursement.find_all_booking_reimbursements": [], "pcapi.domain.payments.filter_out_bookings_without_cost": [], "pcapi.domain.payments.filter_out_already_paid_for_bookings": [], "pcapi.domain.payments.create_payment_for_booking": [], "src.pcapi.scripts.payment.batch_steps.send_transactions": ["pcapi.domain.payments.validate_message_file_structure", "<builtin>.Exception", "src.pcapi.scripts.payment.batch_steps._save_file_on_disk", "pcapi.domain.payments.generate_message_file", "pcapi.domain.payments.generate_venues_csv", "pcapi.domain.admin_emails.send_payment_message_email", "pcapi.models.payment_message.PaymentMessage"], "pcapi.domain.payments.generate_venues_csv": [], "pcapi.domain.payments.generate_message_file": [], "pcapi.domain.payments.validate_message_file_structure": [], "pcapi.models.payment_message.PaymentMessage": [], "src.pcapi.scripts.payment.batch_steps._save_file_on_disk": [], "pcapi.domain.admin_emails.send_payment_message_email": [], "src.pcapi.scripts.payment.batch_steps.send_payments_details": ["<builtin>.Exception", "src.pcapi.scripts.payment.batch_steps._save_file_on_disk", "pcapi.domain.admin_emails.send_payment_details_email", "pcapi.domain.payments.generate_payment_details_csv"], "pcapi.domain.payments.generate_payment_details_csv": [], "pcapi.domain.admin_emails.send_payment_details_email": [], "src.pcapi.scripts.payment.batch_steps.send_wallet_balances": ["pcapi.domain.payments.generate_wallet_balances_csv", "<builtin>.Exception", "<builtin>.list", "pcapi.repository.user_queries.get_all_users_wallet_balances", "<builtin>.len", "pcapi.domain.admin_emails.send_wallet_balances_email"], "pcapi.repository.user_queries.get_all_users_wallet_balances": [], "pcapi.domain.payments.generate_wallet_balances_csv": [], "pcapi.domain.admin_emails.send_wallet_balances_email": [], "src.pcapi.scripts.payment.batch_steps.send_payments_report": ["src.pcapi.scripts.payment.batch_steps._save_file_on_disk", "pcapi.domain.admin_emails.send_payments_report_emails", "pcapi.domain.payments.generate_payment_details_csv"], "pcapi.domain.admin_emails.send_payments_report_emails": [], "src.pcapi.scripts.payment.batch_steps.set_not_processable_payments_with_bank_information_to_retry": ["pcapi.domain.payments.make_transaction_label"], "pcapi.domain.payments.make_transaction_label": [], "src.pcapi.core.offers.api.create_educational_offer": ["pcapi.utils.human_ids.dehumanize", "src.pcapi.core.offers.api.create_offer", "pcapi.routes.serialization.offers_serialize.CompletedEducationalOfferModel"], "pcapi.routes.serialization.offers_serialize.CompletedEducationalOfferModel": [], "src.pcapi.core.offers.api.create_offer": ["src.pcapi.core.offers.api._initialize_offer_with_new_data", "pcapi.utils.rest.load_or_raise_error", "pcapi.utils.rest.check_user_has_access_to_offerer", "pcapi.core.users.external.update_external_pro", "src.pcapi.core.offers.api._check_offer_data_is_valid", "src.pcapi.core.offers.api._is_able_to_create_book_offer_from_isbn", "src.pcapi.core.offers.api._complete_common_offer_fields", "src.pcapi.core.offers.api._initialize_book_offer_from_template"], "pcapi.utils.rest.load_or_raise_error": [], "pcapi.utils.rest.check_user_has_access_to_offerer": [], "src.pcapi.core.offers.api._check_offer_data_is_valid": ["pcapi.core.offers.validation.check_offer_is_eligible_for_educational", "pcapi.core.offers.validation.check_offer_not_duo_and_educational", "pcapi.core.offers.validation.check_offer_subcategory_is_valid"], "pcapi.core.offers.validation.check_offer_not_duo_and_educational": [], "pcapi.core.offers.validation.check_offer_is_eligible_for_educational": [], "pcapi.core.offers.validation.check_offer_subcategory_is_valid": [], "src.pcapi.core.offers.api._is_able_to_create_book_offer_from_isbn": ["pcapi.core.categories.conf.can_create_from_isbn"], "pcapi.core.categories.conf.can_create_from_isbn": [], "src.pcapi.core.offers.api._initialize_offer_with_new_data": ["pcapi.core.offers.models.Offer", "pcapi.models.product.Product"], "pcapi.core.offers.models.Offer": [], "src.pcapi.core.offers.api._initialize_book_offer_from_template": ["src.pcapi.core.offers.api._load_product_by_isbn_and_check_is_gcu_compatible_or_raise_error", "pcapi.core.offers.models.Offer"], "src.pcapi.core.offers.api._load_product_by_isbn_and_check_is_gcu_compatible_or_raise_error": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.api._complete_common_offer_fields": [], "src.pcapi.core.offers.api.update_offer": ["<builtin>.getattr", "<builtin>.set", "<builtin>.locals", "<builtin>.list"], "src.pcapi.core.offers.api.update_educational_offer": ["append", "<builtin>.setattr"], "src.pcapi.core.offers.api.batch_update_offers": ["<builtin>.range", "<builtin>.min", "<builtin>.len"], "src.pcapi.core.offers.api._create_stock": ["pcapi.core.offers.models.Stock"], "src.pcapi.core.offers.api._edit_stock": ["<builtin>.setattr", "<builtin>.getattr", "<builtin>.list", "pcapi.core.offers.utils.as_utc_without_timezone", "<map>.items"], "pcapi.core.offers.utils.as_utc_without_timezone": [], "src.pcapi.core.offers.api._notify_pro_upon_stock_edit_for_event_offer": ["pcapi.core.mails.transactional.pro.event_offer_postponed_confirmation_to_pro.send_event_offer_postponement_confirmation_email_to_pro", "<builtin>.len"], "src.pcapi.core.offers.api._notify_beneficiaries_upon_stock_edit": ["src.pcapi.core.offers.api._invalidate_bookings", "pcapi.core.bookings.api.update_cancellation_limit_dates", "pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.send_batch_booking_postponement_email_to_users"], "pcapi.core.bookings.api.update_cancellation_limit_dates": [], "src.pcapi.core.offers.api._invalidate_bookings": ["pcapi.core.bookings.api.mark_as_unused"], "pcapi.core.bookings.api.mark_as_unused": [], "pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.send_batch_booking_postponement_email_to_users": [], "src.pcapi.core.offers.api.upsert_stocks": ["<builtin>.isinstance", "append", "src.pcapi.core.offers.api._edit_stock", "src.pcapi.core.offers.api._notify_pro_upon_stock_edit_for_event_offer", "src.pcapi.core.offers.api._create_stock", "src.pcapi.core.offers.api._update_offer_fraud_information", "src.pcapi.core.offers.api._notify_beneficiaries_upon_stock_edit", "<builtin>.len", "pcapi.models.api_errors.ApiErrors", "sqlalchemy.orm.joinedload"], "src.pcapi.core.offers.api._update_offer_fraud_information": ["src.pcapi.core.offers.api.set_offer_status_based_on_fraud_criteria"], "src.pcapi.core.offers.api.set_offer_status_based_on_fraud_criteria": ["pcapi.core.offers.offer_validation.parse_offer_validation_config", "pcapi.core.offers.offer_validation.compute_offer_validation_score"], "pcapi.core.offers.offer_validation.parse_offer_validation_config": [], "pcapi.core.offers.offer_validation.compute_offer_validation_score": [], "src.pcapi.core.offers.api.create_educational_stock": ["pcapi.core.offers.models.Stock", "sqlalchemy.orm.joinedload", "<builtin>.len", "src.pcapi.core.offers.api._update_offer_fraud_information"], "src.pcapi.core.offers.api.edit_educational_stock": ["src.pcapi.core.offers.api._extract_updatable_fields_from_stock_data", "pcapi.repository.transaction", "<builtin>.list", "src.pcapi.core.offers.api._update_educational_booking_cancellation_limit_date", "pcapi.core.offers.utils.as_utc_without_timezone"], "src.pcapi.core.offers.api._extract_updatable_fields_from_stock_data": [], "src.pcapi.core.offers.api._update_educational_booking_cancellation_limit_date": ["pcapi.core.educational.utils.compute_educational_booking_cancellation_limit_date"], "pcapi.core.educational.utils.compute_educational_booking_cancellation_limit_date": [], "src.pcapi.core.offers.api.delete_stock": ["pcapi.core.bookings.api.cancel_bookings_from_stock_by_offerer", "pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.send_booking_cancellation_confirmation_by_pro_email", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.send_booking_cancellation_by_pro_to_beneficiary_email"], "pcapi.core.bookings.api.cancel_bookings_from_stock_by_offerer": [], "pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.send_booking_cancellation_by_pro_to_beneficiary_email": [], "pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.send_booking_cancellation_confirmation_by_pro_email": [], "src.pcapi.core.offers.api.create_mediation": ["pcapi.connectors.thumb_storage.create_thumb", "exceptions.ThumbnailStorageError", "models.Mediation"], "models.Mediation": [], "pcapi.connectors.thumb_storage.create_thumb": [], "exceptions.ThumbnailStorageError": [], "src.pcapi.core.offers.api.update_stock_id_at_providers": ["append"], "src.pcapi.core.offers.api.get_expense_domains": ["<builtin>.list"], "src.pcapi.core.offers.api.add_criteria_to_offers": ["pcapi.models.offer_criterion.OfferCriterion", "<builtin>.len"], "pcapi.models.offer_criterion.OfferCriterion": [], "src.pcapi.core.offers.api.deactivate_inappropriate_products": ["<builtin>.str"], "src.pcapi.core.offers.api.import_offer_validation_config": ["pcapi.core.offers.exceptions.WrongFormatInFraudConfigurationFile", "pcapi.core.offers.validation.check_validation_config_parameters", "<builtin>.str", "pcapi.core.offers.models.OfferValidationConfig"], "pcapi.core.offers.validation.check_validation_config_parameters": [], "pcapi.core.offers.exceptions.WrongFormatInFraudConfigurationFile": [], "pcapi.core.offers.models.OfferValidationConfig": [], "src.pcapi.core.offers.api.unindex_expired_offers": ["<builtin>.len"], "src.pcapi.core.offers.api.report_offer": ["pcapi.repository.transaction", "pcapi.core.offers.exceptions.OfferAlreadyReportedError", "pcapi.core.offers.exceptions.ReportMalformed"], "pcapi.core.offers.exceptions.OfferAlreadyReportedError": [], "pcapi.core.offers.exceptions.ReportMalformed": [], "src.pcapi.core.offers.api.cancel_educational_offer_booking": ["pcapi.core.bookings.api.cancel_bookings_from_stock_by_offerer", "pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.send_booking_cancellation_confirmation_by_pro_email", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking", "<builtin>.len"], "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking": [], "src.pcapi.core.offers.api.create_educational_shadow_stock_and_set_offer_showcase": ["pcapi.core.offers.models.Stock", "sqlalchemy.orm.joinedload", "<builtin>.len", "src.pcapi.core.offers.api._update_offer_fraud_information"], "src.pcapi.core.offers.api.transform_shadow_stock_into_educational_stock": ["src.pcapi.core.offers.api.create_educational_stock"], "src.pcapi.core.offers.api.edit_shadow_stock": ["pcapi.repository.transaction", "pcapi.core.offers.validation.check_shadow_stock_is_editable"], "pcapi.core.offers.validation.check_shadow_stock_is_editable": [], "src.pcapi.domain.titelive.put_today_file_at_end_of_list": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.domain.titelive.get_date_from_filename": ["<builtin>.isinstance", "<builtin>.int", "<builtin>.ValueError", "<builtin>.str"], "tests.core.fraud.utils_test.UtilsUnitTest.test_is_latin": ["pcapi.core.fraud.utils.is_latin"], "pcapi.core.fraud.utils.is_latin": [], "tests.core.fraud.utils_test.UtilsUnitTest.test_is_address_valid": ["pcapi.core.fraud.utils.has_latin_or_numeric_chars"], "pcapi.core.fraud.utils.has_latin_or_numeric_chars": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_offers.create_industrial_event_offers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "<map>.values", "<builtin>.list", "<builtin>.range", "<builtin>.len"], "src.pcapi.admin.custom_views.admin_user_view.filter_email": ["pcapi.core.users.utils.sanitize_email"], "src.pcapi.admin.custom_views.admin_user_view.AdminUserView.get_count_query": ["sqlalchemy.sql.expression.distinct"], "sqlalchemy.sql.expression.distinct": [], "src.pcapi.admin.custom_views.admin_user_view.AdminUserView.on_model_change": ["<builtin>.super"], "src.pcapi.admin.custom_views.admin_user_view.AdminUserView.after_model_change": ["<builtin>.super", "pcapi.utils.mailing.build_pc_webapp_reset_password_link", "flask.helpers.flash", "pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_admin_email"], "pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_admin_email": [], "tests.repository.payment_queries_test.FindPaymentsByMessageTest.test_returns_payments_matching_message": ["pcapi.model_creators.generic_creators.create_payment_message", "pcapi.model_creators.generic_creators.create_payment", "<builtin>.len"], "tests.repository.payment_queries_test.FindPaymentsByMessageTest.test_returns_nothing_if_message_is_not_matched": ["pcapi.model_creators.generic_creators.create_payment_message", "pcapi.model_creators.generic_creators.create_payment"], "tests.repository.payment_queries_test.GetPaymentsByStatusTest.test_without_batch_date": ["<builtin>.set"], "src.pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user.get_birthday_age_18_to_newly_eligible_user_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user.send_birthday_age_18_email_to_newly_eligible_user": ["src.pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user.get_birthday_age_18_to_newly_eligible_user_email_data"], "src.pcapi.core.users.repository.get_user_with_credentials": ["src.pcapi.core.users.repository.check_user_and_credentials", "src.pcapi.core.users.repository.find_user_by_email"], "src.pcapi.core.users.repository.find_user_by_email": ["src.pcapi.core.users.repository._find_user_by_email_query"], "src.pcapi.core.users.repository._find_user_by_email_query": ["pcapi.core.users.utils.sanitize_email"], "src.pcapi.core.users.repository.check_user_and_credentials": [], "src.pcapi.core.users.repository.find_pro_user_by_email": ["src.pcapi.core.users.repository._find_user_by_email_query"], "src.pcapi.core.users.repository.get_newly_eligible_age_18_users": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.repository.does_validated_phone_exist": ["<builtin>.bool"], "src.pcapi.admin.install.Category.__str__": ["<builtin>.str"], "src.pcapi.admin.install.install_admin": ["flask_admin.base.Admin", "src.pcapi.admin.install.install_views"], "flask_admin.base.Admin": [], "src.pcapi.admin.install.install_views": ["pcapi.admin.custom_views.user_email_history_view.UserEmailHistoryView", "pcapi.admin.custom_views.category_view.CategoryView", "pcapi.admin.custom_views.provider_view.ProviderView", "custom_views.suspend_fraudulent_users_by_ids.SuspendFraudulentUsersByUserIdsView", "pcapi.admin.custom_views.offerer_tag_view.OffererTagView", "pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView", "pcapi.admin.custom_views.allocine_pivot_view.AllocinePivotView", "pcapi.admin.custom_views.venue_provider_view.VenueProviderView", "pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers.SuspendFraudulentUsersByEmailProvidersView", "pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView", "pcapi.admin.custom_views.booking_view.BookingView", "pcapi.admin.custom_views.beneficiary_user_view.BeneficiaryUserView", "pcapi.admin.custom_views.feature_view.FeatureView", "pcapi.admin.custom_views.category_view.SubcategoryView", "pcapi.admin.custom_views.user_offerer_view.UserOffererView", "pcapi.admin.custom_views.venue_view.VenueView", "pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView", "pcapi.admin.custom_views.pro_user_view.ProUserView", "pcapi.admin.custom_views.partner_user_view.PartnerUserView", "pcapi.admin.custom_views.api_key_view.ApiKeyView", "pcapi.admin.custom_views.offerer_view.OffererView", "pcapi.admin.custom_views.admin_user_view.AdminUserView", "pcapi.admin.custom_views.criteria_view.CriteriaView"], "pcapi.admin.custom_views.criteria_view.CriteriaView": [], "pcapi.admin.custom_views.offerer_tag_view.OffererTagView": [], "pcapi.admin.custom_views.offerer_view.OffererView": [], "pcapi.admin.custom_views.venue_view.VenueView": [], "pcapi.admin.custom_views.user_offerer_view.UserOffererView": [], "pcapi.admin.custom_views.venue_provider_view.VenueProviderView": [], "pcapi.admin.custom_views.admin_user_view.AdminUserView": [], "pcapi.admin.custom_views.feature_view.FeatureView": [], "pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView": [], "pcapi.admin.custom_views.api_key_view.ApiKeyView": [], "pcapi.admin.custom_views.user_email_history_view.UserEmailHistoryView": [], "pcapi.admin.custom_views.allocine_pivot_view.AllocinePivotView": [], "pcapi.admin.custom_views.provider_view.ProviderView": [], "pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView": [], "pcapi.admin.custom_views.booking_view.BookingView": [], "pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers.SuspendFraudulentUsersByEmailProvidersView": [], "custom_views.suspend_fraudulent_users_by_ids.SuspendFraudulentUsersByUserIdsView": [], "pcapi.admin.custom_views.category_view.CategoryView": [], "pcapi.admin.custom_views.category_view.SubcategoryView": [], "pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView": [], "src.pcapi.scripts.payment.user_recredit.has_been_recredited": ["<builtin>.len"], "src.pcapi.scripts.payment.user_recredit.recredit_underage_users": ["pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.send_recredit_email_to_underage_beneficiary", "src.pcapi.scripts.payment.user_recredit.has_been_recredited", "pcapi.repository.transaction", "dateutil.relativedelta.relativedelta", "src.pcapi.scripts.payment.user_recredit.has_celebrated_their_birthday_since_activation", "<builtin>.len", "sqlalchemy.orm.joinedload"], "src.pcapi.scripts.payment.user_recredit.has_celebrated_their_birthday_since_activation": [], "pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.send_recredit_email_to_underage_beneficiary": [], "src.pcapi.core.users.external.user_automations.get_emails_who_will_turn_eighteen_in_one_month": ["src.pcapi.core.users.external.user_automations.get_young_users_emails_query", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.external.user_automations.get_young_users_emails_query": [], "src.pcapi.core.users.external.user_automations.users_turned_eighteen_automation": ["src.pcapi.core.users.external.user_automations.get_emails_who_will_turn_eighteen_in_one_month", "pcapi.core.users.external.sendinblue.add_contacts_to_list"], "pcapi.core.users.external.sendinblue.add_contacts_to_list": [], "src.pcapi.core.users.external.user_automations.get_users_beneficiary_credit_expiration_within_next_3_months": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.external.user_automations.users_beneficiary_credit_expiration_within_next_3_months_automation": ["src.pcapi.core.users.external.user_automations.get_users_beneficiary_credit_expiration_within_next_3_months", "pcapi.core.users.external.sendinblue.add_contacts_to_list"], "src.pcapi.core.users.external.user_automations.get_users_ex_beneficiary": ["sqlalchemy.sql.expression.or_", "sqlalchemy.sql.expression.and_"], "sqlalchemy.sql.expression.and_": [], "sqlalchemy.sql.expression.or_": [], "src.pcapi.core.users.external.user_automations.users_ex_beneficiary_automation": ["pcapi.core.users.external.sendinblue.add_contacts_to_list", "src.pcapi.core.users.external.user_automations.get_users_ex_beneficiary"], "src.pcapi.core.users.external.user_automations.get_email_for_inactive_user_since_thirty_days": ["src.pcapi.core.users.external.user_automations.get_young_users_emails_query", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.external.user_automations.users_inactive_since_30_days_automation": ["pcapi.core.users.external.sendinblue.add_contacts_to_list", "src.pcapi.core.users.external.user_automations.get_email_for_inactive_user_since_thirty_days"], "src.pcapi.core.users.external.user_automations.get_email_for_users_created_one_year_ago_per_month": ["src.pcapi.core.users.external.user_automations.get_young_users_emails_query", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.external.user_automations.users_one_year_with_pass_automation": ["src.pcapi.core.users.external.user_automations.get_email_for_users_created_one_year_ago_per_month", "pcapi.core.users.external.sendinblue.add_contacts_to_list"], "src.pcapi.routes.internal.sandboxes.get_sandbox": ["<builtin>.getattr", "<builtin>.hasattr", "pcapi.models.api_errors.ApiErrors", "flask.jsonify"], "src.pcapi.routes.native.v1.authentication.signin": ["flask_jwt_extended.create_refresh_token", "pcapi.models.api_errors.ApiErrors"], "flask_jwt_extended.create_refresh_token": [], "src.pcapi.routes.native.v1.authentication.refresh": ["flask_jwt_extended.get_jwt_identity", "pcapi.models.api_errors.ApiErrors", "pcapi.core.users.repository.find_user_by_email"], "flask_jwt_extended.get_jwt_identity": [], "src.pcapi.routes.native.v1.authentication.request_password_reset": ["pcapi.models.api_errors.ApiErrors", "pcapi.core.users.repository.find_user_by_email"], "src.pcapi.routes.native.v1.authentication.reset_password": ["pcapi.domain.password.check_password_strength", "pcapi.models.api_errors.ApiErrors"], "pcapi.domain.password.check_password_strength": [], "src.pcapi.routes.native.v1.authentication.change_password": ["pcapi.domain.password.check_password_strength", "pcapi.models.api_errors.ApiErrors", "pcapi.models.api_errors.ForbiddenError"], "src.pcapi.routes.native.v1.authentication.validate_email": ["flask_jwt_extended.create_refresh_token", "pcapi.models.api_errors.ApiErrors", "pcapi.routes.native.v1.serialization.authentication.ValidateEmailResponse"], "pcapi.routes.native.v1.serialization.authentication.ValidateEmailResponse": [], "src.pcapi.workers.apps_flyer_job.log_user_becomes_beneficiary_event_job": ["src.pcapi.workers.apps_flyer_job.AppsFlyerContext.get_app_id", "<builtin>.str", "src.pcapi.workers.apps_flyer_job.AppsFlyerContext.get_api_key", "<str>.strip"], "src.pcapi.workers.apps_flyer_job.AppsFlyerContext.get_app_id": [], "src.pcapi.workers.apps_flyer_job.AppsFlyerContext.get_api_key": [], "src.pcapi.routes.native.v1.serialization.bookings.BookingVenueResponse.from_orm": ["<builtin>.super"], "src.pcapi.routes.native.v1.serialization.bookings.BookingReponse.from_orm": ["<builtin>.super"], "src.pcapi.core.bookings.models.Booking.completedUrl": ["<str>.replace"], "<str>.replace": [], "src.pcapi.core.bookings.models.Booking.restize_internal_error": ["<builtin>.str"], "src.pcapi.sandboxes.scripts.utils.select.pick_every": ["<builtin>.list"], "src.pcapi.sandboxes.scripts.utils.select.remove_every": ["<builtin>.enumerate"], "tests.routes.pro.get_providers_by_venue_test.test_venue_has_known_allocine_id": ["pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.core.users.factories.UserFactory", "<builtin>.len", "pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.VenueFactory"], "pcapi.core.providers.factories.AllocinePivotFactory": [], "tests.routes.pro.get_providers_by_venue_test.test_venue_has_no_allocine_id": ["pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.UserFactory", "<builtin>.len"], "tests.routes.pro.get_providers_by_venue_test.test_venue_does_not_exist": ["pcapi.core.users.factories.UserFactory"], "tests.local_providers.provider_manager_test.DoUpdateTest.test_should_call_provider_objects_synchronization_function": ["unittest.mock.MagicMock", "pcapi.local_providers.provider_manager.do_update"], "pcapi.local_providers.provider_manager.do_update": [], "tests.local_providers.provider_manager_test.DoUpdateTest.test_should_call_remove_worker_id_when_exception_is_raised": ["unittest.mock.MagicMock", "pcapi.local_providers.provider_manager.do_update"], "tests.local_providers.provider_manager_test.SynchronizeVenueProviderTest.test_synchronize_venue_provider": ["pcapi.local_providers.provider_manager.synchronize_venue_provider"], "pcapi.local_providers.provider_manager.synchronize_venue_provider": [], "tests.local_providers.provider_manager_test.SynchronizeVenueProviderTest.test_should_start_synchronization_with_linked_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.provider_manager.synchronize_venue_provider", "pcapi.model_creators.generic_creators.create_venue", "tests.test_utils.fake"], "pcapi.model_creators.generic_creators.create_venue_provider": [], "tests.test_utils.fake": ["tests.test_utils.fake.FakeObject"], "tests.test_utils.fake.FakeObject": [], "tests.local_providers.provider_manager_test.SynchronizeVenueProviderTest.test_should_init_provider_with_expected_venue_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.provider_manager.synchronize_venue_provider", "unittest.mock.MagicMock", "pcapi.model_creators.generic_creators.create_venue"], "tests.local_providers.provider_manager_test.SynchronizeVenueProviderTest.test_should_init_allocine_stocks_provider_with_expected_allocine_venue_provider": ["pcapi.local_providers.provider_manager.synchronize_venue_provider", "unittest.mock.MagicMock"], "tests.local_providers.provider_manager_test.SynchronizeVenueProviderTest.test_should_log_exception_when_one_is_raised_during_provider_initialization": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.provider_manager.synchronize_venue_provider", "pcapi.model_creators.generic_creators.create_venue"], "tests.local_providers.provider_manager_test.SynchronizeVenueProvidersForProviderTest.test_should_entirely_synchronize_venue_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.provider_manager.synchronize_venue_providers_for_provider", "pcapi.model_creators.generic_creators.create_venue", "tests.test_utils.fake"], "pcapi.local_providers.provider_manager.synchronize_venue_providers_for_provider": [], "tests.local_providers.provider_manager_test.SynchronizeVenueProvidersForProviderTest.test_should_synchronize_venue_provider_with_defined_limit": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.provider_manager.synchronize_venue_providers_for_provider", "pcapi.model_creators.generic_creators.create_venue", "tests.test_utils.fake"], "tests.local_providers.provider_manager_test.SynchronizeVenueProvidersForProviderTest.test_should_call_synchronize_venue_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.local_providers.provider_manager.synchronize_venue_providers_for_provider", "pcapi.model_creators.generic_creators.create_venue"], "tests.local_providers.provider_manager_test.SynchronizeDataForProviderTest.test_should_call_do_update_for_specified_provider": ["pcapi.local_providers.provider_manager.synchronize_data_for_provider", "tests.test_utils.fake"], "tests.emails.payment_reports_test.test_make_payments_report_email": ["pcapi.utils.mailing.make_payments_report_email", "<builtin>.len"], "tests.emails.payment_reports_test.test_make_payment_message_email": ["pcapi.utils.mailing.make_payment_message_email"], "tests.emails.payment_reports_test.test_make_payment_details_email": ["pcapi.utils.mailing.make_payment_details_email", "<builtin>.len"], "src.pcapi.emails.offer_report.build_offer_report_data": ["pcapi.utils.mailing.build_pc_pro_offer_link"], "pcapi.utils.mailing.build_pc_pro_offer_link": [], "tests.scripts.delete_corrupted_allocine_stocks_test.test_should_delete_stock_from_allocine_provider_with_specific_id_at_provider_format": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.scripts.delete_corrupted_allocine_stocks.delete_corrupted_allocine_stocks", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.core.providers.repository.get_provider_by_local_class": [], "pcapi.scripts.delete_corrupted_allocine_stocks.delete_corrupted_allocine_stocks": [], "tests.scripts.delete_corrupted_allocine_stocks_test.test_should_not_delete_stock_from_allocine_with_new_id_format": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.scripts.delete_corrupted_allocine_stocks.delete_corrupted_allocine_stocks", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue"], "tests.scripts.delete_corrupted_allocine_stocks_test.test_should_not_delete_stock_from_other_provider_than_allocine": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.scripts.delete_corrupted_allocine_stocks.delete_corrupted_allocine_stocks", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue"], "tests.scripts.delete_corrupted_allocine_stocks_test.test_should_not_delete_stock_from_allocine_when_not_sof_deleted": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.scripts.delete_corrupted_allocine_stocks.delete_corrupted_allocine_stocks", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.core.users.email.send._build_link_for_email_change": ["pcapi.core.users.utils.encode_jwt_payload", "<builtin>.int", "pcapi.utils.urls.generate_firebase_dynamic_link"], "src.pcapi.core.users.email.send.send_user_emails_for_email_change": ["pcapi.core.mails.transactional.users.email_address_change.send_confirmation_email_change_email", "src.pcapi.core.users.email.send._build_link_for_email_change", "pcapi.core.mails.transactional.users.email_address_change.send_information_email_change_email", "pcapi.core.users.repository.find_user_by_email"], "pcapi.core.mails.transactional.users.email_address_change.send_information_email_change_email": [], "pcapi.core.mails.transactional.users.email_address_change.send_confirmation_email_change_email": [], "src.pcapi.validation.models.bank_information.validate": ["schwifty.BIC", "schwifty.IBAN"], "schwifty.IBAN": [], "schwifty.BIC": [], "tests.core.educational.test_models.EducationalDepositTest.test_final_educational_deposit_amounts": ["pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal"], "tests.core.educational.test_models.EducationalDepositTest.test_not_final_educational_deposit_amounts": ["pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal"], "tests.core.educational.test_models.EducationalDepositTest.test_should_raise_insufficient_fund": ["pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal"], "tests.core.educational.test_models.EducationalDepositTest.test_should_raise_insufficient_temporary_fund": ["pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal"], "src.pcapi.routes.pro.providers.get_providers_by_venue": ["pcapi.routes.serialization.providers_serialize.ListProviderResponse", "pcapi.core.providers.repository.has_allocine_pivot_for_venue", "pcapi.utils.rest.load_or_404", "pcapi.core.providers.repository.get_providers_enabled_for_pro_excluding_specific_provider", "pcapi.core.providers.repository.get_enabled_providers_for_pro"], "pcapi.utils.rest.load_or_404": [], "pcapi.core.providers.repository.has_allocine_pivot_for_venue": [], "pcapi.core.providers.repository.get_providers_enabled_for_pro_excluding_specific_provider": [], "pcapi.core.providers.repository.get_enabled_providers_for_pro": [], "pcapi.routes.serialization.providers_serialize.ListProviderResponse": [], "src.pcapi.core.educational.factories.CollectiveOfferFactory._create": ["<builtin>.super"], "src.pcapi.core.educational.factories.CollectiveOfferTemplateFactory._create": ["<builtin>.super"], "src.pcapi.core.educational.factories.EducationalYearFactory.<lambda1>": ["<builtin>.str", "src.pcapi.core.educational.factories._get_current_educational_year_adage_id"], "src.pcapi.core.educational.factories._get_current_educational_year_adage_id": ["src.pcapi.core.educational.factories._get_current_educational_year"], "src.pcapi.core.educational.factories._get_current_educational_year": [], "src.pcapi.core.educational.factories.EducationalYearFactory.<lambda2>": ["src.pcapi.core.educational.factories._get_current_educational_year", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.educational.factories.EducationalYearFactory.<lambda3>": ["src.pcapi.core.educational.factories._get_current_educational_year", "dateutil.relativedelta.relativedelta"], "tests.core.fraud.dms.test_api.DmsApiTest.test_get_or_create_fraud_check_creates": ["<builtin>.str", "pcapi.core.fraud.dms.api.get_or_create_fraud_check", "<builtin>.len"], "pcapi.core.fraud.dms.api.get_or_create_fraud_check": [], "tests.core.fraud.dms.test_api.DmsApiTest.test_get_or_create_fraud_check_gets": ["<builtin>.str", "pcapi.core.fraud.dms.api.get_or_create_fraud_check", "<builtin>.len"], "src.pcapi.core.bookings.api.book_offer": ["pcapi.core.users.external.update_external_pro", "pcapi.repository.transaction", "pcapi.core.mails.transactional.bookings.new_booking_to_pro.send_user_new_booking_to_pro_email", "pcapi.core.users.external.update_external_user", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.send_individual_booking_confirmation_email_to_beneficiary"], "pcapi.core.mails.transactional.bookings.new_booking_to_pro.send_user_new_booking_to_pro_email": [], "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.send_individual_booking_confirmation_email_to_beneficiary": [], "src.pcapi.core.bookings.api._cancel_booking": ["pcapi.repository.transaction", "pcapi.core.users.external.update_external_user", "<builtin>.str", "pcapi.core.users.external.update_external_pro"], "src.pcapi.core.bookings.api._cancel_bookings_from_stock": ["src.pcapi.core.bookings.api._cancel_booking"], "src.pcapi.core.bookings.api.cancel_booking_by_beneficiary": ["<builtin>.RuntimeError", "src.pcapi.core.bookings.api._cancel_booking"], "src.pcapi.core.bookings.api.cancel_booking_by_offerer": ["src.pcapi.core.bookings.api._cancel_booking"], "src.pcapi.core.bookings.api.cancel_bookings_from_stock_by_offerer": ["src.pcapi.core.bookings.api._cancel_bookings_from_stock"], "src.pcapi.core.bookings.api.cancel_bookings_from_rejected_offer": ["extend"], "extend": [], "src.pcapi.core.bookings.api.cancel_booking_for_fraud": ["src.pcapi.core.bookings.api._cancel_booking", "pcapi.core.mails.transactional.bookings.booking_cancellation.send_booking_cancellation_emails_to_user_and_offerer"], "src.pcapi.core.bookings.api.cancel_booking_on_user_requested_account_suspension": ["src.pcapi.core.bookings.api._cancel_booking", "pcapi.core.mails.transactional.bookings.booking_cancellation.send_booking_cancellation_emails_to_user_and_offerer"], "src.pcapi.core.bookings.api.mark_as_used": ["pcapi.core.users.external.update_external_user"], "src.pcapi.core.bookings.api.mark_as_used_with_uncancelling": ["pcapi.repository.transaction", "pcapi.core.users.external.update_external_user"], "src.pcapi.core.bookings.api.mark_as_cancelled": ["src.pcapi.core.bookings.api._cancel_booking", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.send_booking_cancellation_by_beneficiary_to_pro_email"], "src.pcapi.core.bookings.api.mark_as_unused": ["pcapi.core.users.external.update_external_pro", "pcapi.core.users.external.update_external_user"], "src.pcapi.core.bookings.api.compute_cancellation_limit_date": ["<builtin>.min", "<builtin>.max"], "src.pcapi.core.bookings.api.update_cancellation_limit_dates": ["src.pcapi.core.bookings.api.compute_cancellation_limit_date"], "src.pcapi.core.bookings.api.recompute_dnBookedQuantity": ["<builtin>.tuple"], "src.pcapi.core.bookings.api.auto_mark_as_used_after_event": ["operator.or_", "<builtin>.ValueError"], "operator.or_": [], "src.pcapi.core.bookings.api.mark_bookings_as_reimbursed_from_payment_ids": ["<builtin>.list", "<builtin>.iter"], "src.pcapi.scripts.payment.banishment_command.ban_payments": ["<builtin>.int"], "tests.core.mails.transactional.users.recredit_to_underage_beneficiary_test.SendinblueSendNewlyEligibleUserEmailTest.test_send_recredit_email_to_underage_beneficiary": ["pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.send_recredit_email_to_underage_beneficiary", "<builtin>.len"], "tests.core.mails.transactional.users.recredit_to_underage_beneficiary_test.SendinblueSendNewlyEligibleUserEmailTest.test_return_correct_recredit_email_to_underage_beneficiary_email_data": ["pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.get_recredit_to_underage_beneficiary_email_data", "pcapi.core.users.api.get_domains_credit"], "pcapi.core.mails.transactional.users.recredit_to_underage_beneficiary.get_recredit_to_underage_beneficiary_email_data": [], "tests.domain.bank_account_test.FormatRawIbanAndBicTest.test_return_nothing_if_given_data_is_none": ["pcapi.domain.bank_account.format_raw_iban_and_bic"], "pcapi.domain.bank_account.format_raw_iban_and_bic": [], "tests.domain.bank_account_test.FormatRawIbanAndBicTest.test_return_string_without_spaces": ["pcapi.domain.bank_account.format_raw_iban_and_bic"], "tests.domain.bank_account_test.FormatRawIbanAndBicTest.test_return_uppercased_string": ["pcapi.domain.bank_account.format_raw_iban_and_bic"], "src.pcapi.core.providers.models.Provider.getProviderAPI": ["pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI"], "src.pcapi.core.providers.models.VenueProvider.restize_integrity_error": ["<builtin>.str"], "src.pcapi.core.providers.models.AllocineVenueProviderPriceRule.restize_integrity_error": ["<builtin>.str"], "src.pcapi.core.providers.models.AllocineVenueProviderPriceRule.restize_data_error": ["<builtin>.str"], "src.pcapi.notifications.push.backends.batch.BatchBackend.__init__": ["<builtin>.super"], "src.pcapi.notifications.push.backends.batch.BatchBackend.update_users_attributes": ["src.pcapi.notifications.push.backends.batch.BatchBackend.update_users_attributes.make_post_request"], "src.pcapi.notifications.push.backends.batch.BatchBackend.update_users_attributes.make_post_request": ["src.pcapi.notifications.push.backends.batch.BatchBackend.update_users_attributes.payload_template"], "src.pcapi.notifications.push.backends.batch.BatchBackend.update_users_attributes.payload_template": [], "src.pcapi.notifications.push.backends.batch.BatchBackend.send_transactional_notification": ["src.pcapi.notifications.push.backends.batch.BatchBackend.send_transactional_notification.make_post_request"], "src.pcapi.notifications.push.backends.batch.BatchBackend.send_transactional_notification.make_post_request": ["<builtin>.str"], "src.pcapi.notifications.push.backends.batch.BatchBackend.delete_user_attributes": ["<builtin>.str"], "tests.routes.pro.get_venue_test.Returns200Test.when_user_has_rights_on_managing_offerer": ["pcapi.utils.date.format_into_utc_date", "<builtin>.float", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_venue_test.Returns403Test.when_current_user_doesnt_have_rights": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_stocks_test.Returns201Test.test_create_one_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_stocks_test.Returns201Test.test_create_one_stock_with_activation_codes": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_stocks_test.Returns201Test.test_edit_one_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_stocks_test.Returns201Test.test_upsert_multiple_stocks": ["tests.conftest.TestClient.__init__", "<builtin>.enumerate", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "<builtin>.len", "pcapi.routes.serialization.serialize", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_stocks_test.Returns400Test.when_missing_offer_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "pcapi.routes.serialization.serialize"], "tests.routes.pro.post_stocks_test.Returns400Test.when_invalid_quantity_or_price_for_edition_and_creation": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "pcapi.routes.serialization.serialize", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_stocks_test.Returns400Test.test_patch_non_approved_offer_fails": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_stocks_test.Returns400Test.test_invalid_activation_codes_expiration_datetime": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_stocks_test.Returns400Test.test_invalid_booking_limit_datetime": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_stocks_test.Returns400Test.test_when_offer_is_not_digital": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_stocks_test.Returns400Test.test_create_one_stock_with_invalid_prices": ["tests.conftest.TestClient.__init__", "<builtin>.float", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_stocks_test.Returns403Test.when_user_has_no_rights_and_creating_stock_from_offer_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.routes.serialization.serialize", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_user_test.test_patch_user": ["tests.conftest.TestClient.__init__", "<builtin>.len", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_user_test.test_reject_beneficiary": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_user_test.test_forbid_some_attributes": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "<builtin>.getattr", "tests.conftest.TestClient.patch", "<map>.items"], "tests.routes.pro.patch_user_test.PatchProUserBodyModelTest.test_empty_first_name": ["pcapi.routes.serialization.users.PatchProUserBodyModel"], "pcapi.routes.serialization.users.PatchProUserBodyModel": [], "tests.routes.pro.patch_user_test.PatchProUserBodyModelTest.test_empty_last_name": ["pcapi.routes.serialization.users.PatchProUserBodyModel"], "tests.routes.pro.patch_user_test.PatchProUserBodyModelTest.test_empty_email": ["pcapi.routes.serialization.users.PatchProUserBodyModel"], "tests.routes.pro.patch_user_test.PatchProUserBodyModelTest.test_empty_phone_number": ["pcapi.routes.serialization.users.PatchProUserBodyModel"], "tests.routes.pro.patch_user_test.PatchProUserBodyModelTest.test_phone_number_wrong_format": ["pcapi.routes.serialization.users.PatchProUserBodyModel"], "tests.routes.pro.validate_bookings_test.Returns403Test.when_booking_not_confirmed": ["datetime.timedelta"], "tests.routes.pro.validate_bookings_test.Returns404Test.when_user_not_editor_and_valid_email_but_invalid_offer_id": ["pcapi.utils.human_ids.humanize"], "src.pcapi.core.mails.transactional.pro.reset_password_to_pro.get_reset_password_to_pro_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.mailing.build_pc_pro_reset_password_link"], "pcapi.utils.mailing.build_pc_pro_reset_password_link": [], "src.pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_to_pro_email": ["pcapi.core.users.api.create_reset_password_token", "src.pcapi.core.mails.transactional.pro.reset_password_to_pro.get_reset_password_to_pro_email_data"], "pcapi.core.users.api.create_reset_password_token": [], "src.pcapi.core.mails.transactional.pro.reset_password_to_pro.get_reset_password_link_to_admin_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalWithoutTemplateEmailData"], "src.pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_link_to_admin_email": ["src.pcapi.core.mails.transactional.pro.reset_password_to_pro.get_reset_password_link_to_admin_email_data"], "src.pcapi.core.educational.adage_backends.logger.AdageLoggerClient.notify_prebooking": ["pcapi.core.educational.models.AdageApiResult"], "pcapi.core.educational.models.AdageApiResult": [], "src.pcapi.core.educational.adage_backends.logger.AdageLoggerClient.notify_offer_or_stock_edition": ["pcapi.core.educational.models.AdageApiResult"], "src.pcapi.core.educational.adage_backends.logger.AdageLoggerClient.get_adage_offerer": ["pcapi.connectors.api_adage.CulturalPartnerNotFoundException"], "pcapi.connectors.api_adage.CulturalPartnerNotFoundException": [], "src.pcapi.core.educational.adage_backends.logger.AdageLoggerClient.notify_booking_cancellation_by_offerer": ["pcapi.core.educational.models.AdageApiResult"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateOffererFromCSVTest.test_map_an_offerer_from_ordered_dict": ["<builtin>.isinstance", "pcapi.scripts.offerer.import_offerer_from_csv.create_offerer_from_csv", "collections.OrderedDict"], "collections.OrderedDict": [], "pcapi.scripts.offerer.import_offerer_from_csv.create_offerer_from_csv": [], "tests.scripts.offerer.import_offerers_from_csv_test.CreateOffererFromCSVTest.test_use_Postal_code_when_sirene_postal_code_is_not_set": ["<builtin>.isinstance", "pcapi.scripts.offerer.import_offerer_from_csv.create_offerer_from_csv", "collections.OrderedDict"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateOffererFromCSVTest.test_use_Name_when_nom_structure_is_not_set": ["<builtin>.isinstance", "pcapi.scripts.offerer.import_offerer_from_csv.create_offerer_from_csv", "collections.OrderedDict"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateVenueFromCSVTest.test_map_a_venue_from_ordered_dict": ["<builtin>.isinstance", "pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv", "collections.OrderedDict", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "pcapi.core.offerers.factories.VenueTypeFactory": [], "pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv": [], "tests.scripts.offerer.import_offerers_from_csv_test.CreateVenueFromCSVTest.test_use_Postal_code_when_no_SIRENE_code_postal": ["<builtin>.isinstance", "pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv", "collections.OrderedDict", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateVenueFromCSVTest.test_should_have_a_venue_type": ["pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv", "pcapi.core.offers.factories.OffererFactory", "collections.OrderedDict", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateVenueFromCSVTest.test_create_venue_name_when_information_missing": ["pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv", "collections.OrderedDict", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateVenueFromCSVTest.test_when_geolocation_is_missing": ["pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv", "collections.OrderedDict", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateProUserFromCSVTest.test_map_a_creation_model_from_csv": ["<builtin>.isinstance", "collections.OrderedDict", "pcapi.scripts.offerer.import_offerer_from_csv.create_user_model_from_csv"], "pcapi.scripts.offerer.import_offerer_from_csv.create_user_model_from_csv": [], "tests.scripts.offerer.import_offerers_from_csv_test.CreateProUserFromCSVTest.test_fill_missing_phone_with_fake_number": ["<builtin>.isinstance", "collections.OrderedDict", "pcapi.scripts.offerer.import_offerer_from_csv.create_user_model_from_csv"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateProUserFromCSVTest.test_use_Postal_code_when_sirene_postal_code_is_not_set": ["collections.OrderedDict", "pcapi.scripts.offerer.import_offerer_from_csv.create_user_model_from_csv"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest.test_created_pro_is_activated_with_90_days_reset_password": ["collections.OrderedDict", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VirtualVenueFactory", "datetime.datetime", "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "pcapi.core.offerers.factories.VirtualVenueTypeFactory": [], "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv": [], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest.test_when_is_a_new_offerer": ["pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "collections.OrderedDict", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest.test_when_is_already_existing_offerer": ["collections.OrderedDict", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VirtualVenueFactory", "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest.test_when_no_siret_for_venue_creation": ["pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "collections.OrderedDict"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest.test_when_user_already_exists": ["pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "collections.OrderedDict"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest.test_ignore_when_user_has_no_postal": ["pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "collections.OrderedDict"], "tests.scripts.offerer.import_offerers_from_csv_test.CreateAnEntireOffererFromCSVRowTest.test_when_siret_wrong": ["collections.OrderedDict", "pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.admin.custom_views.custom_reimbursement_rule_view_test.test_create_rule": ["<builtin>.dict"], "tests.routes.pro.post_venue_test.create_valid_venue_data": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_test.test_should_register_new_venue": ["pcapi.core.users.factories.ProFactory", "tests.routes.pro.post_venue_test.create_valid_venue_data", "<builtin>.len", "pcapi.utils.human_ids.dehumanize"], "tests.routes.pro.post_venue_test.test_should_register_new_venue_with_a_business_unit": ["tests.conftest.TestClient.__init__", "tests.routes.pro.post_venue_test.create_valid_venue_data", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.core.users.factories.ProFactory"], "tests.routes.pro.post_venue_test.test_should_return_401_when_business_unit_not_exist": ["tests.conftest.TestClient.__init__", "tests.routes.pro.post_venue_test.create_valid_venue_data", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.core.users.factories.ProFactory"], "tests.routes.pro.post_venue_test.test_should_return_401_when_latitude_out_of_range_and_longitude_wrong_format": ["tests.conftest.TestClient.__init__", "tests.routes.pro.post_venue_test.create_valid_venue_data", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.core.users.factories.ProFactory"], "tests.routes.pro.post_venue_test.test_should_return_401_when_longitude_out_of_range_and_latitude_wrong_format": ["tests.conftest.TestClient.__init__", "tests.routes.pro.post_venue_test.create_valid_venue_data", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.core.users.factories.ProFactory"], "tests.routes.pro.post_venue_test.test_mandatory_accessibility_fields": ["tests.conftest.TestClient.__init__", "tests.routes.pro.post_venue_test.create_valid_venue_data", "<map>.pop", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.core.users.factories.ProFactory"], "<map>.pop": [], "tests.routes.pro.post_venue_test.test_should_return_403_when_user_is_not_managing_offerer_create_venue": ["tests.conftest.TestClient.__init__", "tests.routes.pro.post_venue_test.create_valid_venue_data", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.core.users.factories.ProFactory"], "tests.routes.pro.post_venue_test.VenueBannerTest.test_upload_image": ["pcapi.utils.human_ids.humanize", "pcapi.core.testing.override_settings"], "tests.routes.shared.post_new_password_test.test_change_password": ["<builtin>.len"], "tests.routes.shared.post_new_password_test.test_change_password_validates_email": ["<builtin>.len"], "tests.routes.shared.post_new_password_test.test_fail_if_token_has_expired": ["datetime.timedelta"], "src.pcapi.routes.pro.users.patch_user_tuto_seen_legacy": ["src.pcapi.routes.pro.users._ensure_current_user_has_rights", "pcapi.utils.rest.load_or_404"], "src.pcapi.routes.pro.users._ensure_current_user_has_rights": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.pro.users.patch_profile": ["flask.abort"], "src.pcapi.core.subscription.educonnect.api.handle_educonnect_authentication": ["src.pcapi.core.subscription.educonnect.api._add_error_subscription_messages"], "src.pcapi.core.subscription.educonnect.api._add_error_subscription_messages": [], "src.pcapi.core.subscription.educonnect.api.get_educonnect_subscription_item_status": ["<builtin>.any"], "src.pcapi.core.mails.backends.sendinblue.SendinblueBackend._send": ["<builtin>.isinstance", "pcapi.core.mails.models.models.MailResult", "<builtin>.list", "dataclasses.asdict", "pcapi.tasks.serialization.sendinblue_tasks.SendTransactionalEmailRequest", "<builtin>.ValueError"], "pcapi.core.mails.models.models.MailResult": [], "src.pcapi.core.mails.backends.sendinblue.ToDevSendinblueBackend.send_mail": ["<builtin>.super"], "src.pcapi.repository.reimbursement_queries.find_all_offerer_payments": ["src.pcapi.repository.reimbursement_queries.find_all_offerers_payments"], "src.pcapi.repository.reimbursement_queries.find_all_offerers_payments": [], "tests.core.mails.transactional.pro.reset_password_to_pro_test.SendinblueProResetPasswordEmailDataTest.test_get_email_correct_metadata": ["pcapi.core.mails.transactional.pro.reset_password_to_pro.get_reset_password_to_pro_email_data"], "pcapi.core.mails.transactional.pro.reset_password_to_pro.get_reset_password_to_pro_email_data": [], "tests.core.mails.transactional.pro.reset_password_to_pro_test.SendinblueProResetPasswordEmailDataTest.when_feature_send_emails_enabled_sends_a_reset_password_email_to_pro_user": ["pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_to_pro_email", "<builtin>.len"], "pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_to_pro_email": [], "tests.core.mails.transactional.pro.reset_password_to_pro_test.SendinblueProResetPasswordEmailDataTest.test_email_sent_to_admin": ["pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_link_to_admin_email", "<builtin>.len"], "pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_link_to_admin_email": [], "src.pcapi.core.educational.repository.get_and_lock_educational_deposit": ["pcapi.core.educational.exceptions.EducationalDepositNotFound"], "pcapi.core.educational.exceptions.EducationalDepositNotFound": [], "src.pcapi.core.educational.repository.get_confirmed_educational_bookings_amount": ["<builtin>.sum", "sqlalchemy.orm.joinedload", "decimal.Decimal"], "src.pcapi.core.educational.repository.find_educational_booking_by_id": ["sqlalchemy.orm.joinedload"], "src.pcapi.core.educational.repository.get_educational_year_beginning_at_given_year": ["sqlalchemy.sql.expression.extract", "pcapi.core.educational.exceptions.EducationalYearNotFound"], "sqlalchemy.sql.expression.extract": [], "pcapi.core.educational.exceptions.EducationalYearNotFound": [], "src.pcapi.core.educational.repository.find_educational_bookings_for_adage": ["sqlalchemy.orm.contains_eager", "sqlalchemy.orm.joinedload"], "src.pcapi.core.educational.repository.find_active_educational_booking_by_offer_id": ["sqlalchemy.orm.contains_eager", "sqlalchemy.orm.joinedload"], "src.pcapi.core.educational.repository.get_bookings_for_educational_year": ["sqlalchemy.orm.joinedload"], "tests.validation.routes.users_authentifications_test.CheckUserIsLoggedInOrEmailIsProvidedTest.test_raises_an_error_when_no_email_nor_user_logged": ["flask_login.mixins.AnonymousUserMixin", "pcapi.validation.routes.users_authentifications.check_user_is_logged_in_or_email_is_provided"], "flask_login.mixins.AnonymousUserMixin": [], "pcapi.validation.routes.users_authentifications.check_user_is_logged_in_or_email_is_provided": [], "tests.validation.routes.users_authentifications_test.CheckUserIsLoggedInOrEmailIsProvidedTest.test_does_not_raise_error_when_email_is_provided": ["flask_login.mixins.AnonymousUserMixin", "pcapi.validation.routes.users_authentifications.check_user_is_logged_in_or_email_is_provided"], "tests.validation.routes.users_authentifications_test.CheckUserIsLoggedInOrEmailIsProvidedTest.test_does_not_raise_error_when_user_is_authenticated": ["pcapi.validation.routes.users_authentifications.check_user_is_logged_in_or_email_is_provided", "pcapi.core.users.models.User"], "src.pcapi.routes.adage_iframe.serialization.offers.OfferVenueResponse.from_orm": ["<builtin>.super"], "src.pcapi.routes.adage_iframe.serialization.offers.OfferResponse.from_orm": ["<builtin>.super"], "tests.utils.clean_accents_test.CleanAccentsTest.test_with_one_accent_word": ["pcapi.utils.clean_accents.clean_accents"], "tests.utils.clean_accents_test.CleanAccentsTest.test_with_many_accents_word": ["pcapi.utils.clean_accents.clean_accents"], "tests.utils.clean_accents_test.CleanAccentsTest.test_unusual_text": ["pcapi.utils.clean_accents.clean_accents"], "tests.repository.user_session_queries_test.DeleteUserSessionTest.test_do_not_try_to_delete_session_when_session_does_not_exist": ["pcapi.repository.user_session_queries.delete_user_session"], "tests.repository.user_session_queries_test.DeleteUserSessionTest.test_remove_session_for_user": ["pcapi.repository.user_session_queries.delete_user_session", "pcapi.models.user_session.UserSession"], "pcapi.models.user_session.UserSession": [], "src.pcapi.core.bookings.factories.BookingFactory._create": ["<builtin>.super"], "src.pcapi.core.educational.utils.compute_educational_booking_cancellation_limit_date": ["datetime.timedelta", "<builtin>.max"], "tests.routes.pro.delete_venue_banner_test.VenueBannerTest.test_delete_banner": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.delete_venue_banner_test.VenueBannerTest.test_delete_no_banner": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.delete_venue_banner_test.VenueBannerTest.test_no_access_rights": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_offerer_test.Returns201Test.when_creating_a_virtual_venue": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "unittest.mock.MagicMock", "tests.conftest.TestClient.with_session_auth", "<builtin>.list", "<builtin>.filter", "<builtin>.len", "pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.factories.VirtualVenueTypeFactory"], "tests.routes.pro.post_offerer_test.Returns201Test.when_no_address_is_provided": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "unittest.mock.MagicMock", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.factories.VirtualVenueTypeFactory"], "tests.routes.pro.post_offerer_test.Returns201Test.when_current_user_is_admin": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "unittest.mock.MagicMock", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.core.users.factories.AdminFactory"], "tests.routes.pro.post_offerer_test.Returns201Test.expect_the_current_user_to_have_access_to_new_offerer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "unittest.mock.MagicMock", "tests.conftest.TestClient.with_session_auth", "pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.factories.VirtualVenueTypeFactory"], "tests.routes.pro.post_offerer_test.Returns201Test.when_offerer_already_have_user_offerer_new_user_offerer_has_validation_token": ["tests.conftest.TestClient.__init__", "pcapi.core.offers.factories.OffererFactory", "unittest.mock.MagicMock", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.core.offers.factories.UserOffererFactory"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.sendinblue_send_email_test": ["pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.send_individual_booking_confirmation_email_to_beneficiary", "pcapi.core.bookings.factories.IndividualBookingFactory", "<builtin>.len"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data": ["pcapi.utils.human_ids.humanize", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.test_should_return_event_specific_data_for_email_when_offer_is_an_event_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data": [], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.test_should_return_event_specific_data_for_email_when_offer_is_a_duo_event_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.test_should_return_thing_specific_data_for_email_when_offer_is_a_thing_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.test_should_use_public_name_when_available_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.test_should_return_withdrawal_details_when_available_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.DigitalOffersTestSendinblue.test_should_return_digital_thing_specific_data_for_email_when_offer_is_a_digital_thing_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.DigitalOffersTestSendinblue.test_hide_cancellation_policy_on_bookings_with_activation_code_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "datetime.datetime", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data", "pcapi.core.bookings.factories.UsedIndividualBookingFactory"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.DigitalOffersTestSendinblue.test_use_activation_code_instead_of_token_if_possible_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.utils.human_ids.humanize", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.DigitalOffersTestSendinblue.test_add_expiration_date_from_activation_code_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "datetime.datetime", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.test_should_return_total_price_for_duo_offers_sendinblue": ["pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.test_digital_offer_without_departement_code_information_sendinblue": ["datetime.datetime", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.BooksBookingExpirationDateTestSendinblue.test_should_return_new_expiration_delay_data_for_email_when_offer_is_a_book_sendinblue": ["tests.core.mails.transactional.bookings.booking_confirmation_to_beneficiary_test.get_expected_base_sendinblue_email_data", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_around_18": ["dateutil.relativedelta.relativedelta"], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_get_emails_who_will_turn_eighteen_in_one_month": ["<builtin>.sorted", "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_around_18", "pcapi.core.users.external.user_automations.get_emails_who_will_turn_eighteen_in_one_month", "<builtin>.len"], "pcapi.core.users.external.user_automations.get_emails_who_will_turn_eighteen_in_one_month": [], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_user_turned_eighteen_automation": ["pcapi.core.users.external.user_automations.users_turned_eighteen_automation", "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_around_18", "sib_api_v3_sdk.RemoveContactFromList"], "pcapi.core.users.external.user_automations.users_turned_eighteen_automation": [], "sib_api_v3_sdk.RemoveContactFromList": [], "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_with_deposits": ["freezegun.freeze_time"], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_get_users_beneficiary_three_months_before_credit_expiration": ["freezegun.freeze_time", "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_with_deposits"], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_users_beneficiary_credit_expiration_within_next_3_months_automation": ["freezegun.freeze_time", "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_with_deposits", "sib_api_v3_sdk.RemoveContactFromList", "sib_api_v3_sdk.RequestContactImport"], "sib_api_v3_sdk.RequestContactImport": [], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_get_users_ex_beneficiary": ["freezegun.freeze_time", "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_with_deposits"], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_user_ex_beneficiary_automation": ["freezegun.freeze_time", "<builtin>.set", "tests.core.users.external.user_automations_test.UserAutomationsTest._create_users_with_deposits"], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_get_email_for_inactive_user_since_thirty_days": ["<builtin>.sorted", "freezegun.freeze_time", "pcapi.core.users.external.user_automations.get_email_for_inactive_user_since_thirty_days", "datetime.datetime"], "pcapi.core.users.external.user_automations.get_email_for_inactive_user_since_thirty_days": [], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_users_inactive_since_30_days_automation": ["sib_api_v3_sdk.RequestContactImport", "freezegun.freeze_time", "datetime.datetime", "pcapi.core.users.external.user_automations.users_inactive_since_30_days_automation", "sib_api_v3_sdk.RemoveContactFromList"], "pcapi.core.users.external.user_automations.users_inactive_since_30_days_automation": [], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_users_inactive_since_30_days_automation_no_result": ["freezegun.freeze_time", "pcapi.core.users.external.user_automations.users_inactive_since_30_days_automation", "datetime.datetime", "sib_api_v3_sdk.RemoveContactFromList"], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_get_email_for_users_created_one_year_ago_per_month": ["append", "datetime.datetime", "freezegun.freeze_time"], "tests.core.users.external.user_automations_test.UserAutomationsTest.test_users_nearly_one_year_with_pass_automation": ["freezegun.freeze_time", "datetime.datetime", "sib_api_v3_sdk.RemoveContactFromList", "sib_api_v3_sdk.RequestContactImport"], "tests.repository.user_queries_test.GetAllUsersWalletBalancesTest.test_users_are_sorted_by_user_id": ["pcapi.repository.user_queries.get_all_users_wallet_balances"], "tests.repository.user_queries_test.GetAllUsersWalletBalancesTest.test_users_with_no_deposits_are_ignored": ["pcapi.repository.user_queries.get_all_users_wallet_balances"], "tests.repository.user_queries_test.GetAllUsersWalletBalancesTest.test_returns_both_current_and_real_balances": ["pcapi.repository.user_queries.get_all_users_wallet_balances"], "tests.repository.user_queries_test.FindProUsersByEmailProviderTest.test_returns_pro_users_with_matching_email_provider": ["pcapi.repository.user_queries.find_pro_users_by_email_provider", "<builtin>.len"], "pcapi.repository.user_queries.find_pro_users_by_email_provider": [], "tests.repository.user_queries_test.FindProUsersByEmailProviderTest.test_returns_only_pro_users_with_matching_email_provider": ["pcapi.repository.user_queries.find_pro_users_by_email_provider", "<builtin>.len"], "src.pcapi.admin.custom_views.offerer_tag_view.OffererTagView.get_create_form": ["wtforms.validators.DataRequired", "wtforms.fields.core.StringField", "wtforms.validators.Regexp", "wtforms.validators.Length"], "wtforms.validators.Regexp": [], "wtforms.fields.core.StringField": [], "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.__init__": ["pcapi.connectors.ftp_titelive.get_files_to_process_from_titelive_ftp", "<builtin>.super", "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.get_remaining_files_to_check"], "pcapi.connectors.ftp_titelive.get_files_to_process_from_titelive_ftp": [], "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.get_remaining_files_to_check": ["<builtin>.filter", "<builtin>.iter"], "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.__next__": ["<builtin>.next", "pathlib.PurePath", "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.open_next_file"], "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.open_next_file": ["pcapi.domain.titelive.get_date_from_filename", "pcapi.connectors.ftp_titelive.get_zip_file_from_ftp", "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.get_description_files_from_zip_info", "pcapi.domain.titelive.read_description_date", "<builtin>.str", "<builtin>.next"], "pcapi.domain.titelive.get_date_from_filename": [], "pcapi.connectors.ftp_titelive.get_zip_file_from_ftp": [], "src.pcapi.local_providers.titelive_thing_descriptions.titelive_thing_descriptions.TiteLiveThingDescriptions.get_description_files_from_zip_info": ["<builtin>.sorted", "<builtin>.filter", "<builtin>.iter"], "pcapi.domain.titelive.read_description_date": [], "pathlib.PurePath": [], "tests.models.thing_test.test_thing_error_when_thing_type_is_offlineOnly_but_has_url": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory"], "src.pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated": ["src.pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_recap"], "src.pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_recap": ["src.pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_status_history", "pcapi.utils.human_ids.humanize", "pcapi.utils.date.format_into_timezoned_date"], "pcapi.utils.date.format_into_timezoned_date": [], "src.pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_status_history": ["<builtin>.isinstance", "src.pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_status_info", "append"], "src.pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_status_info": ["pcapi.utils.date.format_into_timezoned_date"], "src.pcapi.utils.pdf.generate_pdf_from_html": ["weasyprint.HTML"], "weasyprint.HTML": [], "tests.admin.custom_views.offer_view_test.BeneficiaryUserViewTest.test_max_one_searchable_on_offer_view": ["pcapi.admin.custom_views.offer_view.OfferView", "<builtin>.len"], "pcapi.admin.custom_views.offer_view.OfferView": [], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_approve_offer_and_go_to_next_offer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.VenueFactory"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_approve_last_pending_offer_and_go_to_the_next_offer_redirect_to_validation_page": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.VenueFactory"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_approve_virtual_offer_and_send_mail_to_managing_offerer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.VenueFactory"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_approve_physical_offer_and_send_mail_to_venue_booking_email": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.VenueFactory"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_import_validation_config": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_import_validation_config_fail_with_wrong_value": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_import_validation_config_fail_when_user_is_not_super_admin": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_approve_offer_and_send_mail_to_administration": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.api.import_offer_validation_config"], "pcapi.core.offers.api.import_offer_validation_config": [], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_reject_offer_and_send_mail_to_administration": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.api.import_offer_validation_config"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_access_to_validation_page_with_super_admin_user_on_prod_env": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_access_to_validation_page_with_none_super_admin_user_on_prod_env": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_get_query_and_count": ["pcapi.admin.custom_views.offer_view.ValidationView"], "pcapi.admin.custom_views.offer_view.ValidationView": [], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_number_of_queries_for_offer_list": ["tests.conftest.TestClient.__init__", "<builtin>.range", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_batch_approve_offers": ["<builtin>.dict", "pcapi.core.offers.factories.VenueFactory"], "tests.admin.custom_views.offer_view_test.OfferValidationViewTest.test_batch_approve_reject_offers_not_updated": ["<builtin>.dict", "pcapi.core.offers.factories.VenueFactory"], "tests.admin.custom_views.offer_view_test.GetOfferValidationViewTest.test_offer_validation_legal_category_api_calls": ["tests.conftest.TestClient.__init__", "pcapi.core.offers.api.import_offer_validation_config", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.offer_view_test.GetOfferValidationViewTest.test_view_form_loads_if_wrong_siren": ["pcapi.core.offers.api.import_offer_validation_config", "pcapi.connectors.api_entreprises.ApiEntrepriseException"], "pcapi.connectors.api_entreprises.ApiEntrepriseException": [], "tests.admin.custom_views.offer_view_test.OfferViewTest.test_reject_approved_offer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "freezegun.freeze_time"], "tests.admin.custom_views.offer_view_test.OfferViewTest.test_approve_rejected_offer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "freezegun.freeze_time"], "tests.admin.custom_views.offer_view_test.OfferViewTest.test_reject_approved_offer_with_bookings": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "freezegun.freeze_time"], "tests.admin.custom_views.offer_view_test.OfferViewTest.test_change_to_draft_approved_offer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.get_booking_cancellation_by_beneficiary_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.core.offers.utils.offer_app_link", "<builtin>.float", "pcapi.utils.date.get_date_formatted_for_email", "pcapi.utils.date.utc_datetime_to_department_timezone", "pcapi.utils.date.get_time_formatted_for_email"], "pcapi.utils.date.utc_datetime_to_department_timezone": [], "pcapi.utils.date.get_date_formatted_for_email": [], "pcapi.utils.date.get_time_formatted_for_email": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.send_booking_cancellation_by_beneficiary_email": ["src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.get_booking_cancellation_by_beneficiary_email_data"], "tests.routes.pro.get_invoices_test.test_get_invoices": ["<builtin>.len"], "tests.routes.pro.get_invoices_test.test_get_invoices_specify_business_unit": ["<builtin>.len"], "tests.routes.pro.get_invoices_test.test_get_invoices_specify_dates": ["<builtin>.len"], "tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsBeneficiaryEmailSendinblueTest.test_return_correct_email_metadata": ["pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_beneficiary_email_data"], "pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_beneficiary_email_data": [], "tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsUnderageBeneficiaryEmailSendinblueTest.test_return_correct_data_for_native_age_17_user_v2": ["pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_underage_beneficiary_email_data"], "pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_underage_beneficiary_email_data": [], "tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsUnderageBeneficiaryEmailSendinblueTest.test_return_correct_data_for_native_age_16_user_v2": ["pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_underage_beneficiary_email_data"], "tests.core.mails.transactional.users.accepted_as_beneficiary_test.GetAcceptedAsUnderageBeneficiaryEmailSendinblueTest.test_return_correct_data_for_native_age_15_user_v2": ["pcapi.core.mails.transactional.users.accepted_as_beneficiary.get_accepted_as_underage_beneficiary_email_data"], "tests.scripts.import_unsubscribed_users_test.ImportunsubscribedUsersTest.test_synchronize_unsubscribed_users": ["pcapi.scripts.import_unsubscribed_users.synchronize_unsubscribed_users", "pcapi.core.users.factories.UserFactory"], "pcapi.scripts.import_unsubscribed_users.synchronize_unsubscribed_users": [], "src.pcapi.scripts.import_unsubscribed_users._get_emails": ["<builtin>.open", "pathlib.Path"], "src.pcapi.scripts.import_unsubscribed_users.synchronize_unsubscribed_users": ["src.pcapi.scripts.import_unsubscribed_users._get_emails", "<builtin>.print", "<builtin>.len", "pcapi.scripts.external_users.batch_update_users_attributes.format_sendinblue_users", "pcapi.core.users.external.sendinblue.import_contacts_in_sendinblue"], "pcapi.scripts.external_users.batch_update_users_attributes.format_sendinblue_users": [], "pcapi.core.users.external.sendinblue.import_contacts_in_sendinblue": [], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByEmailProvidersTest.test_suspend_users_in_given_emails_providers_list": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers": [], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByEmailProvidersTest.test_cancel_bookings_of_suspended_users": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByEmailProvidersTest.test_does_not_cancel_booking_when_not_cancellable": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByEmailProvidersTest.test_only_suspend_beneficiary_users_in_given_emails_providers_list": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers", "pcapi.core.users.factories.UserFactory", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByEmailProvidersTest.test_dont_suspend_users_not_in_given_emails_providers_list": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByIdsTest.test_suspend_users_by_ids_in_given_user_ids_list": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_ids", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_ids": [], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByIdsTest.test_suspend_users_by_ids_does_not_cancel_bookings_when_not_cancellable": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_ids", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.scripts.suspend_suspected_fraudulent_beneficiary_users_test.SuspendFraudulentBeneficiaryUsersByIdsTest.test_dont_suspend_users_not_in_given_user_ids_list": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_ids", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.utils.mailing_test.BuildPcProOfferLinkTest.test_should_return_pc_pro_offer_link": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.utils.mailing.build_pc_pro_offer_link", "pcapi.utils.human_ids.humanize"], "tests.utils.mailing_test.FormatDateAndHourForEmailTest.test_should_return_formatted_event_beginningDatetime_when_offer_is_an_event": ["datetime.datetime", "pcapi.utils.mailing.format_booking_date_for_email"], "pcapi.utils.mailing.format_booking_date_for_email": [], "tests.utils.mailing_test.FormatDateAndHourForEmailTest.test_should_return_empty_string_when_offer_is_not_an_event": ["pcapi.utils.mailing.format_booking_date_for_email"], "tests.utils.mailing_test.FormatBookingHoursForEmailTest.test_should_return_hours_and_minutes_from_beginningDatetime_when_contains_hours": ["datetime.datetime", "pcapi.utils.mailing.format_booking_hours_for_email"], "tests.utils.mailing_test.FormatBookingHoursForEmailTest.test_should_return_only_hours_from_event_beginningDatetime_when_oclock": ["datetime.datetime", "pcapi.utils.mailing.format_booking_hours_for_email"], "tests.utils.mailing_test.FormatBookingHoursForEmailTest.test_should_return_empty_string_when_offer_is_not_an_event": ["pcapi.utils.mailing.format_booking_hours_for_email"], "tests.utils.mailing_test.MakeValidationEmailObjectTest.test_should_return_subject_with_correct_departement_code": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.utils.mailing.make_validation_email_object"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_email_providers.SuspendFraudulentUsersByEmailProvidersView.search": ["pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers", "flask.flash", "<builtin>.len"], "src.pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations.execute": ["pcapi.domain.bank_information.check_offerer_presence", "pcapi.core.finance.models.BusinessUnit", "pcapi.core.users.external.update_external_pro", "src.pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations.create_new_bank_informations", "pcapi.domain.bank_information.check_new_bank_information_older_than_saved_one", "<builtin>.NotImplementedError", "src.pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations.get_referent_venue", "pcapi.domain.demarches_simplifiees.get_venue_bank_information_application_details_by_application_id", "pcapi.domain.bank_information.check_new_bank_information_has_a_more_advanced_status"], "pcapi.domain.bank_information.check_offerer_presence": [], "src.pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations.get_referent_venue": ["pcapi.domain.bank_information.CannotRegisterBankInformation", "<builtin>.len"], "pcapi.domain.bank_information.CannotRegisterBankInformation": [], "pcapi.domain.bank_information.check_new_bank_information_older_than_saved_one": [], "pcapi.domain.bank_information.check_new_bank_information_has_a_more_advanced_status": [], "src.pcapi.use_cases.save_venue_bank_informations.SaveVenueBankInformations.create_new_bank_informations": ["pcapi.domain.bank_informations.bank_informations.BankInformations"], "src.pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository.with_status_and_keywords": ["<builtin>.int", "pcapi.domain.pro_offerers.paginated_offerers.PaginatedOfferers", "pcapi.core.offerers.repository.filter_offerers_with_keywords_string"], "pcapi.core.offerers.repository.filter_offerers_with_keywords_string": [], "pcapi.domain.pro_offerers.paginated_offerers.PaginatedOfferers": [], "tests.utils.rest_test.CheckUserHasAccessToOffererTest.test_check_user_has_access_to_offerer": ["pcapi.core.testing.assert_num_queries"], "tests.utils.rest_test.CheckUserHasAccessToOffererTest.test_raises_if_user_cannot_access_offerer": ["pcapi.utils.rest.check_user_has_access_to_offerer"], "tests.utils.rest_test.TestLoadOrRaiseErrorTest.test_returns_object_if_found": ["pcapi.utils.human_ids.humanize", "pcapi.utils.rest.load_or_raise_error"], "tests.utils.rest_test.TestLoadOrRaiseErrorTest.test_raises_api_error_if_no_object": ["pcapi.utils.human_ids.humanize", "pcapi.utils.rest.load_or_raise_error"], "src.pcapi.tasks.decorator._define_handler": ["pcapi.serialization.decorator.spectree_serialize"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_offerer_with_iban": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_offerer_without_iban": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_free_event_offer_with_stocks": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.specific_creators.create_event_occurrence", "pcapi.model_creators.specific_creators.create_stock_from_event_occurrence"], "pcapi.model_creators.specific_creators.create_event_occurrence": [], "pcapi.model_creators.specific_creators.create_stock_from_event_occurrence": [], "src.pcapi.sandboxes.scripts.sandbox_payment.save_non_reimbursable_thing_offer": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_reimbursable_thing_offer": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_paid_online_book_offer": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_paid_reimbursable_event_offer": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.specific_creators.create_event_occurrence", "pcapi.model_creators.specific_creators.create_stock_from_event_occurrence"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_sandbox": ["src.pcapi.sandboxes.scripts.sandbox_payment.save_paid_reimbursable_event_offer", "src.pcapi.sandboxes.scripts.sandbox_payment.save_non_reimbursable_thing_offer", "src.pcapi.sandboxes.scripts.sandbox_payment.save_offerer_without_iban", "src.pcapi.sandboxes.scripts.sandbox_payment.save_users_with_deposits", "src.pcapi.sandboxes.scripts.sandbox_payment.save_free_event_offer_with_stocks", "src.pcapi.sandboxes.scripts.sandbox_payment.save_offerer_with_iban", "<builtin>.len", "src.pcapi.sandboxes.scripts.sandbox_payment.save_paid_online_book_offer", "src.pcapi.sandboxes.scripts.sandbox_payment.save_reimbursable_thing_offer"], "src.pcapi.sandboxes.scripts.sandbox_payment.save_users_with_deposits": [], "tests.core.educational.test_api.ConfirmEducationalBookingTest.test_confirm_educational_booking_lock": ["sqlalchemy.sql.text", "decimal.Decimal", "sqlalchemy.create_engine"], "tests.core.educational.test_api.ConfirmEducationalBookingTest.test_confirm_educational_booking": ["decimal.Decimal"], "tests.core.educational.test_api.ConfirmEducationalBookingTest.test_confirm_educational_booking_sends_email": ["pcapi.utils.human_ids.humanize", "decimal.Decimal", "<builtin>.len"], "tests.core.educational.test_api.ConfirmEducationalBookingTest.test_raises_insufficient_fund": ["decimal.Decimal"], "tests.core.educational.test_api.ConfirmEducationalBookingTest.test_raises_insufficient_temporary_fund": ["decimal.Decimal"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_create_educational_booking_on_requested_educational_offer": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation"], "pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation": [], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_send_email_on_educational_booking_creation": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_notify_adage_on_educational_prebooking_creation": ["pcapi.routes.adage_iframe.serialization.adage_authentication.RedactorInformation", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking"], "pcapi.routes.adage_iframe.serialization.adage_authentication.RedactorInformation": [], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_notify_adage_with_less_redactor_information": ["pcapi.routes.adage_iframe.serialization.adage_authentication.RedactorInformation", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_create_educational_redactor_when_it_does_not_exist": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_not_create_educational_booking_when_educational_institution_unknown": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "<builtin>.len"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_not_create_educational_booking_when_stock_does_not_exist": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "<builtin>.len"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_not_create_educational_booking_when_stock_is_not_bookable": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "<builtin>.len"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_not_create_educational_booking_when_educational_year_not_found": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "<builtin>.len"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_not_create_educational_booking_when_requested_offer_is_not_educational": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "<builtin>.len"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_not_create_educational_booking_when_offer_is_not_an_event": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation", "<builtin>.len"], "tests.core.educational.test_api.BookEducationalOfferTest.test_should_create_educational_booking_with_cancellation_limit_date_at_booking_date_when_less_than_15_days_to_event": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedInformation"], "tests.core.educational.test_api.RefuseEducationalBookingTest.test_refuse_educational_booking_stock_lock": ["sqlalchemy.sql.text", "sqlalchemy.create_engine"], "src.pcapi.routes.shared.passwords.post_change_password": ["pcapi.core.users.api.update_user_password", "pcapi.domain.password.check_password_validity"], "pcapi.domain.password.check_password_validity": [], "pcapi.core.users.api.update_user_password": [], "src.pcapi.routes.shared.passwords.post_for_password_token": ["pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_to_pro_email", "pcapi.connectors.api_recaptcha.check_webapp_recaptcha_token", "pcapi.models.api_errors.ApiErrors", "pcapi.core.users.repository.find_user_by_email"], "pcapi.connectors.api_recaptcha.check_webapp_recaptcha_token": [], "src.pcapi.routes.shared.passwords.post_new_password": ["pcapi.domain.password.check_password_strength", "pcapi.models.api_errors.ApiErrors", "pcapi.core.users.api.update_password_and_external_user"], "pcapi.core.users.api.update_password_and_external_user": [], "tests.emails.offer_cancellation_test.MakeOffererDrivenCancellationEmailForOffererTest.test_make_offerer_driven_cancellation_email_for_offerer_event_when_no_other_booking": ["datetime.datetime", "unittest.mock.patch", "<builtin>.str", "datetime.timedelta", "bs4.BeautifulSoup"], "tests.emails.offer_cancellation_test.MakeOffererDrivenCancellationEmailForOffererTest.test_make_offerer_driven_cancellation_email_for_offerer_event_when_other_booking": ["datetime.datetime", "unittest.mock.patch", "bs4.BeautifulSoup"], "tests.emails.offer_cancellation_test.MakeOffererDrivenCancellationEmailForOffererTest.test_make_offerer_driven_cancellation_email_for_offerer_thing_and_already_existing_booking": ["unittest.mock.patch", "bs4.BeautifulSoup", "<builtin>.str"], "tests.core.users.email.test_update.test_request_email_update_history": ["pcapi.core.users.email.update.request_email_update", "<builtin>.len"], "pcapi.core.users.email.update.request_email_update": [], "src.pcapi.utils.requests.get": ["src.pcapi.utils.requests.Session.__init__"], "src.pcapi.utils.requests.Session.__init__": ["<builtin>.super", "urllib3.util.retry.Retry", "requests.adapters.HTTPAdapter"], "urllib3.util.retry.Retry": [], "requests.adapters.HTTPAdapter": [], "src.pcapi.utils.requests.post": ["src.pcapi.utils.requests.Session.__init__"], "src.pcapi.utils.requests.put": ["src.pcapi.utils.requests.Session.__init__"], "src.pcapi.utils.requests.delete": ["src.pcapi.utils.requests.Session.__init__"], "src.pcapi.utils.requests._SessionMixin.request": ["<builtin>.super", "src.pcapi.utils.requests._wrapper"], "src.pcapi.utils.requests._wrapper": [], "src.pcapi.routes.pro.offers.list_offers": ["pcapi.routes.serialization.offers_recap_serialize.serialize_offers_recap_paginated"], "pcapi.routes.serialization.offers_recap_serialize.serialize_offers_recap_paginated": [], "src.pcapi.routes.pro.offers.get_offer": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.pro.offers.post_offer": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.pro.offers.create_educational_offer": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.pro.offers.patch_offer": ["pcapi.utils.rest.load_or_404", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.offers.edit_educational_offer": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.offers.create_thumbnail": ["pcapi.repository.offer_queries.get_offer_by_id", "pcapi.utils.rest.check_user_has_access_to_offerer", "pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailResponseModel"], "pcapi.repository.offer_queries.get_offer_by_id": [], "pcapi.routes.serialization.thumbnails_serialize.CreateThumbnailResponseModel": [], "src.pcapi.routes.pro.offers.cancel_educational_offer_booking": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors", "sqlalchemy.orm.joinedload", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.offers.create_shadow_stock_for_educational_showcase_offer": ["pcapi.core.offerers.repository.get_by_offer_id", "pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "pcapi.core.offerers.repository.get_by_offer_id": [], "src.pcapi.core.educational.adage_backends.base.AdageClient.notify_prebooking": ["<builtin>.NotImplementedError"], "src.pcapi.core.educational.adage_backends.base.AdageClient.notify_offer_or_stock_edition": ["<builtin>.NotImplementedError"], "src.pcapi.core.educational.adage_backends.base.AdageClient.get_adage_offerer": ["<builtin>.NotImplementedError"], "src.pcapi.core.educational.adage_backends.base.AdageClient.notify_booking_cancellation_by_offerer": ["<builtin>.NotImplementedError"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_raises_ApiEntrepriseException_when_sirene_api_does_not_respond": ["pcapi.connectors.api_entreprises.get_by_offerer", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock", "<builtin>.str"], "pcapi.connectors.api_entreprises.get_by_offerer": [], "tests.connectors.api_entreprises_test.GetByOffererTest.test_call_sirene_with_offerer_siren": ["pcapi.connectors.api_entreprises.get_by_offerer", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_unite_legale_informations_with_etablissement_siege": ["pcapi.connectors.api_entreprises.get_by_offerer", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_unite_legale_informations_without_etablissements_list": ["pcapi.connectors.api_entreprises.get_by_offerer", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_unite_legale_informations_with_empty_other_etablissements_sirets_when_no_other_etablissements": ["pcapi.connectors.api_entreprises.get_by_offerer", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_other_etablissements_sirets_with_all_etablissement_siret": ["pcapi.connectors.api_entreprises.get_by_offerer", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock", "<builtin>.set"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_other_etablissements_sirets_without_etablissement_siege_siret": ["pcapi.connectors.api_entreprises.get_by_offerer", "pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock", "<builtin>.set"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_legal_category_code_and_label": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.connectors.api_entreprises.get_offerer_legal_category"], "pcapi.connectors.api_entreprises.get_offerer_legal_category": [], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_legal_category_code_and_label_when_no_label_matches_to_code": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.connectors.api_entreprises.get_offerer_legal_category"], "tests.connectors.api_entreprises_test.GetByOffererTest.test_returns_legal_category_code_and_label_when_code_is_none": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.connectors.api_entreprises.get_offerer_legal_category"], "tests.connectors.api_entreprises_test.GetOffererLegalCategoryTest.test_successful_get_by_offerer": ["pcapi.connectors.api_entreprises.get_offerer_legal_category"], "tests.connectors.api_entreprises_test.GetOffererLegalCategoryTest.test_handle_error_get_by_offerer_on_prod_env": ["pcapi.connectors.api_entreprises.get_offerer_legal_category", "pcapi.connectors.api_entreprises.ApiEntrepriseException"], "tests.connectors.api_entreprises_test.GetOffererLegalCategoryTest.test_handle_error_get_by_offerer_on_non_prod_env": ["pcapi.connectors.api_entreprises.get_offerer_legal_category"], "tests.scripts.pro.migrate_has_seen_pro_tutorials_test.should_udpate_has_seen_pro_tutorials_by_batch": ["pcapi.scripts.pro.migrate_has_seen_pro_tutorials.migrate_has_seen_pro_tutorials", "datetime.timedelta"], "pcapi.scripts.pro.migrate_has_seen_pro_tutorials.migrate_has_seen_pro_tutorials": [], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_json_response_with_200": ["pcapi.serialization.decorator.spectree_serialize", "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_json_response_with_200.mock_func"], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_json_response_with_200.mock_func": [], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_str_response_with_200_when_asked": ["pcapi.serialization.decorator.spectree_serialize", "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_str_response_with_200_when_asked.mock_func"], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_str_response_with_200_when_asked.mock_func": [], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_json_response_with_custom_status_code": ["pcapi.serialization.decorator.spectree_serialize", "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_json_response_with_custom_status_code.mock_func"], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_return_json_response_with_custom_status_code.mock_func": [], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_call_validation_with_the_right_params": ["tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_call_validation_with_the_right_params.mock_func", "pcapi.serialization.decorator.spectree_serialize"], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.should_call_validation_with_the_right_params.mock_func": [], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.test_http_form_validation": ["pcapi.serialization.decorator.spectree_serialize", "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.test_http_form_validation.mock_func"], "tests.serialization.serialization_decorator_test.SerializationDecoratorTest.test_http_form_validation.mock_func": [], "tests.core.payments.test_api.CreateDepositTest.test_deposit_created_with_version_1": ["datetime.time", "dateutil.relativedelta.relativedelta", "decimal.Decimal"], "tests.core.payments.test_api.CreateDepositTest.test_create_underage_deposit": ["freezegun.freeze_time", "datetime.time", "datetime.datetime", "dateutil.relativedelta.relativedelta"], "tests.core.payments.test_api.CreateDepositTest.test_create_18_years_old_deposit": ["datetime.time", "datetime.datetime", "dateutil.relativedelta.relativedelta", "decimal.Decimal"], "tests.core.payments.test_api.CreateDepositTest.test_deposit_on_integration": ["datetime.time", "datetime.datetime", "dateutil.relativedelta.relativedelta", "decimal.Decimal"], "tests.core.payments.test_api.CreateDepositTest.test_deposit_created_when_another_type_already_exist_for_user": ["freezegun.freeze_time", "datetime.time", "dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.core.payments.test_api.CreateDepositTest.test_cannot_create_twice_a_deposit_of_same_type": ["dateutil.relativedelta.relativedelta"], "tests.core.payments.test_api.CreateDepositTest.test_get_user_age_at_registration": ["freezegun.freeze_time"], "tests.core.payments.test_api.BulkCreatePaymentStatusesTest.test_without_detail": ["<builtin>.len"], "tests.core.payments.test_api.BulkCreatePaymentStatusesTest.test_with_detail": ["<builtin>.len"], "tests.core.payments.test_api.CreateOffererReimbursementRuleTest.test_create_rule": ["datetime.datetime", "datetime.timedelta", "decimal.Decimal"], "tests.core.payments.test_api.CreateOffererReimbursementRuleTest.test_validation": ["datetime.timedelta"], "tests.core.payments.test_api.CreateOfferReimbursementRuleTest.test_create_rule": ["datetime.datetime", "datetime.timedelta", "decimal.Decimal"], "tests.core.payments.test_api.CreateOfferReimbursementRuleTest.test_validation": ["datetime.timedelta"], "tests.core.payments.test_api.EditReimbursementRuleTest.test_edit_rule": ["datetime.datetime"], "tests.core.payments.test_api.EditReimbursementRuleTest.test_cannot_change_existing_end_date": ["datetime.timedelta"], "tests.core.payments.test_api.EditReimbursementRuleTest.test_validation": ["datetime.timedelta"], "tests.scripts.update_venue_type_test.UpdateVenueTypeTest.test_should_update_venue_type_whith_type_from_read_file_when_id_match": ["pcapi.scripts.update_venue_type.update_venue_type", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "pcapi.scripts.update_venue_type.update_venue_type": [], "tests.scripts.update_venue_type_test.UpdateVenueTypeTest.test_should_not_be_stuck_because_of_no_siren_offerer_and_print_a_list_of_errored_venues": ["pcapi.scripts.update_venue_type.update_venue_type", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.update_venue_type_test.UpdateVenueTypeTest.test_should_not_update_venue_type_whith_type_from_read_file_when_venue_id_does_not_match": ["pcapi.scripts.update_venue_type.update_venue_type", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.update_venue_type_test.UpdateVenueTypeTest.test_should_not_update_venue_type_whith_type_from_read_file_when_type_label_does_not_match": ["pcapi.scripts.update_venue_type.update_venue_type", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offerers.factories.VenueTypeFactory"], "tests.scripts.update_venue_type_test.UpdateVenueTypeTest.test_read_venue_type_from_file": ["pcapi.scripts.update_venue_type._read_venue_type_from_file", "<builtin>.len", "pathlib.Path"], "pcapi.scripts.update_venue_type._read_venue_type_from_file": [], "src.pcapi.routes.adage.security.adage_api_key_required": ["functools.wraps", "pcapi.serialization.spec_tree.add_security_scheme"], "tests.routes.pro.get_educational_offerers_test.GetEducationalOfferersTest.test_response_serializer_for_multiple_educational_offerers": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_educational_offerers_test.GetEducationalOfferersTest.test_response_serializer_for_admin": ["pcapi.utils.human_ids.humanize"], "src.pcapi.routes.pro.finance.get_business_units": ["pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.finance.edit_business_unit": ["pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter.to_domain": ["src.pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter._offer_recap_to_domain", "pcapi.domain.pro_offers.offers_recap.OffersRecap"], "src.pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter._offer_recap_to_domain": ["src.pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter._stock_serializer", "pcapi.domain.pro_offers.offers_recap.OfferRecap"], "src.pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter._stock_serializer": [], "pcapi.domain.pro_offers.offers_recap.OfferRecap": [], "pcapi.domain.pro_offers.offers_recap.OffersRecap": [], "src.pcapi.routes.serialization.offers_recap_serialize.serialize_offers_recap_paginated": ["src.pcapi.routes.serialization.offers_recap_serialize._serialize_offer_paginated"], "src.pcapi.routes.serialization.offers_recap_serialize._serialize_offer_paginated": ["pcapi.utils.human_ids.humanize", "src.pcapi.routes.serialization.offers_recap_serialize._serialize_venue", "src.pcapi.routes.serialization.offers_recap_serialize._serialize_stock"], "src.pcapi.routes.serialization.offers_recap_serialize._serialize_stock": ["pcapi.utils.human_ids.humanize"], "src.pcapi.routes.serialization.offers_recap_serialize._serialize_venue": ["pcapi.utils.human_ids.humanize"], "tests.scripts.bulk_mark_incompatible_via_isbns_test.BulkUpdateIsGcuCompatibleViaIsbnsTest.test_should_mark_offers_and_products_as_incompatible_via_isbn": ["<builtin>.set", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.bulk_mark_incompatible_via_isbns_test.BulkUpdateIsGcuCompatibleViaIsbnsTest.test_should_mark_products_as_compatible_via_isbn": ["pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.external_users.batch_update_users_attributes_test.test_get_users_chunks": ["<builtin>.list", "pcapi.scripts.external_users.batch_update_users_attributes.get_users_chunks", "<builtin>.len"], "pcapi.scripts.external_users.batch_update_users_attributes.get_users_chunks": [], "tests.scripts.external_users.batch_update_users_attributes_test.test_run": ["pcapi.scripts.external_users.batch_update_users_attributes.run", "<builtin>.len"], "pcapi.scripts.external_users.batch_update_users_attributes.run": [], "tests.scripts.external_users.batch_update_users_attributes_test.test_run_batch_only": ["pcapi.scripts.external_users.batch_update_users_attributes.run", "<builtin>.len"], "tests.scripts.external_users.batch_update_users_attributes_test.test_run_sendinblue_only": ["pcapi.scripts.external_users.batch_update_users_attributes.run", "<builtin>.len"], "tests.scripts.external_users.batch_update_users_attributes_test.test_format_batch_user": ["pcapi.scripts.external_users.batch_update_users_attributes.format_batch_users", "pcapi.core.bookings.factories.IndividualBookingFactory", "<builtin>.len", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "pcapi.scripts.external_users.batch_update_users_attributes.format_batch_users": [], "tests.scripts.external_users.batch_update_users_attributes_test.test_format_sendinblue_user": ["pcapi.core.users.factories.BeneficiaryGrant18Factory", "pcapi.core.bookings.factories.IndividualBookingFactory", "decimal.Decimal", "<builtin>.len", "pcapi.scripts.external_users.batch_update_users_attributes.format_sendinblue_users"], "tests.domain.password_test.RandomPasswordTest.test_generate_a_valid_password": ["pcapi.domain.password._ensure_new_password_is_strong_enough", "pcapi.models.api_errors.ApiErrors", "pcapi.domain.password.random_password", "<builtin>.len"], "pcapi.domain.password.random_password": [], "pcapi.domain.password._ensure_new_password_is_strong_enough": [], "tests.domain.password_test.CheckPasswordValidityTest.test_should_raise_multiple_errors_at_once": ["pcapi.domain.password.check_password_validity", "pcapi.core.users.models.User"], "tests.domain.password_test.EnsureNewPasswordIsStrongEnoughTest.test_should_not_add_errors_when_password_is_valid": ["pcapi.domain.password._ensure_new_password_is_strong_enough", "pcapi.models.api_errors.ApiErrors"], "tests.domain.password_test.EnsureNewPasswordIsStrongEnoughTest.test_should_not_add_errors_when_password_is_valid_2": ["pcapi.domain.password._ensure_new_password_is_strong_enough", "pcapi.models.api_errors.ApiErrors"], "tests.domain.password_test.EnsureNewPasswordIsStrongEnoughTest.test_should_add_errors_when_password_is_not_valid": ["pcapi.domain.password._ensure_new_password_is_strong_enough", "pcapi.models.api_errors.ApiErrors"], "tests.domain.password_test.EnsureConfirmationPasswordIsSameAsNewPasswordTest.test_should_add_an_error_when_new_passwords_are_not_equals": ["pcapi.domain.password._ensure_confirmation_password_is_same_as_new_password", "pcapi.models.api_errors.ApiErrors"], "pcapi.domain.password._ensure_confirmation_password_is_same_as_new_password": [], "tests.domain.password_test.EnsureConfirmationPasswordIsSameAsNewPasswordTest.test_should_not_add_an_error_when_new_passwords_are_equals": ["pcapi.domain.password._ensure_confirmation_password_is_same_as_new_password", "pcapi.models.api_errors.ApiErrors"], "tests.domain.password_test.EnsureGivenOldPasswordIsCorrectTest.test_change_password_should_add_an_error_if_old_password_does_not_match_existing_password": ["pcapi.domain.password._ensure_given_old_password_is_correct", "pcapi.models.api_errors.ApiErrors", "pcapi.core.users.models.User"], "pcapi.domain.password._ensure_given_old_password_is_correct": [], "tests.domain.password_test.EnsureNewPasswordIsDifertFromOldTest.test_change_password_should_add_an_error_if_old_password_is_the_same_as_the_new_password": ["pcapi.domain.password._ensure_new_password_is_different_from_old", "pcapi.models.api_errors.ApiErrors", "pcapi.core.users.models.User"], "pcapi.domain.password._ensure_new_password_is_different_from_old": [], "src.pcapi.domain.password.random_hashed_password": ["src.pcapi.domain.password.random_password"], "src.pcapi.domain.password.random_password": ["<builtin>.range"], "src.pcapi.domain.password.check_password_validity": ["src.pcapi.domain.password._ensure_new_password_is_strong_enough", "src.pcapi.domain.password._ensure_given_old_password_is_correct", "src.pcapi.domain.password._ensure_confirmation_password_is_same_as_new_password", "<builtin>.len", "src.pcapi.domain.password._ensure_new_password_is_different_from_old", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.domain.password._ensure_new_password_is_strong_enough": ["<builtin>.set", "<builtin>.len"], "src.pcapi.domain.password._ensure_given_old_password_is_correct": [], "src.pcapi.domain.password._ensure_new_password_is_different_from_old": [], "src.pcapi.domain.password._ensure_confirmation_password_is_same_as_new_password": [], "src.pcapi.domain.password.check_password_strength": ["pcapi.models.api_errors.ApiErrors", "src.pcapi.domain.password._ensure_new_password_is_strong_enough", "<builtin>.len"], "src.pcapi.core.payments.factories.PaymentFactory.<lambda1>": ["decimal.Decimal"], "src.pcapi.core.payments.factories.PaymentFactory.<lambda2>": ["decimal.Decimal"], "src.pcapi.core.payments.factories.CustomReimbursementRuleFactory._create": ["<builtin>.super"], "tests.scripts.stock.soft_delete_stock_test.SoftDeleteStockTest.should_return_ko_if_at_least_one_booking_is_used": ["pcapi.scripts.stock.soft_delete_stock.soft_delete_stock"], "pcapi.scripts.stock.soft_delete_stock.soft_delete_stock": [], "tests.scripts.stock.soft_delete_stock_test.SoftDeleteStockTest.should_return_ko_if_at_least_one_booking_has_payments": ["pcapi.scripts.stock.soft_delete_stock.soft_delete_stock"], "tests.scripts.stock.soft_delete_stock_test.SoftDeleteStockTest.should_return_ok_if_stock_has_no_bookings_and_soft_delete_it": ["pcapi.scripts.stock.soft_delete_stock.soft_delete_stock"], "tests.scripts.stock.soft_delete_stock_test.SoftDeleteStockTest.should_cancel_every_bookings_for_target_stock": ["pcapi.scripts.stock.soft_delete_stock.soft_delete_stock"], "tests.scripts.payment.mark_payments_as_sent_test.MarkPaymentsAsSentTest.test_mark_payments_as_sent": ["<builtin>.set", "pcapi.scripts.payment.mark_payments_as_sent.mark_payments_as_sent", "<builtin>.len"], "pcapi.scripts.payment.mark_payments_as_sent.mark_payments_as_sent": [], "tests.scripts.payment.mark_payments_as_sent_test.MarkPaymentsAsSentTest.test_mark_payments_as_sent_does_not_fail_when_no_data": ["pcapi.scripts.payment.mark_payments_as_sent.mark_payments_as_sent"], "src.pcapi.notifications.internal.backends.testing.TestingBackend.send_internal_message": ["<builtin>.super"], "src.pcapi.core.finance.repository.get_invoices_query": ["src.pcapi.core.finance.repository.get_invoices_query.<lambda1>"], "src.pcapi.core.finance.repository.get_invoices_query.<lambda1>": [], "src.pcapi.core.subscription.ubble.api.update_ubble_workflow": ["src.pcapi.core.subscription.ubble.api.handle_validation_errors"], "src.pcapi.core.subscription.ubble.api.handle_validation_errors": [], "src.pcapi.core.subscription.ubble.api.get_ubble_subscription_item_status": ["src.pcapi.core.subscription.ubble.api._is_retryable_check", "<builtin>.any", "<builtin>.len"], "src.pcapi.core.subscription.ubble.api._is_retryable_check": ["<builtin>.all"], "src.pcapi.utils.date.DateTimes.__init__": ["<builtin>.list"], "src.pcapi.utils.date.format_datetime": ["babel.dates.format_datetime"], "babel.dates.format_datetime": [], "src.pcapi.utils.date.get_postal_code_timezone": ["src.pcapi.utils.date.get_department_timezone", "pcapi.domain.postal_code.postal_code.PostalCode"], "src.pcapi.utils.date.get_department_timezone": ["<map>.get"], "src.pcapi.utils.date.utc_datetime_to_department_timezone": ["src.pcapi.utils.date.get_department_timezone"], "src.pcapi.utils.date.get_date_formatted_for_email": ["babel.dates.format_date"], "src.pcapi.utils.date.get_day_start": ["datetime.time"], "tests.models.venue_provider_test.test_nOffers_with_one_venue_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_provider", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.model_creators.generic_creators.create_provider": [], "tests.models.venue_provider_test.test_nOffers_with_two_venue_providers_from_different_providers": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_provider", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_provider_test.test_raise_errors_if_venue_provider_already_exists_with_same_information": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_provider_test.test_should_have_attribute_matching_allocine_when_having_allocine_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.core.providers.api.activate_provider"], "tests.models.venue_provider_test.test_should_not_be_matched_has_allocine_provider_with_other_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.scripts.batch_update_offer_withdrawal_details_for_offerer_test.BatchUpdateOfferWithdrawalDetailsForOffererTest.should_update_offer_withdrawal_details": ["pcapi.core.offers.factories.OfferFactory", "pcapi.scripts.batch_update_offer_withdrawal_details_for_offerer.batch_update_offer_withdrawal_details_for_offerer"], "pcapi.scripts.batch_update_offer_withdrawal_details_for_offerer.batch_update_offer_withdrawal_details_for_offerer": [], "tests.models.product_test.when_product_has_one_thumb": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.utils.human_ids.humanize"], "tests.models.product_test.when_product_has_no_thumb": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory"], "tests.models.product_test.ProductCanBeSynchronizedTest.test_can_be_synchronized_product_cgu_compatible_and_sync_compatible": ["sqlalchemy.not_", "pcapi.core.offers.factories.ProductFactory"], "tests.models.product_test.ProductCanBeSynchronizedTest.test_can_be_synchronized_product_cgu_compatible_and_not_sync_compatible": ["sqlalchemy.not_", "pcapi.core.offers.factories.ProductFactory"], "tests.models.product_test.ProductCanBeSynchronizedTest.test_can_be_synchronized_product_not_cgu_compatible_and_not_sync_compatible": ["sqlalchemy.not_", "pcapi.core.offers.factories.ProductFactory"], "tests.models.product_test.ProductCanBeSynchronizedTest.test_can_be_synchronized_product_not_cgu_compatible_and_sync_compatible": ["sqlalchemy.not_", "pcapi.core.offers.factories.ProductFactory"], "src.pcapi.core.finance.factories.PricingFactory.<lambda1>": ["<builtin>.int"], "src.pcapi.core.finance.factories.PricingFactory.<lambda2>": ["<builtin>.int"], "tests.core.subscription.dms.test_api.DMSOrphanSubsriptionTest.test_dms_orphan_corresponding_user": ["tests.scripts.beneficiary.fixture.make_single_application"], "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return200Test.test_create_valid_shadow_stock_for_educational_offer": ["datetime.datetime", "pcapi.utils.human_ids.dehumanize", "<builtin>.print", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return400Test.test_create_educational_shadow_stocks_should_not_be_available_if_user_not_linked_to_offerer": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return400Test.should_not_accept_payload_with_price_details_with_more_than_1000_caracters": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_shadow_stock_for_educational_showcase_offer_test.Return400Test.should_not_allow_multiple_stocks": ["pcapi.utils.human_ids.humanize"], "src.pcapi.core.offers.validation.check_offer_existing_stocks_are_editable": ["src.pcapi.core.offers.validation.check_validation_status", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_validation_status": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_update_only_allowed_fields_for_offer_from_provider": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_stock_quantity": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_stock_price": ["pcapi.models.api_errors.ApiErrors", "<builtin>.len"], "src.pcapi.core.offers.validation.check_required_dates_for_stock": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_stock_can_be_created_for_offer": ["src.pcapi.core.offers.validation.check_validation_status", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_stock_is_updatable": ["src.pcapi.core.offers.validation.check_offer_existing_stocks_are_editable", "src.pcapi.core.offers.validation.check_event_expiration"], "src.pcapi.core.offers.validation.check_event_expiration": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_shadow_stock_is_editable": ["src.pcapi.core.offers.validation.check_validation_status"], "src.pcapi.core.offers.validation.check_educational_stock_is_editable": ["src.pcapi.core.offers.validation.check_event_expiration", "src.pcapi.core.offers.validation.check_validation_status"], "src.pcapi.core.offers.validation.check_stock_is_deletable": ["src.pcapi.core.offers.validation.check_offer_existing_stocks_are_editable"], "src.pcapi.core.offers.validation.check_update_only_allowed_stock_fields_for_allocine_offer": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.get_uploaded_image": ["<builtin>.len"], "src.pcapi.core.offers.validation.check_image": ["io.BytesIO"], "src.pcapi.core.offers.validation.check_offer_is_digital": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_activation_codes_expiration_datetime": ["datetime.timedelta", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offers.validation.check_activation_codes_expiration_datetime_on_stock_edition": ["src.pcapi.core.offers.validation.check_activation_codes_expiration_datetime", "<builtin>.len"], "src.pcapi.core.offers.validation.check_user_can_load_config": ["pcapi.models.api_errors.ForbiddenError"], "src.pcapi.core.offers.validation.check_validation_config_parameters": ["<builtin>.isinstance", "<builtin>.KeyError", "<builtin>.type", "src.pcapi.core.offers.validation.check_validation_config_parameters", "<builtin>.TypeError", "<builtin>.ValueError"], "<builtin>.KeyError": [], "src.pcapi.utils.json_encoder.EnumJSONEncoder.default": ["<builtin>.isinstance", "<builtin>.str", "<builtin>.iter"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_activation_offers.create_industrial_activation_offers": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_stock_with_thing_offer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "pcapi.model_creators.specific_creators.create_stock_with_thing_offer": [], "src.pcapi.routes.adage.v1.educational_institution.get_educational_institution": ["pcapi.core.educational.repository.find_educational_bookings_for_adage", "pcapi.routes.adage.v1.serialization.educational_institution.EducationalInstitutionResponse", "pcapi.core.educational.repository.find_educational_institution_by_uai_code", "pcapi.models.api_errors.ApiErrors", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_bookings"], "pcapi.core.educational.repository.find_educational_institution_by_uai_code": [], "pcapi.core.educational.repository.find_educational_bookings_for_adage": [], "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_bookings": [], "pcapi.routes.adage.v1.serialization.educational_institution.EducationalInstitutionResponse": [], "src.pcapi.core.categories.subcategories.Subcategory.__post_init__": ["<builtin>.ValueError"], "src.pcapi.core.users.email.update.request_email_update": ["src.pcapi.core.users.email.update.generate_token_expiration_date", "src.pcapi.core.users.email.update.check_email_update_attempts", "send.send_user_emails_for_email_change", "src.pcapi.core.users.email.update.check_no_active_token_exists", "src.pcapi.core.users.email.update.check_user_password", "src.pcapi.core.users.email.update.check_email_address_does_not_exist"], "src.pcapi.core.users.email.update.check_email_update_attempts": [], "src.pcapi.core.users.email.update.generate_token_expiration_date": [], "src.pcapi.core.users.email.update.check_no_active_token_exists": ["src.pcapi.core.users.email.update.get_no_active_token_key"], "src.pcapi.core.users.email.update.get_no_active_token_key": [], "src.pcapi.core.users.email.update.check_email_address_does_not_exist": ["pcapi.core.users.api.find_user_by_email"], "pcapi.core.users.api.find_user_by_email": [], "src.pcapi.core.users.email.update.check_user_password": [], "send.send_user_emails_for_email_change": [], "src.pcapi.core.users.email.update.get_active_token_expiration": ["datetime.timedelta", "src.pcapi.core.users.email.update.get_no_active_token_key"], "tests.scripts.booking.cancel_old_unused_bookings_for_venue_test.test_should_cancel_old_unused_bookings_for_venue": ["datetime.timedelta", "pcapi.utils.human_ids.humanize", "pcapi.scripts.booking.cancel_old_unused_bookings_for_venue.cancel_old_unused_bookings_for_venue"], "pcapi.scripts.booking.cancel_old_unused_bookings_for_venue.cancel_old_unused_bookings_for_venue": [], "src.pcapi.repository.user_queries._find_user_by_email_query": ["pcapi.core.users.utils.sanitize_email"], "src.pcapi.repository.user_queries.count_users_by_email": ["src.pcapi.repository.user_queries._find_user_by_email_query"], "src.pcapi.repository.user_queries.matching": ["src.pcapi.repository.user_queries._sanitized_string"], "src.pcapi.repository.user_queries._sanitized_string": [], "tests.models.payment_test.SetStatusTest.test_appends_a_status_to_a_new_payment": ["datetime.timedelta", "<builtin>.len", "pcapi.models.payment.Payment"], "pcapi.models.payment.Payment": [], "tests.models.payment_test.SetStatusTest.test_appends_a_status_to_a_payment_with_existing_status": ["datetime.timedelta", "pcapi.models.payment_status.PaymentStatus", "<builtin>.len", "pcapi.models.payment.Payment"], "tests.models.payment_test.PaymentDateTest.InPythonContextTest.test_payment_date_should_return_payment_date_for_status_sent": ["pcapi.models.payment_status.PaymentStatus", "pcapi.models.payment.Payment"], "tests.models.payment_test.PaymentDateTest.InPythonContextTest.test_payment_date_should_return_oldest_payment_date_for_status_sent_if_several": ["pcapi.models.payment_status.PaymentStatus", "datetime.timedelta", "pcapi.models.payment.Payment"], "tests.models.payment_test.PaymentDateTest.InPythonContextTest.test_payment_date_should_return_no_payment_date_for_status_pending": ["pcapi.models.payment_status.PaymentStatus", "pcapi.models.payment.Payment"], "tests.models.payment_test.PaymentDateTest.InSQLContextTest.test_payment_date_should_return_payment_date_for_status_sent": ["pcapi.model_creators.generic_creators.create_payment_message", "pcapi.model_creators.generic_creators.create_payment", "pcapi.model_creators.generic_creators.create_payment_status"], "pcapi.model_creators.generic_creators.create_payment_status": [], "tests.models.payment_test.PaymentDateTest.InSQLContextTest.test_payment_date_should_return_oldest_payment_date_for_status_sent_if_several": ["datetime.timedelta", "pcapi.model_creators.generic_creators.create_payment_message", "pcapi.model_creators.generic_creators.create_payment", "pcapi.model_creators.generic_creators.create_payment_status"], "tests.models.payment_test.PaymentDateTest.InSQLContextTest.test_payment_date_should_return_no_payment_date_for_status_pending": ["pcapi.model_creators.generic_creators.create_payment_message", "pcapi.model_creators.generic_creators.create_payment", "pcapi.model_creators.generic_creators.create_payment_status"], "src.pcapi.scripts.pro.migrate_has_seen_pro_tutorials.get_ids_query": ["src.pcapi.scripts.pro.migrate_has_seen_pro_tutorials.get_base_query"], "src.pcapi.scripts.pro.migrate_has_seen_pro_tutorials.get_base_query": [], "src.pcapi.scripts.pro.migrate_has_seen_pro_tutorials.migrate_has_seen_pro_tutorials": ["src.pcapi.scripts.pro.migrate_has_seen_pro_tutorials.get_base_query", "<builtin>.print", "src.pcapi.scripts.pro.migrate_has_seen_pro_tutorials.get_ids_query"], "src.pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_id": ["src.pcapi.scripts.venue.modify_allocine_price_rule_for_venue._modify_allocine_price_rule_for_venue"], "src.pcapi.scripts.venue.modify_allocine_price_rule_for_venue._modify_allocine_price_rule_for_venue": [], "src.pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_siret": ["src.pcapi.scripts.venue.modify_allocine_price_rule_for_venue._modify_allocine_price_rule_for_venue"], "src.pcapi.workers.push_notification_job.send_cancel_booking_notification": ["pcapi.notifications.push.send_transactional_notification", "pcapi.notifications.push.transactional_notifications.get_bookings_cancellation_notification_data"], "pcapi.notifications.push.transactional_notifications.get_bookings_cancellation_notification_data": [], "pcapi.notifications.push.send_transactional_notification": [], "src.pcapi.workers.push_notification_job.send_tomorrow_stock_notification": ["pcapi.notifications.push.transactional_notifications.get_tomorrow_stock_notification_data", "pcapi.notifications.push.send_transactional_notification"], "pcapi.notifications.push.transactional_notifications.get_tomorrow_stock_notification_data": [], "src.pcapi.workers.push_notification_job.send_offer_link_by_push_job": ["pcapi.notifications.push.send_transactional_notification", "pcapi.notifications.push.transactional_notifications.get_offer_notification_data"], "pcapi.notifications.push.transactional_notifications.get_offer_notification_data": [], "src.pcapi.routes.external.users_subscription.ubble_webhook_update_application_status": ["pcapi.models.api_errors.ApiErrors", "<builtin>.ValueError", "<builtin>.str"], "src.pcapi.routes.pro.venues.get_venue": ["pcapi.utils.rest.load_or_404", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.venues.get_venues": ["pcapi.routes.serialization.venues_serialize.VenueListItemResponseModel", "pcapi.routes.serialization.venues_serialize.GetVenueListResponseModel"], "pcapi.routes.serialization.venues_serialize.VenueListItemResponseModel": [], "pcapi.routes.serialization.venues_serialize.GetVenueListResponseModel": [], "src.pcapi.routes.pro.venues.post_create_venue": ["pcapi.utils.human_ids.dehumanize", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.venues.edit_venue": ["pcapi.utils.rest.load_or_404", "<builtin>.any", "pcapi.routes.serialization.as_dict", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.venues.upsert_venue_banner": ["pcapi.utils.rest.load_or_404", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.venues.delete_venue_banner": ["pcapi.utils.rest.load_or_404", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.venues.get_venue_stats": ["pcapi.core.bookings.repository.get_legacy_validated_bookings_quantity_for_venue", "pcapi.routes.serialization.venues_serialize.VenueStatsResponseModel", "pcapi.utils.rest.check_user_has_access_to_offerer", "pcapi.core.offers.repository.get_active_offers_count_for_venue", "pcapi.core.bookings.repository.get_legacy_active_bookings_quantity_for_venue", "pcapi.utils.rest.load_or_404", "pcapi.core.offers.repository.get_sold_out_offers_count_for_venue"], "pcapi.core.bookings.repository.get_legacy_active_bookings_quantity_for_venue": [], "pcapi.core.bookings.repository.get_legacy_validated_bookings_quantity_for_venue": [], "pcapi.core.offers.repository.get_active_offers_count_for_venue": [], "pcapi.core.offers.repository.get_sold_out_offers_count_for_venue": [], "pcapi.routes.serialization.venues_serialize.VenueStatsResponseModel": [], "src.pcapi.alembic.versions.20210707_7e3f507fd0f3_adding_offerid_and_venueid_to_bookings.upgrade": ["sqlalchemy.sql.text"], "src.pcapi.utils.health_checker.read_version_from_file": ["<builtin>.open"], "src.pcapi.routes.shared.features.list_features": ["pcapi.routes.serialization.as_dict", "flask.jsonify"], "tests.models.pc_object_test.SerializeTest.test_on_datetime_list_returns_string_with_date_in_ISO_8601_list": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.routes.serialization.serialize", "pcapi.core.offers.models.Offer", "tests.models.pc_object_test.SerializeTest._assert_is_in_ISO_8601_format"], "tests.models.pc_object_test.SerializeTest._assert_is_in_ISO_8601_format": [], "tests.models.pc_object_test.SerializeTest.test_on_enum_returns_dict_with_enum_value": ["pcapi.routes.serialization.serialize", "tests.models.pc_object_test.SerializeTest.test_on_enum_returns_dict_with_enum_value.EnumTest"], "tests.models.pc_object_test.SerializeTest.test_on_enum_returns_dict_with_enum_value.EnumTest": [], "tests.models.pc_object_test.PopulateFromDictTest.test_user_string_fields_are_stripped_of_whitespace": ["pcapi.core.users.models.User"], "tests.models.pc_object_test.PopulateFromDictTest.test_on_pc_object_for_sql_integer_value_with_str_12dot9_sets_attribute_to_12dot9": ["decimal.Decimal"], "tests.models.pc_object_test.PopulateFromDictTest.test_on_pc_object_for_sql_float_value_with_str_12dot9_sets_attribute_to_12dot9": ["decimal.Decimal"], "tests.models.pc_object_test.PopulateFromDictTest.test_on_pc_object_for_valid_sql_uuid_value": ["<builtin>.str"], "tests.models.pc_object_test.PopulateFromDictTest.test_on_pc_object_for_valid_sql_uuid_value_with_key_finishing_by_Id": ["<builtin>.str"], "tests.models.pc_object_test.PopulateFromDictTest.test_on_pc_object_for_valid_sql_humanize_id_value_with_key_finishing_by_Id": ["pcapi.utils.human_ids.dehumanize"], "tests.models.pc_object_test.PopulateFromDictTest.test_deserializes_datetimes": ["datetime.datetime"], "tests.models.pc_object_test.PopulateFromDictTest.test_deserializes_datetimes_without_milliseconds": ["datetime.datetime"], "tests.models.pc_object_test.PopulateFromDictTest.test_deserializes_datetimes_without_milliseconds_with_trailing_z": ["datetime.datetime"], "src.pcapi.routes.install_all_routes": ["pcapi.admin.install.install_admin_autocomplete_views", "pcapi.admin.install.install_admin", "pcapi.admin.install.install_admin_template_filters", "src.pcapi.routes.install_routes"], "pcapi.admin.install.install_admin": [], "pcapi.admin.install.install_admin_autocomplete_views": [], "src.pcapi.routes.install_routes": [], "pcapi.admin.install.install_admin_template_filters": [], "src.pcapi.notifications.sms.sending_limit.update_sent_SMS_counter": ["src.pcapi.notifications.sms.sending_limit._sent_SMS_counter_key_name"], "src.pcapi.notifications.sms.sending_limit._sent_SMS_counter_key_name": [], "src.pcapi.notifications.sms.sending_limit.is_SMS_sending_allowed": ["<builtin>.int", "src.pcapi.notifications.sms.sending_limit._sent_SMS_counter_key_name"], "src.pcapi.infrastructure.repository.bank_informations.bank_informations_domain_converter.to_domain": ["pcapi.domain.bank_informations.bank_informations.BankInformations"], "src.pcapi.infrastructure.repository.bank_informations.bank_informations_domain_converter.to_model": ["pcapi.models.bank_information.BankInformation"], "src.pcapi.core.educational.models.EducationalDeposit.get_amount": ["decimal.Decimal", "<builtin>.round"], "<builtin>.round": [], "src.pcapi.core.educational.models.EducationalDeposit.check_has_enough_fund": ["src.pcapi.core.educational.models.EducationalDeposit.get_amount"], "src.pcapi.core.educational.models.EducationalBooking.has_confirmation_limit_date_passed": ["<builtin>.bool"], "src.pcapi.core.educational.models.CollectiveBooking.mark_as_confirmed": ["src.pcapi.core.educational.models.CollectiveBooking.has_confirmation_limit_date_passed"], "src.pcapi.core.educational.models.CollectiveBooking.has_confirmation_limit_date_passed": [], "src.pcapi.core.educational.models.CollectiveBooking.mark_as_refused": ["src.pcapi.core.educational.models.CollectiveBooking.cancel_booking"], "src.pcapi.core.educational.models.CollectiveBooking.cancel_booking": [], "tests.routes.native.v1.authentication_test.test_user_logs_in_and_refreshes_token": ["flask_jwt_extended.decode_token"], "flask_jwt_extended.decode_token": [], "tests.routes.native.v1.authentication_test.test_request_reset_password_with_recaptcha_ok": ["<builtin>.len"], "tests.routes.native.v1.authentication_test.test_request_reset_password_for_existing_email": ["<builtin>.len"], "tests.routes.native.v1.authentication_test.test_change_password_success": ["flask_jwt_extended.utils.create_access_token"], "tests.routes.native.v1.authentication_test.test_change_password_failures": ["flask_jwt_extended.utils.create_access_token"], "tests.routes.native.v1.authentication_test.test_validate_email_when_eligible": ["datetime.datetime", "<builtin>.len", "flask_jwt_extended.decode_token"], "tests.routes.native.v1.authentication_test.test_validate_email_when_not_eligible": ["datetime.datetime", "<builtin>.len"], "tests.routes.native.v1.authentication_test.test_validate_email_dms_orphan": ["datetime.datetime", "tests.scripts.beneficiary.fixture.make_single_application"], "tests.routes.native.v1.authentication_test.test_refresh_token_route_updates_user_last_connection_date": ["flask_jwt_extended.utils.create_refresh_token", "datetime.datetime", "<builtin>.len"], "flask_jwt_extended.utils.create_refresh_token": [], "src.pcapi.domain.reimbursement.PhysicalOffersReimbursement.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule": [], "src.pcapi.domain.reimbursement.MaxReimbursementByOfferer.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.ReimbursementRateByVenueBetween20000And40000.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.ReimbursementRateByVenueBetween40000And150000.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.ReimbursementRateByVenueAbove150000.is_relevant": ["src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule"], "src.pcapi.domain.reimbursement.CustomRuleFinder.__init__": ["src.pcapi.domain.reimbursement.CustomRuleFinder._partition_by_field"], "src.pcapi.domain.reimbursement.CustomRuleFinder._partition_by_field": ["<map>.setdefault"], "<map>.setdefault": [], "src.pcapi.domain.reimbursement.CustomRuleFinder.get_rule": ["<map>.get"], "src.pcapi.domain.reimbursement.find_all_booking_reimbursements": ["append", "src.pcapi.domain.reimbursement.is_relevant_for_standard_reimbursement_rule", "src.pcapi.domain.reimbursement.get_reimbursement_rule", "collections.defaultdict"], "src.pcapi.domain.reimbursement.get_reimbursement_rule": ["<builtin>.isinstance", "<builtin>.min", "append"], "src.pcapi.core.offerers.models.BaseVenueTypeCode.validate": ["<builtin>.ValueError"], "src.pcapi.core.offerers.models.Venue.store_departement_code": ["pcapi.domain.postal_code.postal_code.PostalCode"], "src.pcapi.core.offerers.models.Venue.nOffers": ["sqlalchemy.and_"], "src.pcapi.core.offerers.models.Venue.nApprovedOffers": ["<builtin>.len"], "src.pcapi.core.offerers.models.Venue.thumbUrl": ["pcapi.utils.human_ids.humanize"], "src.pcapi.core.offerers.models.Venue.timezone": ["pcapi.utils.date.get_postal_code_timezone", "pcapi.utils.date.get_department_timezone"], "pcapi.utils.date.get_postal_code_timezone": [], "pcapi.utils.date.get_department_timezone": [], "src.pcapi.core.offerers.models.Venue.field_exists_and_has_changed": ["<builtin>.getattr", "<builtin>.type", "<builtin>.ValueError"], "src.pcapi.core.offerers.models.VenueContact.field_exists_and_has_changed": ["<builtin>.getattr", "<builtin>.type", "<builtin>.ValueError"], "src.pcapi.core.offerers.models.before_insert": ["src.pcapi.core.offerers.models._fill_departement_code_from_postal_code"], "src.pcapi.core.offerers.models._fill_departement_code_from_postal_code": ["sqlalchemy.exc.IntegrityError"], "sqlalchemy.exc.IntegrityError": [], "src.pcapi.core.offerers.models.before_update": ["src.pcapi.core.offerers.models._fill_departement_code_from_postal_code"], "src.pcapi.core.offerers.models.Offerer.grant_access": ["pcapi.models.user_offerer.UserOfferer"], "pcapi.models.user_offerer.UserOfferer": [], "src.pcapi.core.offerers.models.Offerer.departementCode": ["pcapi.domain.postal_code.postal_code.PostalCode"], "src.pcapi.core.offerers.models.Offerer.legal_category": ["pcapi.connectors.api_entreprises.get_offerer_legal_category"], "src.pcapi.scripts.grant_wallet_to_existing_users.grant_wallet_to_existing_users": ["<builtin>.ValueError"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_user_offerers.create_industrial_user_offerers": ["<map>.values", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.domain.postal_code.postal_code.PostalCode", "<builtin>.len"], "src.pcapi.validation.models.generic.validate_generic": ["<builtin>.isinstance", "<builtin>.getattr", "<builtin>.str", "<builtin>.len", "pcapi.models.api_errors.ApiErrors"], "tests.utils.requests_test.RequestWrapperTest.test_call_given_request_function_with_params": ["unittest.mock.Mock", "pcapi.utils.requests._wrapper"], "pcapi.utils.requests._wrapper": [], "tests.utils.requests_test.RequestWrapperTest.test_call_given_request_function_with_custom_timeout_params": ["unittest.mock.Mock", "<builtin>.dict", "pcapi.utils.requests._wrapper"], "tests.utils.requests_test.RequestWrapperTest.test_should_propagate_any_exception": ["unittest.mock.Mock", "requests.RequestException"], "requests.RequestException": [], "src.pcapi.local_providers.local_provider.LocalProvider.__init__": ["pcapi.core.providers.repository.get_provider_by_local_class"], "src.pcapi.local_providers.local_provider.LocalProvider.create_providable_info": ["<builtin>.Exception", "pcapi.local_providers.providable_info.ProvidableInfo"], "pcapi.local_providers.providable_info.ProvidableInfo": [], "src.pcapi.local_providers.local_provider.LocalProvider.get_object_thumb": ["<builtin>.bytes"], "src.pcapi.local_providers.local_provider.LocalProvider._handle_thumb": ["src.pcapi.local_providers.local_provider.LocalProvider.get_object_thumb", "src.pcapi.local_providers.local_provider.LocalProvider.get_object_thumb_index", "src.pcapi.local_providers.local_provider._save_same_thumb_from_thumb_count_to_index"], "src.pcapi.local_providers.local_provider.LocalProvider.get_object_thumb_index": [], "src.pcapi.local_providers.local_provider._save_same_thumb_from_thumb_count_to_index": ["pcapi.connectors.thumb_storage.create_thumb", "<builtin>.range"], "src.pcapi.local_providers.local_provider.LocalProvider._create_object": ["src.pcapi.local_providers.local_provider.LocalProvider.fill_object_attributes", "src.pcapi.local_providers.local_provider.LocalProvider.log_provider_event", "<builtin>.len"], "src.pcapi.local_providers.local_provider.LocalProvider.fill_object_attributes": [], "src.pcapi.local_providers.local_provider.LocalProvider.log_provider_event": ["pcapi.models.local_provider_event.LocalProviderEvent", "<builtin>.str"], "pcapi.models.local_provider_event.LocalProviderEvent": [], "src.pcapi.local_providers.local_provider.LocalProvider._handle_update": ["src.pcapi.local_providers.local_provider.LocalProvider.fill_object_attributes", "src.pcapi.local_providers.local_provider.LocalProvider.log_provider_event", "<builtin>.len"], "src.pcapi.local_providers.local_provider.LocalProvider.updateObjects": ["pcapi.local_providers.chunk_manager.get_existing_pc_obj", "<builtin>.isinstance", "<map>.values", "src.pcapi.local_providers.local_provider._reindex_offers", "pcapi.local_providers.chunk_manager.save_chunks", "pcapi.repository.providable_queries.get_last_update_for_provider", "<builtin>.list", "src.pcapi.local_providers.local_provider.LocalProvider._create_object", "src.pcapi.local_providers.local_provider.LocalProvider._print_objects_summary", "<builtin>.str", "<builtin>.len", "src.pcapi.local_providers.local_provider.LocalProvider._handle_thumb", "src.pcapi.local_providers.local_provider.LocalProvider.log_provider_event", "src.pcapi.local_providers.local_provider.LocalProvider._handle_update"], "pcapi.local_providers.chunk_manager.get_existing_pc_obj": [], "src.pcapi.local_providers.local_provider._reindex_offers": ["<builtin>.isinstance", "<builtin>.set"], "src.pcapi.local_providers.local_provider.LocalProvider._print_objects_summary": [], "src.pcapi.notifications.sms.send_transactional_sms": ["pcapi.utils.module_loading.import_string"], "src.pcapi.domain.user_emails.send_withdrawal_terms_to_newly_validated_offerer": ["pcapi.core.offerers.repository.find_new_offerer_user_email", "pcapi.emails.new_offerer_validated_withdrawal_terms.retrieve_data_for_new_offerer_validated_withdrawal_terms_email"], "pcapi.emails.new_offerer_validated_withdrawal_terms.retrieve_data_for_new_offerer_validated_withdrawal_terms_email": [], "src.pcapi.tasks.cloud_task.get_client": ["<builtin>.hasattr"], "src.pcapi.tasks.cloud_task.enqueue_task": ["dataclasses.asdict", "src.pcapi.tasks.cloud_task.get_client"], "src.pcapi.tasks.cloud_task.enqueue_internal_task": ["src.pcapi.tasks.cloud_task.enqueue_task", "src.pcapi.tasks.cloud_task._call_internal_api_endpoint", "dateutil.relativedelta.relativedelta"], "src.pcapi.tasks.cloud_task._call_internal_api_endpoint": [], "tests.domain.allocine_test.GetMovieShowtimeListFromAllocineTest.setup_method": ["unittest.mock.Mock"], "tests.domain.allocine_test.GetMovieShowtimeListFromAllocineTest.test_should_retrieve_result_from_api_connector_with_token_and_theater_id_parameter": ["pcapi.domain.allocine.get_movies_showtimes"], "pcapi.domain.allocine.get_movies_showtimes": [], "tests.domain.allocine_test.GetMovieShowtimeListFromAllocineTest.test_should_extract_movies_from_api_result": ["<builtin>.next", "<builtin>.any", "pcapi.domain.allocine.get_movies_showtimes"], "tests.domain.allocine_test.GetMoviePosterTest.test_should_call_api_with_correct_poster_url": ["<builtin>.bytes", "unittest.mock.MagicMock", "pcapi.domain.allocine.get_movie_poster"], "pcapi.domain.allocine.get_movie_poster": [], "tests.domain.allocine_test.RemoveMovieShowsWithSpecialEventTypeTest.test_should_remove_movie_shows_with_special_event_type": ["<builtin>.len", "pcapi.domain.allocine._exclude_movie_showtimes_with_special_event_type"], "pcapi.domain.allocine._exclude_movie_showtimes_with_special_event_type": [], "src.pcapi.scripts.offerer.file_import.iterate_rows_for_user_offerers": ["append", "src.pcapi.scripts.offerer.file_import.create_activated_user_offerer", "src.pcapi.scripts.offerer.file_import._is_header_or_blank_line", "<builtin>.len"], "src.pcapi.scripts.offerer.file_import._is_header_or_blank_line": [], "src.pcapi.scripts.offerer.file_import.create_activated_user_offerer": ["pcapi.core.offerers.api.create_digital_venue", "src.pcapi.scripts.offerer.file_import.fill_user_from", "pcapi.core.offerers.repository.find_offerer_by_siren", "pcapi.core.offerers.repository.find_venue_by_managing_offerer_id", "pcapi.core.users.models.User", "pcapi.repository.user_offerer_queries.find_one_or_none_by_user_id_and_offerer_id", "src.pcapi.scripts.offerer.file_import.fill_user_offerer_from", "pcapi.core.users.repository.find_user_by_email", "pcapi.models.user_offerer.UserOfferer", "src.pcapi.scripts.offerer.file_import.fill_offerer_from", "pcapi.core.offerers.models.Offerer"], "src.pcapi.scripts.offerer.file_import.fill_user_from": ["pcapi.core.users.api.fulfill_account_password", "pcapi.core.users.utils.sanitize_email"], "pcapi.core.users.api.fulfill_account_password": [], "pcapi.core.offerers.repository.find_offerer_by_siren": [], "pcapi.core.offerers.models.Offerer": [], "src.pcapi.scripts.offerer.file_import.fill_offerer_from": [], "pcapi.core.offerers.repository.find_venue_by_managing_offerer_id": [], "pcapi.core.offerers.api.create_digital_venue": [], "src.pcapi.scripts.offerer.file_import.fill_user_offerer_from": [], "src.pcapi.scripts.offerer.file_import.run": ["src.pcapi.scripts.offerer.file_import.iterate_rows_for_user_offerers", "<builtin>.len", "<builtin>.open"], "tests.routes.native.v1.universal_links_test.UniversalLinksTest.test_apple_app_site_asso": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.routes.native.v1.universal_links_test.UniversalLinksTest.test_asset_links": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "src.pcapi.admin.custom_views.support_view.api.get_subscription_items_by_eligibility": ["append"], "src.pcapi.admin.custom_views.support_view.api.get_beneficiary_activation_status": ["<builtin>.any"], "src.pcapi.routes.native.v1.serialization.subscription.ProfileUpdateRequest.mandatory_string_fields_cannot_be_empty": ["<builtin>.ValueError"], "src.pcapi.routes.native.v1.serialization.subscription.ProfileUpdateRequest.string_must_contain_latin_characters": ["<builtin>.ValueError", "pcapi.core.fraud.utils.is_latin"], "src.pcapi.routes.native.v1.serialization.subscription.ProfileUpdateRequest.address_must_be_valid": ["<builtin>.ValueError", "pcapi.core.fraud.utils.has_latin_or_numeric_chars"], "tests.scripts.bulk_inactivate_offers_test.BulkMarkIncompatibleViaOfferIdsTest.test_should_mark_offers_and_products_as_incompatible_via_offer_ids": ["pcapi.scripts.bulk_inactivate_offers.bulk_inactivate_offers", "pcapi.core.offers.factories.OfferFactory"], "pcapi.scripts.bulk_inactivate_offers.bulk_inactivate_offers": [], "tests.local_providers.provider_test_utils.TestLocalProvider.__init__": ["<builtin>.super"], "tests.local_providers.provider_test_utils.TestLocalProviderWithApiErrors.__init__": ["<builtin>.super"], "tests.local_providers.provider_test_utils.TestLocalProviderNoCreation.__init__": ["<builtin>.super"], "tests.local_providers.provider_test_utils.TestLocalProviderWithThumb.__init__": ["<builtin>.super"], "tests.local_providers.provider_test_utils.TestLocalProviderWithThumb.get_object_thumb": ["<builtin>.open", "pathlib.Path"], "tests.local_providers.provider_test_utils.TestLocalProviderWithThumbIndexAt4.__init__": ["<builtin>.super"], "tests.local_providers.provider_test_utils.TestLocalProviderWithThumbIndexAt4.get_object_thumb": ["<builtin>.open", "pathlib.Path"], "tests.routes.shared.post_reset_password_test.Returns204Test.when_email_is_known": ["datetime.timedelta", "<builtin>.len"], "src.pcapi.core.providers.repository.get_enabled_providers_for_pro": ["src.pcapi.core.providers.repository.get_enabled_providers_for_pro_query"], "src.pcapi.core.providers.repository.get_enabled_providers_for_pro_query": [], "src.pcapi.core.providers.repository.get_providers_enabled_for_pro_excluding_specific_provider": ["operator.or_"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation.send_booking_cancellation_emails_to_user_and_offerer": ["src.pcapi.core.mails.transactional.bookings.booking_cancellation.send_offerer_driven_cancellation_email_to_offerer", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary.send_booking_cancellation_by_beneficiary_email", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.send_booking_cancellation_by_pro_to_beneficiary_email", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.send_booking_cancellation_by_beneficiary_to_pro_email"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation.send_offerer_driven_cancellation_email_to_offerer": ["src.pcapi.core.mails.transactional.bookings.booking_cancellation.make_offerer_driven_cancellation_email_for_offerer"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation.make_offerer_driven_cancellation_email_for_offerer": ["flask.render_template", "pcapi.utils.mailing.get_event_datetime", "<builtin>.len", "pcapi.utils.date.format_datetime", "pcapi.core.bookings.repository.find_ongoing_bookings_by_stock"], "pcapi.core.bookings.repository.find_ongoing_bookings_by_stock": [], "pcapi.utils.date.format_datetime": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_offer_validation_config.create_industrial_offer_validation_config": ["pcapi.core.offers.api.import_offer_validation_config", "pcapi.core.users.repository.find_user_by_email"], "src.pcapi.core.mails.transactional.users.reset_password.get_reset_password_native_app_email_data": ["<builtin>.int", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.urls.generate_firebase_dynamic_link"], "src.pcapi.core.mails.transactional.users.reset_password.send_reset_password_email_to_user": ["src.pcapi.core.mails.transactional.users.reset_password.get_reset_password_user_email_data"], "src.pcapi.core.mails.transactional.users.reset_password.get_reset_password_user_email_data": [], "src.pcapi.core.mails.transactional.users.reset_password.send_reset_password_email_to_native_app_user": ["src.pcapi.core.mails.transactional.users.reset_password.get_reset_password_native_app_email_data"], "src.pcapi.sandboxes.scripts.sandbox_testcafe.save_sandbox": ["pcapi.sandboxes.scripts.creators.testcafe.save_testcafe_sandbox"], "pcapi.sandboxes.scripts.creators.testcafe.save_testcafe_sandbox": [], "src.pcapi.scripts.update_providables.update_providables": ["time.time", "<builtin>.int", "pcapi.local_providers.provider_manager.synchronize_venue_provider", "pcapi.local_providers.provider_manager.synchronize_data_for_provider", "pcapi.repository.venue_provider_queries.get_venue_provider_by_id", "<builtin>.ValueError"], "time.time": [], "pcapi.repository.venue_provider_queries.get_venue_provider_by_id": [], "src.pcapi.scripts.update_providables.update_providables_by_provider_id": ["pcapi.local_providers.provider_manager.synchronize_venue_providers_for_provider"], "tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test.FilterBooksBookingsTest.test_filter_books_bookings_with_empty_list": ["pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary._filter_books_bookings"], "pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary._filter_books_bookings": [], "tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test.FilterBooksBookingsTest.test_filter_books_bookings_with_one_book_and_one_other_booking": ["pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary._filter_books_bookings", "pcapi.core.bookings.factories.BookingFactory"], "tests.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary_test.SendinblueSendSoonToBeExpiredBookingsEmailToBeneficiaryTest.test_should_send_two_emails_to_beneficiary_when_they_have_soon_to_be_expired_bookings": ["datetime.timedelta", "<builtin>.len", "pcapi.core.offers.factories.ProductFactory", "pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary.send_soon_to_be_expired_individual_bookings_recap_email_to_beneficiary"], "tests.routes.pro.patch_educational_offer_test.Returns200Test.test_patch_educational_offer": ["pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking", "datetime.datetime", "pcapi.utils.date.format_into_utc_date", "pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingEdition", "pcapi.utils.human_ids.humanize"], "pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingEdition": [], "tests.routes.pro.patch_educational_offer_test.Returns200Test.test_patch_educational_offer_do_not_notify_educational_redactor_when_no_active_booking": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.patch_educational_offer_test.Returns400Test.when_trying_to_patch_forbidden_attributes": ["datetime.datetime", "pcapi.routes.serialization.serialize", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_educational_offer_test.Returns400Test.test_patch_non_approved_offer_fails": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_educational_offer_test.Returns400Test.test_patch_offer_with_empty_name": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_educational_offer_test.Returns400Test.test_patch_offer_with_null_name": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_educational_offer_test.Returns400Test.test_patch_offer_with_non_educational_subcategory": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_educational_offer_test.Returns400Test.test_patch_offer_with_wrong_extra_data": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_educational_offer_test.Returns403Test.when_user_is_not_attached_to_offerer": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_educational_offer_test.Returns404Test.test_returns_404_if_no_educational_offer_exist": ["pcapi.utils.human_ids.humanize"], "src.pcapi.core.educational.exceptions.EducationalInstitutionUnknown.__init__": ["<builtin>.super"], "src.pcapi.core.educational.exceptions.StockNotBookable.__init__": ["<builtin>.super"], "src.pcapi.core.educational.exceptions.EducationalYearNotFound.__init__": ["<builtin>.super"], "src.pcapi.core.educational.exceptions.OfferIsNotEducational.__init__": ["<builtin>.super"], "src.pcapi.core.educational.exceptions.OfferIsNotEvent.__init__": ["<builtin>.super"], "tests.routes.native.v1.bookings_test.PostBookingTest.test_post_bookings": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "flask_jwt_extended.utils.create_access_token", "pcapi.core.offers.factories.StockFactory", "sqlalchemy.orm.joinedload"], "tests.routes.native.v1.bookings_test.PostBookingTest.test_no_stock_found": ["tests.conftest.TestClient.__init__", "flask_jwt_extended.utils.create_access_token", "tests.conftest.TestClient.post"], "tests.routes.native.v1.bookings_test.PostBookingTest.test_insufficient_credit": ["tests.conftest.TestClient.__init__", "flask_jwt_extended.utils.create_access_token", "tests.conftest.TestClient.post", "pcapi.core.offers.factories.StockFactory"], "tests.routes.native.v1.bookings_test.PostBookingTest.test_already_booked": ["tests.conftest.TestClient.__init__", "flask_jwt_extended.utils.create_access_token", "tests.conftest.TestClient.post"], "tests.routes.native.v1.bookings_test.PostBookingTest.test_category_forbidden": ["pcapi.core.offers.factories.StockFactory"], "tests.routes.native.v1.bookings_test.GetBookingsTest.test_get_bookings": ["tests.conftest.TestClient.__init__", "pcapi.core.offers.factories.StockWithActivationCodesFactory", "pcapi.core.offers.factories.EventStockFactory", "datetime.datetime", "flask_jwt_extended.utils.create_access_token", "pcapi.core.offers.factories.StockFactory", "datetime.timedelta", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.MediationFactory"], "pcapi.core.offers.factories.StockWithActivationCodesFactory": [], "pcapi.core.offers.factories.MediationFactory": [], "tests.routes.native.v1.bookings_test.CancelBookingTest.test_cancel_booking": ["tests.conftest.TestClient.__init__", "flask_jwt_extended.utils.create_access_token", "tests.conftest.TestClient.post"], "tests.routes.native.v1.bookings_test.CancelBookingTest.test_cancel_others_booking": ["tests.conftest.TestClient.__init__", "flask_jwt_extended.utils.create_access_token", "tests.conftest.TestClient.post"], "tests.routes.native.v1.bookings_test.CancelBookingTest.test_cancel_confirmed_booking": ["tests.conftest.TestClient.__init__", "datetime.timedelta", "tests.conftest.TestClient.post", "flask_jwt_extended.utils.create_access_token"], "tests.routes.native.v1.bookings_test.ToggleBookingVisibilityTest.test_toggle_visibility": ["tests.conftest.TestClient.__init__", "flask_jwt_extended.utils.create_access_token", "tests.conftest.TestClient.post"], "tests.routes.native.v1.bookings_test.ToggleBookingVisibilityTest.test_integration_toggle_visibility": ["tests.conftest.TestClient.__init__", "pcapi.core.offers.factories.StockWithActivationCodesFactory", "tests.conftest.TestClient.get", "tests.conftest.TestClient.post", "flask_jwt_extended.utils.create_access_token"], "src.pcapi.routes.serialization.stock_serialize.StockResponseModel.from_orm": ["<builtin>.super", "<builtin>.all", "<builtin>.bool"], "src.pcapi.routes.serialization.stock_serialize.StockEditionResponseModel.from_orm": ["<builtin>.super", "<builtin>.all"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel.validate_number_of_tickets": ["<builtin>.ValueError"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel.validate_price": ["<builtin>.ValueError"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel.validate_booking_limit_datetime": ["<builtin>.ValueError"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockCreationBodyModel.validate_price_detail": ["<builtin>.ValueError", "<builtin>.len"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel.validate_beginning_datetime": ["<builtin>.ValueError"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel.validate_number_of_tickets": ["<builtin>.ValueError"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel.validate_price": ["<builtin>.ValueError"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel.validate_booking_limit_datetime": ["<builtin>.all", "<builtin>.ValueError"], "src.pcapi.routes.serialization.stock_serialize.EducationalStockEditionBodyModel.validate_educational_price_detail": ["<builtin>.ValueError", "<builtin>.len"], "tests.core.users.test_users_sql_entity.WalletBalanceTest.test_balance_ignores_expired_deposits": ["datetime.datetime"], "tests.core.users.test_users_sql_entity.WalletBalanceTest.test_balance_should_not_be_negative": ["datetime.datetime"], "tests.core.users.test_users_sql_entity.SQLFunctionsTest.test_wallet_balance": ["freezegun.freeze_time", "dateutil.relativedelta.relativedelta", "decimal.Decimal"], "tests.core.users.test_users_sql_entity.SQLFunctionsTest.test_wallet_balance_multiple_deposits": ["<builtin>.str"], "tests.core.users.test_users_sql_entity.SQLFunctionsTest.test_wallet_balance_expired_deposit": ["freezegun.freeze_time", "dateutil.relativedelta.relativedelta"], "tests.core.users.test_users_sql_entity.SQLFunctionsTest.test_deposit_balance_wrong_id": ["<builtin>.str"], "tests.core.users.test_users_sql_entity.HasPhysicalVenuesTest.test_pro_user_has_one_digital_venue_by_default": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.core.users.test_users_sql_entity.HasPhysicalVenuesTest.test_pro_user_has_one_digital_venue_and_a_physical_venue": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.core.users.test_users_sql_entity.CalculateAgeTest.test_user_age": ["datetime.datetime"], "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.post_educational_booking_test.Returns200Test.test_post_educational_booking": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email"], "tests.routes.adage_iframe.post_educational_booking_test.Returns200Test.test_post_educational_booking_with_less_redactor_information": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email"], "tests.routes.adage_iframe.post_educational_booking_test.Returns400Test.test_should_not_allow_booking_when_educational_institution_is_unknown": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email"], "tests.routes.adage_iframe.post_educational_booking_test.Returns400Test.test_should_not_allow_booking_when_stock_has_no_remaining_quantity": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email"], "tests.routes.adage_iframe.post_educational_booking_test.Returns400Test.test_should_not_allow_booking_when_offer_is_not_educational": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email"], "tests.routes.adage_iframe.post_educational_booking_test.Returns400Test.test_should_not_allow_booking_when_educational_offer_is_not_an_event": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email"], "tests.routes.adage_iframe.post_educational_booking_test.Returns403Test.test_should_not_allow_booking_when_uai_code_is_not_provided_through_jwt": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.routes.adage_iframe.post_educational_booking_test._create_adage_valid_token_with_email"], "tests.connectors.api_demarches_simplifiees_test.GetApplicationDetailsTest.test_calls_demarche_simplifiee_api_with_right_link": ["unittest.mock.MagicMock"], "tests.connectors.api_demarches_simplifiees_test.GraphqlResponseTest.test_get_applications_with_details": ["<builtin>.list", "tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.connectors.api_demarches_simplifiees_test.GraphqlResponseTest.test_get_single_application_details": ["tests.scripts.beneficiary.fixture.make_single_application"], "src.pcapi.scripts.external_users.batch_update_users_attributes.get_users": ["<builtin>.print"], "src.pcapi.scripts.external_users.batch_update_users_attributes.get_users_chunks": ["itertools.islice", "src.pcapi.scripts.external_users.batch_update_users_attributes.get_users", "<builtin>.list", "<builtin>.len"], "src.pcapi.scripts.external_users.batch_update_users_attributes.format_batch_users": ["append", "<builtin>.print", "<builtin>.len", "pcapi.core.users.external.get_user_attributes"], "pcapi.core.users.external.get_user_attributes": [], "src.pcapi.scripts.external_users.batch_update_users_attributes.format_sendinblue_users": ["append", "pcapi.core.users.external.get_user_or_pro_attributes", "<builtin>.print", "<builtin>.len"], "pcapi.core.users.external.get_user_or_pro_attributes": [], "src.pcapi.scripts.external_users.batch_update_users_attributes.run": ["pcapi.notifications.push.update_users_attributes", "src.pcapi.scripts.external_users.batch_update_users_attributes.get_users_chunks", "src.pcapi.scripts.external_users.batch_update_users_attributes.format_sendinblue_users", "<builtin>.print", "src.pcapi.scripts.external_users.batch_update_users_attributes.format_batch_users", "pcapi.core.users.external.sendinblue.import_contacts_in_sendinblue"], "pcapi.notifications.push.update_users_attributes": [], "tests.sandboxes.activation_test.test_save_activation_sandbox": ["pcapi.sandboxes.scripts.save_sandbox.save_sandbox"], "tests.routes.pro.edit_shadow_stock_test.Return200Test.test_edit_shadow_stock": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_shadow_stock_test.Return200Test.test_edit_shadow_stock_with_no_payload": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_shadow_stock_test.Return403Test.test_edit_educational_stocks_should_not_be_possible_when_user_not_linked_to_offerer": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_shadow_stock_test.Return400Test.should_raise_error_when_educational_price_detail_length_is_greater_than_1000": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_shadow_stock_test.Return400Test.should_raise_error_when_offer_is_not_showcase": ["datetime.datetime", "pcapi.utils.human_ids.humanize"], "src.pcapi.validation.models.offerer.validate": ["<builtin>.len"], "src.pcapi.scripts.cancel_bookings_during_quarantine.cancel_booking_status_for_events_happening_during_quarantine": ["src.pcapi.scripts.cancel_bookings_during_quarantine.cancel_bookings", "src.pcapi.scripts.cancel_bookings_during_quarantine.find_bookings_to_cancel"], "src.pcapi.scripts.cancel_bookings_during_quarantine.find_bookings_to_cancel": ["datetime.datetime", "sqlalchemy.and_"], "src.pcapi.scripts.cancel_bookings_during_quarantine.cancel_bookings": [], "src.pcapi.routes.pro.venue_labels.fetch_venue_labels": ["pcapi.routes.serialization.venue_labels_serialize.VenueLabelListResponseModel"], "pcapi.routes.serialization.venue_labels_serialize.VenueLabelListResponseModel": [], "src.pcapi.scripts.deactivate_offers_during_quarantine.fetch_user_emails_for_offers.fetch_user_emails_for_offers_with_max_stock_date_between_today_and_end_of_quarantine": ["pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine"], "tests.scripts.booking.canceling_token_validation_test.test_should_update_booking_when_valid_token_is_given_and_no_payment_associated": ["pcapi.scripts.booking.canceling_token_validation.canceling_token_validation"], "pcapi.scripts.booking.canceling_token_validation.canceling_token_validation": [], "tests.core.users.external.sendinblue_test.FormatUserAttributesTest.test_format_attributes": ["pcapi.core.users.external.sendinblue.format_user_attributes", "datetime.datetime"], "pcapi.core.users.external.sendinblue.format_user_attributes": [], "tests.core.users.external.sendinblue_test.FormatUserAttributesTest.test_format_pro_attributes": ["pcapi.core.users.external.sendinblue.format_user_attributes"], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.setup_method": ["pcapi.core.users.external.sendinblue.format_user_attributes", "pcapi.core.users.external.sendinblue.SendinblueUserUpdateData", "copy.deepcopy"], "pcapi.core.users.external.sendinblue.SendinblueUserUpdateData": [], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.test_build_file_body": ["pcapi.core.users.external.sendinblue.build_file_body"], "pcapi.core.users.external.sendinblue.build_file_body": [], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.test_import_contacts_in_sendinblue": ["unittest.mock.call", "sib_api_v3_sdk.models.request_contact_import.RequestContactImport", "pcapi.core.users.external.sendinblue.import_contacts_in_sendinblue"], "sib_api_v3_sdk.models.request_contact_import.RequestContactImport": [], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.test_add_contacts_to_list": ["sib_api_v3_sdk.models.remove_contact_from_list.RemoveContactFromList", "sib_api_v3_sdk.models.request_contact_import.RequestContactImport", "pcapi.core.users.external.sendinblue.add_contacts_to_list"], "sib_api_v3_sdk.models.remove_contact_from_list.RemoveContactFromList": [], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.test_add_contacts_to_list_without_mock": ["pcapi.core.users.external.sendinblue.add_contacts_to_list"], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest._test_add_many_contacts_to_list_without_mock": ["<builtin>.range", "pcapi.core.users.external.sendinblue.add_contacts_to_list"], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.test_add_200k_contacts_to_list_without_mock": ["tests.core.users.external.sendinblue_test.BulkImportUsersDataTest._test_add_many_contacts_to_list_without_mock"], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.test_add_500k_contacts_to_list_without_mock": ["tests.core.users.external.sendinblue_test.BulkImportUsersDataTest._test_add_many_contacts_to_list_without_mock"], "tests.core.users.external.sendinblue_test.BulkImportUsersDataTest.test_update_pro_contact_without_mock": ["pcapi.core.users.external.sendinblue.format_user_attributes", "pcapi.core.users.external.sendinblue.make_update_request", "pcapi.tasks.serialization.sendinblue_tasks.UpdateSendinblueContactRequest"], "pcapi.core.users.external.sendinblue.make_update_request": [], "src.pcapi.core.users.api.create_email_validation_token": ["src.pcapi.core.users.api.generate_and_save_token"], "src.pcapi.core.users.api.generate_and_save_token": ["pcapi.core.users.models.Token"], "pcapi.core.users.models.Token": [], "src.pcapi.core.users.api.create_reset_password_token": ["src.pcapi.core.users.api.generate_and_save_token"], "src.pcapi.core.users.api.create_phone_validation_token": ["src.pcapi.core.users.api.generate_and_save_token"], "src.pcapi.core.users.api.create_account": ["pcapi.core.users.models.NotificationSubscriptions", "pcapi.core.users.models.User", "src.pcapi.core.users.api.initialize_account", "pcapi.core.users.repository.find_user_by_email", "dataclasses.asdict"], "src.pcapi.core.users.api.initialize_account": ["src.pcapi.core.users.api.delete_all_users_tokens", "pcapi.core.users.external.update_external_user", "src.pcapi.core.users.api.request_email_confirmation"], "src.pcapi.core.users.api.delete_all_users_tokens": [], "src.pcapi.core.users.api.request_email_confirmation": ["src.pcapi.core.users.api.create_email_validation_token", "pcapi.core.mails.transactional.users.email_address_change_confirmation.send_email_confirmation_email"], "src.pcapi.core.users.api.validate_phone_number_and_activate_user": ["src.pcapi.core.users.api.validate_phone_number"], "src.pcapi.core.users.api.validate_phone_number": ["src.pcapi.core.users.api.check_phone_number_not_used", "src.pcapi.core.users.api._check_phone_number_validation_is_authorized", "src.pcapi.core.users.api.fraud_manager"], "src.pcapi.core.users.api._check_phone_number_validation_is_authorized": [], "src.pcapi.core.users.api.fraud_manager": [], "src.pcapi.core.users.api.check_phone_number_not_used": ["pcapi.core.users.repository.does_validated_phone_exist"], "pcapi.core.users.repository.does_validated_phone_exist": [], "src.pcapi.core.users.api.update_user_information_from_external_source": ["<builtin>.isinstance", "datetime.time", "<builtin>.all", "pcapi.domain.postal_code.postal_code.PostalCode"], "src.pcapi.core.users.api.fulfill_account_password": ["src.pcapi.core.users.api._generate_random_password"], "src.pcapi.core.users.api._generate_random_password": ["pcapi.domain.password.random_hashed_password"], "pcapi.domain.password.random_hashed_password": [], "src.pcapi.core.users.api.fulfill_beneficiary_data": ["src.pcapi.core.users.api._generate_random_password"], "src.pcapi.core.users.api.suspend_account": ["<builtin>.any", "<map>", "<builtin>.str"], "<map>": [], "src.pcapi.core.users.api.change_user_email": ["pcapi.core.users.repository.find_user_by_email"], "src.pcapi.core.users.api.update_password_and_external_user": ["pcapi.core.users.external.update_external_user"], "src.pcapi.core.users.api.update_user_info": ["pcapi.core.users.external.update_external_user", "pcapi.core.users.external.update_external_pro"], "src.pcapi.core.users.api.get_domains_credit": ["pcapi.core.users.models.Credit", "<builtin>.max", "pcapi.core.users.models.DomainsCredit", "decimal.Decimal", "<builtin>.sum", "<builtin>.min"], "src.pcapi.core.users.api.create_pro_user_and_offerer": ["append", "src.pcapi.core.users.api._generate_user_offerer_when_existing_offerer", "pcapi.core.users.external.update_external_pro", "src.pcapi.core.users.api._generate_offerer", "src.pcapi.core.users.api._set_offerer_departement_code", "offerers.api.create_digital_venue", "extend", "pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_pro_email", "src.pcapi.core.users.api.create_pro_user"], "src.pcapi.core.users.api.create_pro_user": ["dataclasses.asdict", "pcapi.domain.postal_code.postal_code.PostalCode", "pcapi.core.users.models.NotificationSubscriptions", "pcapi.core.users.models.User"], "src.pcapi.core.users.api._generate_offerer": ["offerers.models.Offerer"], "offerers.models.Offerer": [], "offerers.api.create_digital_venue": [], "src.pcapi.core.users.api._generate_user_offerer_when_existing_offerer": [], "src.pcapi.core.users.api._set_offerer_departement_code": ["pcapi.domain.postal_code.postal_code.PostalCode"], "pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_pro_email": [], "src.pcapi.core.users.api.change_user_phone_number": ["src.pcapi.core.users.api._check_phone_number_validation_is_authorized", "src.pcapi.core.users.api.fraud_manager"], "src.pcapi.core.users.api.send_phone_validation_code": ["src.pcapi.core.users.api.create_phone_validation_token", "src.pcapi.core.users.api.fraud_manager", "pcapi.notifications.sms.send_transactional_sms", "src.pcapi.core.users.api._check_phone_number_validation_is_authorized", "pcapi.notifications.sms.sending_limit.update_sent_SMS_counter"], "pcapi.notifications.sms.send_transactional_sms": [], "pcapi.notifications.sms.sending_limit.update_sent_SMS_counter": [], "src.pcapi.core.users.api.check_and_update_phone_validation_attempts": ["<builtin>.int"], "src.pcapi.core.users.api.check_sms_sending_is_allowed": ["pcapi.notifications.sms.sending_limit.is_SMS_sending_allowed"], "pcapi.notifications.sms.sending_limit.is_SMS_sending_allowed": [], "src.pcapi.core.users.api.update_last_connection_date": ["datetime.timedelta", "pcapi.core.users.external.update_external_user"], "src.pcapi.core.users.api.create_user_access_token": ["flask_jwt_extended.create_access_token"], "flask_jwt_extended.create_access_token": [], "src.pcapi.core.users.api.get_eligibility_end_datetime": ["datetime.time", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.api.get_eligibility_start_datetime": ["datetime.time", "dateutil.relativedelta.relativedelta"], "src.pcapi.core.users.api.get_eligibility_at_date": ["src.pcapi.core.users.api.get_eligibility_end_datetime", "src.pcapi.core.users.api.get_eligibility_start_datetime"], "src.pcapi.core.users.api.get_activable_identity_fraud_check": ["<builtin>.sorted", "src.pcapi.core.users.api.is_eligible_for_beneficiary_upgrade"], "src.pcapi.core.users.api.is_eligible_for_beneficiary_upgrade": [], "src.pcapi.core.users.api.get_user_age_at_registration": ["src.pcapi.core.users.api.get_activable_identity_fraud_check"], "src.pcapi.routes.adage.v1.prebooking.get_educational_bookings": ["pcapi.core.educational.repository.find_educational_bookings_for_adage"], "src.pcapi.routes.adage.v1.prebooking.confirm_prebooking": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.adage.v1.prebooking.refuse_pre_booking": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.adage.v1.prebooking.get_all_bookings_per_year": ["pcapi.core.educational.repository.get_bookings_for_educational_year"], "pcapi.core.educational.repository.get_bookings_for_educational_year": [], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.column_type_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.get_view_filter": ["src.pcapi.admin.custom_views.support_view.view.BeneficiaryView._are_search_and_filters_empty"], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView._are_search_and_filters_empty": [], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.get_query": ["src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.get_view_filter"], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.get_count_query": ["src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.get_view_filter"], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.details_view": ["<builtin>.any"], "src.pcapi.admin.custom_views.support_view.view.BeneficiaryView.validate_beneficiary": ["markupsafe.Markup", "pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email"], "pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email": [], "src.pcapi.scheduled_tasks.utils.sentry_listener": ["<builtin>.type"], "src.pcapi.scripts.offerer.generate_and_save_api_key_for_offerer.generate_and_save_api_key_for_offerer": ["<builtin>.print", "pcapi.core.offerers.api.generate_and_save_api_key"], "pcapi.core.offerers.api.generate_and_save_api_key": [], "tests.admin.custom_views.user_email_history_view_test.UserEmailHistoryViewTest.test_admin_validation": ["pcapi.core.testing.assert_model_count_delta"], "pcapi.core.testing.assert_model_count_delta": [], "tests.admin.custom_views.user_email_history_view_test.UserEmailHistoryViewTest.test_only_super_admins_can_validate": ["pcapi.core.testing.assert_model_count_delta"], "tests.admin.custom_views.user_email_history_view_test.UserEmailHistoryViewTest.test_already_validated": ["pcapi.core.testing.assert_model_count_delta"], "tests.admin.custom_views.user_email_history_view_test.UserEmailHistoryViewTest.test_next_url": ["flask.url_for"], "tests.admin.custom_views.user_email_history_view_test.UserEmailHistoryViewTest.test_next_url_broken": ["flask.url_for"], "tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest.ExtractThumbIndexTest.test_return_0_for_filename_with_1_75": ["pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.extract_thumb_index"], "pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.extract_thumb_index": [], "tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest.ExtractThumbIndexTest.test_return_4_for_filename_with_4": ["pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.extract_thumb_index"], "tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest.test_compute_first_thumb_dominant_color_even_if_not_first_file": ["pcapi.local_providers.TiteLiveThingThumbs", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "tests.local_providers.titelive_thumbs_test.get_zip_file_from_sandbox", "tests.local_providers.titelive_thumbs_test.get_zip_with_2_usable_thumb_files"], "tests.local_providers.titelive_thumbs_test.get_zip_with_2_usable_thumb_files": ["tests.local_providers.titelive_thumbs_test.get_zip_thumbs_file_from_named_sandbox_file"], "tests.local_providers.titelive_thumbs_test.get_zip_thumbs_file_from_named_sandbox_file": ["pathlib.Path"], "tests.local_providers.titelive_thumbs_test.get_zip_file_from_sandbox": ["zipfile.ZipFile"], "zipfile.ZipFile": [], "pcapi.local_providers.TiteLiveThingThumbs": [], "tests.local_providers.titelive_thumbs_test.TiteliveThingThumbsTest.test_updates_thumb_count_for_product_when_new_thumbs_added": ["pcapi.local_providers.TiteLiveThingThumbs", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "tests.local_providers.titelive_thumbs_test.get_zip_with_1_usable_thumb_file", "tests.local_providers.titelive_thumbs_test.get_zip_file_from_sandbox"], "tests.local_providers.titelive_thumbs_test.get_zip_with_1_usable_thumb_file": ["tests.local_providers.titelive_thumbs_test.get_zip_thumbs_file_from_named_sandbox_file"], "tests.conftest.run_migrations": ["alembic.config.Config"], "alembic.config.Config": [], "tests.conftest.clear_tests_assets_bucket": ["pathlib.Path"], "tests.conftest.clear_tests_invoices_bucket": ["pathlib.Path"], "tests.conftest._db": ["pcapi.local_providers.install.install_local_providers", "tests.conftest.run_migrations", "pcapi.install_database_extensions.install_database_extensions", "pcapi.models.feature.install_feature_flags", "pcapi.repository.clean_database.clean_all_database"], "pcapi.install_database_extensions.install_database_extensions": [], "pcapi.models.feature.install_feature_flags": [], "pcapi.local_providers.install.install_local_providers": [], "tests.conftest.client_fixture": ["tests.conftest.TestClient.__init__"], "tests.conftest.ubble_mock": ["tests.connectors.beneficiaries.ubble_fixtures"], "tests.conftest.cloud_task_client_fixture": ["unittest.mock.patch", "unittest.mock.MagicMock"], "tests.conftest.TestClient.with_basic_auth": ["requests.auth._basic_auth_str"], "tests.conftest.TestClient.with_token": ["flask_jwt_extended.utils.create_access_token"], "tests.conftest.TestClient.delete": ["tests.conftest.TestClient._print_spec"], "tests.conftest.clean_database.decorated_function": ["tests.core.educational.test_api.ConfirmEducationalBookingTest.test_confirm_educational_booking_lock", "tests.admin.custom_views.beneficiary_user_view_test.BeneficiaryUserViewTest.test_the_deposit_version_is_specified", "tests.core.bookings.test_api.BookOfferConcurrencyTest.test_cancel_all_bookings_from_stock", "tests.core.users.test_models.SubscriptionStateTest.test_trigger_load_event", "tests.core.bookings.test_api.BookOfferConcurrencyTest.test_cancel_booking", "tests.core.educational.test_api.RefuseEducationalBookingTest.test_refuse_educational_booking_stock_lock", "tests.core.bookings.test_api.BookOfferConcurrencyTest.test_create_booking", "tests.core.reference.test_models.ReferenceSchemeTest.test_usage_without_proper_lock", "tests.routes.pro.post_venue_provider_test.Returns400Test.when_add_allocine_stocks_provider_with_wrong_format_price"], "tests.core.bookings.test_api.BookOfferConcurrencyTest.test_cancel_all_bookings_from_stock": ["sqlalchemy.sql.text", "sqlalchemy.create_engine"], "tests.core.bookings.test_api.BookOfferConcurrencyTest.test_cancel_booking": ["sqlalchemy.sql.text", "sqlalchemy.create_engine"], "tests.core.bookings.test_api.BookOfferConcurrencyTest.test_create_booking": ["sqlalchemy.sql.text", "sqlalchemy.create_engine"], "tests.core.reference.test_models.ReferenceSchemeTest.test_usage_without_proper_lock": ["<builtin>.len"], "tests.routes.pro.post_venue_provider_test.Returns400Test.when_add_allocine_stocks_provider_with_wrong_format_price": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.core.providers.api.activate_provider", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offer_test.Returns200Test.test_access_by_beneficiary": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offer_test.Returns200Test.test_performance": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offer_test.Returns200Test.test_access_even_if_offerer_has_no_siren": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offer_test.Returns200Test.test_returns_an_active_mediation": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offer_test.Returns200Test.test_returns_an_event_stock": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "datetime.timedelta", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offer_test.Returns200Test.test_returns_a_thing_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offer_test.Returns200Test.test_returns_a_thing_with_activation_code_stock": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.create_beneficiary_imports": ["<builtin>.len"], "src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.save_beneficiary_import_sandbox": ["src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.create_beneficiary_user", "src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.create_beneficiary_imports", "src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.create_admin_user"], "src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.create_admin_user": [], "src.pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.create_beneficiary_user": [], "tests.local_providers.synchronize_provider_api_test.create_offer": ["tests.local_providers.synchronize_provider_api_test.create_product"], "tests.local_providers.synchronize_provider_api_test.create_product": [], "tests.local_providers.synchronize_provider_api_test.create_stock": ["tests.local_providers.synchronize_provider_api_test.create_offer"], "tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest.test_execution": ["pcapi.core.bookings.factories.BookingFactory", "tests.local_providers.synchronize_provider_api_test.create_stock", "decimal.Decimal", "tests.local_providers.synchronize_provider_api_test.create_offer", "<builtin>.len", "tests.local_providers.synchronize_provider_api_test.create_product", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest.BuildStocksDetailsTest.test_build_stock_details_from_raw_stocks": ["decimal.Decimal", "pcapi.core.providers.models.StockDetail"], "tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest.BuildStocksDetailsTest.test_build_stock_details_from_raw_stocks_excludes_duplicates": ["decimal.Decimal", "pcapi.core.providers.models.StockDetail"], "tests.local_providers.synchronize_provider_api_test.ProviderAPICronTest.BuildStocksDetailsTest.test_build_stock_details_with_euro_cents": ["decimal.Decimal", "pcapi.core.providers.models.StockDetail"], "tests.scripts.change_pro_users_to_beneficiary_test.test_should_change_pro_users_to_beneficiary": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "dateutil.relativedelta.relativedelta", "pcapi.scripts.change_some_pro_users_to_beneficiary.change_pro_users_to_beneficiary"], "pcapi.scripts.change_some_pro_users_to_beneficiary.change_pro_users_to_beneficiary": [], "tests.infrastructure.repository.pro_offerers.paginated_offerer_sql_repository_test.PaginatedOffererSQLRepositoryTest.should_only_return_offerers_linked_to_user": ["<builtin>.isinstance", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository", "pcapi.model_creators.generic_creators.create_user_offerer", "<builtin>.len"], "pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository": [], "tests.infrastructure.repository.pro_offerers.paginated_offerer_sql_repository_test.PaginatedOffererSQLRepositoryTest.should_return_linked_offerers_with_matching_keywords_in_name": ["<builtin>.isinstance", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "tests.infrastructure.repository.pro_offerers.paginated_offerer_sql_repository_test.PaginatedOffererSQLRepositoryTest.should_return_linked_offerers_with_matching_keywords_in_venue_name": ["<builtin>.isinstance", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "tests.infrastructure.repository.pro_offerers.paginated_offerer_sql_repository_test.PaginatedOffererSQLRepositoryTest.should_return_only_one_offerers_when_it_has_multiple_venues": ["<builtin>.isinstance", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "src.pcapi.models.pc_object.PcObject.__init__": ["src.pcapi.models.pc_object.PcObject.populate_from_dict", "<builtin>.super"], "src.pcapi.models.pc_object.PcObject.populate_from_dict": ["<builtin>.isinstance", "<builtin>.setattr", "src.pcapi.models.pc_object.PcObject._try_to_set_attribute_with_deserialized_datetime", "src.pcapi.models.pc_object.PcObject._check_not_soft_deleted", "src.pcapi.models.pc_object._dehumanize_if_needed", "src.pcapi.models.pc_object.PcObject._try_to_set_attribute_with_decimal_value", "src.pcapi.models.pc_object.PcObject._get_keys_to_populate", "src.pcapi.models.pc_object.PcObject._try_to_set_attribute_with_uuid"], "src.pcapi.models.pc_object.PcObject._check_not_soft_deleted": ["src.pcapi.models.pc_object.PcObject.is_soft_deleted"], "src.pcapi.models.pc_object.PcObject.is_soft_deleted": ["<builtin>.issubclass", "<builtin>.type"], "src.pcapi.models.pc_object.PcObject._get_keys_to_populate": ["<builtin>.set"], "src.pcapi.models.pc_object._dehumanize_if_needed": ["<builtin>.isinstance", "pcapi.utils.human_ids.dehumanize", "src.pcapi.models.pc_object._is_human_id_column"], "src.pcapi.models.pc_object._is_human_id_column": ["<builtin>.isinstance"], "src.pcapi.models.pc_object.PcObject._try_to_set_attribute_with_deserialized_datetime": ["pcapi.models.api_errors.DateTimeCastError", "<builtin>.setattr", "src.pcapi.models.pc_object._deserialize_datetime"], "src.pcapi.models.pc_object._deserialize_datetime": ["<builtin>.TypeError"], "pcapi.models.api_errors.DateTimeCastError": [], "src.pcapi.models.pc_object.PcObject._try_to_set_attribute_with_uuid": ["<builtin>.setattr", "pcapi.models.api_errors.UuidCastError"], "pcapi.models.api_errors.UuidCastError": [], "src.pcapi.models.pc_object.PcObject._try_to_set_attribute_with_decimal_value": ["<builtin>.setattr", "pcapi.models.api_errors.DecimalCastError", "decimal.Decimal"], "pcapi.models.api_errors.DecimalCastError": [], "src.pcapi.models.pc_object.PcObject.__repr__": ["pcapi.utils.human_ids.humanize"], "src.pcapi.models.pc_object.PcObject.dump": ["pprint.pprint", "<builtin>.vars"], "src.pcapi.models.pc_object.PcObject.restize_data_error": ["src.pcapi.models.pc_object.PcObject.restize_global_error", "<builtin>.len"], "src.pcapi.models.pc_object.PcObject.restize_global_error": [], "src.pcapi.models.pc_object.PcObject.restize_integrity_error": ["<builtin>.hasattr", "src.pcapi.models.pc_object.PcObject.restize_global_error", "<builtin>.str"], "src.pcapi.models.pc_object.PcObject.restize_internal_error": ["src.pcapi.models.pc_object.PcObject.restize_global_error"], "src.pcapi.models.pc_object.PcObject.restize_type_error": ["src.pcapi.models.pc_object.PcObject.restize_global_error", "<builtin>.len"], "src.pcapi.models.pc_object.PcObject.restize_value_error": ["<builtin>.map", "src.pcapi.models.pc_object.PcObject.restize_global_error", "<builtin>.len"], "src.pcapi.core.bookings.repository.find_by": ["pcapi.models.api_errors.ResourceNotFoundError", "pcapi.core.users.utils.sanitize_email"], "pcapi.models.api_errors.ResourceNotFoundError": [], "src.pcapi.core.bookings.repository.find_by_pro_user": ["sqlalchemy.text", "src.pcapi.core.bookings.repository._duplicate_booking_when_quantity_is_two", "src.pcapi.core.bookings.repository._paginated_bookings_sql_entities_to_bookings_recap", "src.pcapi.core.bookings.repository._get_filtered_bookings_count", "src.pcapi.core.bookings.repository._get_filtered_booking_pro"], "src.pcapi.core.bookings.repository._get_filtered_bookings_count": ["src.pcapi.core.bookings.repository._get_filtered_bookings_query"], "src.pcapi.core.bookings.repository._get_filtered_bookings_query": ["src.pcapi.core.bookings.repository._field_to_venue_timezone", "<builtin>.tuple"], "src.pcapi.core.bookings.repository._field_to_venue_timezone": ["sqlalchemy.cast"], "src.pcapi.core.bookings.repository._get_filtered_booking_pro": ["src.pcapi.core.bookings.repository._get_filtered_bookings_query"], "src.pcapi.core.bookings.repository._duplicate_booking_when_quantity_is_two": [], "sqlalchemy.text": [], "src.pcapi.core.bookings.repository._paginated_bookings_sql_entities_to_bookings_recap": ["<builtin>.int", "pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "src.pcapi.core.bookings.repository._serialize_booking_recap"], "src.pcapi.core.bookings.repository._serialize_booking_recap": ["pcapi.domain.booking_recap.booking_recap.BookingRecap", "src.pcapi.core.bookings.repository._apply_departement_timezone", "src.pcapi.core.bookings.repository._serialize_date_with_timezone"], "src.pcapi.core.bookings.repository._serialize_date_with_timezone": ["pcapi.domain.postal_code.postal_code.PostalCode", "src.pcapi.core.bookings.repository._apply_departement_timezone"], "src.pcapi.core.bookings.repository._apply_departement_timezone": ["pcapi.utils.date.get_department_timezone"], "pcapi.domain.booking_recap.booking_recap.BookingRecap": [], "pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated": [], "src.pcapi.core.bookings.repository.find_unique_eac_booking_if_any": ["sqlalchemy.sql.elements.not_"], "sqlalchemy.sql.elements.not_": [], "src.pcapi.core.bookings.repository.find_bookings_eligible_for_payment_for_venue": ["sqlalchemy.orm.contains_eager", "sqlalchemy.orm.joinedload", "sqlalchemy.cast"], "src.pcapi.core.bookings.repository.find_expiring_individual_bookings_query": ["datetime.time", "sqlalchemy.case"], "src.pcapi.core.bookings.repository.find_expiring_educational_bookings_query": ["datetime.time"], "src.pcapi.core.bookings.repository.find_soon_to_be_expiring_individual_bookings_ordered_by_user": ["datetime.time", "sqlalchemy.case"], "src.pcapi.core.bookings.repository.generate_booking_token": ["pcapi.utils.token.random_token", "src.pcapi.core.bookings.repository.token_exists", "<builtin>.range", "<builtin>.ValueError"], "pcapi.utils.token.random_token": [], "src.pcapi.core.bookings.repository.token_exists": [], "src.pcapi.core.bookings.repository.find_user_ids_with_expired_individual_bookings": ["datetime.timedelta"], "src.pcapi.core.bookings.repository.get_expired_individual_bookings_for_user": ["datetime.timedelta"], "src.pcapi.core.bookings.repository.find_expired_individual_bookings_ordered_by_offerer": ["sqlalchemy.cast"], "src.pcapi.core.bookings.repository.find_expired_educational_bookings": ["sqlalchemy.orm.contains_eager", "sqlalchemy.orm.joinedload", "sqlalchemy.cast"], "src.pcapi.core.bookings.repository.get_legacy_active_bookings_quantity_for_venue": ["sqlalchemy.sql.functions.coalesce"], "src.pcapi.core.bookings.repository.get_legacy_validated_bookings_quantity_for_venue": ["sqlalchemy.or_", "sqlalchemy.sql.functions.coalesce"], "src.pcapi.core.bookings.repository.get_bookings_from_deposit": ["sqlalchemy.or_", "sqlalchemy.orm.joinedload"], "src.pcapi.core.bookings.repository.get_csv_report": ["src.pcapi.core.bookings.repository._get_filtered_booking_report", "src.pcapi.core.bookings.repository._duplicate_booking_when_quantity_is_two", "src.pcapi.core.bookings.repository._serialize_csv_report"], "src.pcapi.core.bookings.repository._get_filtered_booking_report": ["src.pcapi.core.bookings.repository._get_filtered_bookings_query"], "src.pcapi.core.bookings.repository._serialize_csv_report": ["src.pcapi.core.bookings.repository._get_booking_status", "io.StringIO", "<builtin>.print", "src.pcapi.core.bookings.repository._serialize_date_with_timezone", "pcapi.core.offers.serialize.serialize_offer_type_educational_or_individual"], "src.pcapi.core.bookings.repository._get_booking_status": [], "src.pcapi.core.bookings.repository.get_soon_expiring_bookings": ["sqlalchemy.orm.contains_eager", "datetime.timedelta"], "src.pcapi.core.object_storage.backends.local.LocalBackend.local_dir": ["pathlib.PurePath"], "src.pcapi.core.object_storage.backends.local.LocalBackend.local_path": ["src.pcapi.core.object_storage.backends.local.LocalBackend.local_dir", "pathlib.PurePath"], "src.pcapi.core.object_storage.backends.local.LocalBackend.store_public_object": ["src.pcapi.core.object_storage.backends.local.LocalBackend.local_path", "src.pcapi.core.object_storage.backends.local.LocalBackend.local_dir", "<builtin>.str", "<builtin>.open"], "src.pcapi.core.object_storage.backends.local.LocalBackend.delete_public_object": ["src.pcapi.core.object_storage.backends.local.LocalBackend.local_path", "<builtin>.str"], "src.pcapi.core.object_storage.backends.local.LocalBackend.get_container": ["append", "<builtin>.len", "sort", "<builtin>.str"], "sort": [], "src.pcapi.local_providers.provider_api.synchronize_provider_api.synchronize_venue_provider": ["typing.Counter", "pcapi.core.providers.api.synchronize_stocks", "src.pcapi.local_providers.provider_api.synchronize_provider_api._get_stocks_by_batch", "src.pcapi.local_providers.provider_api.synchronize_provider_api._build_stock_details_from_raw_stocks"], "typing.Counter": [], "src.pcapi.local_providers.provider_api.synchronize_provider_api._get_stocks_by_batch": [], "src.pcapi.local_providers.provider_api.synchronize_provider_api._build_stock_details_from_raw_stocks": ["<map>.values", "pcapi.utils.custom_keys.compute_venue_reference", "<builtin>.list", "decimal.Decimal", "pcapi.core.providers.models.StockDetail"], "pcapi.utils.custom_keys.compute_venue_reference": [], "pcapi.core.providers.api.synchronize_stocks": [], "src.pcapi.sandboxes.scripts.getters.pro_04_offerer.get_existing_pro_validated_user_with_first_offerer": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper"], "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper": [], "src.pcapi.core.mails.transactional.users.email_address_change.get_information_email_change_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.users.email_address_change.send_information_email_change_email": ["src.pcapi.core.mails.transactional.users.email_address_change.get_information_email_change_data"], "src.pcapi.core.mails.transactional.users.email_address_change.get_confirmation_email_change_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.users.email_address_change.send_confirmation_email_change_email": ["src.pcapi.core.mails.transactional.users.email_address_change.get_confirmation_email_change_data"], "tests.core.users.test_utils.EncodeJWTPayloadTest.test_encode_jwt_payload": ["pcapi.core.users.utils.encode_jwt_payload", "<builtin>.int", "<builtin>.dict"], "tests.core.users.test_utils.EncodeJWTPayloadTest.test_encode_jwt_payload_without_expiration_date": ["pcapi.core.users.utils.encode_jwt_payload", "<builtin>.dict"], "tests.core.users.test_utils.DecodeJWTPayloadRS256Test.test_decode_jwt_payload_rs256_algorithm": ["<builtin>.dict", "pcapi.core.users.utils.decode_jwt_token_rs256", "<builtin>.open"], "pcapi.core.users.utils.decode_jwt_token_rs256": [], "tests.core.users.test_utils.DecodeJWTPayloadRS256Test.test_decode_jwt_payload_rs256_algorithm_corrupted": ["<builtin>.str", "<builtin>.dict", "pcapi.core.users.utils.decode_jwt_token_rs256", "<builtin>.open"], "src.pcapi.routes.pro.stocks.get_stocks": ["pcapi.utils.rest.check_user_has_access_to_offerer", "pcapi.utils.human_ids.dehumanize", "pcapi.core.offers.repository.get_stocks_for_offer", "pcapi.routes.serialization.stock_serialize.StocksResponseModel", "pcapi.models.api_errors.ApiErrors"], "pcapi.core.offers.repository.get_stocks_for_offer": [], "pcapi.routes.serialization.stock_serialize.StocksResponseModel": [], "src.pcapi.routes.pro.stocks.upsert_stocks": ["pcapi.routes.serialization.stock_serialize.StockIdsResponseModel", "pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "pcapi.routes.serialization.stock_serialize.StockIdsResponseModel": [], "src.pcapi.routes.pro.stocks.delete_stock": ["pcapi.utils.human_ids.dehumanize", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.stocks.update_stocks": ["src.pcapi.routes.pro.stocks._build_stock_details_from_body"], "src.pcapi.routes.pro.stocks._build_stock_details_from_body": ["<builtin>.list", "<map>.values", "<builtin>.str"], "src.pcapi.routes.pro.stocks.create_educational_stock": ["pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.stocks.transform_shadow_stock_into_educational_stock": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.stocks.edit_educational_stock": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.routes.pro.stocks.edit_shadow_stock": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors", "pcapi.utils.rest.check_user_has_access_to_offerer"], "src.pcapi.workers.synchronize_stocks_job.synchronize_stocks_job": ["<builtin>.isinstance", "pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.core.offerers.repository.find_venue_by_id", "<builtin>.len", "pcapi.core.providers.models.StockDetail"], "src.pcapi.repository.clean_database.clean_all_database": ["pcapi.models.feature.install_feature_flags", "pcapi.local_providers.install.install_local_providers", "<builtin>.ValueError"], "src.pcapi.scripts.booking.fill_individual_booking_deposit_id.fill_individual_booking_deposit_id": ["<builtin>.print", "<builtin>.len"], "src.pcapi.routes.adage_iframe.security.adage_jwt_required": ["functools.wraps", "pcapi.serialization.spec_tree.add_security_scheme"], "tests.routes.pro.delete_stock_test.Returns200Test.when_current_user_has_rights_on_offer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.delete"], "tests.routes.pro.delete_stock_test.Returns400Test.when_stock_is_on_an_offer_from_titelive_provider": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth", "tests.conftest.TestClient.delete"], "tests.routes.pro.delete_stock_test.Returns400Test.test_delete_non_approved_offer_fails": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth", "tests.conftest.TestClient.delete"], "tests.routes.pro.delete_stock_test.Returns403Test.when_current_user_has_no_rights_on_offer": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth", "tests.conftest.TestClient.delete"], "src.pcapi.flask_app.before_request": ["pcapi.core.logging.get_or_set_correlation_id"], "src.pcapi.flask_app.log_request_details": ["<builtin>.str", "<builtin>.round"], "src.pcapi.flask_app.get_shell_extra_context": ["src.pcapi.flask_app._set_python_prompt"], "src.pcapi.flask_app._set_python_prompt": ["src.pcapi.flask_app._non_printable"], "src.pcapi.flask_app._non_printable": [], "tests.routes.pro.post_venue_stocks_test.test_accepts_request": ["tests.conftest.TestClient.__init__", "pcapi.core.offerers.factories.ApiKeyFactory", "tests.conftest.TestClient.post", "<builtin>.len"], "tests.routes.pro.post_venue_stocks_test.test_accepts_request_with_price": ["tests.conftest.TestClient.__init__", "pcapi.core.offerers.factories.ApiKeyFactory", "tests.conftest.TestClient.post"], "tests.routes.pro.post_venue_stocks_test.test_requires_an_api_key": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.pro.post_venue_stocks_test.test_returns_404_if_api_key_cant_access_venue": ["tests.conftest.TestClient.__init__", "pcapi.core.offerers.factories.ApiKeyFactory", "tests.conftest.TestClient.post"], "tests.routes.pro.post_venue_stocks_test.test_returns_comprehensive_errors": ["tests.conftest.TestClient.__init__", "pcapi.core.offerers.factories.ApiKeyFactory", "tests.conftest.TestClient.post"], "src.pcapi.models.feature.FeatureToggle.is_active": ["<map>.get", "<builtin>.hasattr", "<builtin>.setattr"], "src.pcapi.models.feature.Feature.nameKey": ["<builtin>.str"], "src.pcapi.models.feature.add_feature_to_database": ["sqlalchemy.sql.text"], "src.pcapi.models.feature.remove_feature_from_database": ["sqlalchemy.sql.text"], "src.pcapi.models.feature.install_feature_flags": ["<builtin>.list"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids.SuspendFraudulentUsersByUserIdsView.search": ["flask.flash", "flask.redirect", "<builtin>.int", "flask.url_for", "io.TextIOWrapper", "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids.allowed_file"], "src.pcapi.admin.custom_views.suspend_fraudulent_users_by_ids.allowed_file": [], "io.TextIOWrapper": [], "tests.core.testing.tests.test_override_settings_as_context_manager": ["pcapi.core.testing.override_settings"], "tests.core.testing.tests.test_override_features_as_context_manager": ["pcapi.core.testing.override_features"], "tests.core.testing.tests.test_clean_temporary_files": ["pcapi.core.testing.clean_temporary_files", "<builtin>.len"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_admin_users.create_industrial_admin_users": ["<builtin>.len", "<builtin>.range", "<builtin>.str"], "tests.admin.custom_views.offerer_view_test.OffererViewTest.test_edit_offerer_remove_tags": ["<builtin>.len"], "tests.admin.custom_views.offerer_view_test.OffererViewTest.test_delete_offerer": ["<builtin>.len"], "src.pcapi.routes.pro.venue_types.get_venue_types": ["pcapi.routes.serialization.venue_types_serialize.VenueTypeListResponseModel", "pcapi.routes.serialization.venue_types_serialize.VenueTypeResponseModel"], "pcapi.routes.serialization.venue_types_serialize.VenueTypeResponseModel": [], "pcapi.routes.serialization.venue_types_serialize.VenueTypeListResponseModel": [], "tests.admin.custom_views.feature_view_test.FeatureViewTest.test_feature_edition": ["<builtin>.len"], "tests.routes.serialization.reimbursement_csv_test.ReimbursementDetailsTest.test_reimbursement_details_as_csv_individual_booking": ["pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails", "<builtin>.int", "pcapi.repository.reimbursement_queries.find_all_offerer_payments"], "pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails": [], "tests.routes.serialization.reimbursement_csv_test.ReimbursementDetailsTest.test_reimbursement_details_as_csv_educational_booking": ["pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails", "<builtin>.int", "pcapi.repository.reimbursement_queries.find_all_offerer_payments"], "tests.routes.serialization.reimbursement_csv_test.ReimbursementDetailsTest.test_reimbursement_details_with_custom_rule_as_csv": ["pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails", "pcapi.repository.reimbursement_queries.find_all_offerer_payments"], "tests.routes.serialization.reimbursement_csv_test.ReimbursementDetailsTest.test_reimbursement_details_date_columns": ["datetime.datetime", "datetime.timedelta", "pcapi.repository.reimbursement_queries.find_all_offerer_payments", "pcapi.routes.serialization.reimbursement_csv_serialize.ReimbursementDetails"], "tests.routes.serialization.reimbursement_csv_test.test_generate_reimbursement_details_csv": ["datetime.datetime", "pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerer_reimbursement_details", "pcapi.routes.serialization.reimbursement_csv_serialize.generate_reimbursement_details_csv"], "pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerer_reimbursement_details": [], "pcapi.routes.serialization.reimbursement_csv_serialize.generate_reimbursement_details_csv": [], "tests.routes.serialization.reimbursement_csv_test.test_find_all_offerer_reimbursement_details": ["pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerer_reimbursement_details", "<builtin>.len"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_thing_offers.create_industrial_thing_offers": ["<map>.values", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "<builtin>.list", "<builtin>.range", "<builtin>.str", "<builtin>.len"], "src.pcapi.routes.serialization.users.ProUserCreationBodyModel.validate_password_strength": ["pcapi.domain.password.check_password_strength"], "src.pcapi.routes.serialization.users.ProUserCreationBodyModel.cast_contact_ok_to_bool": ["<builtin>.bool"], "src.pcapi.routes.serialization.users.SharedLoginUserResponseModel.from_orm": ["<builtin>.super"], "src.pcapi.routes.serialization.users.SharedCurrentUserResponseModel.from_orm": ["<builtin>.super"], "src.pcapi.models.api_errors.ApiErrors.__init__": ["<builtin>.super"], "src.pcapi.models.api_errors.ApiErrors.check_min_length": ["<builtin>.str", "<builtin>.len", "src.pcapi.models.api_errors.ApiErrors.add_error"], "src.pcapi.models.api_errors.ApiErrors.add_error": [], "src.pcapi.models.api_errors.ApiErrors.check_email": ["src.pcapi.models.api_errors.ApiErrors.add_error"], "src.pcapi.models.api_errors.ApiErrors.__str__": ["<builtin>.super"], "src.pcapi.models.api_errors.UnauthorizedError.__init__": ["<builtin>.super"], "tests.workers.update_all_venue_offers_accessibility_job_test.test_update_all_venue_offers_accessibility_job": ["pcapi.workers.update_all_venue_offers_accessibility_job.update_all_venue_offers_accessibility_job"], "pcapi.workers.update_all_venue_offers_accessibility_job.update_all_venue_offers_accessibility_job": [], "tests.workers.suspend_fraudulent_beneficiary_users_by_ids_job_test.test_send_email_is_called": ["pcapi.workers.suspend_fraudulent_beneficiary_users_by_ids_job.suspend_fraudulent_beneficiary_users_by_ids_job", "pcapi.core.users.factories.AdminFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "pcapi.workers.suspend_fraudulent_beneficiary_users_by_ids_job.suspend_fraudulent_beneficiary_users_by_ids_job": [], "tests.scripts.beneficiary.import_dms_users_test.RunTest.test_should_retrieve_applications_from_new_procedure_id": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunTest.test_all_applications_are_processed_once": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunTest.test_an_error_status_is_saved_when_an_application_is_not_parsable": ["<builtin>.Exception", "tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunTest.test_application_with_known_application_id_are_not_processed": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunTest.test_application_with_known_email_and_already_beneficiary_are_saved_as_rejected": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunTest.test_beneficiary_is_created_with_procedure_id": ["datetime.datetime", "tests.scripts.beneficiary.fixture.make_graphql_application", "datetime.timedelta", "datetime.timezone"], "datetime.timezone": [], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest.test_handles_department_code": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest.test_handles_postal_codes": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest.test_handles_civility_parsing": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest.test_handles_activity": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest.test_beneficiary_information_id_piece_number_with_spaces_graphql": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest.test_new_procedure": ["tests.scripts.beneficiary.fixture.make_new_application", "datetime.date"], "tests.scripts.beneficiary.fixture.make_new_application": [], "tests.scripts.beneficiary.import_dms_users_test.ParseBeneficiaryInformationTest.test_new_procedure_for_stranger_residents": ["datetime.date", "tests.scripts.beneficiary.fixture.make_new_stranger_application"], "tests.scripts.beneficiary.fixture.make_new_stranger_application": [], "tests.scripts.beneficiary.import_dms_users_test.ParsingErrorsTest.test_beneficiary_information_postalcode_error": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.ParsingErrorsTest.test_beneficiary_information_id_piece_number_error": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_user": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_exunderage_beneficiary": ["<builtin>.next", "tests.scripts.beneficiary.fixture.make_graphql_application", "dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_with_no_user_found": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_phone_not_validated_create_beneficiary_with_phone_to_validate": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_user_requires_userprofiling": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_makes_user_beneficiary": ["<builtin>.next", "tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_makes_user_beneficiary_after_19_birthday": ["tests.scripts.beneficiary.fixture.make_graphql_application", "dateutil.relativedelta.relativedelta"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_duplicated_user": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_with_existing_user_with_the_same_id_number": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_import_native_app_user": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_dms_application_value_error": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.RunIntegrationTest.test_dms_application_value_error_known_user": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest.test_process_application_user_already_created": ["<builtin>.next", "tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest.test_process_application_user_registered_at_18": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest.test_process_application_user_registered_at_18_dms_at_19": ["tests.scripts.beneficiary.fixture.make_graphql_application", "dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest.test_process_application_user_not_eligible": ["tests.scripts.beneficiary.fixture.make_graphql_application", "dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest.test_dms_application_value_error": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "tests.scripts.beneficiary.import_dms_users_test.GraphQLSourceProcessApplicationTest.test_avoid_reimporting_already_imported_user": ["tests.scripts.beneficiary.fixture.make_graphql_application", "<builtin>.len"], "src.pcapi.connectors.api_recaptcha.InvalidRecaptchaTokenException.__init__": ["<builtin>.super"], "src.pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid": ["src.pcapi.connectors.api_recaptcha.get_token_validation_and_score", "src.pcapi.connectors.api_recaptcha.InvalidRecaptchaTokenException.__init__"], "src.pcapi.connectors.api_recaptcha.get_token_validation_and_score": [], "src.pcapi.connectors.api_recaptcha.check_native_app_recaptcha_token": ["src.pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid"], "src.pcapi.connectors.api_recaptcha.check_webapp_recaptcha_token": ["src.pcapi.connectors.api_recaptcha.check_recaptcha_token_is_valid"], "src.pcapi.sandboxes.scripts.getters.pro_08_stocks.get_existing_pro_validated_user_with_validated_offerer_with_iban_validated_user_offerer_with_event_offer_with_no_stock": ["pcapi.sandboxes.scripts.utils.helpers.get_venue_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "pcapi.sandboxes.scripts.utils.helpers.get_venue_helper": [], "src.pcapi.sandboxes.scripts.getters.pro_08_stocks.get_existing_pro_validated_user_with_validated_offerer_with_iban_validated_user_offerer_with_event_offer_with_stock": ["pcapi.sandboxes.scripts.utils.helpers.get_offer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_venue_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_stock_helper"], "pcapi.sandboxes.scripts.utils.helpers.get_stock_helper": [], "src.pcapi.sandboxes.scripts.getters.pro_08_stocks.get_existing_pro_validated_user_with_validated_offerer_with_iban_validated_user_offerer_with_thing_offer_with_stock": ["pcapi.sandboxes.scripts.utils.helpers.get_offer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_venue_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper", "pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_stock_helper"], "tests.routes.pro.post_offer_test.Returns200Test.test_create_event_offer": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_offer_test.Returns200Test.when_creating_new_thing_offer": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_offer_test.Returns200Test.test_create_valid_educational_offer": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_offer_test.Returns200Test.test_create_valid_educational_offer_with_new_route": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_offer_test.Returns400Test.test_fail_if_venue_is_not_found": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.test_fail_if_name_too_long": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.test_fail_if_unknown_subcategory": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.test_fail_if_inactive_subcategory": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.test_fail_when_educational_and_non_eligible_subcategory": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.test_fail_when_educational_and_duo": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.test_fail_when_offer_subcategory_is_offline_only_and_venue_is_virtuel": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.should_fail_when_url_has_no_scheme": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.should_fail_when_externalTicketOfficeUrl_has_no_scheme": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.should_fail_when_url_has_no_host": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.should_fail_when_externalTicketOfficeUrl_has_no_host": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns400Test.test_create_educational_offer_with_wrong_extra_data": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_offer_test.Returns403Test.when_user_is_not_attached_to_offerer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_offer_test.Returns403Test.when_offerer_cannot_create_educational_offer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "src.pcapi.core.object_storage.backends.base.BaseBackend.store_public_object": ["<builtin>.NotImplementedError"], "src.pcapi.core.object_storage.backends.base.BaseBackend.delete_public_object": ["<builtin>.NotImplementedError"], "src.pcapi.local_providers.install.install_local_providers": ["<builtin>.getattr", "pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.core.providers.models.Provider"], "pcapi.core.providers.models.Provider": [], "src.pcapi.utils.db.get_batches": ["<builtin>.range"], "src.pcapi.utils.db.MagicEnum.__init__": ["<builtin>.list", "<builtin>.ValueError", "<builtin>.isinstance"], "src.pcapi.scripts.install_data.install_data": ["pcapi.models.feature.install_feature_flags"], "src.pcapi.scripts.install_data.install_postgres_extensions": ["pcapi.install_database_extensions.install_database_extensions"], "tests.test_utils.json_default": ["<builtin>.isinstance", "<map>.items"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_venue_types.create_industrial_venue_types": ["<builtin>.len", "pcapi.core.offerers.factories.VenueTypeFactory"], "src.pcapi.connectors.user_profiling.UserProfilingClient.get_user_profiling_fraud_data": ["<map>.update", "<builtin>.str"], "src.pcapi.validation.routes.validate.check_valid_token_for_user_validation": ["pcapi.models.api_errors.ResourceNotFoundError"], "src.pcapi.core.offers.offer_validation.OfferValidationItem.resolve": ["<builtin>.getattr", "pcapi.utils.custom_logic.OPERATIONS"], "pcapi.utils.custom_logic.OPERATIONS": [], "src.pcapi.core.offers.offer_validation.OfferValidationRuleItem.resolve": ["<builtin>.all"], "src.pcapi.core.offers.offer_validation.parse_offer_validation_config": ["append", "<builtin>.float"], "src.pcapi.core.search.backends.testing.TestingBackend.__init__": ["src.pcapi.core.search.backends.testing.FakeClient.__init__"], "src.pcapi.core.search.backends.testing.FakeClient.__init__": [], "src.pcapi.routes.serialization.venues_serialize.PostVenueBodyModel.validate_latitude": ["<builtin>.ValueError", "decimal.Decimal"], "src.pcapi.routes.serialization.venues_serialize.PostVenueBodyModel.validate_longitude": ["<builtin>.ValueError", "decimal.Decimal"], "src.pcapi.routes.serialization.venues_serialize.GetVenueResponseModel.from_orm": ["<builtin>.super"], "src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel.validate_banner": ["io.BytesIO", "<builtin>.ValueError"], "src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel.from_request": ["src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel.validate_request"], "src.pcapi.routes.serialization.venues_serialize.VenueBannerContentModel.validate_request": ["<builtin>.ValueError"], "tests.alembic.run_migrations_test.RunMigrationsTest.test_exclude_columns_defined_in_ignored_columns_by_table": ["pcapi.alembic.run_migrations.include_object"], "pcapi.alembic.run_migrations.include_object": [], "tests.alembic.run_migrations_test.RunMigrationsTest.test_exclude_tables_defined_in_ignored_tables": ["pcapi.alembic.run_migrations.include_object"], "tests.alembic.run_migrations_test.RunMigrationsTest.test_exclude_tables_to_be_dropped": ["pcapi.alembic.run_migrations.include_object"], "src.pcapi.core.offerers.repository.find_user_offerers": ["pcapi.utils.human_ids.dehumanize"], "src.pcapi.core.offerers.repository.has_physical_venue_without_draft_or_accepted_bank_information": ["sqlalchemy.or_"], "src.pcapi.core.offerers.repository.filter_offerers_with_keywords_string": ["pcapi.domain.ts_vector.create_filter_matching_all_keywords_in_any_model"], "pcapi.domain.ts_vector.create_filter_matching_all_keywords_in_any_model": [], "tests.routes.adage_iframe.get_offer_test._create_adage_valid_token_with_email": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.get_offer_test.Returns200Test.test_get_offer": ["datetime.datetime", "pcapi.core.testing.assert_num_queries", "tests.routes.adage_iframe.get_offer_test._create_adage_valid_token_with_email"], "tests.routes.adage_iframe.get_offer_test.Returns404Test.test_should_return_404_when_no_offer": ["tests.routes.adage_iframe.get_offer_test._create_adage_valid_token_with_email"], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueSendWarningToBeneficiaryAfterProBookingCancellationTest.test_should_sends_email_to_beneficiary_when_pro_cancels_booking": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.send_booking_cancellation_by_pro_to_beneficiary_email"], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueRetrieveDataToWarnUserAfterProBookingCancellationTest.test_should_return_event_data_when_booking_is_on_an_event": ["datetime.datetime", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data"], "pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data": [], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueRetrieveDataToWarnUserAfterProBookingCancellationTest.test_should_return_thing_data_when_booking_is_on_a_thing": ["pcapi.core.mails.models.sendinblue_models.Template", "pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueRetrieveDataToWarnUserAfterProBookingCancellationTest.test_should_return_thing_data_when_booking_is_on_an_online_offer": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueRetrieveDataToWarnUserAfterProBookingCancellationTest.test_should_not_display_the_price_when_booking_is_on_a_free_offer": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data"], "tests.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary_test.SendinblueRetrieveDataToWarnUserAfterProBookingCancellationTest.test_should_display_the_price_multiplied_by_quantity_when_it_is_a_duo_offer": ["pcapi.core.mails.transactional.bookings.booking_cancellation_by_pro_to_beneficiary.get_booking_cancellation_by_pro_to_beneficiary_email_data"], "src.pcapi.scripts.payment.batch.generate_and_send_payments": ["pcapi.scripts.payment.batch_steps.send_wallet_balances", "src.pcapi.scripts.payment.batch.generate_payments", "pcapi.scripts.payment.batch_steps.send_transactions", "pcapi.scripts.payment.batch_steps.send_payments_details", "pcapi.scripts.payment.batch_steps.send_payments_report"], "src.pcapi.scripts.payment.batch.generate_payments": ["pcapi.scripts.payment.batch_steps.include_error_and_retry_payments_in_batch", "<builtin>.sum", "pcapi.scripts.payment.batch_steps.generate_new_payments", "pcapi.scripts.payment.batch_steps.set_not_processable_payments_with_bank_information_to_retry"], "pcapi.scripts.payment.batch_steps.set_not_processable_payments_with_bank_information_to_retry": [], "pcapi.scripts.payment.batch_steps.include_error_and_retry_payments_in_batch": [], "pcapi.scripts.payment.batch_steps.send_transactions": [], "pcapi.scripts.payment.batch_steps.send_payments_report": [], "pcapi.scripts.payment.batch_steps.send_payments_details": [], "pcapi.scripts.payment.batch_steps.send_wallet_balances": [], "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI.stocks": ["src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI._build_local_provider_url", "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI._build_local_provider_params"], "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI._build_local_provider_url": [], "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI._build_local_provider_params": ["<builtin>.str"], "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI.validated_stocks": ["append", "<map>.get", "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI.stocks"], "src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI.is_siret_registered": ["src.pcapi.infrastructure.repository.stock_provider.provider_api.ProviderAPI._build_local_provider_url", "pcapi.core.providers.exceptions.ConnexionToProviderApiFailed", "<builtin>.str"], "pcapi.core.providers.exceptions.ConnexionToProviderApiFailed": [], "src.pcapi.sandboxes.scripts.getters.pro_10_desk.get_existing_pro_validated_user_with_validated_offerer_with_validated_user_offerer_with_thing_offer_with_stock_with_not_used_booking": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_booking_helper"], "pcapi.sandboxes.scripts.utils.helpers.get_booking_helper": [], "src.pcapi.scripts.business_unit.rename_invalid_bu.rename_invalid_business_unit": ["collections.defaultdict", "<builtin>.len"], "src.pcapi.routes.pro.reimbursements.get_reimbursements_csv": ["src.pcapi.routes.pro.reimbursements._get_reimbursements_csv_filter"], "src.pcapi.routes.pro.reimbursements._get_reimbursements_csv_filter": ["pcapi.repository.user_offerer_queries.filter_query_where_user_is_user_offerer_and_is_validated", "pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerers_reimbursement_details", "pcapi.serialization.utils.dehumanize_id", "pcapi.routes.serialization.reimbursement_csv_serialize.generate_reimbursement_details_csv", "pcapi.routes.serialization.reimbursement_csv_serialize.validate_reimbursement_period", "pcapi.models.api_errors.ApiErrors"], "pcapi.repository.user_offerer_queries.filter_query_where_user_is_user_offerer_and_is_validated": [], "pcapi.routes.serialization.reimbursement_csv_serialize.validate_reimbursement_period": [], "pcapi.routes.serialization.reimbursement_csv_serialize.find_all_offerers_reimbursement_details": [], "src.pcapi.sandboxes.scripts.creators.allocine.Sirene.__init__": ["<builtin>.str", "random.randint"], "random.randint": [], "src.pcapi.sandboxes.scripts.creators.allocine.save_allocine_sandbox": ["pcapi.model_creators.generic_creators.create_venue_provider", "pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.core.providers.api.activate_provider", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue", "src.pcapi.sandboxes.scripts.creators.allocine.Sirene.__init__"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_pro_users_api_keys.create_industrial_pro_users_api_keys": ["pcapi.core.offerers.factories.ApiKeyFactory", "<builtin>.len"], "tests.scripts.grant_wallet_to_existing_users_test.test_should_grant_wallet_to_existing_users": ["dateutil.relativedelta.relativedelta", "pcapi.scripts.grant_wallet_to_existing_users.grant_wallet_to_existing_users"], "pcapi.scripts.grant_wallet_to_existing_users.grant_wallet_to_existing_users": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_educational_bookings.create_industrial_educational_bookings": ["append", "pcapi.core.bookings.factories.UsedEducationalBookingFactory", "pcapi.core.offers.factories.EducationalEventStockFactory", "pcapi.core.bookings.factories.EducationalBookingFactory", "pcapi.sandboxes.scripts.utils.storage_utils.store_public_object_from_sandbox_assets", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offers.factories.MediationFactory"], "pcapi.core.offers.factories.EducationalEventStockFactory": [], "pcapi.core.bookings.factories.UsedEducationalBookingFactory": [], "src.pcapi.scripts.business_unit.purge_virtual_venue_business_units.purge_virtual_venue_business_units": ["src.pcapi.scripts.business_unit.purge_virtual_venue_business_units.venue_have_at_least_one_offer", "<builtin>.len"], "src.pcapi.scripts.business_unit.purge_virtual_venue_business_units.venue_have_at_least_one_offer": [], "src.pcapi.utils.mailing.build_pc_pro_offer_link": ["pcapi.utils.human_ids.humanize"], "src.pcapi.utils.mailing.build_pc_pro_offerer_link": ["pcapi.utils.human_ids.humanize"], "src.pcapi.utils.mailing.format_booking_date_for_email": ["src.pcapi.utils.mailing.get_event_datetime"], "src.pcapi.utils.mailing.get_event_datetime": ["pcapi.utils.date.utc_datetime_to_department_timezone"], "src.pcapi.utils.mailing.format_booking_hours_for_email": ["src.pcapi.utils.mailing.get_event_datetime"], "src.pcapi.utils.mailing.make_validation_email_object": ["pcapi.connectors.api_entreprises.get_by_offerer", "flask.render_template", "src.pcapi.utils.mailing.build_pc_pro_offerer_link", "src.pcapi.utils.mailing._summarize_user_vars", "src.pcapi.utils.mailing._summarize_offerer_vars", "<builtin>.vars", "pcapi.domain.postal_code.postal_code.PostalCode", "pprint.pformat"], "pprint.pformat": [], "src.pcapi.utils.mailing._summarize_offerer_vars": [], "src.pcapi.utils.mailing._summarize_user_vars": [], "src.pcapi.utils.mailing.make_payment_message_email": ["flask.render_template"], "src.pcapi.utils.mailing.make_payment_details_email": ["src.pcapi.utils.mailing._get_zipfile_content"], "src.pcapi.utils.mailing._get_zipfile_content": [], "src.pcapi.utils.mailing.make_payments_report_email": ["flask.render_template", "<builtin>.sum"], "src.pcapi.utils.mailing.make_wallet_balances_email": ["src.pcapi.utils.mailing._get_zipfile_content"], "src.pcapi.utils.mailing.make_offer_creation_notification_email": ["flask.render_template", "pcapi.core.offers.utils.offer_app_link", "pcapi.utils.human_ids.humanize", "src.pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.utils.mailing.make_offer_rejection_notification_email": ["flask.render_template", "pcapi.utils.human_ids.humanize", "src.pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.utils.mailing.make_suspended_fraudulent_beneficiary_by_ids_notification_email": ["flask.render_template", "<builtin>.len"], "src.pcapi.scripts.bulk_inactivate_offers.bulk_inactivate_offers": ["append", "<builtin>.print", "<builtin>.len", "src.pcapi.scripts.bulk_inactivate_offers.process_batch"], "src.pcapi.scripts.bulk_inactivate_offers.process_batch": [], "src.pcapi.scripts.bulk_inactivate_offers.bulk_mark_incompatible_from_path": ["src.pcapi.scripts.bulk_inactivate_offers.bulk_inactivate_offers", "<builtin>.open"], "src.pcapi.scripts.payment.mark_payments_as_sent.mark_payments_batch_as_sent": ["pcapi.models.payment_status.PaymentStatus", "pcapi.core.bookings.api.mark_bookings_as_reimbursed_from_payment_ids"], "pcapi.core.bookings.api.mark_bookings_as_reimbursed_from_payment_ids": [], "src.pcapi.scripts.payment.mark_payments_as_sent.mark_payments_as_sent": ["src.pcapi.scripts.payment.mark_payments_as_sent.get_payments_ids_under_review", "src.pcapi.scripts.payment.mark_payments_as_sent.mark_payments_batch_as_sent", "<builtin>.range", "<builtin>.len"], "src.pcapi.scripts.payment.mark_payments_as_sent.get_payments_ids_under_review": [], "src.pcapi.scripts.payment.mark_payments_as_sent.mark_payments_as_sent_from_file": ["append", "src.pcapi.scripts.payment.mark_payments_as_sent.mark_payments_batch_as_sent", "<builtin>.enumerate", "<builtin>.int", "<builtin>.print", "<builtin>.range", "<builtin>.len", "sqlalchemy.orm.joinedload", "<builtin>.open"], "src.pcapi.scripts.educational.update_educational_institutions_deposits.update_educational_institutions_deposits": ["src.pcapi.scripts.educational.update_educational_institutions_deposits._process_educational_csv", "<builtin>.print", "<str>.endswith", "<builtin>.open"], "src.pcapi.scripts.educational.update_educational_institutions_deposits._process_educational_csv": ["<builtin>.print", "decimal.Decimal", "<builtin>.str"], "tests.scripts.payment.add_custom_offer_reimbursement_rule_test.test_basics": ["tests.scripts.payment.add_custom_offer_reimbursement_rule_test._run_command", "<builtin>.str"], "tests.scripts.payment.add_custom_offer_reimbursement_rule_test._run_command": [], "tests.scripts.payment.add_custom_offer_reimbursement_rule_test.test_warnings": ["tests.scripts.payment.add_custom_offer_reimbursement_rule_test._run_command", "<builtin>.str"], "tests.scripts.payment.add_custom_offer_reimbursement_rule_test.test_force_with_warnings": ["tests.scripts.payment.add_custom_offer_reimbursement_rule_test._run_command", "<builtin>.str"], "tests.routes.pro.get_business_units_test.test_get_business_units_by_admin": ["<builtin>.len"], "tests.routes.pro.get_business_units_test.test_get_business_units_by_pro": ["<builtin>.len"], "tests.routes.pro.get_business_units_test.test_get_business_units_by_pro_filtered_on_offerer_id": ["<builtin>.len"], "tests.core.fraud.test_api.CommonTest.test_validator_data": ["<builtin>.isinstance"], "tests.core.fraud.test_api.CommonFraudCheckTest.test_underage_user_validation_is_beneficiary": ["tests.core.fraud.test_api.CommonFraudCheckTest.filter_invalid_fraud_items_to_reason_code"], "tests.core.fraud.test_api.CommonFraudCheckTest.filter_invalid_fraud_items_to_reason_code": [], "tests.core.fraud.test_api.CommonFraudCheckTest.test_user_validation_has_email_validated": ["tests.core.fraud.test_api.CommonFraudCheckTest.filter_invalid_fraud_items_to_reason_code", "<builtin>.len"], "tests.core.fraud.test_api.CommonFraudCheckTest.test_underage_user_validation_has_email_validated": ["tests.core.fraud.test_api.CommonFraudCheckTest.filter_invalid_fraud_items_to_reason_code"], "tests.core.fraud.test_api.CommonFraudCheckTest.test_previously_validated_user_with_retry": ["tests.core.fraud.test_api.CommonFraudCheckTest.filter_invalid_fraud_items_to_reason_code"], "tests.core.fraud.test_api.DMSFraudCheckTest.test_dms_update_eligibility": ["dateutil.relativedelta.relativedelta", "<builtin>.str"], "tests.core.fraud.test_api.EduconnectFraudTest.test_on_educonnect_result": ["dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.EduconnectFraudTest.test_age_fraud_check_ko": ["<builtin>.next"], "tests.core.fraud.test_api.EduconnectFraudTest.test_age_fraud_check_ok": ["<builtin>.next"], "tests.core.fraud.test_api.EduconnectFraudTest.test_same_user_is_not_duplicate": ["<builtin>.any"], "tests.core.fraud.test_api.EduconnectFraudTest.test_ine_duplicates_fraud_checks": ["<builtin>.next"], "tests.core.fraud.test_api.EduconnectFraudTest.test_ine_duplicates_fraud_checks_self_ine": ["<builtin>.next"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_has_not_performed": ["dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_has_user_performed_identity_check": ["dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_has_user_performed_identity_check_turned_18": ["dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_has_user_performed_identity_check_ubble_suspicious": ["dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_has_user_performed_identity_check_ubble_suspicious_x3": ["<builtin>.range", "dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_has_user_performed_identity_check_ubble_ko": ["dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_user_beneficiary": ["dateutil.relativedelta.relativedelta"], "tests.core.fraud.test_api.HasUserPerformedIdentityCheckTest.test_user_not_eligible_anymore_but_has_performed": ["dateutil.relativedelta.relativedelta"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_search_product_from_isbn": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_search_product_from_visa": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_search_product_from_isbn_with_invalid_isbn": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_search_product_with_no_isbn_nor_visa": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_edit_product_offers_criteria_from_isbn": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_edit_product_offers_criteria_from_visa": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_edit_product_offers_criteria_from_isbn_without_offers": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_edit_product_offers_criteria_from_visa_without_offers": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_get_current_criteria_on_active_offers": ["pcapi.admin.custom_views.many_offers_operations_view._get_current_criteria_on_active_offers", "pcapi.models.criterion.Criterion", "pcapi.core.offers.models.Offer"], "pcapi.models.criterion.Criterion": [], "pcapi.admin.custom_views.many_offers_operations_view._get_current_criteria_on_active_offers": [], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_edit_product_gcu_compatibility": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.many_offers_operations_view_test.ManyOffersOperationsViewTest.test_get_products_compatible_status": ["append", "pcapi.admin.custom_views.many_offers_operations_view._get_products_compatible_status"], "pcapi.admin.custom_views.many_offers_operations_view._get_products_compatible_status": [], "tests.validation.models.offer_test.test_should_return_error_message_when_offer_is_digital_and_his_venue_is_not_virtual": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.offer.validate", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.models.api_errors.ApiErrors"], "pcapi.validation.models.offer.validate": [], "tests.validation.models.offer_test.test_should_return_error_message_when_offer_is_digital_and_its_type_is_offline_only": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.offer.validate", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.offer_test.test_should_return_error_message_when_offer_is_not_digital_and_his_venue_is_virtual": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.offer.validate", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.offer_test.test_should_return_error_messages_when_offer_is_digital_and_offline_and_venue_is_not_virtual": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.offer.validate", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.offer_test.test_should_not_return_error_message_when_offer_is_valid": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.offer.validate", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary._extract_bookings_information_from_bookings_list": ["append"], "src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary._filter_books_bookings": ["append"], "src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary.build_soon_to_be_expired_bookings_recap_email_data_for_beneficiary": ["src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary._extract_bookings_information_from_bookings_list", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary.send_soon_to_be_expired_individual_bookings_recap_email_to_beneficiary": ["src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary._filter_books_bookings", "src.pcapi.core.mails.transactional.bookings.booking_soon_to_be_expired_to_beneficiary.build_soon_to_be_expired_bookings_recap_email_data_for_beneficiary"], "src.pcapi.routes.internal.storage.send_storage_file": ["flask.send_file", "<builtin>.str", "pcapi.core.object_storage.backends.local.LocalBackend", "<builtin>.open"], "pcapi.core.object_storage.backends.local.LocalBackend": [], "flask.send_file": [], "tests.tasks.sendinblue_tasks_test.SendinblueTasksTest.test_send_transactional_email_primary_task": ["<builtin>.len"], "tests.tasks.sendinblue_tasks_test.SendinblueTasksTest.test_send_transactional_email_secondary_task": ["<builtin>.len"], "src.pcapi.sandboxes.scripts.sandbox_beneficiary_import.save_sandbox": ["pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.save_beneficiary_import_sandbox"], "pcapi.sandboxes.scripts.creators.beneficiary_import.beneficiary_import.save_beneficiary_import_sandbox": [], "tests.core.bookings.test_factories.BookingFactoryTest.test_cancellation_limit_date_is_saved_to_db": ["pcapi.core.bookings.factories.BookingFactory"], "tests.core.bookings.test_factories.BookingFactoryTest.test_cancellation_limit_date_is_none_for_a_thing": ["pcapi.core.bookings.factories.BookingFactory"], "tests.core.bookings.test_factories.BookingFactoryTest.test_cancellation_limit_date_is_generated_for_event": ["pcapi.core.bookings.factories.BookingFactory"], "tests.emails.offer_creation_test.MakeOfferCreationNotificationEmailTest.test_with_physical_offer": ["pcapi.utils.mailing.make_offer_creation_notification_email", "pcapi.utils.human_ids.humanize", "bs4.BeautifulSoup", "<builtin>.str"], "tests.emails.offer_creation_test.MakeOfferCreationNotificationEmailTest.test_with_virtual_offer": ["pcapi.utils.mailing.make_offer_creation_notification_email"], "tests.emails.offer_creation_test.MakeOfferRejectionNotificationEmailTest.test_with_physical_offer": ["pcapi.utils.human_ids.humanize", "bs4.BeautifulSoup", "<builtin>.str", "pcapi.utils.mailing.make_offer_rejection_notification_email"], "tests.emails.offer_creation_test.MakeOfferRejectionNotificationEmailTest.test_with_virtual_offer": ["pcapi.utils.mailing.make_offer_rejection_notification_email"], "src.pcapi.connectors.beneficiaries.educonnect.exceptions.ParsingError.__init__": ["<builtin>.super"], "src.pcapi.connectors.beneficiaries.educonnect.exceptions.UserTypeNotStudent.__init__": ["<builtin>.super"], "tests.scripts.beneficiary.import_users_test.ReadFileTest.test_read_file": ["<builtin>.len"], "tests.routes.shared.signin_test.Returns200Test.when_account_is_known": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.date.format_into_utc_date", "pcapi.utils.human_ids.humanize", "<builtin>.any"], "tests.routes.shared.signin_test.Returns200Test.when_user_has_no_departement_code": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns200Test.when_account_is_known_with_mixed_case_email": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns200Test.when_account_is_known_with_trailing_spaces_in_email": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns200Test.expect_a_new_user_session_to_be_recorded": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns401Test.when_identifier_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns401Test.when_identifier_is_incorrect": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns401Test.when_password_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns401Test.when_password_is_incorrect": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.shared.signin_test.Returns401Test.when_account_is_not_validated": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "src.pcapi.admin.custom_views.venue_provider_view._venue_link": ["markupsafe.Markup", "markupsafe.escape", "flask.url_for"], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView.edit_form": ["<builtin>.isinstance", "wtforms.BooleanField", "flask_admin.helpers.get_form_data", "wtforms.validators.Optional", "wtforms.fields.core.IntegerField"], "wtforms.validators.Optional": [], "wtforms.BooleanField": [], "wtforms.fields.core.IntegerField": [], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView.get_query": ["<builtin>.super", "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView._extend_query"], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView._extend_query": [], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView.get_count_query": ["<builtin>.super", "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView._extend_query"], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView.scaffold_form": ["<builtin>.super", "wtforms_sqlalchemy.fields.QuerySelectField"], "wtforms_sqlalchemy.fields.QuerySelectField": [], "src.pcapi.admin.custom_views.venue_provider_view.VenueProviderView.update_model": ["<builtin>.super", "flask.flash"], "src.pcapi.repository.user_session_queries.register_user_session": ["pcapi.models.user_session.UserSession"], "tests.routes.pro.signup_pro_test.Returns204Test.when_user_data_is_valid": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy", "<builtin>.len"], "tests.routes.pro.signup_pro_test.Returns204Test.test_creates_user_offerer_digital_venue_and_userOfferer_and_does_not_log_user_in": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy", "<builtin>.len"], "tests.routes.pro.signup_pro_test.Returns204Test.when_successful_and_existing_offerer_creates_editor_user_offerer_and_does_not_log_in": ["tests.conftest.TestClient.__init__", "<map>.copy", "pcapi.core.offers.factories.OffererFactory", "tests.conftest.TestClient.post", "pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.UserOffererFactory"], "tests.routes.pro.signup_pro_test.Returns204Test.when_successful_and_existing_offerer_but_no_user_offerer_does_not_signin": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy", "pcapi.core.offers.factories.OffererFactory"], "tests.routes.pro.signup_pro_test.Returns204Test.when_successful_and_mark_pro_user_as_no_cultural_survey_needed": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy", "pcapi.core.offers.factories.OffererFactory"], "tests.routes.pro.signup_pro_test.Returns400Test.when_email_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_email_is_invalid": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_email_is_already_used": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_public_name_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_public_name_is_too_long": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_password_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_password_is_invalid": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_offerer_name_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_offerer_city_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_postal_code_is_missing": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_invalid_postal_code": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.routes.pro.signup_pro_test.Returns400Test.when_extra_data_is_given": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.pro.signup_pro_test.Returns400Test.when_invalid_phone_number": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<map>.copy"], "tests.core.logging.tests.JsonFormatterTest.test_serialization": ["tests.core.logging.tests.JsonFormatterTest._make_record", "<builtin>.object", "pcapi.core.logging.JsonFormatter", "<builtin>.str", "<builtin>.ValueError"], "pcapi.core.logging.JsonFormatter": [], "tests.core.logging.tests.JsonFormatterTest._make_record": [], "src.pcapi.scripts.payment.update_custom_reimbursements.update_custom_reimbursements": ["src.pcapi.scripts.payment.update_custom_reimbursements.update_from_csv_file", "<builtin>.open"], "src.pcapi.scripts.payment.update_custom_reimbursements.update_from_csv_file": ["<builtin>.enumerate", "pcapi.utils.human_ids.dehumanize", "pcapi.core.payments.models.CustomReimbursementRule", "src.pcapi.scripts.payment.update_custom_reimbursements._get_amount", "<builtin>.len", "sqlalchemy.orm.joinedload"], "src.pcapi.scripts.payment.update_custom_reimbursements._get_amount": ["decimal.Decimal"], "pcapi.core.payments.models.CustomReimbursementRule": [], "src.pcapi.scripts.beneficiary.send_dms_application_emails.run": ["src.pcapi.scripts.beneficiary.send_dms_application_emails.get_users_from_applications"], "src.pcapi.scripts.beneficiary.send_dms_application_emails.get_users_from_applications": [], "src.pcapi.utils.urls.generate_firebase_dynamic_link": ["urllib.parse.urlencode"], "src.pcapi.core.mails.backends.base.BaseBackend.send_mail": ["<builtin>.isinstance", "src.pcapi.core.mails.backends.base.BaseBackend._send"], "src.pcapi.core.mails.backends.base.BaseBackend._send": ["<builtin>.NotImplementedError"], "tests.routes.pro.patch_offer_test.Returns200Test.test_patch_offer": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_offer_test.Returns400Test.when_trying_to_patch_forbidden_attributes": ["datetime.datetime", "pcapi.routes.serialization.serialize", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_offer_test.Returns400Test.should_fail_when_url_has_no_scheme": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_offer_test.Returns400Test.should_fail_when_externalTicketOfficeUrl_has_no_scheme": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_offer_test.Returns400Test.should_fail_when_url_has_no_host": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_offer_test.Returns400Test.should_fail_when_externalTicketOfficeUrl_has_no_host": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_offer_test.Returns400Test.test_patch_non_approved_offer_fails": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_offer_test.Returns403Test.when_user_is_not_attached_to_offerer": ["pcapi.utils.human_ids.humanize"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_offers_with_activation_codes.create_industrial_offers_with_activation_codes": ["datetime.datetime", "pcapi.core.offers.factories.VirtualVenueFactory"], "src.pcapi.scripts.bulk_mark_incompatible_via_isbns.bulk_update_is_gcu_compatible_via_isbns": ["append", "src.pcapi.scripts.bulk_mark_incompatible_via_isbns.process_batch", "<builtin>.print", "<builtin>.len"], "src.pcapi.scripts.bulk_mark_incompatible_via_isbns.process_batch": [], "src.pcapi.scripts.bulk_mark_incompatible_via_isbns.bulk_mark_incompatible_from_path": ["src.pcapi.scripts.bulk_mark_incompatible_via_isbns.bulk_update_is_gcu_compatible_via_isbns", "<builtin>.open"], "src.pcapi.scripts.bulk_mark_incompatible_via_isbns.bulk_mark_compatible_from_path": ["src.pcapi.scripts.bulk_mark_incompatible_via_isbns.bulk_update_is_gcu_compatible_via_isbns", "<builtin>.open"], "src.pcapi.routes.adage.v1.venue.get_venues_from_siret": ["pcapi.models.api_errors.ApiErrors"], "tests.domain.titelive_test.GetDateFromFilenameTest.should_return_matching_pattern_in_filename": ["pcapi.domain.titelive.get_date_from_filename"], "src.pcapi.routes.native.security.authenticated_user_required": ["functools.wraps", "flask_jwt_extended.view_decorators.jwt_required", "pcapi.serialization.spec_tree.add_security_scheme"], "flask_jwt_extended.view_decorators.jwt_required": [], "src.pcapi.admin.fields.SelectMultipleFieldWithOptgroups.__init__": ["<builtin>.super"], "src.pcapi.admin.fields.SelectMultipleFieldWithOptgroups.pre_validate": ["<builtin>.set", "<builtin>.ValueError"], "src.pcapi.sandboxes.scripts.getters.pro_01_signup.get_existing_pro_user_with_offerer": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper"], "src.pcapi.sandboxes.scripts.getters.pro_01_signup.get_existing_pro_not_validated_user_with_real_offerer": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "src.pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations.execute": ["pcapi.domain.demarches_simplifiees.get_offerer_bank_information_application_details_by_application_id", "pcapi.domain.bank_information.check_offerer_presence", "src.pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations.create_new_bank_informations", "pcapi.domain.bank_information.check_new_bank_information_older_than_saved_one", "pcapi.domain.bank_information.check_new_bank_information_has_a_more_advanced_status"], "src.pcapi.use_cases.save_offerer_bank_informations.SaveOffererBankInformations.create_new_bank_informations": ["pcapi.domain.bank_informations.bank_informations.BankInformations"], "tests.core.search.test_backend_algolia.test_enqueue_offer_ids": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.get_backend": [], "tests.core.search.test_backend_algolia.test_enqueue_offer_ids_in_error": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_enqueue_venue_ids_for_offers": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_pop_offer_ids_from_queue": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend", "<builtin>.len"], "tests.core.search.test_backend_algolia.test_pop_offer_ids_from_error_queue": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_get_venue_ids_for_offers_from_queue": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_count_offers_to_index_from_queue": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_count_offers_to_index_from_error_queue": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_check_offer_is_indexed": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_enqueue_venue_ids": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_enqueue_venue_ids_in_error": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_pop_venue_ids_from_queue": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend", "<builtin>.len"], "tests.core.search.test_backend_algolia.test_pop_venue_ids_from_error_queue": ["<builtin>.set", "tests.core.search.test_backend_algolia.get_backend", "<builtin>.len"], "tests.core.search.test_backend_algolia.test_index_offers": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_unindex_offer_ids": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_unindex_all_offers": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_index_venues": ["tests.core.search.test_backend_algolia.get_backend"], "tests.core.search.test_backend_algolia.test_unindex_venue_ids": ["tests.core.search.test_backend_algolia.get_backend"], "src.pcapi.sandboxes.scripts.testcafe_helpers.get_testcafe_helper": ["<builtin>.getattr"], "src.pcapi.sandboxes.scripts.testcafe_helpers.get_testcafe_helpers": ["<builtin>.getattr", "<builtin>.dir", "<builtin>.dict"], "src.pcapi.sandboxes.scripts.testcafe_helpers.print_dumped_object": ["<builtin>.print"], "src.pcapi.sandboxes.scripts.testcafe_helpers.get_all_getters": ["<builtin>.getattr", "<builtin>.type", "<builtin>.dir", "<map>.update"], "src.pcapi.sandboxes.scripts.testcafe_helpers.print_testcafe_helper": ["src.pcapi.sandboxes.scripts.testcafe_helpers.get_testcafe_helper", "src.pcapi.sandboxes.scripts.testcafe_helpers.print_dumped_object"], "src.pcapi.sandboxes.scripts.testcafe_helpers.print_testcafe_helpers": ["<builtin>.print", "src.pcapi.sandboxes.scripts.testcafe_helpers.get_testcafe_helpers", "src.pcapi.sandboxes.scripts.testcafe_helpers.print_dumped_object"], "src.pcapi.sandboxes.scripts.testcafe_helpers.print_all_testcafe_helpers": ["<builtin>.getattr", "<builtin>.type", "<builtin>.dir", "src.pcapi.sandboxes.scripts.testcafe_helpers.print_testcafe_helpers"], "tests.core.offerers.test_repository.GetAllVenueLabelsTest.test_get_all_venue_labels": ["pcapi.core.offerers.repository.get_all_venue_labels", "<builtin>.set"], "pcapi.core.offerers.repository.get_all_venue_labels": [], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.should_return_all_offerers_for_an_admin": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "pcapi.core.offerers.repository.get_all_offerers_for_user": [], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.should_return_pro_offerers_only": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.should_return_non_validated_offerers": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.should_return_offerers_with_non_validated_attachment_to_given_pro": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.should_not_return_deactivated_offerers": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedFilterTest.should_return_all_pro_offerers_when_filter_is_none": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedFilterTest.should_return_only_validated_offerers_when_filter_is_true": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedFilterTest.should_return_only_unvalidated_offerers_when_filter_is_false": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedForUserFilterTest.should_return_all_pro_offerers_when_filter_is_none": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedForUserFilterTest.should_return_only_offerers_with_validated_attachment_when_filter_is_true": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.GetAllOfferersForUserTest.WithValidatedForUserFilterTest.should_return_only_offerers_with_unvalidated_attachment_when_filter_is_false": ["<builtin>.len", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "tests.core.offerers.test_repository.FindUserOffererByValidationTokenTest.test_return_user_offerer_given_validation_token": ["pcapi.core.offerers.repository.find_user_offerer_by_validation_token"], "pcapi.core.offerers.repository.find_user_offerer_by_validation_token": [], "tests.core.offerers.test_repository.FindUserOffererByValidationTokenTest.test_return_nothing_when_validation_token_does_not_exist": ["pcapi.core.offerers.repository.find_user_offerer_by_validation_token"], "tests.core.offerers.test_repository.FindOffererByValidationTokenTest.test_return_offerer_given_validation_token": ["pcapi.core.offerers.repository.find_offerer_by_validation_token"], "pcapi.core.offerers.repository.find_offerer_by_validation_token": [], "tests.core.offerers.test_repository.FindOffererByValidationTokenTest.test_return_nothing_when_validation_token_does_not_exist": ["pcapi.core.offerers.repository.find_offerer_by_validation_token"], "tests.core.offerers.test_repository.FindNewOffererUserEmailTest.test_find_existing_email": ["pcapi.core.offerers.repository.find_new_offerer_user_email"], "tests.core.offerers.test_repository.FilterOfferersWithKeywordsStringTest.test_find_filtered_offerers_with_keywords": ["<builtin>.set", "pcapi.core.offerers.repository.filter_offerers_with_keywords_string"], "tests.core.offerers.test_repository.GetOfferersByDateValidatedTest.test_get_offerers_by_date_validated": ["datetime.datetime", "<builtin>.set", "datetime.date", "pcapi.core.offerers.repository.get_offerers_by_date_validated"], "pcapi.core.offerers.repository.get_offerers_by_date_validated": [], "tests.core.offerers.test_repository.HasVenueWithoutDraftOrAcceptedBankInformationTest.test_venue_with_accepted_bank_information": ["pcapi.core.offerers.repository.has_physical_venue_without_draft_or_accepted_bank_information"], "pcapi.core.offerers.repository.has_physical_venue_without_draft_or_accepted_bank_information": [], "tests.core.offerers.test_repository.HasVenueWithoutDraftOrAcceptedBankInformationTest.test_venue_with_draft_bank_information": ["pcapi.core.offerers.repository.has_physical_venue_without_draft_or_accepted_bank_information"], "tests.core.offerers.test_repository.HasVenueWithoutDraftOrAcceptedBankInformationTest.test_venues_with_rejected_and_accepted_bank_information": ["pcapi.core.offerers.repository.has_physical_venue_without_draft_or_accepted_bank_information"], "tests.core.offerers.test_repository.HasVenueWithoutDraftOrAcceptedBankInformationTest.test_venues_with_missing_and_accepted_bank_information": ["pcapi.core.offerers.repository.has_physical_venue_without_draft_or_accepted_bank_information"], "tests.core.offerers.test_repository.HasDigitalVenueWithAtLeastOneOfferTest.test_digital_venue_with_offer": ["pcapi.core.offerers.repository.has_digital_venue_with_at_least_one_offer"], "pcapi.core.offerers.repository.has_digital_venue_with_at_least_one_offer": [], "tests.core.offerers.test_repository.HasDigitalVenueWithAtLeastOneOfferTest.test_digital_venue_without_offer": ["pcapi.core.offerers.repository.has_digital_venue_with_at_least_one_offer"], "tests.core.offerers.test_repository.GetSirenByOffererIdTest.test_return_siren_for_offerer_id": ["pcapi.core.offerers.repository.find_siren_by_offerer_id"], "pcapi.core.offerers.repository.find_siren_by_offerer_id": [], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.get_users_task_chunks": ["<builtin>.list", "<builtin>.len"], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.format_batch_users": ["append", "<builtin>.print", "<builtin>.len", "pcapi.core.users.external.get_user_attributes"], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.get_client": ["google.cloud.tasks_v2.CloudTasksClient"], "google.cloud.tasks_v2.CloudTasksClient": [], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.delete_tasks": ["<builtin>.print", "<builtin>.set", "<builtin>.len"], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.unstack_batch_queue": ["pcapi.notifications.push.update_users_attributes", "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.fetch_user_ids_from_tasks", "<builtin>.print", "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.format_batch_users", "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.delete_tasks", "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.get_users_task_chunks", "<builtin>.set", "time.sleep", "<builtin>.len", "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.get_client"], "src.pcapi.scripts.external_users.unstack_batch_cloud_task_queue.fetch_user_ids_from_tasks": [], "tests.scripts.venue.modify_allocine_price_rule_for_venue_test.ModifyAllocinePriceRuleForVenueTest.should_update_allocine_price_rule_for_venue_with_given_id": ["pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_id", "decimal.Decimal"], "pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_id": [], "tests.scripts.venue.modify_allocine_price_rule_for_venue_test.ModifyAllocinePriceRuleForVenueTest.should_update_allocine_price_rule_for_venue_with_given_siret": ["pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_siret", "decimal.Decimal"], "pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_siret": [], "tests.scripts.venue.modify_allocine_price_rule_for_venue_test.ModifyAllocinePriceRuleForVenueTest.should_not_update_allocine_price_rule_when_there_is_no_venue_provider_associated_to_the_venue": ["pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_siret", "pcapi.core.offers.factories.VenueFactory", "decimal.Decimal"], "tests.scripts.venue.modify_allocine_price_rule_for_venue_test.ModifyAllocinePriceRuleForVenueTest.should_not_update_allocine_price_rule_when_there_is_no_allocine_price_rule_associated_to_the_venue": ["pcapi.scripts.venue.modify_allocine_price_rule_for_venue.modify_allocine_price_rule_for_venue_by_siret", "pcapi.core.offers.factories.VenueFactory", "decimal.Decimal"], "src.pcapi.core.fraud.utils.has_latin_or_numeric_chars": ["src.pcapi.core.fraud.utils.is_latin"], "src.pcapi.core.fraud.utils.is_latin": [], "tests.routes.pro.get_venue_types_test.Returns401Test.when_the_user_is_not_authenticated": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.routes.pro.get_venue_types_test.Returns200Test.when_the_user_is_authenticated": ["<builtin>.sorted", "pcapi.core.users.factories.UserFactory"], "src.pcapi.validation.models.venue.validate": ["<builtin>.len", "pcapi.core.offerers.repository.find_virtual_venue_by_offerer_id"], "pcapi.core.offerers.repository.find_virtual_venue_by_offerer_id": [], "src.pcapi.routes.native.v1.serialization.favorites.FavoriteOfferResponse.from_orm": ["<builtin>.super", "pcapi.core.offers.api.get_expense_domains"], "src.pcapi.routes.error_handlers.generic_error_handlers.restize_api_errors": ["flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.restize_too_late_to_delete_stock": ["flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.internal_error": ["<builtin>.isinstance", "pcapi.models.api_errors.ApiErrors", "flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.unauthorized_error": ["flask.Response"], "flask.Response": [], "src.pcapi.routes.error_handlers.generic_error_handlers.method_not_allowed": ["pcapi.models.api_errors.ApiErrors", "flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.invalid_id_for_dehumanize_error": ["pcapi.models.api_errors.ApiErrors", "flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.decimal_cast_error": ["pcapi.models.api_errors.ApiErrors", "flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.date_time_cast_error": ["pcapi.models.api_errors.ApiErrors", "flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.already_activated_exception": ["flask.jsonify"], "src.pcapi.routes.error_handlers.generic_error_handlers.ratelimit_handler": ["flask.jsonify", "pcapi.models.api_errors.ApiErrors", "<builtin>.str", "pcapi.utils.login_manager.get_request_authorization"], "src.pcapi.routes.error_handlers.generic_error_handlers.database_error_handler": ["pcapi.models.api_errors.ApiErrors", "pcapi.routes.error_handlers.utils.format_sql_statement_params", "flask.jsonify"], "pcapi.routes.error_handlers.utils.format_sql_statement_params": [], "src.pcapi.core.users.constants.SuspensionReason.__str__": ["<builtin>.str"], "tests.routes.pro.get_venue_labels_test.Returns401Test.when_the_user_is_not_authenticated": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.routes.pro.get_venue_labels_test.Returns200Test.when_the_user_is_authenticated": ["tests.conftest.TestClient.__init__", "pcapi.core.offerers.factories.VenueLabelFactory", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.core.users.factories.ProFactory", "pcapi.utils.human_ids.humanize"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_products.create_industrial_event_products": ["<map>.values", "pcapi.model_creators.specific_creators.create_product_with_event_subcategory", "<builtin>.enumerate", "<builtin>.range", "<builtin>.str", "<builtin>.len"], "pcapi.model_creators.specific_creators.create_product_with_event_subcategory": [], "tests.domain.payments_test.CreatePaymentForBookingTest.test_basics": ["pcapi.domain.payments.create_payment_for_booking", "decimal.Decimal", "pcapi.domain.reimbursement.PhysicalOffersReimbursement", "pcapi.domain.reimbursement.BookingReimbursement"], "pcapi.domain.reimbursement.PhysicalOffersReimbursement": [], "pcapi.domain.reimbursement.BookingReimbursement": [], "tests.domain.payments_test.CreatePaymentForBookingTest.test_use_iban_and_bic_from_venue": ["pcapi.domain.payments.create_payment_for_booking", "decimal.Decimal", "pcapi.domain.reimbursement.PhysicalOffersReimbursement", "pcapi.domain.reimbursement.BookingReimbursement"], "tests.domain.payments_test.CreatePaymentForBookingTest.test_use_iban_and_bic_from_offerer": ["pcapi.domain.payments.create_payment_for_booking", "decimal.Decimal", "pcapi.domain.reimbursement.PhysicalOffersReimbursement", "pcapi.domain.reimbursement.BookingReimbursement"], "tests.domain.payments_test.CreatePaymentForBookingTest.test_with_custom_reimbursement_rule": ["pcapi.domain.payments.create_payment_for_booking", "decimal.Decimal", "pcapi.domain.reimbursement.BookingReimbursement"], "tests.domain.payments_test.FilterOutAlreadyPaidForBookingsTest.test_it_returns_reimbursements_on_bookings_with_no_existing_payments": ["pcapi.domain.reimbursement.BookingReimbursement", "pcapi.domain.payments.filter_out_already_paid_for_bookings", "decimal.Decimal", "<builtin>.len", "pcapi.models.payment.Payment", "pcapi.domain.reimbursement.PhysicalOffersReimbursement", "pcapi.core.bookings.models.Booking"], "tests.domain.payments_test.FilterOutAlreadyPaidForBookingsTest.test_it_returns_an_empty_list_if_everything_has_been_reimbursed": ["pcapi.domain.reimbursement.BookingReimbursement", "pcapi.domain.payments.filter_out_already_paid_for_bookings", "decimal.Decimal", "pcapi.models.payment.Payment", "pcapi.domain.reimbursement.PhysicalOffersReimbursement", "pcapi.core.bookings.models.Booking"], "tests.domain.payments_test.FilterOutAlreadyPaidForBookingsTest.test_it_returns_an_empty_list_if_an_empty_list_is_given": ["pcapi.domain.payments.filter_out_already_paid_for_bookings"], "tests.domain.payments_test.FilterOutBookingsWithoutCostTest.test_it_returns_reimbursements_on_bookings_with_reimbursed_value_greater_than_zero": ["pcapi.domain.payments.filter_out_bookings_without_cost", "pcapi.domain.reimbursement.BookingReimbursement", "decimal.Decimal", "<builtin>.len", "pcapi.domain.reimbursement.PhysicalOffersReimbursement", "pcapi.core.bookings.models.Booking"], "tests.domain.payments_test.FilterOutBookingsWithoutCostTest.test_it_returns_an_empty_list_if_everything_has_a_cost": ["pcapi.domain.payments.filter_out_bookings_without_cost", "pcapi.domain.reimbursement.BookingReimbursement", "decimal.Decimal", "pcapi.domain.reimbursement.PhysicalOffersReimbursement", "pcapi.core.bookings.models.Booking"], "tests.domain.payments_test.FilterOutBookingsWithoutCostTest.test_it_returns_an_empty_list_if_an_empty_list_is_given": ["pcapi.domain.payments.filter_out_bookings_without_cost"], "tests.domain.payments_test.KeepOnlyNotProcessablePaymentsTest.test_it_returns_only_payments_with_current_status_as_not_processable": ["pcapi.domain.payments.keep_only_not_processable_payments", "pcapi.model_creators.generic_creators.create_payment", "<builtin>.len"], "pcapi.domain.payments.keep_only_not_processable_payments": [], "tests.domain.payments_test.KeepOnlyNotProcessablePaymentsTest.test_it_returns_an_empty_list_if_everything_has_no_not_processable_payment": ["pcapi.domain.payments.keep_only_not_processable_payments", "pcapi.model_creators.generic_creators.create_payment"], "tests.domain.payments_test.KeepOnlyNotProcessablePaymentsTest.test_it_returns_an_empty_list_if_an_empty_list_is_given": ["pcapi.domain.payments.keep_only_not_processable_payments"], "tests.domain.payments_test.CreatePaymentDetailsTest.test_contains_info_on_bank_transaction": ["pcapi.domain.payments.PaymentDetails"], "pcapi.domain.payments.PaymentDetails": [], "tests.domain.payments_test.CreatePaymentDetailsTest.test_contains_info_on_booking": ["datetime.datetime", "pcapi.domain.payments.PaymentDetails"], "tests.domain.payments_test.CreatePaymentDetailsTest.test_contains_info_on_offerer": ["pcapi.domain.payments.PaymentDetails"], "tests.domain.payments_test.CreatePaymentDetailsTest.test_contains_info_on_venue": ["pcapi.utils.human_ids.humanize", "pcapi.domain.payments.PaymentDetails"], "tests.domain.payments_test.CreatePaymentDetailsTest.test_contains_info_on_offer": ["pcapi.domain.payments.PaymentDetails"], "tests.domain.payments_test.test_generate_venues_csv": ["pcapi.domain.payments.generate_venues_csv", "pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.domain.payments_test.PaymentTransactionLabelTest.test_in_first_half_of_a_month": ["pcapi.domain.payments.make_transaction_label"], "tests.domain.payments_test.PaymentTransactionLabelTest.test_in_second_half_of_a_month": ["pcapi.domain.payments.make_transaction_label"], "tests.domain.payments_test.ApplyBanishmentTest.test_payments_matching_given_ids_must_be_banned": ["pcapi.domain.payments.apply_banishment", "pcapi.model_creators.generic_creators.create_payment", "<builtin>.len", "pcapi.core.offerers.models.Offerer", "pcapi.core.bookings.models.Booking"], "tests.domain.payments_test.ApplyBanishmentTest.test_payments_not_matching_given_ids_must_be_retried": ["pcapi.domain.payments.apply_banishment", "pcapi.model_creators.generic_creators.create_payment", "<builtin>.len", "pcapi.core.offerers.models.Offerer", "pcapi.core.bookings.models.Booking"], "tests.domain.payments_test.ApplyBanishmentTest.test_no_payments_to_retry_if_all_are_banned": ["pcapi.domain.payments.apply_banishment", "pcapi.model_creators.generic_creators.create_payment", "<builtin>.len", "pcapi.core.offerers.models.Offerer", "pcapi.core.bookings.models.Booking"], "tests.domain.payments_test.ApplyBanishmentTest.test_no_payments_are_returned_if_no_ids_are_provided": ["pcapi.model_creators.generic_creators.create_payment", "pcapi.core.offerers.models.Offerer", "pcapi.core.bookings.models.Booking", "pcapi.domain.payments.apply_banishment"], "tests.domain.payments_test.ApplyBanishmentTest.test_value_error_is_raised_if_payments_ids_do_not_match_payments": ["pcapi.model_creators.generic_creators.create_payment", "pcapi.core.offerers.models.Offerer", "pcapi.core.bookings.models.Booking", "pcapi.domain.payments.apply_banishment"], "tests.domain.payments_test.test_set_end_to_end_id_and_group_into_transactions": ["datetime.timedelta", "<builtin>.len", "pcapi.domain.payments._set_end_to_end_id_and_group_into_transactions"], "pcapi.domain.payments._set_end_to_end_id_and_group_into_transactions": [], "tests.routes.adage.v1.get_all_bookings_per_year_test.Returns200Test.test_get_all_bookings_per_year": ["pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.utils.date.format_into_utc_date", "pcapi.core.bookings.factories.EducationalBookingFactory", "pcapi.core.testing.assert_num_queries"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_payments.create_industrial_payments": ["pcapi.scripts.payment.batch_steps.generate_new_payments"], "src.pcapi.scripts.payment.add_custom_offer_reimbursement_rule.add_custom_offer_reimbursement_rule": ["append", "<builtin>.print", "<builtin>.len"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_should_cancel_old_thing_that_can_expire_booking": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.should_not_cancel_new_thing_that_can_expire_booking": ["pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.should_not_cancel_old_event_booking": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.should_not_cancel_old_thing_that_cannot_expire_booking": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.should_not_update_cancelled_old_thing_that_can_expire_booking": ["pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.should_only_cancel_old_thing_that_can_expire_bookings_before_start_date": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_should_cancel_pending_dated_educational_booking_when_confirmation_limit_date_has_passed": ["datetime.timedelta"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_should_not_cancel_confirmed_dated_educational_booking_when_confirmation_limit_date_has_passed": ["datetime.timedelta"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_should_not_cancel_pending_dated_educational_booking_when_confirmation_limit_date_has_not_passed": ["datetime.timedelta"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_should_not_cancel_pending_dated_educational_booking_when_confirmation_limit_date_has_not_passed_and_booking_more_than_30_days_old": ["datetime.timedelta"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_handle_expired_bookings_should_cancel_expired_individual_and_educational_bookings": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_queries_performance_individual_bookings": ["datetime.timedelta", "pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.CancelExpiredBookingsTest.test_queries_performance_educational_bookings": ["datetime.timedelta", "pcapi.core.testing.assert_num_queries"], "tests.scripts.booking.handle_expired_bookings_test.NotifyUsersOfExpiredBookingsTest.should_notify_of_todays_expired_bookings": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.NotifyUsersOfExpiredBookingsTest.test_should_not_notify_of_todays_expired_educational_bookings": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.NotifyOfferersOfExpiredBookingsTest.test_should_notify_of_todays_expired_individual_bookings": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.booking.handle_expired_bookings_test.NotifyOfferersOfExpiredBookingsTest.test_should_not_notify_of_todays_expired_educational_bookings": ["datetime.timedelta", "pcapi.core.offers.factories.ProductFactory"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.get_booking_cancellation_by_beneficiary_to_pro_email_data": ["pcapi.utils.mailing.format_booking_date_for_email", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.core.mails.models.sendinblue_models.EmailInfo", "pcapi.utils.mailing.format_booking_hours_for_email"], "pcapi.core.mails.models.sendinblue_models.EmailInfo": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.send_booking_cancellation_by_beneficiary_to_pro_email": ["src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_beneficiary_to_pro.get_booking_cancellation_by_beneficiary_to_pro_email_data"], "tests.repository.venue_provider_queries_test.GetActiveVenueProvidersForSpecificProviderTest.test_should_return_all_venue_provider_matching_provider_id": ["pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.repository.venue_provider_queries.get_active_venue_providers_for_specific_provider", "pcapi.core.providers.api.activate_provider"], "pcapi.repository.venue_provider_queries.get_active_venue_providers_for_specific_provider": [], "tests.repository.venue_provider_queries_test.GetActiveVenueProvidersForSpecificProviderTest.test_should_return_all_active_venue_providers_matching_provider_id": ["pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.repository.venue_provider_queries.get_active_venue_providers_for_specific_provider"], "tests.repository.venue_provider_queries_test.GetVenueProviderByIdTest.test_should_return_matching_venue_provider": ["<builtin>.isinstance", "pcapi.repository.venue_provider_queries.get_venue_provider_by_id"], "tests.repository.venue_provider_queries_test.GetVenueProviderByIdTest.test_should_return_matching_venue_provider_with_allocine_attributes": ["<builtin>.isinstance", "pcapi.repository.venue_provider_queries.get_venue_provider_by_id"], "src.pcapi.admin.custom_views.criteria_view.CriteriaView.get_create_form": ["wtforms.validators.DataRequired", "wtforms.fields.core.StringField", "wtforms.validators.Regexp", "wtforms.validators.Length"], "tests.routes.serialization.dictifier_test.AsDictTest.test_returns_model_keys": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_does_not_return_excluded_keys": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_does_not_return_properties_by_default": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_returns_included_properties": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_returns_model_keys_on_joined_relationships": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_returns_included_properties_on_joined_relationships": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_product_with_event_subcategory", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.generic_creators.create_mediation", "pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_does_not_return_excluded_keys_on_joined_relationships": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_product_with_event_subcategory", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.generic_creators.create_mediation", "pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_returns_humanized_ids_for_primary_keys": ["pcapi.routes.serialization.as_dict"], "tests.routes.serialization.dictifier_test.AsDictTest.test_returns_humanized_ids_for_foreign_keys": ["pcapi.routes.serialization.as_dict"], "src.pcapi.scripts.stock.soft_delete_stock.soft_delete_stock": ["<builtin>.print", "<builtin>.len", "src.pcapi.scripts.stock.soft_delete_stock._check_bookings", "src.pcapi.scripts.stock.soft_delete_stock._get_bookings_for_stock"], "src.pcapi.scripts.stock.soft_delete_stock._get_bookings_for_stock": [], "src.pcapi.scripts.stock.soft_delete_stock._check_bookings": ["<builtin>.print"], "tests.workers.update_all_venue_offers_email_job_test.test_update_all_venue_offers_email_job": ["pcapi.workers.update_all_venue_offers_email_job.update_all_venue_offers_email_job"], "pcapi.workers.update_all_venue_offers_email_job.update_all_venue_offers_email_job": [], "src.pcapi.workers.logger.job_extra_description": ["<builtin>.str"], "src.pcapi.sandboxes.scripts.creators.testcafe.save_testcafe_sandbox": ["pcapi.sandboxes.scripts.creators.industrial.create_industrial_venue_types.create_industrial_venue_types"], "pcapi.sandboxes.scripts.creators.industrial.create_industrial_venue_types.create_industrial_venue_types": [], "src.pcapi.connectors.thumb_storage.create_thumb": ["pcapi.utils.image_conversion.standardize_image"], "tests.core.mails.transactional.users.offer_link_to_ios_user_test.SendinblueEmailOfferLinkIosUserTest.test_get_email_correct_metadata": ["pcapi.core.mails.transactional.users.offer_link_to_ios_user.get_offer_link_to_ios_user_email_data"], "pcapi.core.mails.transactional.users.offer_link_to_ios_user.get_offer_link_to_ios_user_email_data": [], "tests.core.mails.transactional.users.offer_link_to_ios_user_test.SendinblueEmailOfferLinkIosUserTest.test_send_correct_mail": ["pcapi.core.mails.transactional.users.offer_link_to_ios_user.send_offer_link_to_ios_user_email", "<builtin>.len"], "src.pcapi.domain.ts_vector.create_ts_vector_and_table_args": ["append", "src.pcapi.domain.ts_vector._create_ts_vector", "<builtin>.tuple"], "src.pcapi.domain.ts_vector._create_ts_vector": [], "src.pcapi.domain.ts_vector._create_fts_index": ["sqlalchemy.Index"], "src.pcapi.domain.ts_vector.create_filter_matching_all_keywords_in_any_model": ["sqlalchemy.and_", "src.pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "src.pcapi.domain.ts_vector._get_ts_queries_from_keywords_string": ["pcapi.utils.string_processing.remove_single_letters_for_search", "pcapi.utils.string_processing.tokenize_for_search"], "tests.admin.custom_views.venue_view_test.VenueViewTest.test_update_venue_siret": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.StockFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.admin.custom_views.venue_view_test.VenueViewTest.test_update_venue_other_offer_id_at_provider": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.StockFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.admin.custom_views.venue_view_test.VenueViewTest.test_update_venue_without_siret": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.admin.custom_views.venue_view_test.VenueViewTest.test_update_venue_reindex_all": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.admin.custom_views.venue_view_test.VenueViewTest.test_update_venue_reindex_venue_only": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.admin.custom_views.venue_view_test.VenueViewTest.test_reindex_when_tags_updated": ["pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.admin.custom_views.venue_view_test.GetVenueProviderLinkTest.test_return_empty_link_when_no_venue_provider": ["pcapi.core.offers.factories.VenueFactory", "pcapi.admin.custom_views.venue_view._get_venue_provider_link"], "pcapi.admin.custom_views.venue_view._get_venue_provider_link": [], "tests.admin.custom_views.venue_view_test.GetVenueProviderLinkTest.test_return_link_to_venue_provider": ["pcapi.admin.custom_views.venue_view._get_venue_provider_link", "<builtin>.str"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.get_offerers": ["<builtin>.str"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.format_amount": ["<str>.replace"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.format_offer": ["pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.format_rate": ["<str>.replace"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.format_subcategories": ["<builtin>.sorted", "<builtin>.len"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.get_error_message": ["<builtin>.isinstance", "<builtin>.str"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.can_create": ["src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.can_add_or_modify"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.can_add_or_modify": [], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.can_edit": ["src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.can_add_or_modify"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.get_query": ["sqlalchemy.orm.joinedload"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.create_model": ["src.pcapi.admin.custom_views.custom_reimbursement_rule_view.get_error_message", "<builtin>.int", "decimal.Decimal", "werkzeug.exceptions.Forbidden"], "src.pcapi.admin.custom_views.custom_reimbursement_rule_view.CustomReimbursementRuleView.update_model": ["src.pcapi.admin.custom_views.custom_reimbursement_rule_view.get_error_message", "werkzeug.exceptions.Forbidden"], "src.pcapi.utils.module_loading.import_string": ["importlib.import_module", "<builtin>.getattr", "<builtin>.ImportError"], "importlib.import_module": [], "tests.admin.custom_views.category_view_test.CategoryViewTest.test_authorized_user": ["<builtin>.any"], "tests.admin.custom_views.category_view_test.SubcategoryViewTest.test_authorized_user": ["<builtin>.any"], "tests.domain.payments_csv_test.GeneratePaymentDetailsCsvTest.test_generate_csv": ["pcapi.core.bookings.factories.UsedEducationalBookingFactory", "<builtin>.len", "pcapi.core.bookings.factories.UsedIndividualBookingFactory", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries"], "tests.domain.payments_csv_test.GeneratePaymentDetailsCsvTest.test_only_header_if_no_payment": ["pcapi.domain.payments.generate_payment_details_csv", "<builtin>.len"], "tests.domain.payments_csv_test.WalletBalancesCSVTest.test_generate_wallet_balances_csv_has_human_readable_header": ["tests.domain.payments_csv_test._get_header", "decimal.Decimal", "pcapi.domain.payments.generate_wallet_balances_csv"], "tests.domain.payments_csv_test._get_header": [], "tests.domain.payments_csv_test.WalletBalancesCSVTest.test_generate_wallet_balances_csv_with_headers_and_three_user_wallet_balances_lines": ["tests.domain.payments_csv_test._count_non_empty_lines", "decimal.Decimal", "pcapi.domain.payments.generate_wallet_balances_csv"], "tests.domain.payments_csv_test._count_non_empty_lines": ["<builtin>.list", "<builtin>.filter", "<builtin>.len"], "src.pcapi.core.subscription.dms.api.handle_dms_state": ["src.pcapi.core.subscription.dms.api.process_application"], "src.pcapi.core.subscription.dms.api.process_application": ["src.pcapi.core.subscription.dms.api.handle_validation_errors"], "src.pcapi.core.subscription.dms.api.handle_validation_errors": ["src.pcapi.core.subscription.dms.api._process_rejection"], "src.pcapi.core.subscription.dms.api._process_rejection": [], "src.pcapi.core.subscription.dms.api.import_dms_users": ["src.pcapi.core.subscription.dms.api._process_user_not_found_error", "src.pcapi.core.subscription.dms.api.get_already_processed_applications_ids", "src.pcapi.core.subscription.dms.api.process_application", "src.pcapi.core.subscription.dms.api._process_parsing_error", "pcapi.core.users.repository.find_user_by_email", "src.pcapi.core.subscription.dms.api._process_user_parsing_error", "src.pcapi.core.subscription.dms.api.process_parsing_exception"], "src.pcapi.core.subscription.dms.api.get_already_processed_applications_ids": ["src.pcapi.core.subscription.dms.api.get_already_processed_applications_ids_from_fraud_checks", "src.pcapi.core.subscription.dms.api.get_already_processed_applications_ids_from_beneficiary_imports"], "src.pcapi.core.subscription.dms.api.get_already_processed_applications_ids_from_beneficiary_imports": ["sqlalchemy.orm.load_only"], "sqlalchemy.orm.load_only": [], "src.pcapi.core.subscription.dms.api.get_already_processed_applications_ids_from_fraud_checks": ["sqlalchemy.or_", "<builtin>.int"], "src.pcapi.core.subscription.dms.api._process_user_parsing_error": [], "src.pcapi.core.subscription.dms.api._process_user_not_found_error": [], "src.pcapi.core.subscription.dms.api._process_parsing_error": ["<builtin>.list", "<builtin>.sorted", "pcapi.core.mails.transactional.users.pre_subscription_dms_error.send_pre_subscription_from_dms_error_email_to_beneficiary"], "src.pcapi.core.subscription.dms.api.process_parsing_exception": [], "src.pcapi.core.subscription.dms.api.get_dms_subscription_item_status": ["<builtin>.any"], "src.pcapi.core.subscription.dms.api.try_dms_orphan_adoption": ["src.pcapi.core.subscription.dms.api.parse_and_handle_dms_application"], "src.pcapi.core.subscription.dms.api.parse_and_handle_dms_application": ["src.pcapi.core.subscription.dms.api._process_user_not_found_error", "<builtin>.list", "src.pcapi.core.subscription.dms.api.notify_parsing_exception", "src.pcapi.core.subscription.dms.api.handle_dms_state", "pcapi.core.users.repository.find_user_by_email"], "src.pcapi.core.subscription.dms.api.notify_parsing_exception": [], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_criterion.create_industrial_criteria": ["<map>.values", "pcapi.models.criterion.Criterion", "<builtin>.len"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_criterion.associate_criterion_to_one_offer_with_mediation": ["<builtin>.list", "<builtin>.filter", "pcapi.models.offer_criterion.OfferCriterion"], "src.pcapi.sandboxes.scripts.utils.storage_utils.store_public_object_from_sandbox_assets": ["pcapi.connectors.thumb_storage.create_thumb", "pathlib.Path", "<builtin>.str", "pcapi.core.object_storage.store_public_object", "pcapi.utils.human_ids.humanize", "<builtin>.open"], "src.pcapi.admin.custom_views.api_key_view.check_siren": ["wtforms.validators.ValidationError", "pcapi.core.offerers.repository.find_offerer_by_siren"], "wtforms.validators.ValidationError": [], "src.pcapi.admin.custom_views.api_key_view.ApiKeyView.get_create_form": ["<builtin>.super", "wtforms.fields.core.StringField"], "src.pcapi.admin.custom_views.api_key_view.ApiKeyView.on_model_change": ["<builtin>.super", "flask.helpers.flash"], "src.pcapi.scripts.catching_up_dms_beneficiaries_addresses._update_beneficiaries_addresses": ["append", "<builtin>.range", "<builtin>.min", "<builtin>.len"], "src.pcapi.scripts.catching_up_dms_beneficiaries_addresses._process_file": ["src.pcapi.scripts.catching_up_dms_beneficiaries_addresses._update_beneficiaries_addresses"], "src.pcapi.scripts.catching_up_dms_beneficiaries_addresses.catching_up_dms_beneficiaries_adresses_from_csv_file": ["src.pcapi.scripts.catching_up_dms_beneficiaries_addresses._process_file", "<builtin>.open"], "src.pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_domain_converter.to_domain": ["pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information.VenueWithBasicInformation"], "pcapi.domain.venue.venue_with_basic_information.venue_with_basic_information.VenueWithBasicInformation": [], "src.pcapi.notifications.internal.transactional.change_feature_flip.send": ["pcapi.notifications.internal.send_internal_message", "flask.url_for"], "pcapi.notifications.internal.send_internal_message": [], "src.pcapi.sandboxes.scripts.sandbox_activation.save_sandbox": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_stock_with_thing_offer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "src.pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.send_individual_booking_confirmation_email_to_beneficiary": ["src.pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data"], "src.pcapi.core.mails.transactional.bookings.booking_confirmation_to_beneficiary.get_booking_confirmation_to_beneficiary_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.urls.booking_app_link", "<builtin>.int", "pcapi.utils.date.get_date_formatted_for_email", "pcapi.utils.date.utc_datetime_to_department_timezone", "<builtin>.bool", "pcapi.utils.date.get_time_formatted_for_email", "pcapi.utils.human_ids.humanize"], "src.pcapi.utils.token.random_token": ["<builtin>.range"], "src.pcapi.alembic.versions.20210216_f460dc2c9f93_init_db.upgrade": ["<builtin>.open", "pathlib.Path"], "src.pcapi.utils.phone_number.ParsedPhoneNumber.__init__": ["src.pcapi.utils.phone_number.get_formatted_phone_number", "src.pcapi.utils.phone_number.parse_phone_number"], "src.pcapi.utils.phone_number.parse_phone_number": ["pcapi.core.users.exceptions.InvalidPhoneNumber", "<builtin>.str"], "pcapi.core.users.exceptions.InvalidPhoneNumber": [], "src.pcapi.utils.phone_number.get_formatted_phone_number": [], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.__init__": ["<builtin>.super", "pcapi.domain.allocine.get_movies_showtimes"], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.__next__": ["append", "src.pcapi.local_providers.allocine.allocine_stocks._filter_only_digital_and_non_experience_showtimes", "src.pcapi.local_providers.allocine.allocine_stocks._build_stock_uuid", "src.pcapi.local_providers.allocine.allocine_stocks._has_original_version_product", "src.pcapi.local_providers.allocine.allocine_stocks._build_original_movie_uuid", "src.pcapi.local_providers.allocine.allocine_stocks._has_french_version_product", "<builtin>.range", "<builtin>.len", "src.pcapi.local_providers.allocine.allocine_stocks.retrieve_movie_information", "<builtin>.next", "src.pcapi.local_providers.allocine.allocine_stocks._build_french_movie_uuid"], "src.pcapi.local_providers.allocine.allocine_stocks.retrieve_movie_information": ["src.pcapi.local_providers.allocine.allocine_stocks._format_poster_url", "src.pcapi.local_providers.allocine.allocine_stocks._build_cast_list", "<builtin>.dict", "src.pcapi.local_providers.allocine.allocine_stocks._build_stage_director_full_name", "src.pcapi.local_providers.allocine.allocine_stocks._get_operating_visa", "src.pcapi.local_providers.allocine.allocine_stocks._get_release_date", "src.pcapi.local_providers.allocine.allocine_stocks._build_description", "src.pcapi.local_providers.allocine.allocine_stocks._build_countries_list", "src.pcapi.local_providers.allocine.allocine_stocks._parse_movie_duration"], "src.pcapi.local_providers.allocine.allocine_stocks._build_description": [], "src.pcapi.local_providers.allocine.allocine_stocks._parse_movie_duration": ["<builtin>.int"], "src.pcapi.local_providers.allocine.allocine_stocks._format_poster_url": [], "src.pcapi.local_providers.allocine.allocine_stocks._build_stage_director_full_name": [], "src.pcapi.local_providers.allocine.allocine_stocks._get_operating_visa": [], "src.pcapi.local_providers.allocine.allocine_stocks._get_release_date": [], "src.pcapi.local_providers.allocine.allocine_stocks._build_countries_list": [], "src.pcapi.local_providers.allocine.allocine_stocks._build_cast_list": ["append", "<str>.strip"], "src.pcapi.local_providers.allocine.allocine_stocks._filter_only_digital_and_non_experience_showtimes": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.local_providers.allocine.allocine_stocks._has_original_version_product": ["<builtin>.map", "<builtin>.list"], "src.pcapi.local_providers.allocine.allocine_stocks._build_original_movie_uuid": ["src.pcapi.local_providers.allocine.allocine_stocks._build_movie_uuid"], "src.pcapi.local_providers.allocine.allocine_stocks._build_movie_uuid": [], "src.pcapi.local_providers.allocine.allocine_stocks._has_french_version_product": ["<builtin>.map", "<builtin>.list"], "src.pcapi.local_providers.allocine.allocine_stocks._build_french_movie_uuid": ["src.pcapi.local_providers.allocine.allocine_stocks._build_movie_uuid"], "src.pcapi.local_providers.allocine.allocine_stocks._build_stock_uuid": ["src.pcapi.local_providers.allocine.allocine_stocks._build_movie_uuid", "src.pcapi.local_providers.allocine.allocine_stocks._build_showtime_uuid"], "src.pcapi.local_providers.allocine.allocine_stocks._build_showtime_uuid": [], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.fill_object_attributes": ["<builtin>.isinstance", "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.fill_stock_attributes", "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.fill_product_attributes", "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.fill_offer_attributes"], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.fill_product_attributes": ["src.pcapi.local_providers.allocine.allocine_stocks.get_next_product_id_from_database", "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.update_from_movie_information"], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.update_from_movie_information": [], "src.pcapi.local_providers.allocine.allocine_stocks.get_next_product_id_from_database": ["sqlalchemy.Sequence"], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.fill_offer_attributes": ["src.pcapi.local_providers.allocine.allocine_stocks._is_original_version_offer", "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.update_from_movie_information", "src.pcapi.local_providers.allocine.allocine_stocks.get_next_offer_id_from_database"], "src.pcapi.local_providers.allocine.allocine_stocks._is_original_version_offer": [], "src.pcapi.local_providers.allocine.allocine_stocks.get_next_offer_id_from_database": ["sqlalchemy.Sequence"], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.fill_stock_attributes": ["src.pcapi.local_providers.allocine.allocine_stocks._format_date_from_local_timezone_to_utc", "src.pcapi.local_providers.allocine.allocine_stocks._get_showtimes_uuid_by_idAtProvider", "pcapi.utils.date.get_department_timezone", "src.pcapi.local_providers.allocine.allocine_stocks._find_showtime_by_showtime_uuid", "src.pcapi.local_providers.allocine.allocine_stocks.retrieve_showtime_information", "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.apply_allocine_price_rule"], "src.pcapi.local_providers.allocine.allocine_stocks._get_showtimes_uuid_by_idAtProvider": [], "src.pcapi.local_providers.allocine.allocine_stocks._find_showtime_by_showtime_uuid": ["src.pcapi.local_providers.allocine.allocine_stocks._build_showtime_uuid"], "src.pcapi.local_providers.allocine.allocine_stocks.retrieve_showtime_information": ["dateutil.parser.parse"], "dateutil.parser.parse": [], "src.pcapi.local_providers.allocine.allocine_stocks._format_date_from_local_timezone_to_utc": [], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.apply_allocine_price_rule": ["pcapi.domain.price_rule.AllocineStocksPriceRule"], "pcapi.domain.price_rule.AllocineStocksPriceRule": [], "src.pcapi.local_providers.allocine.allocine_stocks.AllocineStocks.get_object_thumb": ["<builtin>.bytes", "pcapi.domain.allocine.get_movie_poster"], "src.pcapi.admin.custom_views.offer_view.ExtraDataFilterEqual.get_column": ["<builtin>.super"], "src.pcapi.admin.custom_views.offer_view.OfferView.action_bulk_edit": ["flask.redirect", "flask_admin.helpers.get_redirect_target"], "src.pcapi.admin.custom_views.offer_view.OfferView.index": ["flask_admin.helpers.get_redirect_target", "<builtin>.len"], "src.pcapi.admin.custom_views.offer_view.OfferView.update_view": ["flask.flash", "flask.redirect", "flask_admin.helpers.get_redirect_target", "pcapi.models.offer_criterion.OfferCriterion"], "src.pcapi.admin.custom_views.offer_view.OfferView.get_edit_form": ["<builtin>.super", "flask.has_app_context"], "flask.has_app_context": [], "src.pcapi.admin.custom_views.offer_view.OfferView.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.offer_view.OfferView.on_form_prefill": ["<builtin>.hasattr"], "src.pcapi.admin.custom_views.offer_view.OfferView.on_model_change": ["wtforms.validators.ValidationError", "<builtin>.hasattr"], "src.pcapi.admin.custom_views.offer_view.OfferView.update_model": ["<builtin>.super"], "src.pcapi.admin.custom_views.offer_view.OfferView.after_model_change": ["flask.flash", "pcapi.domain.admin_emails.send_offer_validation_notification_to_administration", "<builtin>.hasattr", "pcapi.core.bookings.api.cancel_bookings_from_rejected_offer", "pcapi.core.mails.transactional.pro.offer_validation_to_pro.send_offer_validation_status_update_email"], "pcapi.core.bookings.api.cancel_bookings_from_rejected_offer": [], "pcapi.core.mails.transactional.pro.offer_validation_to_pro.send_offer_validation_status_update_email": [], "pcapi.domain.admin_emails.send_offer_validation_notification_to_administration": [], "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview.index": ["src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview._get_venue_name", "<builtin>.super"], "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview._get_venue_name": ["flask.abort"], "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview.get_query": ["<builtin>.super", "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview._extend_query"], "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview._extend_query": ["flask.abort"], "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview.get_count_query": ["<builtin>.super", "src.pcapi.admin.custom_views.offer_view.OfferForVenueSubview._extend_query"], "src.pcapi.admin.custom_views.offer_view._pro_offer_url": ["pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.admin.custom_views.offer_view._venue_url": ["pcapi.utils.human_ids.humanize"], "src.pcapi.admin.custom_views.offer_view._offerer_url": ["pcapi.utils.human_ids.humanize"], "src.pcapi.admin.custom_views.offer_view._pro_offer_link": ["src.pcapi.admin.custom_views.offer_view._pro_offer_url", "markupsafe.escape", "markupsafe.Markup"], "src.pcapi.admin.custom_views.offer_view._related_offers_link": ["markupsafe.Markup", "markupsafe.escape", "flask.url_for"], "src.pcapi.admin.custom_views.offer_view._metabase_offer_link": ["markupsafe.Markup", "markupsafe.escape", "src.pcapi.admin.custom_views.offer_view._metabase_offer_url"], "src.pcapi.admin.custom_views.offer_view._metabase_offer_url": [], "src.pcapi.admin.custom_views.offer_view._offerer_link": ["src.pcapi.admin.custom_views.offer_view._offerer_url", "markupsafe.escape", "markupsafe.Markup"], "src.pcapi.admin.custom_views.offer_view._venue_link": ["markupsafe.Markup", "markupsafe.escape", "src.pcapi.admin.custom_views.offer_view._venue_url"], "src.pcapi.admin.custom_views.offer_view.ValidationView.is_accessible": ["<builtin>.super"], "src.pcapi.admin.custom_views.offer_view.ValidationView.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.offer_view.ValidationView._batch_validate": ["append", "pcapi.core.mails.transactional.pro.offer_validation_to_pro.send_offer_validation_status_update_email", "pcapi.domain.admin_emails.send_offer_validation_notification_to_administration", "flask.flash"], "src.pcapi.admin.custom_views.offer_view.ValidationView.action_approve": ["src.pcapi.admin.custom_views.offer_view.ValidationView._batch_validate"], "src.pcapi.admin.custom_views.offer_view.ValidationView.action_reject": ["src.pcapi.admin.custom_views.offer_view.ValidationView._batch_validate"], "src.pcapi.admin.custom_views.offer_view.ValidationView.edit": ["flask.flash", "src.pcapi.admin.custom_views.offer_view._pro_offer_url", "flask.redirect", "pcapi.domain.admin_emails.send_offer_validation_notification_to_administration", "pcapi.core.offers.offer_validation.parse_offer_validation_config", "src.pcapi.admin.custom_views.offer_view._offerer_url", "flask.url_for", "src.pcapi.admin.custom_views.offer_view._metabase_offer_url", "pcapi.core.offers.offer_validation.compute_offer_validation_score", "pcapi.core.mails.transactional.pro.offer_validation_to_pro.send_offer_validation_status_update_email", "src.pcapi.admin.custom_views.offer_view._venue_url"], "src.pcapi.admin.custom_views.offer_view.yaml_formatter": ["<builtin>.getattr", "markupsafe.Markup"], "src.pcapi.admin.custom_views.offer_view.user_formatter": ["<builtin>.getattr"], "src.pcapi.admin.custom_views.offer_view.date_formatter": ["<builtin>.getattr"], "src.pcapi.admin.custom_views.offer_view.ImportConfigValidationOfferView.create_form": ["flask_admin.helpers.is_form_submitted", "flask_admin.helpers.get_form_data"], "flask_admin.helpers.is_form_submitted": [], "src.pcapi.admin.custom_views.offer_view.ImportConfigValidationOfferView.create_model": ["pcapi.core.offers.validation.check_user_can_load_config", "pcapi.core.offers.api.import_offer_validation_config"], "pcapi.core.offers.validation.check_user_can_load_config": [], "tests.routes.internal.get_health_test.Returns200Test.when_api_is_available": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "<builtin>.str"], "tests.routes.internal.get_health_test.Returns200Test.when_database_is_available": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "<builtin>.str"], "tests.routes.internal.get_health_test.Returns500Test.when_database_is_not_available": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "<builtin>.str"], "src.pcapi.alembic.versions.20220214T111936_e9ddaad94156_set_jsonb_fields_as_used_ones.upgrade": ["src.pcapi.alembic.versions.20220214T111936_e9ddaad94156_set_jsonb_fields_as_used_ones.rename"], "src.pcapi.alembic.versions.20220214T111936_e9ddaad94156_set_jsonb_fields_as_used_ones.rename": [], "src.pcapi.alembic.versions.20220214T111936_e9ddaad94156_set_jsonb_fields_as_used_ones.downgrade": ["src.pcapi.alembic.versions.20220214T111936_e9ddaad94156_set_jsonb_fields_as_used_ones.unrename"], "src.pcapi.alembic.versions.20220214T111936_e9ddaad94156_set_jsonb_fields_as_used_ones.unrename": [], "src.pcapi.workers.suspend_fraudulent_beneficiary_users_by_ids_job.suspend_fraudulent_beneficiary_users_by_ids_job": ["pcapi.domain.admin_emails.send_suspended_fraudulent_users_email", "pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_ids"], "pcapi.domain.admin_emails.send_suspended_fraudulent_users_email": [], "src.pcapi.models.has_thumb_mixin.HasThumbMixin.thumb_path_component": ["<builtin>.NotImplementedError"], "src.pcapi.models.has_thumb_mixin.HasThumbMixin.get_thumb_storage_id": ["<builtin>.ValueError", "pcapi.utils.human_ids.humanize"], "src.pcapi.models.has_thumb_mixin.HasThumbMixin.thumbUrl": ["pcapi.utils.human_ids.humanize"], "tests.files.pylint.cases_ok": ["markupsafe.Markup"], "tests.files.pylint.cases_warning": ["markupsafe.Markup", "tests.files.pylint.get_variable"], "tests.files.pylint.get_variable": [], "tests.models.feature_test.FeatureToggleTest.test_is_active_query_count_inside_request_context": ["pcapi.core.testing.assert_num_queries"], "tests.models.feature_test.FeatureToggleTest.test_is_active_query_count_outside_request_context": ["pcapi.core.testing.assert_num_queries"], "tests.models.feature_test.FeatureTest.test_features_installation": ["<builtin>.list"], "tests.models.feature_test.test_install_feature_flags": ["pcapi.models.feature.install_feature_flags", "pcapi.models.feature.Feature"], "pcapi.models.feature.Feature": [], "tests.admin.custom_views.api_key_view_test.ApiKeyViewTest.test_api_key_creation": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.api_key_view_test.ApiKeyViewTest.test_api_key_creation_with_wrong_siren": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.core.users.utils.encode_jwt_payload": ["<builtin>.int"], "src.pcapi.core.users.utils.decode_jwt_token_rs256": ["<builtin>.open"], "src.pcapi.core.users.utils.get_encrypted_gcp_storage_client_bucket": ["<builtin>.hasattr", "google.cloud.storage.Client"], "src.pcapi.core.users.utils.store_object": ["<builtin>.str", "src.pcapi.core.users.utils.get_encrypted_gcp_storage_client_bucket"], "src.pcapi.core.users.utils.delete_object": ["<builtin>.str", "src.pcapi.core.users.utils.get_encrypted_gcp_storage_client_bucket"], "src.pcapi.core.users.utils.get_object": ["<builtin>.str", "src.pcapi.core.users.utils.get_encrypted_gcp_storage_client_bucket"], "src.pcapi.core.users.utils.get_age_at_date": ["dateutil.relativedelta.relativedelta", "<builtin>.max"], "src.pcapi.core.users.utils.get_age_from_birth_date": ["src.pcapi.core.users.utils.get_age_at_date"], "tests.validation.models.bank_information_test.BankInformationValidationTest.test_should_return_error_message_when_iban_is_invalid": ["pcapi.validation.models.bank_information.validate", "pcapi.models.api_errors.ApiErrors"], "pcapi.validation.models.bank_information.validate": [], "tests.validation.models.bank_information_test.BankInformationValidationTest.test_should_return_error_message_when_bic_is_invalid": ["pcapi.validation.models.bank_information.validate", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.bank_information_test.BankInformationValidationTest.test_should_return_error_messages_when_iban_and_bic_are_invalid": ["pcapi.validation.models.bank_information.validate", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.bank_information_test.BankInformationValidationTest.test_should_return_no_error_message_when_iban_and_bic_are_valid_and_status_accepted": ["pcapi.validation.models.bank_information.validate", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.bank_information_test.BankInformationValidationTest.test_should_return_an_error_if_status_is_not_accepted_and_bic_or_iban_is_present": ["pcapi.validation.models.bank_information.validate", "pcapi.models.api_errors.ApiErrors"], "tests.validation.models.bank_information_test.BankInformationValidationTest.test_should_not_return_an_error_if_status_is_not_accepted_and_bic_and_iban_are_empty": ["pcapi.validation.models.bank_information.validate", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.sandboxes.scripts.getters.pro_14_home_profile.get_pro_user": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper"], "tests.routes.pro.patch_offers_active_status_test.Returns204Test.when_activating_existing_offers": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_offers_active_status_test.Returns204Test.when_deactivating_existing_offers": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_offers_active_status_test.Returns204Test.test_only_approved_offers_patch": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_approval_email": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_rejection_email": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.core.mails.transactional.pro.offer_validation_to_pro.send_offer_validation_status_update_email": ["src.pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_approval_email", "src.pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_rejection_email"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_abort_when_offerer_has_any_bookings": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_remove_offers_and_stocks": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id", "<builtin>.sorted"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_remove_bank_informations_of_venue": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_remove_mediations_of_managed_offers": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_remove_favorites_of_managed_offers": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_remove_criterions": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_remove_synchronization_to_provider": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "tests.scripts.offerer.delete_cascade_venue_by_id_test.test_delete_cascade_venue_should_remove_synchronization_to_allocine_provider": ["pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id"], "src.pcapi.core.monkeypatches.custom_restclient_request": ["<builtin>.getattr", "<builtin>.str"], "src.pcapi.core.monkeypatches.install_monkey_patches": ["src.pcapi.core.monkeypatches.monkey_patch_sendinblue"], "src.pcapi.core.monkeypatches.monkey_patch_sendinblue": [], "src.pcapi.routes.pro.validate.validate_offerer_attachment": ["pcapi.models.api_errors.ResourceNotFoundError"], "src.pcapi.routes.pro.validate.validate_new_offerer": ["pcapi.models.api_errors.ResourceNotFoundError"], "src.pcapi.routes.pro.validate.validate_user": ["pcapi.validation.routes.validate.check_valid_token_for_user_validation", "pcapi.domain.admin_emails.maybe_send_offerer_validation_email", "pcapi.core.mails.transactional.pro.welcome_to_pro.send_welcome_to_pro_email"], "pcapi.validation.routes.validate.check_valid_token_for_user_validation": [], "pcapi.core.mails.transactional.pro.welcome_to_pro.send_welcome_to_pro_email": [], "pcapi.domain.admin_emails.maybe_send_offerer_validation_email": [], "src.pcapi.routes.serialization.offers_serialize.PostOfferBodyModel.validate_name": ["pcapi.validation.routes.offers.check_offer_name_length_is_valid"], "pcapi.validation.routes.offers.check_offer_name_length_is_valid": [], "src.pcapi.routes.serialization.offers_serialize.PostOfferBodyModel.validate_isbn": ["pcapi.validation.routes.offers.check_offer_isbn_is_valid", "pcapi.core.categories.conf.can_create_from_isbn"], "pcapi.validation.routes.offers.check_offer_isbn_is_valid": [], "src.pcapi.routes.serialization.offers_serialize.PostEducationalOfferBodyModel.validate_name": ["pcapi.validation.routes.offers.check_offer_name_length_is_valid"], "src.pcapi.routes.serialization.offers_serialize.PatchOfferBodyModel.validate_name": ["pcapi.validation.routes.offers.check_offer_name_length_is_valid"], "src.pcapi.routes.serialization.offers_serialize.PatchEducationalOfferBodyModel.validate_name": ["pcapi.validation.routes.offers.check_offer_name_length_is_valid"], "src.pcapi.routes.serialization.offers_serialize.ListOffersStockResponseModel.validate_remaining_quantity": ["<builtin>.isinstance"], "src.pcapi.routes.serialization.offers_serialize.GetOfferStockResponseModel.from_orm": ["<builtin>.super"], "src.pcapi.routes.serialization.offers_serialize.GetOfferStockResponseModel.validate_cancellation_limit_date": ["pcapi.core.bookings.api.compute_cancellation_limit_date"], "src.pcapi.routes.serialization.offers_serialize.GetOfferResponseModel.extract_datetime_list_from_DateTimes_type": ["<builtin>.isinstance"], "src.pcapi.routes.serialization.offers_serialize.GetOfferResponseModel.from_orm": ["<builtin>.super"], "src.pcapi.routes.serialization.offers_serialize.EducationalOfferShadowStockBodyModel.validate_price_detail": ["<builtin>.ValueError", "<builtin>.len"], "tests.emails.user_wallet_balance_test.test_make_wallet_balances_email": ["<builtin>.len", "pcapi.utils.mailing.make_wallet_balances_email"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking": ["datetime.datetime", "<builtin>.dict"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data": ["<map>.update"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_with_event": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data": [], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_with_book": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_non_digital_bookings_can_expire_after_30_days": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_with_book_with_missing_isbn": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_a_digital_booking_expires_after_30_days": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_when_use_token_for_payment": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_no_need_when_price_is_free": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_no_need_when_using_activation_code": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "pcapi.core.offers.factories.ActivationCodeFactory", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "pcapi.core.offers.factories.ActivationCodeFactory": [], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_no_need_when_booking_is_autovalidated": ["datetime.datetime", "pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_a_digital_booking_with_activation_code_is_automatically_used": ["datetime.datetime", "pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_should_not_truncate_price": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_should_use_venue_public_name_when_available": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.get_expected_base_email_data"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.OffererBookingRecapTest.test_should_add_user_phone_number_to_params": ["pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data", "tests.core.mails.transactional.bookings.new_booking_to_pro_test.make_booking"], "tests.core.mails.transactional.bookings.new_booking_to_pro_test.SendNewBookingEmailToProTest.test_send_to_offerer": ["dataclasses.asdict", "pcapi.core.mails.transactional.bookings.new_booking_to_pro.send_user_new_booking_to_pro_email", "<builtin>.len"], "src.pcapi.core.subscription.messages._generate_form_field_error": ["<map>.get", "<builtin>.len"], "src.pcapi.core.subscription.messages.on_dms_application_parsing_errors_but_updatables_values": ["src.pcapi.core.subscription.messages._generate_form_field_error"], "src.pcapi.core.subscription.messages.on_dms_application_parsing_errors": ["src.pcapi.core.subscription.messages._generate_form_field_error"], "tests.routes.adage.v1.get_prebookings_test.Returns200Test.test_get_prebookings_without_query_params": ["tests.conftest.TestClient.__init__", "pcapi.core.educational.factories.EducationalRedactorFactory", "tests.conftest.TestClient.get", "<builtin>.float", "<builtin>.int", "pcapi.core.offers.utils.offer_app_link", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.utils.date.format_into_utc_date", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.get_prebookings_test.Returns200Test.test_get_prebookings_with_query_params": ["tests.conftest.TestClient.__init__", "pcapi.core.educational.factories.EducationalRedactorFactory", "tests.conftest.TestClient.get", "pcapi.core.bookings.factories.PendingEducationalBookingFactory", "<builtin>.float", "<builtin>.int", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.core.offers.utils.offer_app_link", "pcapi.utils.date.format_into_utc_date", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token"], "pcapi.core.bookings.factories.PendingEducationalBookingFactory": [], "src.pcapi.connectors.api_entreprises.get_by_offerer": ["src.pcapi.connectors.api_entreprises._extract_etablissements_communs_siren"], "src.pcapi.connectors.api_entreprises._extract_etablissements_communs_siren": [], "src.pcapi.connectors.api_entreprises.get_offerer_legal_category": ["src.pcapi.connectors.api_entreprises.get_by_offerer", "<builtin>.int"], "src.pcapi.connectors.api_entreprises.check_siret_is_still_active": ["src.pcapi.connectors.api_entreprises.get_by_siret"], "src.pcapi.connectors.api_entreprises.get_by_siret": [], "src.pcapi.routes.serialization.mediations_serialize.CreateMediationBodyModel.get_image_as_bytes": ["src.pcapi.routes.serialization.mediations_serialize._fetch_image", "pcapi.models.api_errors.ApiErrors", "pathlib.Path"], "src.pcapi.routes.serialization.mediations_serialize._fetch_image": ["<builtin>.ValueError", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offerers.api.create_digital_venue": ["pcapi.core.offerers.models.Venue"], "pcapi.core.offerers.models.Venue": [], "src.pcapi.core.offerers.api.update_venue": ["<builtin>.set", "src.pcapi.core.offerers.api.delete_business_unit", "src.pcapi.core.offerers.api.upsert_venue_contact", "pcapi.core.users.external.update_external_pro"], "src.pcapi.core.offerers.api.upsert_venue_contact": ["pcapi.core.offerers.models.VenueContact"], "pcapi.core.offerers.models.VenueContact": [], "src.pcapi.core.offerers.api.delete_business_unit": [], "src.pcapi.core.offerers.api.create_venue": ["pcapi.core.users.external.update_external_pro", "pcapi.core.offerers.models.Venue", "src.pcapi.core.offerers.api.upsert_venue_contact"], "src.pcapi.core.offerers.api.generate_and_save_api_key": ["src.pcapi.core.offerers.api.generate_api_key", "exceptions.ApiKeyCountMaxReached"], "exceptions.ApiKeyCountMaxReached": [], "src.pcapi.core.offerers.api.generate_api_key": ["pcapi.core.offerers.models.ApiKey", "src.pcapi.core.offerers.api._generate_api_key_prefix"], "src.pcapi.core.offerers.api._generate_api_key_prefix": ["src.pcapi.core.offerers.api._create_prefix", "<builtin>.range", "exceptions.ApiKeyPrefixGenerationError"], "src.pcapi.core.offerers.api._create_prefix": [], "exceptions.ApiKeyPrefixGenerationError": [], "src.pcapi.core.offerers.api.find_api_key": ["src.pcapi.core.offerers.api._create_prefix"], "src.pcapi.core.offerers.api.delete_api_key_by_user": ["exceptions.ApiKeyDeletionDenied"], "exceptions.ApiKeyDeletionDenied": [], "src.pcapi.core.offerers.api.create_offerer": ["src.pcapi.core.offerers.api._send_to_pc_admin_offerer_to_validate_email", "pcapi.core.users.external.update_external_pro", "pcapi.core.offerers.repository.find_offerer_by_siren", "src.pcapi.core.offerers.api.create_digital_venue", "pcapi.core.offerers.models.Offerer"], "src.pcapi.core.offerers.api._send_to_pc_admin_offerer_to_validate_email": ["pcapi.domain.admin_emails.maybe_send_offerer_validation_email"], "src.pcapi.core.offerers.api.validate_offerer_attachment": ["pcapi.core.users.external.update_external_pro", "pcapi.core.mails.transactional.pro.offerer_attachment_validation.send_offerer_attachment_validation_email_to_pro", "exceptions.ValidationTokenNotFoundError", "pcapi.core.offerers.repository.find_user_offerer_by_validation_token"], "exceptions.ValidationTokenNotFoundError": [], "pcapi.core.mails.transactional.pro.offerer_attachment_validation.send_offerer_attachment_validation_email_to_pro": [], "src.pcapi.core.offerers.api.validate_offerer": ["pcapi.core.users.external.update_external_pro", "pcapi.core.offerers.repository.find_offerer_by_validation_token", "pcapi.core.mails.transactional.pro.new_offerer_validation.send_new_offerer_validation_email_to_pro", "exceptions.ValidationTokenNotFoundError", "pcapi.core.users.repository.get_users_with_validated_attachment_by_offerer"], "src.pcapi.core.offerers.api.can_offerer_create_educational_offer": ["pcapi.core.offerers.repository.find_siren_by_offerer_id", "pcapi.connectors.api_adage.CulturalPartnerNotFoundException", "<builtin>.len"], "src.pcapi.core.offerers.api.get_educational_offerers": ["pcapi.core.offerers.exceptions.MissingOffererIdQueryParameter", "pcapi.core.offerers.repository.get_all_offerers_for_user", "pcapi.utils.human_ids.dehumanize"], "pcapi.core.offerers.exceptions.MissingOffererIdQueryParameter": [], "tests.routes.shared.get_user_profile_test.Returns200Test.when_user_is_logged_in_and_has_no_deposit": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "dateutil.relativedelta.relativedelta", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.date.format_into_utc_date", "pcapi.utils.human_ids.humanize", "<builtin>.any"], "tests.routes.shared.get_user_profile_test.Returns200Test.test_returns_has_physical_venues_and_has_offers": ["tests.conftest.TestClient.__init__", "pcapi.model_creators.generic_creators.create_offerer", "tests.conftest.TestClient.get", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "tests.conftest.TestClient.with_session_auth", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.routes.shared.get_user_profile_test.Returns401Test.when_user_is_not_logged_in": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "src.pcapi.notifications.internal.send_internal_message": ["pcapi.utils.module_loading.import_string"], "src.pcapi.model_creators.specific_creators.create_offer_with_event_product": ["pcapi.core.offers.models.Offer", "src.pcapi.model_creators.specific_creators.create_product_with_event_subcategory"], "src.pcapi.model_creators.specific_creators.create_product_with_event_subcategory": ["pcapi.models.product.Product"], "src.pcapi.model_creators.specific_creators.create_offer_with_thing_product": ["pcapi.core.offers.models.Offer", "src.pcapi.model_creators.specific_creators.create_product_with_thing_subcategory"], "src.pcapi.model_creators.specific_creators.create_product_with_thing_subcategory": ["pcapi.models.product.Product"], "src.pcapi.model_creators.specific_creators.create_stock_from_event_occurrence": ["pcapi.core.offers.models.Stock"], "src.pcapi.model_creators.specific_creators.create_stock_from_offer": ["pcapi.core.offers.models.Stock"], "src.pcapi.model_creators.specific_creators.create_stock_with_event_offer": ["pcapi.core.offers.models.Stock", "src.pcapi.model_creators.specific_creators.create_offer_with_event_product"], "src.pcapi.model_creators.specific_creators.create_stock_with_thing_offer": ["pcapi.core.offers.models.Stock", "src.pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.domain.ts_vector_test.test_get_ts_queries_from_keywords_string_parses_keywords_string_into_list_of_ts_strings": ["pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "pcapi.domain.ts_vector._get_ts_queries_from_keywords_string": [], "tests.domain.ts_vector_test.test_get_ts_queries_from_keywords_string_with_double_space_parses_keywords_string_ignoring_consecutive_spaces": ["pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "tests.domain.ts_vector_test.test_get_ts_queries_from_keywords_string_with_double_space_parses_keywords_string_ignoring_stop_words": ["pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "tests.domain.ts_vector_test.test_get_ts_queries_from_keywords_string_with_double_space_parses_keywords_string_ignoring_stop_words_with_capital_letter": ["pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "tests.domain.ts_vector_test.test_get_ts_queries_from_keywords_url_parses_keywords_string_ignoring_special_chars": ["pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "tests.domain.ts_vector_test.test_get_ts_queries_from_keywords_url_parses_keywords_string_ignoring_ou_with_accent": ["pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "tests.domain.ts_vector_test.test_get_ts_queries_from_keywords_string_with_coma_parses_keywords_string_ignoring_words_with_less_than_one_char": ["pcapi.domain.ts_vector._get_ts_queries_from_keywords_string"], "src.pcapi.repository.payment_queries.find_not_processable_with_bank_information": ["pcapi.domain.payments.keep_only_not_processable_payments"], "src.pcapi.repository.payment_queries.join_for_payment_details": ["sqlalchemy.orm.joinedload"], "src.pcapi.repository.payment_queries.get_payments_by_status": ["src.pcapi.repository.payment_queries._get_payment_ids_with_latest_status"], "src.pcapi.repository.payment_queries._get_payment_ids_with_latest_status": [], "src.pcapi.repository.payment_queries.get_payment_count_by_status": ["<builtin>.dict", "src.pcapi.repository.payment_queries._get_payment_ids_with_latest_status"], "src.pcapi.repository.payment_queries.group_by_iban_and_bic": ["<builtin>.set"], "src.pcapi.repository.payment_queries.group_by_venue": ["<builtin>.list"], "src.pcapi.connectors.ftp_titelive.get_titelive_ftp": ["<builtin>.ValueError"], "src.pcapi.connectors.ftp_titelive.connect_to_titelive_ftp": ["src.pcapi.connectors.ftp_titelive.get_titelive_ftp", "<builtin>.ValueError"], "src.pcapi.connectors.ftp_titelive.get_zip_file_from_ftp": ["zipfile.ZipFile", "io.BytesIO", "src.pcapi.connectors.ftp_titelive.connect_to_titelive_ftp"], "src.pcapi.connectors.ftp_titelive.get_files_to_process_from_titelive_ftp": ["<builtin>.sorted", "pcapi.domain.titelive.put_today_file_at_end_of_list", "src.pcapi.connectors.ftp_titelive.connect_to_titelive_ftp", "<builtin>.str"], "tests.local_providers.allocine_stocks_test.AllocineStocksTest.InitTest.test_should_call_allocine_api": ["pcapi.local_providers.AllocineStocks", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.providers.factories.AllocineVenueProviderFactory"], "pcapi.core.providers.factories.AllocineVenueProviderFactory": [], "pcapi.local_providers.AllocineStocks": [], "tests.local_providers.allocine_stocks_test.AllocineStocksTest.NextTest.test_should_return_providable_infos_for_each_movie": ["pcapi.local_providers.AllocineStocks", "<builtin>.iter", "datetime.datetime", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "<builtin>.next", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_create_one_product_and_one_local_version_offer_with_movie_info": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "pcapi.core.offers.factories.VenueFactory"], "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory": [], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_create_one_product_and_one_original_version_offer_and_one_dubbed_version_offer_with_movie_info": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_create_only_one_original_version_offer_when_only_original_showtimes_exist": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_update_existing_product_duration_and_update_matching_offers": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.offers.factories.ProductFactory", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_update_existing_product_duration_and_create_new_offer_when_no_offer_exists": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.offers.factories.ProductFactory", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_create_product_and_new_offer_with_missing_visa_and_stage_director": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_not_create_product_and_offer_when_missing_required_information_in_api_response": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_create_product_with_correct_thumb_and_increase_thumbCount_by_1": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "pcapi.core.offers.factories.ProductFactory", "<builtin>.iter", "pathlib.Path", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.VenueFactory", "<builtin>.open"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_replace_product_thumb_when_product_has_already_one_thumb": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "pcapi.core.offers.factories.ProductFactory", "<builtin>.iter", "pathlib.Path", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.VenueFactory", "<builtin>.open"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_create_one_product_and_one_offer_and_associated_stocks": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "datetime.datetime", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.test_should_create_one_product_and_two_offers_and_associated_stocks": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "datetime.datetime", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenAllocineStockAreSynchronizedTwiceTest.test_should_update_stocks_based_on_stock_date": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "datetime.datetime", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "<builtin>.bytes", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenAllocineStockAreSynchronizedTwiceTest.test_should_create_one_different_offer_and_stock_for_different_venues": ["pcapi.local_providers.AllocineStocks", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "<builtin>.bytes", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenAllocineStockAreSynchronizedTwiceTest.test_should_update_stocks_info_after_pro_user_modification": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "datetime.datetime", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.len", "<builtin>.bytes", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenOfferHasBeenManuallyUpdatedTest.test_should_preserve_manual_modification": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.bytes", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenStockHasBeenManuallyDeletedTest.test_should_preserve_deletion": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.bytes", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenSettingDefaultValuesAtImportTest.test_should_preserve_is_duo_default_value": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.bytes", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.UpdateObjectsTest.WhenSettingDefaultValuesAtImportTest.test_should_preserve_quantity_default_value": ["pcapi.local_providers.AllocineStocks", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.iter", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "<builtin>.bytes", "pcapi.core.offers.factories.VenueFactory"], "tests.local_providers.allocine_stocks_test.GetObjectThumbTest.test_should_get_movie_poster_if_poster_url_exist": ["pcapi.local_providers.AllocineStocks", "<builtin>.dict", "pcapi.core.providers.factories.AllocineVenueProviderFactory"], "tests.local_providers.allocine_stocks_test.GetObjectThumbTest.test_should_return_empty_thumb_if_poster_does_not_exist": ["<builtin>.bytes", "pcapi.local_providers.AllocineStocks", "<builtin>.dict", "pcapi.core.providers.factories.AllocineVenueProviderFactory"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest.test_should_return_booked_status_when_booking_is_not_cancelled_nor_used": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain_creators.generic_creators.create_domain_booking_recap": ["pcapi.core.bookings.api.compute_cancellation_limit_date", "pcapi.domain.booking_recap.booking_recap.BookingRecap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest.test_should_return_validated_status_when_booking_is_used_and_not_cancelled": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest.test_should_return_validated_status_when_booking_is_for_a_thing_and_not_cancellable": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest.test_should_return_validated_status_when_booking_is_for_an_event_and_not_cancellable_but_validated": ["datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest.test_should_return_confirmed_status_when_booking_is_for_an_event_and_not_cancellable": ["datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest.test_should_return_cancelled_status_when_booking_is_cancelled_but_not_used": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingHasNoPaymentsTest.test_should_return_cancelled_status_when_booking_is_cancelled_and_used": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingIsReimbursedTest.test_should_return_reimbursed_status_when_booking_is_not_cancelled_nor_used": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingIsReimbursedTest.test_should_return_reimbursed_status_when_booking_is_used_and_not_cancelled": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingIsReimbursedTest.test_should_return_reimbursed_status_when_booking_is_used_and_cancelled": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.StatusPropertyTest.WhenBookingIsReimbursedTest.test_should_return_pending_status_when_booking_is_pending_and_confirmed": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.TokenTest.test_should_not_return_token_when_offer_is_thing_and_booking_is_not_used_nor_cancelled": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.TokenTest.test_should_return_token_when_offer_is_thing_and_booking_is_used_and_not_cancelled": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.TokenTest.test_should_return_token_when_offer_is_thing_and_booking_is_not_used_and_is_cancelled": ["tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.TokenTest.test_should_return_token_when_offer_is_event_and_booking_is_not_used_nor_cancelled": ["datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest.test_should_return_booking_recap_history": ["<builtin>.isinstance", "datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest.test_should_return_booking_recap_history_with_cancellation": ["<builtin>.isinstance", "datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest.test_should_return_booking_recap_history_with_validation": ["<builtin>.isinstance", "datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest.test_should_return_booking_recap_history_with_confirmation": ["<builtin>.isinstance", "datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest.test_should_return_booking_recap_history_with_payment": ["<builtin>.isinstance", "datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.domain.booking_recap_test.BookingRecapTest.BuildHistoryTest.test_should_return_booking_recap_history_with_payment_even_if_cancelled": ["<builtin>.isinstance", "datetime.datetime", "tests.domain_creators.generic_creators.create_domain_booking_recap"], "tests.core.finance.test_integration.test_integration": ["<builtin>.len"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_occurrences.create_industrial_event_occurrences": ["<builtin>.list", "pcapi.model_creators.specific_creators.create_event_occurrence", "pcapi.sandboxes.scripts.utils.select.remove_every"], "src.pcapi.routes.serialization.serializer._": ["<builtin>.isinstance", "pcapi.utils.human_ids.humanize"], "tests.core.bookings.test_models.test_total_amount": ["decimal.Decimal"], "tests.core.bookings.test_models.BookingThumbUrlTest.test_thumb_url_use_mediation_if_exists": ["pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.MediationFactory"], "tests.core.bookings.test_models.BookingThumbUrlTest.test_thumb_url_use_product_if_no_mediation": ["pcapi.utils.human_ids.humanize"], "tests.core.bookings.test_models.BookingThumbUrlTest.test_no_thumb_if_mediation_thumb_count_is_zero": ["pcapi.core.offers.factories.MediationFactory"], "tests.core.bookings.test_models.BookingIsConfirmedPropertyTest.test_booking_is_confirmed_when_cancellation_limit_date_is_in_the_past": ["datetime.timedelta"], "tests.core.bookings.test_models.BookingIsConfirmedPropertyTest.test_booking_is_not_confirmed_when_cancellation_limit_date_is_in_the_future": ["datetime.timedelta"], "tests.core.bookings.test_models.BookingIsConfirmedSqlQueryTest.test_booking_is_confirmed_when_cancellation_limit_date_is_in_the_past": ["datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_models.BookingIsConfirmedSqlQueryTest.test_booking_is_not_confirmed_when_cancellation_limit_date_is_in_the_future": ["datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_models.BookingIsConfirmedSqlQueryTest.test_booking_is_not_confirmed_when_no_cancellation_limit_date_exists": ["<builtin>.len"], "tests.core.bookings.test_models.BookingExpirationDateTest.test_booking_expiration_date_after_new_rules_start_date": ["datetime.datetime"], "tests.core.bookings.test_models.BookingMarkAsConfirmedTest.test_confirm_when_confirmation_limit_date_has_not_passed": ["datetime.datetime"], "tests.core.bookings.test_models.BookingMarkAsConfirmedTest.test_confirm_when_has_confirmation_limit_date_passed": ["datetime.datetime"], "tests.core.mails.transactional.pro.email_validation_test.SendProUserValidationEmailTest.test_sends_email_to_pro_user": ["dataclasses.asdict", "pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_pro_email", "<builtin>.len"], "tests.core.mails.transactional.pro.email_validation_test.SendAdminUserValidationEmailTest.test_send_mail_to_admin_user": ["dataclasses.asdict", "<builtin>.len", "pcapi.core.mails.transactional.pro.email_validation.send_email_validation_to_admin_email"], "tests.core.offers.test_api.UpsertStocksTest.test_upsert_stocks_triggers_draft_offer_validation": ["datetime.datetime"], "tests.core.offers.test_api.UpsertStocksTest.test_sends_email_if_beginning_date_changes_on_edition": ["datetime.timedelta", "<builtin>.len"], "tests.core.offers.test_api.UpsertStocksTest.should_update_bookings_cancellation_limit_date_if_report_of_event": ["datetime.timedelta"], "tests.core.offers.test_api.UpsertStocksTest.should_invalidate_booking_token_when_event_is_reported": ["datetime.timedelta"], "tests.core.offers.test_api.UpsertStocksTest.should_not_invalidate_booking_token_when_event_is_reported_in_less_than_48_hours": ["datetime.timedelta"], "tests.core.offers.test_api.UpsertStocksTest.test_does_not_allow_beginning_datetime_on_thing_offer_on_creation_and_edition": ["datetime.timedelta"], "tests.core.offers.test_api.UpsertStocksTest.test_does_not_allow_booking_limit_after_beginning_for_an_event_offer_on_creation_and_edition": ["datetime.timedelta"], "tests.core.offers.test_api.UpsertStocksTest.test_does_not_allow_edition_of_a_past_event_stock": ["datetime.timedelta"], "tests.core.offers.test_api.UpsertStocksTest.test_allow_edition_of_price_and_quantity_for_stocks_of_offers_synchronized_with_allocine": ["datetime.timedelta"], "tests.core.offers.test_api.UpsertStocksTest.test_does_not_allow_edition_of_beginningDateTime_for_stocks_of_offers_synchronized_with_allocine": ["datetime.timedelta"], "tests.core.offers.test_api.CreateEducationalOfferStocksTest.should_not_allow_educational_stock_creation_when_offer_not_educational": ["<builtin>.len"], "tests.core.offers.test_api.CreateEducationalOfferStocksTest.test_create_stock_triggers_draft_offer_validation": ["datetime.datetime"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_update_all_fields_when_all_changed": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_update_some_fields_and_keep_non_edited_ones": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_update_educational_booking_amount": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_replace_bookingLimitDatetime_with_new_event_datetime_if_provided_but_none": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_replace_bookingLimitDatetime_with_old_event_datetime_if_provided_but_none_and_event_date_unchanged": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_reindex_offer_on_algolia": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.should_update_bookings_cancellation_limit_date_if_event_postponed": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.should_update_bookings_cancellation_limit_date_if_beginningDatetime_earlier": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_allow_stock_edition_and_not_modify_cancellation_limit_date_when_booking_cancelled": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_does_not_allow_edition_of_an_expired_event_stock": ["datetime.timedelta"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_not_allow_stock_edition_when_beginningDatetime_not_provided_and_bookingLimitDatetime_set_after_existing_event_datetime": ["datetime.datetime"], "tests.core.offers.test_api.EditEducationalOfferStocksTest.test_should_not_allow_stock_edition_when_bookingLimitDatetime_not_provided_and_beginningDatetime_set_before_existing_event_datetime": ["datetime.datetime"], "tests.core.offers.test_api.DeleteStockTest.test_delete_stock_cancel_bookings_and_send_emails": ["<builtin>.set", "<builtin>.len"], "tests.core.offers.test_api.DeleteStockTest.test_can_delete_if_event_ended_recently": ["datetime.timedelta"], "tests.core.offers.test_api.DeleteStockTest.test_cannot_delete_if_too_late": ["datetime.timedelta"], "tests.core.offers.test_api.CreateMediationV2Test.test_erase_former_mediations": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.core.offers.test_api.CreateMediationV2Test.test_rollback_if_exception": ["<builtin>.len"], "tests.core.offers.test_api.CreateOfferTest.test_create_offer_from_scratch": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_create_offer_livre_edition_from_isbn_with_existing_product": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_create_offer_livre_edition_from_isbn_with_is_not_compatible_gcu_should_fail": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_create_offer_livre_edition_from_isbn_with_product_not_exists_should_fail": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_cannot_create_activation_offer": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_cannot_create_offer_when_invalid_subcategory": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_create_educational_offer": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_cannot_create_educational_offer_when_is_duo": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_cannot_create_educational_offer_when_not_eligible_subcategory": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_fail_if_unknown_venue": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.CreateOfferTest.test_fail_if_user_not_related_to_offerer": ["pcapi.utils.human_ids.humanize"], "tests.core.offers.test_api.BatchUpdateOffersTest.test_activate": ["<builtin>.set"], "tests.core.offers.test_api.OfferExpenseDomainsTest.test_offer_expense_domains": ["<builtin>.set"], "tests.core.offers.test_api.DeactivateInappropriateProductTest.test_should_deactivate_product_with_inappropriate_content": ["<builtin>.set", "<builtin>.any"], "tests.core.offers.test_api.ImportOfferValidationConfigTest.test_raise_a_WrongFormatInFraudConfigurationFile_error_for_key_error": ["<builtin>.str"], "tests.core.offers.test_api.ImportOfferValidationConfigTest.test_raise_a_WrongFormatInFraudConfigurationFile_error_for_wrong_type": ["<builtin>.str"], "tests.core.offers.test_api.ImportOfferValidationConfigTest.test_raise_a_WrongFormatInFraudConfigurationFile_error_for_wrong_leaf_value": ["<builtin>.str"], "tests.core.offers.test_api.ImportOfferValidationConfigTest.test_raise_if_contains_comparated_not_a_list": ["<builtin>.str"], "tests.core.offers.test_api.ParseOfferValidationConfigTest.test_parse_offer_validation_config": ["<builtin>.len"], "tests.core.offers.test_api.UnindexExpiredOffersTest.test_default_run": ["datetime.datetime"], "tests.core.offers.test_api.UnindexExpiredOffersTest.test_run_unlimited": ["datetime.datetime"], "tests.sandboxes.scripts.bookings_recap.bookings_recap_test.BookingsRecapTest.test_should_create_bookings_recap_sandbox": ["tests.sandboxes.scripts.bookings_recap.bookings_recap_test.BookingsRecapTest._find_bookings_by_user_firstname", "pcapi.sandboxes.scripts.creators.bookings_recap.bookings_recap.save_bookings_recap_sandbox"], "tests.sandboxes.scripts.bookings_recap.bookings_recap_test.BookingsRecapTest._find_bookings_by_user_firstname": [], "tests.validation.models.venue_test.test_should_return_error_when_siret_is_invalid": ["pcapi.validation.models.venue.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.validation.models.venue.validate": [], "tests.validation.models.venue_test.test_should_return_error_when_address_is_invalid": ["pcapi.validation.models.venue.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors", "pcapi.model_creators.generic_creators.create_venue"], "tests.validation.models.venue_test.test_should_return_error_when_offerer_has_no_siren": ["pcapi.validation.models.venue.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors", "pcapi.model_creators.generic_creators.create_venue"], "tests.validation.models.venue_test.test_should_return_error_when_venue_does_not_belong_to_offerer": ["pcapi.validation.models.venue.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.models.api_errors.ApiErrors", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.__init__": ["pcapi.connectors.ftp_titelive.get_files_to_process_from_titelive_ftp", "<builtin>.super", "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.get_remaining_files_to_check"], "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.get_remaining_files_to_check": ["<builtin>.enumerate", "<builtin>.int", "pcapi.domain.titelive.get_date_from_filename", "<builtin>.iter"], "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.__next__": ["src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.get_ineligibility_reason", "src.pcapi.local_providers.titelive_things.titelive_things.get_infos_from_data_line", "pcapi.domain.titelive.read_things_date", "src.pcapi.local_providers.titelive_things.titelive_things.is_unreleased_book", "<builtin>.len", "src.pcapi.local_providers.titelive_things.titelive_things.get_subcategory_and_extra_data_from_titelive_type", "<builtin>.next", "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.open_next_file"], "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.open_next_file": ["<builtin>.next", "pcapi.domain.titelive.get_date_from_filename", "<builtin>.str", "src.pcapi.local_providers.titelive_things.titelive_things.get_lines_from_thing_file"], "src.pcapi.local_providers.titelive_things.titelive_things.get_lines_from_thing_file": ["io.TextIOWrapper", "io.BytesIO", "pcapi.connectors.ftp_titelive.connect_to_titelive_ftp", "<builtin>.iter"], "pcapi.connectors.ftp_titelive.connect_to_titelive_ftp": [], "src.pcapi.local_providers.titelive_things.titelive_things.get_infos_from_data_line": ["<builtin>.dict"], "src.pcapi.local_providers.titelive_things.titelive_things.get_subcategory_and_extra_data_from_titelive_type": [], "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.get_ineligibility_reason": [], "src.pcapi.local_providers.titelive_things.titelive_things.is_unreleased_book": [], "pcapi.domain.titelive.read_things_date": [], "src.pcapi.local_providers.titelive_things.titelive_things.TiteLiveThings.fill_object_attributes": ["src.pcapi.local_providers.titelive_things.titelive_things.get_extra_data_from_infos", "pcapi.domain.titelive.read_things_date", "<map>.copy", "pcapi.utils.string_processing.trim_with_elipsis"], "pcapi.utils.string_processing.trim_with_elipsis": [], "src.pcapi.local_providers.titelive_things.titelive_things.get_extra_data_from_infos": ["<builtin>.dict", "pcapi.utils.string_processing.trim_with_elipsis"], "tests.utils.date_test.GetDateFormattedForEmailTest.test_should_return_day_followed_by_month_written_in_words": ["pcapi.utils.date.get_date_formatted_for_email"], "tests.utils.date_test.GetDateFormattedForEmailTest.test_should_return_1_digit_day_when_day_is_less_than_10": ["pcapi.utils.date.get_date_formatted_for_email"], "tests.utils.date_test.GetTimeFormattedForEmailTest.test_should_return_hour_followed_by_two_digits_minutes": ["pcapi.utils.date.get_time_formatted_for_email"], "tests.utils.date_test.GetDepartmentTimezoneTest.test_should_return_paris_as_default_timezone": ["pcapi.utils.date.get_department_timezone"], "tests.utils.date_test.GetDepartmentTimezoneTest.test_should_return_custom_timezones": ["pcapi.utils.date.get_department_timezone"], "tests.utils.date_test.GetPostalCodeTimezoneTest.test_should_return_paris_as_default_timezone": ["pcapi.utils.date.get_postal_code_timezone"], "tests.utils.date_test.GetPostalCodeTimezoneTest.test_should_return_custom_timezones": ["pcapi.utils.date.get_postal_code_timezone"], "tests.utils.date_test.FrenchParserInfoTest.test_parse_french_date": ["pcapi.utils.date.FrenchParserInfo"], "src.pcapi.utils.sentry.init_sentry_sdk": ["sentry_sdk.integrations.flask.FlaskIntegration", "sentry_sdk.integrations.redis.RedisIntegration", "sentry_sdk.integrations.rq.RqIntegration", "sentry_sdk.integrations.sqlalchemy.SqlalchemyIntegration", "pcapi.utils.health_checker.read_version_from_file"], "sentry_sdk.integrations.flask.FlaskIntegration": [], "sentry_sdk.integrations.redis.RedisIntegration": [], "sentry_sdk.integrations.rq.RqIntegration": [], "sentry_sdk.integrations.sqlalchemy.SqlalchemyIntegration": [], "pcapi.utils.health_checker.read_version_from_file": [], "src.pcapi.scheduled_tasks.algolia_clock.algolia_clock": ["sentry_sdk.set_tag", "apscheduler.schedulers.blocking.BlockingScheduler"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_pro_users.create_industrial_pro_users": ["<map>.values", "<builtin>.enumerate", "<builtin>.list", "<builtin>.range", "<builtin>.str", "<builtin>.len", "pcapi.core.offers.factories.UserOffererFactory"], "tests.domain.admin_emails_test.test_maybe_send_offerer_validation_email_sends_email_to_pass_culture_when_objects_to_validate": ["pcapi.domain.admin_emails.maybe_send_offerer_validation_email", "pcapi.core.offers.factories.OffererFactory", "unittest.mock.MagicMock", "<builtin>.len", "pcapi.core.offers.factories.UserOffererFactory"], "tests.domain.admin_emails_test.test_maybe_send_offerer_validation_email_does_not_send_email_if_all_validated": ["pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.offers.factories.OffererFactory", "pcapi.domain.admin_emails.maybe_send_offerer_validation_email"], "tests.domain.admin_emails_test.test_send_payment_details_email_sends_email_to_pass_culture": ["pcapi.domain.admin_emails.send_payment_details_email", "<builtin>.len"], "tests.domain.admin_emails_test.test_send_wallet_balances_email_sends_email_to_recipients": ["pcapi.domain.admin_emails.send_wallet_balances_email", "<builtin>.len"], "tests.domain.admin_emails_test.test_send_payments_report_email_sends_email_to_recipients": ["pcapi.domain.admin_emails.send_payments_report_emails", "<builtin>.len"], "tests.domain.admin_emails_test.SendOfferCreationNotificationToAdministrationTest.test_when_mailjet_status_code_200_sends_email_to_administration_email": ["pcapi.domain.admin_emails.send_offer_creation_notification_to_administration", "pcapi.core.offers.factories.OfferFactory", "<builtin>.len"], "pcapi.domain.admin_emails.send_offer_creation_notification_to_administration": [], "tests.domain.admin_emails_test.SendOfferCreationRefusalNotificationToAdministrationTest.test_when_mailjet_status_code_200_sends_email_to_administration_email": ["pcapi.core.offers.factories.OfferFactory", "pcapi.domain.admin_emails.send_offer_rejection_notification_to_administration", "<builtin>.len"], "pcapi.domain.admin_emails.send_offer_rejection_notification_to_administration": [], "tests.domain.admin_emails_test.SendOfferNotificationToAdministrationTest.test_send_refusal_notification": ["pcapi.domain.admin_emails.send_offer_validation_notification_to_administration", "pcapi.core.offers.factories.OfferFactory", "<builtin>.len"], "tests.domain.admin_emails_test.SendOfferNotificationToAdministrationTest.test_send_approval_notification_failure": ["pcapi.domain.admin_emails.send_offer_validation_notification_to_administration", "pcapi.core.offers.factories.OfferFactory", "<builtin>.len"], "tests.domain.admin_emails_test.SendOfferNotificationToAdministrationTest.test_send_approval_notification_success": ["pcapi.domain.admin_emails.send_offer_validation_notification_to_administration", "pcapi.core.offers.factories.OfferFactory", "<builtin>.len"], "tests.domain.admin_emails_test.test_send_suspended_fraudulent_users_email": ["pcapi.domain.admin_emails.send_suspended_fraudulent_users_email", "<builtin>.len"], "src.pcapi.domain.offer_report_emails.send_report_notification": ["pcapi.emails.offer_report.build_offer_report_data"], "pcapi.emails.offer_report.build_offer_report_data": [], "src.pcapi.core.search.backends.base.SearchBackend.__str__": ["<builtin>.str"], "src.pcapi.core.search.backends.base.SearchBackend.enqueue_offer_ids": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.enqueue_offer_ids_in_error": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.enqueue_venue_ids_in_error": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.enqueue_venue_ids": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.enqueue_venue_ids_for_offers": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.pop_offer_ids_from_queue": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.pop_venue_ids_for_offers_from_queue": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.count_offers_to_index_from_queue": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.check_offer_is_indexed": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.index_offers": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.index_venues": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.unindex_offer_ids": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.unindex_all_offers": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.unindex_venue_ids": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.unindex_all_venues": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.pop_venue_ids_from_queue": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.serialize_offer": ["<builtin>.NotImplementedError"], "src.pcapi.core.search.backends.base.SearchBackend.serialize_venue": ["<builtin>.NotImplementedError"], "tests.routes.adage.v1.get_venues_from_siret_test.Returns200Test.test_get_venues_from_siret": ["<builtin>.float"], "src.pcapi.core.subscription.exceptions.DMSParsingError.__init__": ["<builtin>.super"], "tests.notifications.push.backends.batch_test.BatchPushNotificationClientTest.test_update_user_attributes": ["pcapi.notifications.push.backends.batch.BatchBackend"], "pcapi.notifications.push.backends.batch.BatchBackend": [], "tests.notifications.push.backends.batch_test.BatchPushNotificationClientTest.test_send_transactional_notification": ["pcapi.notifications.push.backends.batch.BatchBackend", "pcapi.notifications.push.transactional_notifications.TransactionalNotificationMessage", "pcapi.notifications.push.transactional_notifications.TransactionalNotificationData"], "pcapi.notifications.push.transactional_notifications.TransactionalNotificationMessage": [], "pcapi.notifications.push.transactional_notifications.TransactionalNotificationData": [], "tests.models.event_test.test_an_event_is_always_physical_and_cannot_be_digital": ["pcapi.models.product.Product"], "tests.scripts.delete_venue_and_offers_for_venue_id_test.test_delete_venue_and_offers_should_delete_venue_and_offers_with_venue_id": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "<builtin>.all", "pcapi.scripts.delete_venue_and_offers_for_venue_id.delete_venue_and_offers_for_venue_id", "pcapi.model_creators.generic_creators.create_venue", "pcapi.utils.human_ids.humanize"], "pcapi.scripts.delete_venue_and_offers_for_venue_id.delete_venue_and_offers_for_venue_id": [], "tests.scripts.delete_venue_and_offers_for_venue_id_test.test_delete_venue_and_offers_should_raise_an_attribute_error_when_at_least_one_offer_has_stocks": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_stock", "pcapi.scripts.delete_venue_and_offers_for_venue_id.delete_venue_and_offers_for_venue_id", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.str", "pcapi.utils.human_ids.humanize"], "src.pcapi.scripts.booking.correct_bookings_cancel_dates.run": ["append", "<builtin>.list", "<builtin>.range", "<builtin>.len", "<builtin>.open"], "tests.scripts.correct_bookings_cancel_dates_test.CorrectBookingCancelDatesFromFileTest.test_should_correct_booking_cancel_dates_in_csv": ["pcapi.core.bookings.factories.BookingFactory", "<builtin>.len"], "tests.scripts.payment.batch_steps_test.test_send_transactions_should_send_an_email_with_xml_and_csv_attachments": ["pcapi.scripts.payment.batch_steps.send_transactions", "<builtin>.len"], "tests.scripts.payment.batch_steps_test.test_send_transactions_creates_a_new_payment_transaction_if_email_was_sent_properly": ["pcapi.scripts.payment.batch_steps.send_transactions", "<builtin>.len"], "tests.scripts.payment.batch_steps_test.test_send_transactions_set_status_to_under_review": ["pcapi.scripts.payment.batch_steps.send_transactions", "<builtin>.len"], "tests.scripts.payment.batch_steps_test.test_send_transactions_set_status_to_under_review_even_on_email_error": ["pcapi.scripts.payment.batch_steps.send_transactions", "<builtin>.len"], "tests.scripts.payment.batch_steps_test.test_send_transactions_with_malformed_iban": ["pcapi.scripts.payment.batch_steps.send_transactions", "<builtin>.str"], "tests.scripts.payment.batch_steps_test.test_send_payments_details_sends_a_csv_attachment": ["<builtin>.len", "pcapi.scripts.payment.batch_steps.send_payments_details"], "tests.scripts.payment.batch_steps_test.test_send_payment_details_does_not_send_anything_if_all_payment_have_error_status": ["pcapi.scripts.payment.batch_steps.send_payments_details"], "tests.scripts.payment.batch_steps_test.test_send_wallet_balances_sends_a_csv_attachment": ["pcapi.scripts.payment.batch_steps.send_wallet_balances", "<builtin>.len"], "tests.scripts.payment.batch_steps_test.test_send_payments_report_sends_one_csv_attachment_if_some_payments_are_not_processable": ["<builtin>.len", "pcapi.scripts.payment.batch_steps.send_payments_report"], "tests.scripts.payment.batch_steps_test.SetNotProcessablePaymentsWithBankInformationToRetryTest.test_should_set_not_processable_payments_to_retry_and_update_payments_bic_and_iban_using_offerer_information": ["pcapi.scripts.payment.batch_steps.set_not_processable_payments_with_bank_information_to_retry"], "tests.scripts.payment.batch_steps_test.SetNotProcessablePaymentsWithBankInformationToRetryTest.test_should_not_set_not_processable_payments_to_retry_when_bank_information_status_is_not_accepted": ["pcapi.scripts.payment.batch_steps.set_not_processable_payments_with_bank_information_to_retry"], "tests.scripts.payment.batch_steps_test.SetNotProcessablePaymentsWithBankInformationToRetryTest.test_should_set_not_processable_payments_to_retry_and_update_payments_bic_and_iban_using_venue_information": ["pcapi.scripts.payment.batch_steps.set_not_processable_payments_with_bank_information_to_retry"], "tests.scripts.payment.batch_steps_test.test_get_venues_to_reimburse": ["pcapi.scripts.payment.batch_steps.get_venues_to_reimburse", "<builtin>.set", "<builtin>.len"], "pcapi.scripts.payment.batch_steps.get_venues_to_reimburse": [], "src.pcapi.core.reference.models.ReferenceScheme.increment_after_use": ["<builtin>.isinstance"], "src.pcapi.scripts.offerer.delete_cascade_venue_by_id.delete_cascade_venue_by_id": ["pcapi.core.bookings.exceptions.CannotDeleteVenueWithBookingsException"], "pcapi.core.bookings.exceptions.CannotDeleteVenueWithBookingsException": [], "tests.domain.user_emails_test.SendActivationEmailTest.test_send_activation_email": ["pcapi.domain.user_emails.send_activation_email", "<builtin>.len"], "tests.domain.user_emails_test.SendWithdrawalTermsToNewlyValidatedOffererTest.test_send_withdrawal_terms_to_newly_validated_offerer": ["pcapi.domain.user_emails.send_withdrawal_terms_to_newly_validated_offerer", "pcapi.core.offers.factories.UserOffererFactory", "<builtin>.len"], "pcapi.domain.user_emails.send_withdrawal_terms_to_newly_validated_offerer": [], "tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest.InitTest.test_should_call_titelive_ftp_to_get_files_list": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.local_providers.TiteLiveThingDescriptions"], "pcapi.local_providers.TiteLiveThingDescriptions": [], "tests.local_providers.titelive_descriptions_test.TiteLiveThingDescriptionsTest.NextTest.test_should_iterate_over_2_zip_files": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.local_providers.TiteLiveThingDescriptions", "tests.local_providers.titelive_descriptions_test.MockZipFile.__init__"], "tests.local_providers.titelive_descriptions_test.MockZipFile.__init__": [], "src.pcapi.core.object_storage.backends.ovh.OVHBackend.store_public_object": ["src.pcapi.core.object_storage.backends.ovh.OVHBackend.swift_con"], "src.pcapi.core.object_storage.backends.ovh.OVHBackend.swift_con": [], "src.pcapi.core.object_storage.backends.ovh.OVHBackend.delete_public_object": ["src.pcapi.core.object_storage.backends.ovh.OVHBackend.swift_con"], "src.pcapi.core.object_storage.backends.ovh.OVHBackend.get_container": ["src.pcapi.core.object_storage.backends.ovh.OVHBackend.swift_con"], "tests.scripts.educational.update_educational_institutions_deposits_test.UpdateEducationalInstitutionsDepositsTest.test_update_educational_institutions_deposits": ["datetime.datetime", "<builtin>.len", "pcapi.scripts.educational.update_educational_institutions_deposits.update_educational_institutions_deposits"], "pcapi.scripts.educational.update_educational_institutions_deposits.update_educational_institutions_deposits": [], "tests.scripts.educational.update_educational_institutions_deposits_test.UpdateEducationalInstitutionsDepositsTest.test_update_institutions_deposits_with_institution_missing_ceases_execution": ["datetime.datetime", "pcapi.scripts.educational.update_educational_institutions_deposits._process_educational_csv", "decimal.Decimal"], "pcapi.scripts.educational.update_educational_institutions_deposits._process_educational_csv": [], "tests.scripts.educational.update_educational_institutions_deposits_test.UpdateEducationalInstitutionsDepositsTest.test_update_institutions_deposits_with_institution_deposit_missing_ceases_execution": ["datetime.datetime", "pcapi.scripts.educational.update_educational_institutions_deposits._process_educational_csv", "decimal.Decimal"], "tests.scripts.educational.update_educational_institutions_deposits_test.UpdateEducationalInstitutionsDepositsTest.test_update_institutions_deposits_with_educational_year_missing_ceases_execution": ["datetime.datetime", "pcapi.scripts.educational.update_educational_institutions_deposits.update_educational_institutions_deposits"], "tests.scripts.educational.update_educational_institutions_deposits_test.UpdateEducationalInstitutionsDepositsTest.test_stop_execution_when_csv_is_invalid": ["datetime.datetime", "pcapi.scripts.educational.update_educational_institutions_deposits.update_educational_institutions_deposits"], "src.pcapi.admin.widgets.AutocompleteSelectWidget.__init__": ["<builtin>.super"], "src.pcapi.admin.widgets.DateInputWithConstraint.__init__": ["<builtin>.super"], "src.pcapi.admin.widgets.DateInputWithConstraint.__call__": ["<builtin>.super", "<builtin>.callable"], "src.pcapi.admin.widgets.SelectWithOptgroups.__call__": ["<builtin>.getattr"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_institution.get_education_booking_cancellation_by_institution_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_institution.send_education_booking_cancellation_by_institution_email": ["src.pcapi.core.mails.transactional.bookings.booking_cancellation_by_institution.get_education_booking_cancellation_by_institution_email_data"], "tests.routes.pro.patch_booking_by_token_test.Returns204Test.WhenUserIsAnonymousTest.expect_booking_to_be_used": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_booking_by_token_test.Returns400Test.WhenUserIsAnonymousTest.when_email_is_missing": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_booking_by_token_test.Returns404Test.WhenUserIsAnonymousTest.when_booking_does_not_exist": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_booking_by_token_test.Returns404Test.WhenUserIsLoggedInTest.when_user_is_not_editor_and_offer_id_is_invalid": ["pcapi.utils.human_ids.humanize"], "tests.scripts.beneficiary.delete_or_suspend_account_from_file_test.test_delete_user_when_she_has_no_deposit": ["pcapi.scripts.beneficiary.delete_or_suspend_account_from_file.suspend_or_delete_from_file"], "pcapi.scripts.beneficiary.delete_or_suspend_account_from_file.suspend_or_delete_from_file": [], "tests.scripts.beneficiary.delete_or_suspend_account_from_file_test.test_suspend_user_when_he_has_deposit": ["pcapi.scripts.beneficiary.delete_or_suspend_account_from_file.suspend_or_delete_from_file"], "src.pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers": ["<builtin>.enumerate", "<builtin>.print", "src.pcapi.scripts.suspend_fraudulent_pro_users._suspend_fraudulent_pro_users", "pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id", "<builtin>.len", "extend"], "src.pcapi.scripts.suspend_fraudulent_pro_users._suspend_fraudulent_pro_users": ["pcapi.core.users.api.suspend_account"], "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.test_should_update_venue": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "tests.conftest.TestClient.patch", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.test_edit_venue_booking_email_with_applied_on_all_offers": ["tests.conftest.TestClient.__init__", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "tests.conftest.TestClient.with_session_auth", "tests.conftest.TestClient.patch", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.test_edit_venue_withdrawal_details_with_applied_on_all_offers": ["tests.conftest.TestClient.__init__", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "tests.conftest.TestClient.with_session_auth", "tests.conftest.TestClient.patch", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.test_edit_venue_accessibility_with_applied_on_all_offers": ["tests.conftest.TestClient.__init__", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "tests.conftest.TestClient.with_session_auth", "tests.conftest.TestClient.patch", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.when_siret_does_not_change": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "tests.conftest.TestClient.patch", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.test_add_business_unit_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "pcapi.core.finance.factories.BusinessUnitFactory", "tests.conftest.TestClient.patch", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.test_remove_business_unit_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "tests.conftest.TestClient.patch", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.Returns200Test.test_error_add_business_unit_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.patch_venue_test.populate_missing_data_from_venue", "pcapi.core.finance.factories.BusinessUnitFactory", "tests.conftest.TestClient.patch", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_venue_test.test_update_venue_malformed": ["pcapi.utils.human_ids.humanize"], "tests.core.bookings.test_repository.test_find_not_cancelled_bookings_by_stock": ["<builtin>.set"], "tests.core.bookings.test_repository.FindPaymentEligibleBookingsForVenueTest.test_basics": ["datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindPaymentEligibleBookingsForVenueTest.test_cutoff_date": ["datetime.timedelta"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_only_expected_booking_attributes": ["datetime.datetime", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_only_validated_bookings_for_requested_period": ["datetime.datetime", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_only_reimbursed_bookings_for_requested_period": ["datetime.datetime", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_booking_as_duo_when_quantity_is_two": ["<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_not_duplicate_bookings_when_user_is_admin_and_bookings_offerer_has_multiple_user": ["<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_event_booking_when_booking_is_on_an_event": ["<builtin>.isinstance", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_event_confirmed_booking_when_booking_is_on_an_event_in_confirmation_period": ["<builtin>.isinstance", "datetime.timedelta"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_cancellation_date_when_booking_has_been_cancelled": ["datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_validation_date_when_booking_has_been_used_and_not_cancelled_not_reimbursed": ["datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_correct_number_of_matching_offerers_bookings_linked_to_user": ["<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_bookings_from_first_page": ["datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_not_return_bookings_when_offerer_link_is_not_validated": ["<builtin>.dict"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_one_booking_recap_item_when_quantity_booked_is_one": ["<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_two_booking_recap_items_when_quantity_booked_is_two": ["<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_booking_date_with_offerer_timezone_when_venue_is_digital": ["datetime.datetime", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_booking_isbn_when_information_is_available": ["datetime.datetime", "datetime.timedelta", "<builtin>.dict"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_only_booking_for_requested_venue": ["<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_only_booking_for_requested_event_date": ["datetime.datetime", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.should_consider_venue_locale_datetime_when_filtering_by_event_date": ["datetime.datetime", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_only_bookings_for_requested_booking_period": ["pcapi.utils.date.utc_datetime_to_department_timezone", "datetime.datetime", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.should_consider_venue_locale_datetime_when_filtering_by_booking_period": ["datetime.datetime", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_set_educational_booking_confirmation_date_in_history": ["<builtin>.isinstance", "datetime.datetime", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_set_booking_recap_pending_in_history": ["<builtin>.isinstance", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_token_as_none_when_educational_booking": ["<builtin>.len"], "tests.core.bookings.test_repository.FindByProUserTest.test_should_return_only_bookings_for_requested_offer_type": ["<builtin>.len"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_only_expected_booking_attributes": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len", "<builtin>.str", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_not_return_token_for_non_used_goods": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len", "<builtin>.str", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_only_validated_bookings_for_requested_period": ["io.StringIO", "<builtin>.print", "datetime.datetime", "<builtin>.len", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_only_reimbursed_bookings_for_requested_period": ["datetime.datetime", "datetime.timedelta", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_booking_as_duo_when_quantity_is_two": ["<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_not_duplicate_bookings_when_user_is_admin_and_bookings_offerer_has_multiple_user": ["<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_event_booking_when_booking_is_on_an_event": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "<builtin>.len", "<builtin>.str", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_event_confirmed_booking_when_booking_is_on_an_event_in_confirmation_period": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "<builtin>.len", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_cancelled_status_when_booking_has_been_cancelled": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "<builtin>.len", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_validation_date_when_booking_has_been_used_and_not_cancelled_not_reimbursed": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "<builtin>.len", "<builtin>.str", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_correct_number_of_matching_offerers_bookings_linked_to_user": ["<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_not_return_bookings_when_offerer_link_is_not_validated": ["<builtin>.dict", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_booking_date_with_offerer_timezone_when_venue_is_digital": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len", "<builtin>.str", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_booking_isbn_when_information_is_available": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_booking_with_venue_name_when_public_name_is_not_provided": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "<builtin>.len", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_booking_with_venue_public_name_when_public_name_is_provided": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "<builtin>.len", "datetime.timedelta"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_only_booking_for_requested_venue": ["<builtin>.dict", "<builtin>.zip", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_only_booking_for_requested_event_date": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len"], "tests.core.bookings.test_repository.GetCsvReportTest.should_consider_venue_locale_datetime_when_filtering_by_event_date": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len", "<builtin>.sorted"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_only_bookings_for_requested_booking_period": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len", "<builtin>.str"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_consider_venue_locale_datetime_when_filtering_by_booking_period": ["io.StringIO", "<builtin>.dict", "<builtin>.zip", "datetime.datetime", "<builtin>.len", "<builtin>.sorted"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_output_the_correct_offer_type_depending_wether_offer_educational_or_not": ["<builtin>.dict", "<builtin>.zip", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_not_return_token_for_educational_bookings": ["<builtin>.dict", "<builtin>.zip", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.test_should_return_only_bookings_for_requested_offer_type": ["<builtin>.dict", "<builtin>.zip", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest.test_should_output_the_correct_status_for_individual_bookings_before_cancellationLimitDate": ["<builtin>.sorted", "datetime.timedelta", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest.test_should_output_the_correct_status_for_individual_bookings_things_after_cancellationLimitDate": ["<builtin>.sorted", "datetime.timedelta", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest.test_should_output_the_correct_status_for_individual_bookings_events_after_cancellationLimitDate": ["<builtin>.sorted", "datetime.timedelta", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest.test_should_output_the_correct_status_for_eac_bookings_before_cancellationLimitDate": ["<builtin>.sorted", "datetime.timedelta", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest.test_should_output_the_correct_status_for_eac_bookings_after_cancellationLimitDate_but_before_event": ["<builtin>.sorted", "datetime.timedelta", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.GetCsvReportTest.BookingStatusInCsvReportTest.test_should_output_the_correct_status_for_eac_bookings_after_cancellationLimitDate_and_after_event": ["<builtin>.sorted", "datetime.timedelta", "<builtin>.len", "io.StringIO"], "tests.core.bookings.test_repository.FindSoonToBeExpiredBookingsTest.test_should_return_only_soon_to_be_expired_individual_bookings": ["datetime.time", "datetime.timedelta"], "tests.core.bookings.test_repository.FindSoonToBeExpiredBookingsTest.test_should_return_only_soon_to_be_expired_bookings_books_case": ["datetime.time", "datetime.timedelta"], "tests.core.bookings.test_repository.GetLegacyActiveBookingsQuantityForVenueTest.test_excludes_confirmed_used_or_cancelled_bookings": ["datetime.timedelta"], "tests.core.bookings.test_repository.GetLegacyValidatedBookingsQuantityForVenueTest.test_return_confirmed_bookings_quantity_for_venue": ["datetime.timedelta"], "tests.core.bookings.test_repository.GetOffersBookedByFraudulentUsersTest.test_returns_only_offers_booked_by_fraudulent_users": ["<builtin>.set", "<builtin>.len"], "tests.core.bookings.test_repository.FindBookingsByFraudulentUsersTest.test_returns_only_bookings_by_fraudulent_users": ["<builtin>.set", "<builtin>.len"], "tests.core.bookings.test_repository.FindExpiringBookingsTest.test_find_expired_bookings_before_and_after_enabling_feature_flag": ["freezegun.freeze_time", "<builtin>.set"], "tests.core.bookings.test_repository.test_get_deposit_booking": ["dateutil.relativedelta.relativedelta", "freezegun.freeze_time", "<builtin>.set", "pcapi.core.testing.assert_num_queries", "pcapi.core.payments.api.create_deposit"], "pcapi.core.payments.api.create_deposit": [], "tests.core.bookings.test_repository.SoonExpiringBookingsTest.test_get_soon_expiring_bookings": ["datetime.timedelta", "<builtin>.set"], "tests.core.bookings.test_repository.SoonExpiringBookingsTest.test_no_unexpected_queries": ["pcapi.core.testing.assert_num_queries"], "src.pcapi.domain.demarches_simplifiees.get_offerer_bank_information_application_details_by_application_id": ["pcapi.domain.bank_account.format_raw_iban_and_bic", "<builtin>.int", "src.pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state", "src.pcapi.domain.demarches_simplifiees._find_value_in_fields", "src.pcapi.domain.demarches_simplifiees.ApplicationDetail.__init__"], "src.pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state": ["<builtin>.ValueError", "pcapi.domain.bank_information.CannotRegisterBankInformation"], "src.pcapi.domain.demarches_simplifiees._find_value_in_fields": [], "src.pcapi.domain.demarches_simplifiees.ApplicationDetail.__init__": [], "src.pcapi.domain.demarches_simplifiees.get_venue_bank_information_application_details_by_application_id": ["pcapi.domain.bank_account.format_raw_iban_and_bic", "<builtin>.int", "src.pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state_v2", "src.pcapi.domain.demarches_simplifiees.parse_raw_bic_data", "src.pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state", "<builtin>.ValueError", "src.pcapi.domain.demarches_simplifiees._find_value_in_fields", "src.pcapi.domain.demarches_simplifiees.ApplicationDetail.__init__"], "src.pcapi.domain.demarches_simplifiees.parse_raw_bic_data": [], "src.pcapi.domain.demarches_simplifiees._get_status_from_demarches_simplifiees_application_state_v2": [], "tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test.BookingCancellationConfirmationByProEmailData.test_should_return_email_data_with_correct_information_when_offer_is_an_event": ["datetime.datetime", "pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.get_booking_cancellation_confirmation_by_pro_email_data"], "pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.get_booking_cancellation_confirmation_by_pro_email_data": [], "tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test.BookingCancellationConfirmationByProEmailData.test_should_return_email_data_when_multiple_bookings_and_offer_is_a_thing": ["pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.get_booking_cancellation_confirmation_by_pro_email_data"], "tests.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro_test.SendOffererBookingsRecapEmailAfterOffererCancellationTest.test_sends_to_offerer_administration": ["dataclasses.asdict", "pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.send_booking_cancellation_confirmation_by_pro_email", "<builtin>.len"], "src.pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code.fill_pro_department_code_with_offerer_postal_code": ["src.pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code._get_user_initial_linked_offerer", "sqlalchemy.orm.joinedload", "pcapi.domain.postal_code.postal_code.PostalCode"], "src.pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code._get_user_initial_linked_offerer": ["<builtin>.sorted"], "src.pcapi.domain.payments.UnmatchedPayments.__init__": ["<builtin>.super"], "src.pcapi.domain.payments.PaymentDetails.__init__": ["src.pcapi.domain.payments._get_booking_type", "pcapi.utils.human_ids.humanize", "decimal.Decimal"], "src.pcapi.domain.payments._get_booking_type": [], "src.pcapi.domain.payments.PaymentDetails.as_csv_row": ["<builtin>.str"], "src.pcapi.domain.payments.create_payment_for_booking": ["<builtin>.isinstance", "pcapi.domain.bank_account.format_raw_iban_and_bic", "src.pcapi.domain.payments.make_transaction_label", "pcapi.models.payment.Payment"], "src.pcapi.domain.payments.make_transaction_label": [], "src.pcapi.domain.payments.filter_out_already_paid_for_bookings": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.domain.payments.filter_out_bookings_without_cost": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.domain.payments.keep_only_not_processable_payments": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.domain.payments.generate_venues_csv": ["pcapi.utils.human_ids.humanize", "io.StringIO"], "src.pcapi.domain.payments.generate_message_file": ["flask.render_template", "src.pcapi.domain.payments._set_end_to_end_id_and_group_into_transactions", "<builtin>.len", "datetime.timedelta", "<builtin>.sum"], "src.pcapi.domain.payments._set_end_to_end_id_and_group_into_transactions": ["<builtin>.sorted"], "src.pcapi.domain.payments.validate_message_file_structure": ["io.BytesIO", "flask.render_template"], "src.pcapi.domain.payments.generate_payment_details_csv": ["src.pcapi.domain.payments.PaymentDetails.as_csv_row", "src.pcapi.domain.payments.PaymentDetails.__init__", "io.StringIO"], "src.pcapi.domain.payments.generate_wallet_balances_csv": ["io.StringIO"], "src.pcapi.domain.payments.apply_banishment": ["src.pcapi.domain.payments.UnmatchedPayments.__init__", "<builtin>.set"], "src.pcapi.admin.custom_views.mixins.suspension_mixin._action_links": ["<builtin>.dict", "src.pcapi.admin.custom_views.mixins.suspension_mixin._allow_suspension_and_unsuspension", "markupsafe.Markup", "flask.url_for"], "src.pcapi.admin.custom_views.mixins.suspension_mixin._allow_suspension_and_unsuspension": [], "src.pcapi.admin.custom_views.mixins.suspension_mixin.beneficiary_suspension_history_formatter": ["markupsafe.Markup", "<builtin>.dict"], "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionMixin.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionMixin.user_list_url": ["flask.url_for"], "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionMixin.action_bulk_edit": ["src.pcapi.admin.custom_views.mixins.suspension_mixin._allow_suspension_and_unsuspension", "flask.flash", "flask.redirect", "werkzeug.exceptions.Forbidden"], "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionMixin.suspend_user_view": ["src.pcapi.admin.custom_views.mixins.suspension_mixin._allow_suspension_and_unsuspension", "flask.flash", "flask.redirect", "werkzeug.exceptions.Forbidden"], "src.pcapi.admin.custom_views.mixins.suspension_mixin.SuspensionMixin.unsuspend_user_view": ["src.pcapi.admin.custom_views.mixins.suspension_mixin._allow_suspension_and_unsuspension", "flask.flash", "flask.redirect", "werkzeug.exceptions.Forbidden"], "src.pcapi.serialization.decorator._make_json_response": ["flask.make_response", "pcapi.models.api_errors.ApiErrors"], "flask.make_response": [], "src.pcapi.serialization.decorator._make_string_response": ["flask.make_response", "pcapi.models.api_errors.ApiErrors"], "tests.core.providers.connect_provider_to_venue_test.test_when_venue_id_at_offer_provider_is_given": ["pcapi.core.offers.factories.VenueFactory", "pcapi.core.providers.api.connect_venue_to_provider"], "pcapi.core.providers.api.connect_venue_to_provider": [], "tests.core.providers.connect_provider_to_venue_test.test_use_siret_as_default": ["pcapi.core.offers.factories.VenueFactory", "pcapi.core.providers.api.connect_venue_to_provider"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderImplementsProviderAPITest.setup_class": ["unittest.mock.MagicMock"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderImplementsProviderAPITest.should_connect_venue_when_synchronization_is_allowed": ["pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock", "pcapi.model_creators.generic_creators.create_venue", "pcapi.core.providers.api.connect_venue_to_provider"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderImplementsProviderAPITest.should_not_connect_venue_when_synchronization_is_not_allowed": ["pcapi.model_creators.generic_creators.create_offerer", "unittest.mock.MagicMock", "pcapi.model_creators.generic_creators.create_venue"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderImplementsProviderAPITest.should_not_connect_venue_when_venue_has_no_siret": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderIsSomethingElseTest.setup_class": ["unittest.mock.MagicMock"], "tests.core.providers.connect_provider_to_venue_test.WhenProviderIsSomethingElseTest.should_raise_an_error": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_provider", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapConfirmedHistory.__init__": ["<builtin>.super"], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapValidatedHistory.__init__": ["<builtin>.super"], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapReimbursedHistory.__init__": ["<builtin>.super"], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapCancelledHistory.__init__": ["<builtin>.super"], "src.pcapi.domain.booking_recap.booking_recap_history.BookingRecapPendingHistory.__init__": ["<builtin>.super"], "src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.bulk_update_is_synchronization_compatible_via_isbns": ["append", "src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.process_batch", "<builtin>.print", "<builtin>.len"], "src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.process_batch": [], "src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.bulk_mark_synchronization_compatible_product_from_path": ["src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.bulk_update_is_synchronization_compatible_via_isbns", "<builtin>.open"], "src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.bulk_mark_not_synchronization_compatible_product_from_path": ["src.pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.bulk_update_is_synchronization_compatible_via_isbns", "<builtin>.open"], "src.pcapi.core.offerers.validation.check_existing_business_unit": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.offerers.validation.validate_coordinates": ["pcapi.models.api_errors.ApiErrors", "src.pcapi.core.offerers.validation._validate_latitude", "src.pcapi.core.offerers.validation._validate_longitude"], "src.pcapi.core.offerers.validation._validate_latitude": ["decimal.Decimal"], "src.pcapi.core.offerers.validation._validate_longitude": ["decimal.Decimal"], "src.pcapi.core.offerers.validation.check_venue_creation": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors", "src.pcapi.core.offerers.validation.check_existing_business_unit"], "src.pcapi.core.offerers.validation.check_venue_edition": ["pcapi.models.api_errors.ApiErrors", "src.pcapi.core.offerers.validation.check_existing_business_unit"], "src.pcapi.sandboxes.scripts.creators.industrial.utils.get_occurrence_short_name": ["<builtin>.len"], "src.pcapi.sandboxes.scripts.creators.industrial.utils.get_price_by_short_name": ["<builtin>.map", "<builtin>.sum"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_search_booking": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_show_mark_as_used_button": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_uncancel_and_mark_as_used": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_fail_to_uncancel_and_mark_as_used": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_uncancel_and_mark_as_used_educational_booking": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_can_not_cancel_refunded_booking": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_cant_cancel_cancelled_booking": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.booking_view_test.BookingViewTest.test_cancel_used_booking_without_payment": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.admin.custom_views.many_offers_operations_view._is_isbn_valid": ["src.pcapi.admin.custom_views.many_offers_operations_view._format_isbn", "<builtin>.len"], "src.pcapi.admin.custom_views.many_offers_operations_view._format_isbn": [], "src.pcapi.admin.custom_views.many_offers_operations_view._get_products_compatible_status": ["<builtin>.all"], "src.pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView.search": ["flask.helpers.url_for", "flask.redirect", "src.pcapi.admin.custom_views.many_offers_operations_view._is_isbn_valid", "flask.helpers.flash", "src.pcapi.admin.custom_views.many_offers_operations_view._format_isbn"], "src.pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView.edit": ["flask.helpers.url_for", "src.pcapi.admin.custom_views.many_offers_operations_view._get_current_criteria_on_active_offers", "append", "src.pcapi.admin.custom_views.many_offers_operations_view._get_product_type", "flask.redirect", "src.pcapi.admin.custom_views.many_offers_operations_view._get_products_compatible_status", "flask.helpers.flash", "<builtin>.list", "<builtin>.len", "sqlalchemy.orm.joinedload"], "src.pcapi.admin.custom_views.many_offers_operations_view._get_current_criteria_on_active_offers": [], "src.pcapi.admin.custom_views.many_offers_operations_view._get_product_type": [], "src.pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView.add_criteria_to_offers": ["flask.helpers.url_for", "src.pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView.add_criteria_to_offers", "flask.redirect", "flask.helpers.flash"], "src.pcapi.admin.custom_views.many_offers_operations_view.ManyOffersOperationsView.product_gcu_compatibility": ["flask.helpers.url_for", "flask.redirect", "flask.helpers.flash", "pcapi.core.offers.api.deactivate_inappropriate_products"], "pcapi.core.offers.api.deactivate_inappropriate_products": [], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_create_1_thing_from_one_data_line_in_one_file": ["<builtin>.list", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.providers.api.activate_provider"], "pcapi.local_providers.TiteLiveThings": [], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_does_not_create_product_when_product_is_a_school_book": ["<builtin>.list", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.providers.api.activate_provider"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_update_1_thing_from_one_data_line_in_one_file": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.core.providers.api.activate_provider", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "<builtin>.list", "datetime.datetime"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_does_not_create_thing_when_no_files_found": ["<builtin>.list", "pcapi.local_providers.TiteLiveThings", "pcapi.core.providers.api.activate_provider"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_does_not_create_thing_when_missing_columns_in_data_line": ["<builtin>.list", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.providers.api.activate_provider"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_does_not_create_thing_when_too_many_columns_in_data_line": ["<builtin>.list", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.providers.api.activate_provider"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_should_not_create_product_when_school_related_product": ["<builtin>.list", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.providers.api.activate_provider"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_should_delete_product_when_reference_changes_to_school_related_product": ["pcapi.core.providers.api.activate_provider", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "<builtin>.list", "datetime.datetime"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_should_delete_product_when_non_valid_product_type": ["pcapi.core.providers.api.activate_provider", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "<builtin>.list", "datetime.datetime"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_should_log_error_when_trying_to_delete_product_with_associated_bookings": ["datetime.datetime", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.providers.api.activate_provider"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_should_not_create_product_when_product_is_paper_press": ["pcapi.core.providers.api.activate_provider", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "<builtin>.list", "<builtin>.len"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_should_delete_product_when_it_changes_to_paper_press_product": ["pcapi.core.providers.api.activate_provider", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "<builtin>.list", "datetime.datetime"], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_should_not_delete_product_and_deactivate_associated_offer_when_it_changes_to_paper_press_product": ["pcapi.core.providers.api.activate_provider", "pcapi.core.offers.factories.OffererFactory", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.offers.factories.ThingStockFactory", "<builtin>.list", "datetime.datetime", "pcapi.core.offers.factories.ThingProductFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offers.factories.ThingOfferFactory"], "pcapi.core.offers.factories.ThingProductFactory": [], "tests.local_providers.titelive_things_test.TiteliveThingsTest.test_does_not_create_product_with_xxx_mark": ["<builtin>.list", "pcapi.local_providers.TiteLiveThings", "<builtin>.iter", "pcapi.core.providers.api.activate_provider"], "tests.domain.payments_xml_test.GenerateMessageFileTest.test_basics": ["tests.domain.payments_xml_test.find_node", "tests.domain.payments_xml_test.find_all_nodes", "<builtin>.list", "freezegun.freeze_time", "pcapi.domain.payments.validate_message_file_structure"], "tests.domain.payments_xml_test.find_node": ["io.BytesIO"], "tests.domain.payments_xml_test.find_all_nodes": ["io.BytesIO"], "tests.domain.payments_xml_test.test_validate_message_file_structure_raises_on_error": ["pcapi.domain.payments.validate_message_file_structure", "<builtin>.str"], "src.pcapi.core.fraud.factories.JouveContentFactory.<lambda1>": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.fraud.factories.DMSContentFactory.<lambda1>": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.fraud.factories.EduconnectContentFactory.<lambda1>": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.fraud.factories.BeneficiaryFraudCheckFactory.<lambda1>": ["<builtin>.str"], "src.pcapi.core.fraud.factories.BeneficiaryFraudCheckFactory._create": ["<builtin>.isinstance", "<builtin>.super", "<map>.get", "<map>"], "tests.repository.offer_queries_test.FindOffersTest.test_get_offers_by_venue_id_returns_offers_matching_venue_id": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len", "pcapi.repository.offer_queries.get_offers_by_venue_id"], "tests.repository.offer_queries_test.GetOffersByIdsTest.test_should_return_all_existing_offers_when_offer_ids_are_given": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.repository.offer_queries.get_offers_by_ids", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "pcapi.repository.offer_queries.get_offers_by_ids": [], "tests.repository.offer_queries_test.GetPaginatedActiveOfferIdsTest.test_should_return_two_offer_ids_from_first_page_when_limit_is_two_and_two_active_offers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "<builtin>.set", "pcapi.model_creators.generic_creators.create_venue", "pcapi.repository.offer_queries.get_paginated_active_offer_ids"], "pcapi.repository.offer_queries.get_paginated_active_offer_ids": [], "tests.repository.offer_queries_test.GetPaginatedActiveOfferIdsTest.test_should_return_one_offer_id_from_second_page_when_limit_is_1_and_three_active_offers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.repository.offer_queries.get_paginated_active_offer_ids"], "tests.repository.offer_queries_test.GetPaginatedActiveOfferIdsTest.test_should_return_one_offer_id_from_third_page_when_limit_is_1_and_three_active_offers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_venue", "pcapi.repository.offer_queries.get_paginated_active_offer_ids"], "tests.repository.offer_queries_test.GetPaginatedOfferIdsByVenueIdTest.test_should_return_one_offer_id_in_two_offers_from_first_page_when_limit_is_one": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.repository.offer_queries.get_paginated_offer_ids_by_venue_id", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.repository.offer_queries.get_paginated_offer_ids_by_venue_id": [], "tests.repository.offer_queries_test.GetPaginatedOfferIdsByVenueIdTest.test_should_return_one_offer_id_in_two_offers_from_second_page_when_limit_is_one": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.repository.offer_queries.get_paginated_offer_ids_by_venue_id", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.scripts.clean_database.clean": ["<builtin>.print", "<builtin>.vars", "<builtin>.str", "pprint.pprint", "pcapi.repository.clean_database.clean_all_database"], "src.pcapi.routes.native.v1.universal_links.apple_app_site_association": ["flask.jsonify"], "src.pcapi.routes.native.v1.universal_links.asset_links": ["flask.jsonify"], "src.pcapi.sandboxes.scripts.creators.bookings_recap.bookings_recap.save_bookings_recap_sandbox": ["pcapi.core.offers.factories.EventOfferFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory", "pcapi.core.payments.factories.PaymentStatusFactory", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.EventStockFactory", "pcapi.core.offers.factories.ThingStockFactory", "pcapi.core.offers.factories.EventProductFactory", "pcapi.core.offers.factories.ThingProductFactory", "datetime.datetime", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.payments.factories.PaymentFactory", "pcapi.core.bookings.factories.UsedIndividualBookingFactory", "<builtin>.str", "pcapi.core.users.factories.ProFactory", "datetime.timedelta", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.offers.factories.ThingOfferFactory"], "pcapi.core.offers.factories.EventProductFactory": [], "pcapi.core.offers.factories.EventOfferFactory": [], "pcapi.core.payments.factories.PaymentStatusFactory": [], "src.pcapi.workers.worker.log_worker_error": ["pcapi.workers.logger.job_extra_description"], "pcapi.workers.logger.job_extra_description": [], "src.pcapi.workers.worker.log_database_connection_status": ["pcapi.utils.health_checker.check_database_connection"], "pcapi.utils.health_checker.check_database_connection": [], "src.pcapi.workers.worker.run_worker": ["rq.Connection", "src.pcapi.workers.worker.log_redis_connection_status"], "src.pcapi.workers.worker.log_redis_connection_status": [], "rq.Connection": [], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_abort_when_offerer_has_any_bookings": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_managed_venues_offers_and_stocks": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_all_user_attachments_to_deleted_offerer": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_api_key_of_offerer": ["pcapi.core.offerers.factories.ApiKeyFactory", "pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_products_owned_by_offerer": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_bank_informations_of_offerer": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_offers_of_offerer": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id", "<builtin>.sorted"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_business_unit_of_managed_venue": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_bank_informations_of_managed_venue": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_mediations_of_managed_offers": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_favorites_of_managed_offers": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_criterion_attachment_of_managed_offers": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_venue_synchronization_to_provider": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "tests.scripts.offerer.delete_cascade_offerer_by_id_test.test_delete_cascade_offerer_should_remove_venue_synchronization_to_allocine_provider": ["pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id"], "src.pcapi.utils.rate_limiting.get_basic_auth_from_request": ["pcapi.utils.login_manager.get_request_authorization"], "src.pcapi.utils.rate_limiting.ip_rate_limiter": ["<map>.update"], "src.pcapi.utils.rate_limiting.email_rate_limiter": ["<map>.update"], "src.pcapi.utils.rate_limiting.basic_auth_rate_limiter": ["<map>.update"], "tests.core.offers.test_models.OfferDateRangeTest.test_thing_offer": ["pcapi.utils.date.DateTimes"], "tests.core.offers.test_models.OfferDateRangeTest.test_event_offer": ["pcapi.utils.date.DateTimes"], "tests.core.offers.test_models.OfferDateRangeTest.test_single_stock": ["pcapi.utils.date.DateTimes"], "tests.core.offers.test_models.OfferDateRangeTest.test_no_stock": ["pcapi.utils.date.DateTimes"], "tests.core.offers.test_models.OfferDateRangeTest.test_deleted_stock_is_ignored": ["pcapi.utils.date.DateTimes"], "tests.core.offers.test_models.test_queryNotSoftDeleted": ["<builtin>.len"], "src.pcapi.sandboxes.scripts.getters.pro_07_offer.get_existing_pro_validated_user_with_validated_offerer_validated_user_offerer_with_physical_venue": ["pcapi.sandboxes.scripts.utils.helpers.get_venue_helper", "pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper"], "src.pcapi.admin.custom_views.pro_user_view.unique_siren": ["wtforms.validators.ValidationError"], "src.pcapi.admin.custom_views.pro_user_view.filter_email": ["pcapi.core.users.utils.sanitize_email"], "src.pcapi.admin.custom_views.pro_user_view.create_offerer": ["core.offerers.models.Offerer"], "core.offerers.models.Offerer": [], "src.pcapi.admin.custom_views.pro_user_view.create_user_offerer": ["pcapi.models.user_offerer.UserOfferer"], "src.pcapi.admin.custom_views.pro_user_view.ProUserView.get_create_form": ["<builtin>.super", "wtforms.validators.DataRequired", "wtforms.fields.core.StringField"], "src.pcapi.admin.custom_views.pro_user_view.ProUserView.get_edit_form": ["<builtin>.super", "wtforms.validators.DataRequired", "wtforms.fields.core.StringField"], "src.pcapi.admin.custom_views.pro_user_view.ProUserView.on_model_change": ["src.pcapi.admin.custom_views.pro_user_view.create_offerer", "core.users.api.fulfill_account_password", "core.offerers.api.create_digital_venue", "<builtin>.super", "src.pcapi.admin.custom_views.pro_user_view.create_user_offerer"], "core.users.api.fulfill_account_password": [], "core.offerers.api.create_digital_venue": [], "src.pcapi.admin.custom_views.pro_user_view.ProUserView.after_model_change": ["pcapi.core.users.external.update_external_pro", "pcapi.core.mails.transactional.pro.reset_password_to_pro.send_reset_password_link_to_admin_email", "flask.helpers.flash", "pcapi.utils.mailing.build_pc_pro_create_password_link", "<builtin>.super", "core.users.api.create_reset_password_token"], "core.users.api.create_reset_password_token": [], "pcapi.utils.mailing.build_pc_pro_create_password_link": [], "src.pcapi.admin.custom_views.pro_user_view.ProUserView.get_count_query": ["sqlalchemy.sql.expression.distinct"], "tests.scheduled_tasks.clock_test.test_pc_send_tomorrow_events_notifications_only_to_individual_bookings_users": ["<builtin>.all", "<builtin>.set", "<builtin>.len", "datetime.timedelta", "pcapi.scheduled_tasks.clock.pc_send_tomorrow_events_notifications"], "pcapi.scheduled_tasks.clock.pc_send_tomorrow_events_notifications": [], "tests.scheduled_tasks.clock_test.test_pc_notify_users_bookings_not_retrieved": ["datetime.timedelta", "pcapi.scheduled_tasks.clock.pc_notify_users_bookings_not_retrieved", "<builtin>.len"], "pcapi.scheduled_tasks.clock.pc_notify_users_bookings_not_retrieved": [], "tests.routes.native.v1.account_test.AccountTest.test_get_user_profile": ["pcapi.core.bookings.factories.CancelledIndividualBookingFactory", "datetime.datetime", "pcapi.core.bookings.factories.IndividualBookingFactory", "decimal.Decimal", "<builtin>.str", "<map>.update"], "tests.routes.native.v1.account_test.AccountTest.test_get_user_profile_recredit_amount_to_show": ["freezegun.api.freeze_time"], "tests.routes.native.v1.account_test.AccountTest.test_maintenance_message": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.AccountCreationTest.test_account_creation": ["<builtin>.len"], "tests.routes.native.v1.account_test.AccountCreationTest.test_account_creation_with_existing_email_sends_email": ["<builtin>.len"], "tests.routes.native.v1.account_test.AccountCreationTest.test_account_creation_with_unvalidated_email_sends_email": ["<builtin>.len"], "tests.routes.native.v1.account_test.AccountCreationTest.test_too_young_account_creation": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.UserProfileUpdateTest.test_update_user_profile": ["<builtin>.len"], "tests.routes.native.v1.account_test.UserProfileUpdateTest.test_unsubscribe_push_notifications": ["<builtin>.len"], "tests.routes.native.v1.account_test.UserProfileUpdateTest.test_unsubscribe_push_notifications_with_batch": ["unittest.mock.patch"], "tests.routes.native.v1.account_test.UpdateUserEmailTest.test_update_user_email": ["urllib.parse.parse_qs", "urllib.parse.urlparse", "<builtin>.len"], "urllib.parse.urlparse": [], "urllib.parse.parse_qs": [], "tests.routes.native.v1.account_test.UpdateUserEmailTest.test_update_email_too_many_attempts": ["tests.routes.native.v1.account_test.UpdateUserEmailTest.send_two_requests"], "tests.routes.native.v1.account_test.UpdateUserEmailTest.send_two_requests": [], "tests.routes.native.v1.account_test.UpdateUserEmailTest.test_token_exists": ["tests.routes.native.v1.account_test.UpdateUserEmailTest.send_two_requests"], "tests.routes.native.v1.account_test.ValidateEmailTest.test_validate_email": ["tests.routes.native.v1.account_test.ValidateEmailTest.send_request_with_token"], "tests.routes.native.v1.account_test.ValidateEmailTest.send_request_with_token": ["datetime.timedelta", "<builtin>.int"], "tests.routes.native.v1.account_test.ValidateEmailTest.test_email_exists": ["tests.routes.native.v1.account_test.ValidateEmailTest.send_request_with_token"], "tests.routes.native.v1.account_test.ValidateEmailTest.test_email_invalid": ["tests.routes.native.v1.account_test.ValidateEmailTest.send_request_with_token"], "tests.routes.native.v1.account_test.ValidateEmailTest.test_expired_token": ["datetime.timedelta", "tests.routes.native.v1.account_test.ValidateEmailTest.send_request_with_token"], "tests.routes.native.v1.account_test.GetTokenExpirationTest.test_token_expiration": ["<builtin>.abs", "datetime.timedelta"], "tests.routes.native.v1.account_test.CulturalSurveyTest.test_user_finished_the_cultural_survey": ["datetime.datetime", "tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.utils.create_user_and_test_client": ["tests.conftest.TestClient.__init__", "flask_jwt_extended.utils.create_access_token"], "tests.routes.native.v1.account_test.CulturalSurveyTest.test_user_gave_up_the_cultural_survey": ["tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.account_test.CulturalSurveyTest.test_user_fills_again_the_cultural_survey": ["datetime.datetime", "tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.account_test.ResendEmailValidationTest.test_resend_email_validation": ["<builtin>.len"], "tests.routes.native.v1.account_test.ResendEmailValidationTest.test_for_already_validated_email_does_sent_passsword_reset": ["<builtin>.len"], "tests.routes.native.v1.account_test.ShowEligibleCardTest.test_against_different_age": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.ShowEligibleCardTest.test_against_beneficiary": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.ShowEligibleCardTest.test_user_eligible_but_created_after_18": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.SendPhoneValidationCodeTest.test_send_phone_validation_code": ["<builtin>.int", "datetime.timedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.SendPhoneValidationCodeTest.test_send_phone_validation_code_too_many_attempts": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.SendPhoneValidationCodeTest.test_send_phone_validation_code_for_new_validated_duplicated_phone_number": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.SendPhoneValidationCodeTest.test_blocked_phone_number": ["dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_validate_phone_number": ["pcapi.core.users.api.create_phone_validation_token", "<builtin>.int"], "pcapi.core.users.api.create_phone_validation_token": [], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_validate_phone_number_and_become_beneficiary": ["pcapi.core.users.api.create_phone_validation_token"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_validate_phone_number_too_many_attempts": ["pcapi.core.users.api.create_phone_validation_token", "<builtin>.int", "dateutil.relativedelta.relativedelta"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_wrong_code": ["pcapi.core.users.api.create_phone_validation_token"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_expired_code": ["pcapi.core.users.api.create_phone_validation_token", "datetime.timedelta", "freezegun.api.freeze_time"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_blocked_phone_number": ["pcapi.core.users.api.create_phone_validation_token"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_validate_phone_number_with_non_french_number": ["pcapi.core.users.api.create_phone_validation_token"], "tests.routes.native.v1.account_test.ValidatePhoneNumberTest.test_validate_phone_number_with_already_validated_phone": ["pcapi.core.users.api.create_phone_validation_token", "<builtin>.int"], "tests.routes.native.v1.account_test.SuspendAccountTest.test_suspend_account": ["<builtin>.len"], "tests.routes.native.v1.account_test.SuspendAccountTest.test_suspend_suspended_account": ["<builtin>.len"], "tests.routes.native.v1.account_test.ProfilingFraudScoreTest.test_profiling_fraud_score_user_without_birth_date": ["<builtin>.len"], "tests.routes.native.v1.account_test.ProfilingFraudScoreTest.test_fraud_result_on_risky_user_profiling": ["<builtin>.len"], "tests.routes.native.v1.account_test.ProfilingSessionIdTest.test_profiling_session_id": ["<builtin>.set", "<builtin>.range", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request_not_eligible": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request_connection_error": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request_ubble_http_error_status": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request_ubble_second_check_blocked": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request_ubble_second_check_after_first_aborted": ["<builtin>.sorted", "dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request_ubble_retry": ["<builtin>.range", "dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_request_ubble_retry_not_allowed": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.routes.native.v1.account_test.IdentificationSessionTest.test_allow_rerun_identification_from_started": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.core.providers.provider_queries_test.GetEnabledProvidersForProTest.test_get_enabled_providers_for_pro": ["<builtin>.len", "pcapi.core.providers.repository.get_enabled_providers_for_pro"], "tests.core.providers.provider_queries_test.GetProvidersEnabledForProExcludingSpecificProviderTest.test_should_get_actives_and_enabled_providers_for_pro": ["pcapi.core.providers.repository.get_providers_enabled_for_pro_excluding_specific_provider"], "tests.core.providers.provider_queries_test.GetProviderEnabledForProByIdTest.test_should_return_no_provider_when_provider_is_not_active": ["pcapi.model_creators.generic_creators.create_provider", "pcapi.core.providers.repository.get_provider_enabled_for_pro_by_id"], "pcapi.core.providers.repository.get_provider_enabled_for_pro_by_id": [], "tests.core.providers.provider_queries_test.GetProviderEnabledForProByIdTest.test_should_return_no_provider_when_provider_is_not_enabled_for_pro": ["pcapi.model_creators.generic_creators.create_provider", "pcapi.core.providers.repository.get_provider_enabled_for_pro_by_id"], "tests.core.providers.provider_queries_test.GetProviderEnabledForProByIdTest.test_should_return_provider_when_provider_is_enabled_for_pro_and_active": ["pcapi.model_creators.generic_creators.create_provider", "pcapi.core.providers.repository.get_provider_enabled_for_pro_by_id"], "tests.core.providers.provider_queries_test.GetProviderByLocalClassTest.test_should_return_provider_matching_local_class": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.model_creators.generic_creators.create_provider"], "tests.core.providers.provider_queries_test.GetProviderByLocalClassTest.test_should_not_return_provider_when_no_local_class_matches": ["pcapi.core.providers.repository.get_provider_by_local_class"], "tests.scripts.venue.venue_label.create_venue_labels_test.SaveNewVenueLabelsTest.test_should_save_venue_labels_to_database": ["pcapi.scripts.venue.venue_label.create_venue_labels.save_new_venue_labels", "<builtin>.len"], "pcapi.scripts.venue.venue_label.create_venue_labels.save_new_venue_labels": [], "tests.scripts.beneficiary.archive_dms_applications_test.ArchiveDMSApplicationsTest.test_archive_applications": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.archive_dms_applications_test.ArchiveDMSApplicationsTest.test_archive_applications_dry_run": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "tests.scripts.beneficiary.archive_dms_applications_test.ArchiveDMSApplicationsTest.test_archive_applications_only_archive_beneficiary": ["tests.scripts.beneficiary.fixture.make_graphql_application"], "src.pcapi.routes.pro.signup.signup_pro": ["pcapi.core.users.api.create_pro_user_and_offerer"], "pcapi.core.users.api.create_pro_user_and_offerer": [], "tests.core.subscription.ubble.test_api.UbbleWorkflowTest.test_ubble_workflow_rejected_add_inapp_message": ["dateutil.relativedelta.relativedelta"], "tests.core.subscription.ubble.test_api.UbbleWorkflowTest.test_ubble_workflow_with_eligibility_change_17_18": ["<builtin>.sorted", "<builtin>.len", "<builtin>.str"], "tests.core.subscription.ubble.test_api.UbbleWorkflowTest.test_ubble_workflow_with_eligibility_change_18_19": ["<builtin>.len", "<builtin>.str"], "tests.core.subscription.ubble.test_api.UbbleWorkflowTest.test_ubble_workflow_updates_user_when_processed": ["<builtin>.str"], "tests.core.subscription.ubble.test_api.UbbleWorkflowTest.test_ubble_workflow_does_not_erase_user_data": ["<builtin>.str"], "tests.core.mails.tests.MailjetBackendTest.test_send_mail": ["tests.core.mails.tests.MailjetBackendTest._get_backend"], "tests.core.mails.tests.MailjetBackendTest._get_backend": [], "tests.core.mails.tests.MailjetBackendTest.test_send_mail_with_error_response": ["tests.core.mails.tests.MailjetBackendTest._get_backend"], "tests.core.mails.tests.MailjetBackendTest.test_send_mail_with_timeout": ["tests.core.mails.tests.MailjetBackendTest._get_backend"], "tests.core.mails.tests.MailjetBackendTest.test_use_our_requests_wrapper_that_logs": ["tests.core.mails.tests.MailjetBackendTest._get_backend"], "tests.core.mails.tests.ToDevMailjetBackendTest.test_send_mail_overrides_recipients": ["tests.core.mails.tests.ToDevMailjetBackendTest._get_backend"], "tests.core.mails.tests.ToDevMailjetBackendTest._get_backend": [], "tests.core.mails.tests.ToDevMailjetBackendTest.test_send_mail_if_any_recipient_is_whitelisted": ["tests.core.mails.tests.ToDevMailjetBackendTest._get_backend"], "tests.core.mails.tests.ToDevMailjetBackendTest.test_send_mail_inject_preamble_in_html": ["tests.core.mails.tests.ToDevMailjetBackendTest._get_backend"], "tests.core.mails.tests.SendinblueBackendTest.test_send_mail": ["<builtin>.list", "tests.core.mails.tests.SendinblueBackendTest._get_backend"], "tests.core.mails.tests.SendinblueBackendTest._get_backend": [], "tests.core.mails.tests.SendinblueBackendTest.test_send_mail_with_no_reply_equal_overrided_by_sender": ["<builtin>.list", "tests.core.mails.tests.SendinblueBackendTest._get_backend"], "src.pcapi.core.fraud.common.models.IdentityCheckContent.get_registration_datetime": ["<builtin>.NotImplementedError"], "src.pcapi.core.fraud.common.models.IdentityCheckContent.get_first_name": ["<builtin>.NotImplementedError"], "src.pcapi.core.fraud.common.models.IdentityCheckContent.get_last_name": ["<builtin>.NotImplementedError"], "src.pcapi.core.fraud.common.models.IdentityCheckContent.get_birth_date": ["<builtin>.NotImplementedError"], "src.pcapi.core.fraud.common.models.IdentityCheckContent.get_id_piece_number": ["<builtin>.NotImplementedError"], "src.pcapi.core.fraud.common.models.IdentityCheckContent.get_eligibility_type_at_registration": ["src.pcapi.core.fraud.common.models.IdentityCheckContent.get_birth_date", "src.pcapi.core.fraud.common.models.IdentityCheckContent.get_registration_datetime"], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.get_saml_client": ["saml2.config.Config", "saml2.client.Saml2Client"], "saml2.config.Config": [], "saml2.client.Saml2Client": [], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.get_login_redirect_url": ["<builtin>.next", "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.get_saml_client", "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.build_saml_request_id_key"], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.build_saml_request_id_key": [], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.get_educonnect_user": ["src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector._get_connexion_datetime", "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.get_saml_client", "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector._get_field_oid", "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector._get_mocked_user_for_performance_tests"], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector._get_mocked_user_for_performance_tests": ["<builtin>.int", "<builtin>.range", "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector.build_saml_request_id_key"], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector._get_field_oid": [], "src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector._get_connexion_datetime": ["src.pcapi.connectors.beneficiaries.educonnect.educonnect_connector._get_field_oid"], "tests.use_cases.connect_allocine_to_venue_test.ConnectAllocineToVenueTest.should_connect_venue_to_allocine_provider": ["pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.core.providers.api.activate_provider", "pcapi.use_cases.connect_venue_to_allocine.connect_venue_to_allocine", "decimal.Decimal", "pcapi.core.providers.models.VenueProviderCreationPayload", "pcapi.core.offers.factories.VenueFactory"], "pcapi.use_cases.connect_venue_to_allocine.connect_venue_to_allocine": [], "src.pcapi.routes.external.unsubscribe_users.unsubscribe_user": ["pcapi.models.api_errors.ApiErrors", "pcapi.core.users.repository.find_user_by_email"], "tests.core.mails.transactional.pro.offer_validation_to_pro_test.SendinblueSendOfferValidationTest.test_get_validation_approval_correct_email_metadata": ["pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_approval_email", "pcapi.utils.human_ids.humanize"], "pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_approval_email": [], "tests.core.mails.transactional.pro.offer_validation_to_pro_test.SendinblueSendOfferValidationTest.test_send_offer_approval_email": ["pcapi.core.offers.factories.OfferFactory", "<builtin>.len", "pcapi.core.mails.transactional.pro.offer_validation_to_pro.send_offer_validation_status_update_email", "pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.VenueFactory"], "tests.core.mails.transactional.pro.offer_validation_to_pro_test.SendinblueSendOfferValidationTest.test_get_validation_rejection_correct_email_metadata": ["pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_rejection_email", "pcapi.utils.human_ids.humanize"], "pcapi.core.mails.transactional.pro.offer_validation_to_pro.retrieve_data_for_offer_rejection_email": [], "tests.core.mails.transactional.pro.offer_validation_to_pro_test.SendinblueSendOfferValidationTest.test_send_offer_rejection_email": ["pcapi.core.offers.factories.OfferFactory", "<builtin>.len", "pcapi.core.mails.transactional.pro.offer_validation_to_pro.send_offer_validation_status_update_email", "pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.VenueFactory"], "tests.scripts.business_unit.create_bu_test.test_create_bu": ["<builtin>.len", "pcapi.core.offerers.factories.OffererFactory", "pcapi.core.offers.factories.BankInformationFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.scripts.business_unit.create_bu.create_all_business_units"], "pcapi.scripts.business_unit.create_bu.create_all_business_units": [], "tests.scripts.business_unit.create_bu_test.test_business_unit_without_siret_name": ["pcapi.core.offerers.factories.OffererFactory", "pcapi.core.offers.factories.BankInformationFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.scripts.business_unit.create_bu.create_all_business_units"], "tests.scripts.business_unit.create_bu_test.test_create_single_bu_without_siret_on_offerer_cb": ["pcapi.core.offers.factories.OfferFactory", "<builtin>.len", "pcapi.core.offerers.factories.OffererFactory", "pcapi.core.offers.factories.BankInformationFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.scripts.business_unit.create_bu.create_all_business_units"], "tests.core.educational.test_repository.EducationalRepositoryTest.test_get_not_cancelled_educational_bookings_amount": ["pcapi.core.educational.repository.get_confirmed_educational_bookings_amount", "pcapi.core.bookings.factories.RefusedEducationalBookingFactory", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.core.bookings.factories.EducationalBookingFactory", "decimal.Decimal"], "pcapi.core.bookings.factories.RefusedEducationalBookingFactory": [], "tests.routes.pro.patch_all_offers_active_status_test.Returns204Test.when_activating_all_existing_offers": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_all_offers_active_status_test.Returns204Test.when_deactivating_all_existing_offers": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.patch_all_offers_active_status_test.Returns204Test.should_update_offers_by_given_filters": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "tests.conftest.TestClient.patch", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_all_offers_active_status_test.Returns204Test.test_only_approved_offers_patch": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.patch", "tests.conftest.TestClient.with_session_auth"], "tests.routes.native.v1.favorites_test.GetTest.Returns200Test.when_user_is_logged_in_but_has_no_favorites": ["tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.favorites_test.GetTest.Returns200Test.when_user_is_logged_in_and_has_favorite_offers": ["tests.routes.native.v1.utils.create_user_and_test_client", "<builtin>.set", "<builtin>.len", "datetime.timedelta", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries"], "tests.routes.native.v1.favorites_test.GetTest.Returns200Test.test_expired_offer": ["datetime.timedelta", "tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.routes.native.v1.favorites_test.GetTest.Returns401Test.when_user_is_not_logged_in": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.routes.native.v1.favorites_test.PostTest.Returns200Test.when_user_creates_a_favorite": ["tests.routes.native.v1.utils.create_user_and_test_client", "<builtin>.len"], "tests.routes.native.v1.favorites_test.PostTest.Returns200Test.when_user_creates_a_favorite_twice": ["tests.routes.native.v1.utils.create_user_and_test_client", "<builtin>.len"], "tests.routes.native.v1.favorites_test.PostTest.Returns400Test.when_user_creates_one_favorite_above_the_limit": ["tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.favorites_test.DeleteTest.Returns204Test.when_user_delete_its_favorite": ["tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.favorites_test.DeleteTest.Returns204Test.when_user_delete_another_user_favorite": ["tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.favorites_test.DeleteTest.Returns204Test.when_user_delete_non_existent_favorite": ["tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.favorites_test.GetCountTest.Returns200Test.when_user_is_logged_in_but_has_no_favorites": ["tests.routes.native.v1.utils.create_user_and_test_client"], "tests.routes.native.v1.favorites_test.GetCountTest.Returns200Test.when_user_is_logged_in_and_has_favorite_offers": ["tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries"], "tests.validation.models.generic_test.test_should_return_error_when_information_is_mandatory": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.generic.validate_generic", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "pcapi.validation.models.generic.validate_generic": [], "tests.validation.models.generic_test.test_should_return_error_when_information_requires_a_string_type": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.generic.validate_generic", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.validation.models.generic_test.test_should_return_error_when_information_requires_an_integer_type": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.generic.validate_generic", "pcapi.model_creators.generic_creators.create_venue"], "tests.validation.models.generic_test.test_should_return_error_when_information_exceeds_column_size": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.generic.validate_generic", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.admin.custom_views.venue_provider_view_test.VenueProviderViewTest.test_prevent_access_not_authenticated": ["pcapi.admin.custom_views.venue_provider_view.VenueProviderView"], "tests.admin.custom_views.venue_provider_view_test.VenueProviderViewTest.test_prevent_access_missing_venue_access": ["pcapi.admin.custom_views.venue_provider_view.VenueProviderView", "pcapi.core.users.factories.UserFactory"], "tests.admin.custom_views.venue_provider_view_test.EditModelTest.test_edit_venue_provider": ["pcapi.core.bookings.factories.BookingFactory", "pcapi.core.providers.factories.VenueProviderFactory", "<builtin>.dict", "pcapi.core.offers.factories.StockFactory", "pcapi.core.providers.factories.ProviderFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "pcapi.core.providers.factories.ProviderFactory": [], "pcapi.core.providers.factories.VenueProviderFactory": [], "tests.admin.custom_views.venue_provider_view_test.EditModelTest.test_provider_not_synchronizable": ["pcapi.core.providers.factories.VenueProviderFactory", "<builtin>.dict", "pcapi.core.providers.factories.ProviderFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.admin.custom_views.venue_provider_view_test.EditModelTest.test_allocine_provider": ["pcapi.core.providers.factories.AllocineProviderFactory", "pcapi.core.providers.factories.AllocineVenueProviderPriceRuleFactory", "<builtin>.dict", "pcapi.core.providers.factories.AllocineVenueProviderFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "pcapi.core.providers.factories.AllocineProviderFactory": [], "tests.sandboxes.scripts.industrial.test_save_industrial_sandbox.SaveIndustrialSandboxTest.test_creations": ["pcapi.sandboxes.scripts.creators.industrial.save_industrial_sandbox", "pcapi.repository.clean_database.clean_all_database"], "src.pcapi.core.subscription.factories.SubscriptionMessageFactory.<lambda1>": ["<builtin>.list"], "src.pcapi.core.subscription.factories.SubscriptionMessageFactory.<lambda2>": ["<builtin>.list"], "tests.routes.native.v1.offers_test.OffersTest.test_get_event_offer": ["pcapi.core.bookings.factories.BookingFactory", "<builtin>.sorted", "pcapi.core.offers.factories.EventStockFactory", "pcapi.core.offers.factories.OfferFactory", "datetime.timedelta", "pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.MediationFactory"], "tests.routes.native.v1.offers_test.OffersTest.test_get_thing_offer": ["pcapi.core.offers.factories.OfferFactory", "pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.ProductFactory", "pcapi.core.offers.factories.ThingStockFactory"], "tests.routes.native.v1.offers_test.OffersTest.test_get_digital_offer_with_available_activation_and_no_expiration_date": ["pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.StockWithActivationCodesFactory"], "tests.routes.native.v1.offers_test.OffersTest.test_get_digital_offer_with_available_activation_code_and_expiration_date": ["datetime.datetime", "pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.StockWithActivationCodesFactory"], "tests.routes.native.v1.offers_test.OffersTest.test_get_digital_offer_without_available_activation_code": ["datetime.datetime", "pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.StockWithActivationCodesFactory"], "tests.routes.native.v1.offers_test.OffersTest.test_get_expired_offer": ["datetime.timedelta", "pcapi.core.offers.factories.EventStockFactory", "pcapi.core.testing.assert_num_queries"], "tests.routes.native.v1.offers_test.OffersTest.test_get_offer_not_found": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get"], "tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest.test_sendinblue_send_offer_webapp_link_by_email": ["tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest.send_request"], "tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest.send_request": ["pcapi.core.offers.factories.OfferFactory", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest.test_send_offer_webapp_link_by_email_with_redirection_link": ["tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest.send_request"], "tests.routes.native.v1.offers_test.SendOfferWebAppLinkTest.test_send_offer_webapp_link_by_email_not_found": ["tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries"], "tests.routes.native.v1.offers_test.SendOfferLinkNotificationTest.test_send_offer_link_notification": ["pcapi.core.offers.factories.OfferFactory", "tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.routes.native.v1.offers_test.SendOfferLinkNotificationTest.test_send_offer_link_notification_not_found": ["tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.routes.native.v1.offers_test.ReportOfferTest.test_report_offer": ["pcapi.core.offers.factories.OfferFactory", "tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.routes.native.v1.offers_test.ReportOfferTest.test_report_offer_with_custom_reason": ["pcapi.core.offers.factories.OfferFactory", "tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.routes.native.v1.offers_test.ReportOfferTest.test_report_offer_twice": ["pcapi.core.offers.factories.OfferReportFactory", "pcapi.core.offers.factories.OfferFactory", "tests.routes.native.v1.utils.create_user_and_test_client", "pcapi.core.testing.assert_num_queries"], "pcapi.core.offers.factories.OfferReportFactory": [], "tests.routes.native.v1.offers_test.ReportOfferTest.test_report_offer_malformed": ["pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.users.factories.UserFactory"], "tests.routes.native.v1.offers_test.ReportOfferTest.test_report_offer_custom_reason_too_long": ["pcapi.core.offers.factories.OfferFactory", "pcapi.core.testing.assert_num_queries"], "tests.routes.native.v1.offers_test.ReportOfferTest.test_report_offer_unknown_reason": ["pcapi.core.offers.factories.OfferFactory", "pcapi.core.testing.assert_num_queries"], "tests.routes.native.v1.offers_test.OfferReportReasonsTest.test_get_reasons": ["pcapi.core.users.factories.UserFactory"], "tests.routes.native.v1.offers_test.ReportedOffersTest.test_get_user_reported_offers": ["pcapi.core.offers.factories.OfferReportFactory", "<builtin>.sorted", "pcapi.core.users.factories.UserFactory"], "tests.routes.native.v1.offers_test.ReportedOffersTest.test_get_no_reported_offers": ["pcapi.core.offers.factories.OfferFactory", "pcapi.core.users.factories.UserFactory"], "tests.routes.native.v1.offers_test.SubcategoriesTest.test_get_subcategories": ["<builtin>.list", "<builtin>.all", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.get_offers_with_max_stock_date_between_today_and_end_of_quarantine": ["src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine"], "src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.build_query_offers_with_max_stock_date_between_today_and_end_of_quarantine": [], "src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers_with_max_stock_date_between_today_and_end_of_quarantine": ["src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.get_offers_with_max_stock_date_between_today_and_end_of_quarantine", "src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers"], "src.pcapi.scripts.deactivate_offers_during_quarantine.deactivate_offers.deactivate_offers": [], "tests.routes.pro.post_venue_provider_test.Returns201Test.when_venue_provider_is_successfully_created": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns201Test.when_add_allocine_stocks_provider_with_price_but_no_isDuo_config": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.core.providers.api.activate_provider", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns201Test.when_add_allocine_stocks_provider_with_default_settings_at_import": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.core.providers.api.activate_provider", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns201Test.when_no_regression_on_format": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "<builtin>.set", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns201Test.when_venue_id_at_offer_provider_is_ignored_for_pro": ["tests.conftest.TestClient.__init__", "pcapi.utils.human_ids.dehumanize", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns201Test.test_when_add_same_provider": ["pcapi.model_creators.generic_creators.create_venue_provider", "tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns400Test.when_api_error_raise_when_missing_fields": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_venue_provider_test.Returns400Test.when_add_allocine_stocks_provider_with_no_price": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.core.providers.api.activate_provider", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns401Test.when_user_is_not_logged_in": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post"], "tests.routes.pro.post_venue_provider_test.Returns404Test.when_venue_does_not_exist": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_venue_provider_test.Returns404Test.when_add_allocine_pivot_is_missing": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.api.activate_provider", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_venue_provider_test.Returns422Test.when_provider_api_not_available": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize", "pcapi.models.api_errors.ApiErrors"], "tests.routes.pro.post_venue_provider_test.ConnectProviderToVenueTest.should_inject_the_appropriate_repository_to_the_usecase": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.post_venue_provider_test.ConnectProviderToVenueTest.should_connect_to_allocine": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.core.providers.api.activate_provider", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return200Test.test_create_valid_stock_for_educational_offer": ["pcapi.utils.human_ids.dehumanize", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test.test_create_educational_stocks_should_not_be_available_if_user_not_linked_to_offerer": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test.should_not_allow_number_of_tickets_to_be_negative_on_creation": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test.should_not_allow_price_to_be_negative_on_creation": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test.should_not_accept_payload_with_bookingLimitDatetime_after_beginningDatetime": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test.should_not_accept_payload_with_price_details_with_more_than_1000_caracters": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.patch_shadow_stock_into_educational_stock_test.Return400Test.should_not_allow_stock_transformation_on_a_non_showcase_offer": ["pcapi.utils.human_ids.humanize"], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest.setup_method": ["pcapi.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository.VenueWithBasicInformationSQLRepository"], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest.test_returns_a_venue_when_venue_with_siret_is_found": ["<builtin>.isinstance", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest.test_should_return_none_when_no_venue_with_siret_was_found": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest.test_returns_a_venue_when_venue_with_name_is_found": ["<builtin>.isinstance", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "<builtin>.len"], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest.test_should_return_none_when_venue_with_name_was_found_but_in_another_offerer": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.infrastructure.repository.venue.venue_with_basic_information.venue_with_basic_information_sql_repository_test.VenueWithBasicInformationSQLRepositoryTest.test_should_return_none_when_no_venue_with_name_was_found": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.routes.adage.v1.get_educational_institution_test.Returns200Test.test_get_educational_institution": ["tests.conftest.TestClient.__init__", "pcapi.core.educational.factories.EducationalRedactorFactory", "tests.conftest.TestClient.get", "<builtin>.float", "<builtin>.int", "pcapi.core.offers.utils.offer_app_link", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.utils.date.format_into_utc_date", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token", "pcapi.core.educational.factories.EducationalDepositFactory"], "pcapi.core.educational.factories.EducationalDepositFactory": [], "tests.routes.adage.v1.get_educational_institution_test.Returns200Test.test_get_educational_institution_num_queries": ["tests.conftest.TestClient.__init__", "pcapi.core.educational.factories.EducationalRedactorFactory", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.core.bookings.factories.EducationalBookingFactory", "tests.conftest.TestClient.with_eac_token", "pcapi.core.educational.factories.EducationalDepositFactory", "pcapi.core.testing.assert_num_queries"], "tests.routes.adage.v1.get_educational_institution_test.Returns200Test.test_get_educational_institution_without_deposit": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "tests.conftest.TestClient.with_eac_token"], "tests.routes.adage.v1.get_educational_institution_test.Returns404Test.test_get_educational_institution_not_found": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "tests.conftest.TestClient.with_eac_token"], "tests.core.mails.transactional.users.email_address_change_test.SendinblueEmailAddressChangeTest.test_should_return_sendinblue_data_when_feature_toggled": ["pcapi.core.mails.transactional.users.email_address_change.get_information_email_change_data", "pcapi.core.mails.transactional.users.email_address_change.get_confirmation_email_change_data"], "pcapi.core.mails.transactional.users.email_address_change.get_information_email_change_data": [], "pcapi.core.mails.transactional.users.email_address_change.get_confirmation_email_change_data": [], "tests.validation.models.user_test.UserAlreadyExistsTest.test_should_return_error_when_email_already_exist_in_database_but_no_id_is_provided": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "pcapi.validation.models.user.validate": [], "tests.validation.models.user_test.UserAlreadyExistsTest.test_should_not_return_error_when_email_already_exist_in_database_but_id_is_provided": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.validation.models.user_test.UserAlreadyExistsTest.test_should_return_error_when_user_count_raise_error_and_no_id_is_provided": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate", "sqlalchemy.exc.IntegrityError"], "tests.validation.models.user_test.UserAlreadyExistsTest.test_should_not_return_error_when_user_count_raise_error_and_id_is_provided": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate", "sqlalchemy.exc.IntegrityError"], "tests.validation.models.user_test.PublicNameTest.test_should_return_error_message_when_user_public_name_is_empty": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.validation.models.user_test.PublicNameTest.test_should_not_return_error_message_when_user_public_name_is_correct": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.validation.models.user_test.EmailTest.test_should_return_error_message_when_email_does_not_contain_at_sign": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.validation.models.user_test.EmailTest.test_should_not_return_error_message_when_user_email_is_correct": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.validation.models.user_test.AdminTest.test_should_return_error_message_when_admin_user_is_beneficiary": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.validation.models.user_test.PasswordTest.test_should_return_error_message_when_user_password_is_less_than_8_characters": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.validation.models.user_test.PasswordTest.test_should_not_return_error_message_when_user_password_is_correct": ["pcapi.models.api_errors.ApiErrors", "pcapi.validation.models.user.validate"], "tests.core.users.test_api.GenerateAndSaveTokenTest.test_generate_and_save_token": ["datetime.timedelta", "pcapi.core.users.api.generate_and_save_token"], "pcapi.core.users.api.generate_and_save_token": [], "tests.core.users.test_api.GenerateAndSaveTokenTest.test_generate_and_save_token_without_expiration_date": ["pcapi.core.users.api.generate_and_save_token"], "tests.core.users.test_api.ValidateJwtTokenTest.test_get_user_with_valid_token": ["datetime.timedelta", "pcapi.core.users.repository.get_user_with_valid_token"], "pcapi.core.users.repository.get_user_with_valid_token": [], "tests.core.users.test_api.ValidateJwtTokenTest.test_get_user_and_mark_token_as_used": ["datetime.timedelta", "pcapi.core.users.repository.get_user_with_valid_token"], "tests.core.users.test_api.ValidateJwtTokenTest.test_get_user_with_valid_token_without_expiration_date": ["pcapi.core.users.repository.get_user_with_valid_token"], "tests.core.users.test_api.ValidateJwtTokenTest.test_get_user_with_valid_token_wrong_token": ["pcapi.core.users.repository.get_user_with_valid_token"], "tests.core.users.test_api.ValidateJwtTokenTest.test_get_user_with_valid_token_wrong_type": ["pcapi.core.users.repository.get_user_with_valid_token"], "tests.core.users.test_api.ValidateJwtTokenTest.test_get_user_with_valid_token_with_expired_date": ["datetime.timedelta", "pcapi.core.users.repository.get_user_with_valid_token"], "tests.core.users.test_api.DeleteExpiredTokensTest.test_deletion": ["pcapi.core.users.api.generate_and_save_token", "pcapi.core.users.api.delete_expired_tokens", "freezegun.freeze_time", "<builtin>.set", "datetime.timedelta"], "pcapi.core.users.api.delete_expired_tokens": [], "tests.core.users.test_api._datetime_within_last_5sec": ["dateutil.relativedelta.relativedelta"], "tests.core.users.test_api._assert_user_suspension_history": ["tests.core.users.test_api._datetime_within_last_5sec", "<builtin>.len"], "tests.core.users.test_api.SuspendAccountTest.test_suspend_admin": ["tests.core.users.test_api._datetime_within_last_5sec", "tests.core.users.test_api._assert_user_suspension_history"], "tests.core.users.test_api.SuspendAccountTest.test_suspend_beneficiary": ["datetime.timedelta", "tests.core.users.test_api._datetime_within_last_5sec", "tests.core.users.test_api._assert_user_suspension_history"], "tests.core.users.test_api.SuspendAccountTest.test_suspend_pro": ["tests.core.users.test_api._assert_user_suspension_history"], "tests.core.users.test_api.SuspendAccountTest.test_suspend_pro_with_other_offerer_users": ["tests.core.users.test_api._assert_user_suspension_history"], "tests.core.users.test_api.UnsuspendAccountTest.test_unsuspend_account": ["tests.core.users.test_api._assert_user_suspension_history"], "tests.core.users.test_api.UnsuspendAccountTest.test_bulk_unsuspend_account": ["tests.core.users.test_api._datetime_within_last_5sec", "<builtin>.len"], "tests.core.users.test_api.ChangeUserEmailTest.test_change_user_email": ["<builtin>.len"], "tests.core.users.test_api.CreateBeneficiaryTest.test_with_eligible_user": ["<builtin>.len"], "tests.core.users.test_api.CreateBeneficiaryTest.test_apps_flyer_called": ["<builtin>.len", "<builtin>.str"], "tests.core.users.test_api.CreateBeneficiaryTest.test_external_users_updated": ["<builtin>.len"], "tests.core.users.test_api.FulfillBeneficiaryDataTest.test_fill_user_with_password_token_and_deposit": ["<builtin>.isinstance", "pcapi.core.users.api.fulfill_beneficiary_data", "<builtin>.len"], "pcapi.core.users.api.fulfill_beneficiary_data": [], "tests.core.users.test_api.FulfillBeneficiaryDataTest.test_fill_user_with_specific_deposit_version": ["<builtin>.isinstance", "pcapi.core.users.api.fulfill_beneficiary_data", "<builtin>.len"], "tests.core.users.test_api.FulfillAccountPasswordTest.test_fill_user_with_password_token": ["<builtin>.isinstance", "pcapi.core.users.api.fulfill_account_password", "<builtin>.len", "pcapi.core.users.models.User"], "tests.core.users.test_api.SetOffererDepartementCodeTest.should_set_user_department_to_undefined_department_code_when_offerer_has_none": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.core.users.api._set_offerer_departement_code"], "pcapi.core.users.api._set_offerer_departement_code": [], "tests.core.users.test_api.SetOffererDepartementCodeTest.should_set_user_department_code_based_on_offerer": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.core.users.api._set_offerer_departement_code"], "tests.core.users.test_api.SetProTutoAsSeenTest.should_set_has_seen_pro_tutorials_to_true_for_user": ["pcapi.core.users.api.set_pro_tuto_as_seen"], "pcapi.core.users.api.set_pro_tuto_as_seen": [], "tests.core.users.test_api.DomainsCreditTest.test_get_domains_credit_v1": ["pcapi.core.users.models.Credit", "pcapi.core.users.models.DomainsCredit", "decimal.Decimal", "pcapi.core.users.api.get_domains_credit"], "tests.core.users.test_api.DomainsCreditTest.test_get_domains_credit": ["pcapi.core.users.models.Credit", "pcapi.core.users.models.DomainsCredit", "decimal.Decimal", "pcapi.core.users.api.get_domains_credit"], "tests.core.users.test_api.DomainsCreditTest.test_get_domains_credit_deposit_expired": ["freezegun.freeze_time", "dateutil.relativedelta.relativedelta"], "tests.core.users.test_api.DomainsCreditTest.test_get_domains_credit_no_deposit": ["pcapi.core.users.api.get_domains_credit"], "tests.core.users.test_api.CreateProUserTest.test_create_pro_user": ["pcapi.routes.serialization.users.ProUserCreationBodyModel", "pcapi.core.users.api.create_pro_user"], "pcapi.routes.serialization.users.ProUserCreationBodyModel": [], "pcapi.core.users.api.create_pro_user": [], "tests.core.users.test_api.CreateProUserTest.test_create_pro_user_in_integration": ["pcapi.routes.serialization.users.ProUserCreationBodyModel", "pcapi.core.users.api.create_pro_user"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_user_information_from_dms": ["datetime.date", "datetime.datetime", "pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_user_information_from_jouve": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_user_information_from_educonnect": ["datetime.date", "datetime.datetime", "pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_user_information_from_jouve_empty_source": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_id_piece_number": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_id_piece_number_duplicate": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_id_piece_number_invalid_format": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_update_postal_code_from_empty_value": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_postal_code_not_updated": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_phone_number_does_not_update_from_jouve": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_phone_number_update_from_jouve_if_empty": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.BeneficiaryInformationUpdateTest.test_phone_number_does_not_update_from_jouve_if_not_empty": ["pcapi.core.users.factories.UserFactory"], "tests.core.users.test_api.UpdateUserLastConnectionDateTest.test_first_update": ["datetime.datetime", "pcapi.core.users.factories.UserFactory", "<builtin>.len"], "tests.core.users.test_api.UpdateUserLastConnectionDateTest.test_update_day_after": ["datetime.datetime", "pcapi.core.users.factories.UserFactory", "<builtin>.len"], "tests.core.users.test_api.UpdateUserLastConnectionDateTest.test_update_same_day": ["datetime.datetime", "pcapi.core.users.factories.UserFactory", "<builtin>.len"], "tests.core.users.test_api.UpdateUserLastConnectionDateTest.test_no_update": ["datetime.datetime", "pcapi.core.users.factories.UserFactory", "<builtin>.len"], "tests.core.users.test_api.GetEligibilityTest.test_get_eligibility_at_date_timezones_tolerance": ["datetime.datetime", "pcapi.core.users.api.get_eligibility_at_date"], "pcapi.core.users.api.get_eligibility_at_date": [], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs.__init__": ["pcapi.connectors.ftp_titelive.get_files_to_process_from_titelive_ftp", "<builtin>.super", "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs.get_remaining_files_to_check"], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs.get_remaining_files_to_check": ["<builtin>.int", "<builtin>.filter", "<builtin>.iter"], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs.__next__": ["<builtin>.next", "pathlib.PurePath", "datetime.datetime", "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs.open_next_file"], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs.open_next_file": ["pcapi.domain.titelive.get_date_from_filename", "pcapi.connectors.ftp_titelive.get_zip_file_from_ftp", "<builtin>.iter", "<builtin>.filter", "<builtin>.str", "<builtin>.next", "<builtin>.sorted"], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.TiteLiveThingThumbs.get_object_thumb_index": ["src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.extract_thumb_index"], "src.pcapi.local_providers.titelive_thing_thumbs.titelive_thing_thumbs.extract_thumb_index": ["<builtin>.int", "<builtin>.len"], "src.pcapi.scripts.deactivate_300e_thing_offers.deactivate_300e_thing_offers": ["<builtin>.enumerate", "<builtin>.print", "<builtin>.range", "<builtin>.str", "<builtin>.len", "<builtin>.open"], "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest.test_admin_user_creation": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "datetime.timedelta"], "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest.test_admin_user_receive_a_reset_password_token": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "<builtin>.len", "dataclasses.asdict"], "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest.test_admin_user_creation_is_restricted_in_prod": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "<builtin>.dict", "tests.conftest.TestClient.with_session_auth", "<builtin>.len"], "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest.test_super_admin_can_suspend_then_unsuspend_simple_admin": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest.test_simple_admin_can_not_suspend_admin": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "tests.admin.custom_views.admin_user_view_test.AdminUserViewTest.test_simple_admin_can_not_unsuspend_simple_admin": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.post", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email": ["src.pcapi.core.mails.transactional.users.subscription_document_error.get_subscription_document_error_email_data"], "src.pcapi.core.mails.transactional.users.subscription_document_error.get_subscription_document_error_email_data": ["<map>.get", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.admin.templating.yesno": ["markupsafe.Markup"], "src.pcapi.admin.templating.subscription_status_format": ["markupsafe.Markup"], "src.pcapi.admin.templating.fraud_check_status_format": ["markupsafe.Markup"], "src.pcapi.admin.templating.eligibility_format": ["markupsafe.Markup"], "src.pcapi.admin.templating.suspension_event_format": ["markupsafe.Markup", "<builtin>.dict"], "src.pcapi.admin.templating.suspension_reason_format": ["markupsafe.Markup", "<builtin>.dict"], "src.pcapi.scripts.update_venue_type.update_venue_type": ["append", "src.pcapi.scripts.update_venue_type._read_venue_type_from_file", "<builtin>.int", "<builtin>.print", "<builtin>.str"], "src.pcapi.scripts.update_venue_type._read_venue_type_from_file": ["<builtin>.tuple", "<builtin>.open"], "src.pcapi.local_providers.provider_manager.synchronize_data_for_provider": ["pcapi.scheduled_tasks.logger.build_cron_log_message", "src.pcapi.local_providers.provider_manager.do_update", "src.pcapi.local_providers.provider_manager.get_local_provider_class_by_name"], "src.pcapi.local_providers.provider_manager.get_local_provider_class_by_name": ["<builtin>.getattr"], "src.pcapi.local_providers.provider_manager.do_update": ["pcapi.scheduled_tasks.logger.build_cron_log_message"], "pcapi.scheduled_tasks.logger.build_cron_log_message": [], "src.pcapi.local_providers.provider_manager.synchronize_venue_providers_for_provider": ["src.pcapi.local_providers.provider_manager.synchronize_venue_provider", "pcapi.repository.venue_provider_queries.get_active_venue_providers_for_specific_provider"], "src.pcapi.local_providers.provider_manager.synchronize_venue_provider": ["pcapi.scheduled_tasks.logger.build_cron_log_message", "src.pcapi.local_providers.provider_manager.do_update", "src.pcapi.local_providers.provider_manager.get_local_provider_class_by_name"], "tests.domain.bank_information_test.CheckOffererPresenceTest.test_raises_an_error_if_no_offerer_found": ["pcapi.domain.bank_information.check_offerer_presence"], "tests.core.offerers.test_models.VenueTimezoneSqlQueryTest.test_europe_paris_is_default_timezone": ["<builtin>.len"], "tests.core.offerers.test_models.VenueTimezoneSqlQueryTest.test_return_timezone_given_venue_departement_code": ["<builtin>.len"], "tests.core.offerers.test_models.VenueTimezoneSqlQueryTest.test_return_managing_offerer_timezone_when_venue_is_virtual": ["<builtin>.len"], "tests.core.offerers.test_models.OffererDepartementCodeSQLExpressionTest.test_metropole_postal_code": ["<builtin>.len"], "tests.core.offerers.test_models.OffererDepartementCodeSQLExpressionTest.test_drom_postal_code": ["<builtin>.len"], "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin._format_is_email_validated": ["markupsafe.Markup", "flask.url_for"], "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin.ResendValidationEmailMixin.column_formatters": ["<builtin>.super"], "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin.ResendValidationEmailMixin.user_list_url": ["flask.url_for"], "src.pcapi.admin.custom_views.mixins.resend_validation_email_mixin.ResendValidationEmailMixin.resend_validation_email_view": ["flask.flash", "flask.redirect"], "tests.core.offers.test_utils.OffersUtilsTest.test_offer_app_link": ["pcapi.core.offers.utils.offer_app_link"], "src.pcapi.core.payments.exceptions.DepositTypeAlreadyGrantedException.__init__": ["<builtin>.super"], "src.pcapi.core.payments.exceptions.ConflictingReimbursementRule.__init__": ["<builtin>.super"], "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_future_beneficiaries": ["dateutil.relativedelta.relativedelta"], "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_expiring_beneficiary": ["dateutil.relativedelta.relativedelta"], "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.save_beneficiaries_sandbox": ["src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_future_beneficiaries", "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_underage_beneficiary", "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_expiring_beneficiary", "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_beneficiary_with_specific_address", "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_beneficiary_with_empty_deposit"], "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_beneficiary_with_empty_deposit": [], "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_beneficiary_with_specific_address": [], "src.pcapi.sandboxes.scripts.creators.beneficiaries.beneficiaries.create_underage_beneficiary": [], "tests.domain.offer_report_email_test.OfferReportEmailTest.test_report_other": ["pcapi.domain.offer_report_emails.send_report_notification", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "pcapi.domain.offer_report_emails.send_report_notification": [], "tests.domain.offer_report_email_test.OfferReportEmailTest.test_report_inappropriate": ["pcapi.domain.offer_report_emails.send_report_notification", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.domain.reimbursement_test.create_book_booking": ["tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.create_non_digital_thing_booking": [], "tests.domain.reimbursement_test.DigitalThingsReimbursementTest.test_apply": ["tests.domain.reimbursement_test.create_digital_booking"], "tests.domain.reimbursement_test.create_digital_booking": [], "tests.domain.reimbursement_test.DigitalThingsReimbursementTest.test_relevancy": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.create_event_booking": [], "tests.domain.reimbursement_test.PhysicalOffersReimbursementTest.test_apply": ["tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.PhysicalOffersReimbursementTest.test_relevancy": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000Test.test_apply": ["decimal.Decimal", "tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000Test.test_relevancy_depending_on_revenue": ["tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween20000And40000Test.test_relevancy_depending_on_offer_subcategory": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000Test.test_apply": ["decimal.Decimal", "tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000Test.test_relevancy_depending_on_revenue": ["tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueBetween40000And150000Test.test_relevancy_depending_on_offer_type": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000Test.test_apply": ["decimal.Decimal", "tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000Test.test_relevancy_depending_on_revenue": ["tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.LegacyPreSeptember2021ReimbursementRateByVenueAbove150000Test.test_relevancy_depending_on_offer_type": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween20000And40000Test.test_apply": ["decimal.Decimal", "tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween20000And40000Test.test_relevancy_depending_on_revenue": ["tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween20000And40000Test.test_relevancy_depending_on_offer_type": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween40000And150000Test.test_apply": ["decimal.Decimal", "tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween40000And150000Test.test_relevancy_depending_on_revenue": ["tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueBetween40000And150000Test.test_relevancy_depending_on_offer_type": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueAbove150000Test.test_apply": ["decimal.Decimal", "tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueAbove150000Test.test_relevancy_depending_on_revenue": ["tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.ReimbursementRateByVenueAbove150000Test.test_relevancy_depending_on_offer_type": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRateForBookBelow20000Test.book_booking": ["tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRateForBookBelow20000Test.test_apply": ["decimal.Decimal"], "tests.domain.reimbursement_test.ReimbursementRateForBookBelow20000Test.test_relevancy_depending_on_offer_type": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRateForBookAbove20000Test.book_booking": ["tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRateForBookAbove20000Test.test_apply": ["decimal.Decimal"], "tests.domain.reimbursement_test.ReimbursementRateForBookAbove20000Test.test_relevancy_depending_on_offer_type": ["tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_active_if_rule_has_no_start_nor_end": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__": [], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_active_if_valid_since_yesterday_without_end_date": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__", "datetime.timedelta"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_active_if_valid_since_yesterday_with_end_date": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__", "datetime.timedelta"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_not_active_if_not_yet_valid_without_end_date": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__", "datetime.timedelta"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_not_active_if_not_yet_valid_with_end_date": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__", "datetime.timedelta"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_active_if_no_start_date_and_until_later": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__", "datetime.timedelta"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_not_active_if_rule_is_not_valid_anymore_with_no_start_date": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__", "datetime.timedelta"], "tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.test_is_not_active_if_rule_is_not_valid_anymore_with_start_date": ["tests.domain.reimbursement_test.ReimbursementRuleIsActiveTest.DummyRule.__init__", "datetime.timedelta"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_pre_september_2021_reimbursement_under_20000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.assert_total_reimbursement": ["<builtin>.isinstance"], "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital": ["<builtin>.isinstance"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_pre_september_2021_degressive_reimbursement_around_20000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "decimal.Decimal", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.create_rich_user", "tests.domain.reimbursement_test.assert_partial_reimbursement", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.create_rich_user": [], "tests.domain.reimbursement_test.assert_partial_reimbursement": ["<builtin>.isinstance"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_pre_september_2021_degressive_reimbursement_around_40000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "decimal.Decimal", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.create_rich_user", "tests.domain.reimbursement_test.assert_partial_reimbursement", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_pre_september_2021_degressive_reimbursement_above_150000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.create_rich_user", "tests.domain.reimbursement_test.assert_partial_reimbursement", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_reimbursement_under_20000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_degressive_reimbursement_around_20000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.create_rich_user", "tests.domain.reimbursement_test.assert_partial_reimbursement", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_degressive_reimbursement_around_40000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "decimal.Decimal", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.create_rich_user", "tests.domain.reimbursement_test.assert_partial_reimbursement", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_degressive_reimbursement_above_150000": ["tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_digital_booking", "tests.domain.reimbursement_test.create_non_digital_thing_booking", "tests.domain.reimbursement_test.create_rich_user", "tests.domain.reimbursement_test.assert_partial_reimbursement", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital", "tests.domain.reimbursement_test.create_event_booking", "tests.domain.reimbursement_test.create_book_booking"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_full_reimbursement_for_all_bookings_for_new_civil_year": ["tests.domain.reimbursement_test.create_rich_user", "datetime.datetime", "tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.create_event_booking"], "tests.domain.reimbursement_test.FindAllBookingsReimbursementsTest.test_select_custom_reimbursement_rule_if_applicable": ["datetime.timedelta", "tests.domain.reimbursement_test.assert_total_reimbursement", "tests.domain.reimbursement_test.assert_no_reimbursement_for_digital"], "tests.domain.reimbursement_test.CustomRuleFinderTest.test_offer_rule": ["datetime.timedelta"], "tests.domain.reimbursement_test.CustomRuleFinderTest.test_offerer_without_category_rule": ["datetime.timedelta"], "tests.domain.reimbursement_test.CustomRuleFinderTest.test_offerer_with_category_rule": ["datetime.timedelta"], "tests.core.finance.test_api.PriceBookingTest.test_num_queries": ["pcapi.core.testing.assert_num_queries"], "tests.core.finance.test_api.DeleteDependentPricingsTest.test_basics": ["<builtin>.list"], "tests.core.finance.test_api.DeleteDependentPricingsTest.test_raise_if_a_pricing_is_not_deletable": ["tests.core.finance.test_api.create_booking_with_undeletable_dependent"], "tests.core.finance.test_api.create_booking_with_undeletable_dependent": [], "tests.core.finance.test_api.PriceBookingsTest.test_basics": ["<builtin>.len"], "tests.core.finance.test_api.PriceBookingsTest.test_num_queries": ["pcapi.core.testing.assert_num_queries"], "tests.core.finance.test_api.PriceBookingsTest.test_error_on_a_booking_does_not_block_other_bookings": ["<builtin>.len", "tests.core.finance.test_api.create_booking_with_undeletable_dependent"], "tests.core.finance.test_api.PriceBookingsTest.test_price_even_without_accepted_bank_info": ["<builtin>.len"], "tests.core.finance.test_api.GenerateCashflowsTest.test_basics": ["<builtin>.len"], "tests.core.finance.test_api.GenerateCashflowsTest.test_assert_num_queries": ["<builtin>.sum", "pcapi.core.testing.assert_num_queries"], "tests.core.finance.test_api.test_generate_payment_files": ["<builtin>.len"], "tests.core.finance.test_api.test_generate_business_units_file": ["<builtin>.list", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.core.finance.test_api.test_generate_payments_file": ["<builtin>.list", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.core.finance.test_api.test_generate_wallets_file": ["<builtin>.list", "<builtin>.len"], "tests.core.finance.test_api.test_genererate_invoice_file": ["<builtin>.list", "<builtin>.abs", "<builtin>.len"], "tests.core.finance.test_api.GenerateInvoicesTest.test_basics": ["<builtin>.len"], "tests.core.finance.test_api.GenerateInvoiceTest.test_one_regular_rule_one_rate": ["pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.core.finance.test_api.GenerateInvoiceTest.test_two_regular_rules_two_rates": ["<builtin>.sorted", "decimal.Decimal", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.core.finance.test_api.GenerateInvoiceTest.test_one_custom_rule": ["decimal.Decimal", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.core.finance.test_api.GenerateInvoiceTest.test_many_rules_and_rates_two_cashflows": ["append", "decimal.Decimal", "<builtin>.len", "<builtin>.sorted", "pcapi.core.testing.assert_num_queries"], "tests.core.finance.test_api.GenerateInvoiceTest.test_update_statuses": ["tests.core.finance.test_api.GenerateInvoiceTest.test_update_statuses.<lambda1>"], "tests.core.finance.test_api.GenerateInvoiceTest.test_update_statuses.<lambda1>": ["<builtin>.getattr"], "tests.core.finance.test_api.PrepareInvoiceContextTest.test_context": ["append", "<builtin>.tuple"], "tests.core.finance.test_api.GenerateInvoiceHtmlTest.test_basics": ["append", "<builtin>.open"], "tests.core.finance.test_api.StoreInvoicePdfTest.test_basics": ["append", "pcapi.core.object_storage.testing.recursive_listdir", "<builtin>.len"], "pcapi.core.object_storage.testing.recursive_listdir": [], "tests.core.finance.test_api.GenerateAndStoreInvoiceTest.test_basics": ["append", "<builtin>.len"], "tests.core.finance.test_api.test_merge_cashflow_batches": ["tests.core.finance.test_api.test_merge_cashflow_batches.get_cashflows", "<builtin>.len"], "tests.core.finance.test_api.test_merge_cashflow_batches.get_cashflows": [], "tests.core.mails.transactional.pro.offerer_attachment_validation_test.ProOffererAttachmentValidationEmailTest.test_email_data": ["pcapi.core.mails.transactional.pro.offerer_attachment_validation.get_offerer_attachment_validation_email_data", "pcapi.core.offers.factories.OffererFactory"], "pcapi.core.mails.transactional.pro.offerer_attachment_validation.get_offerer_attachment_validation_email_data": [], "tests.core.mails.transactional.pro.offerer_attachment_validation_test.ProOffererAttachmentValidationEmailTest.test_send_email": ["pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.mails.transactional.pro.offerer_attachment_validation.send_offerer_attachment_validation_email_to_pro", "<builtin>.len"], "src.pcapi.routes.error_handlers.bookings_error_handlers.handle_book_an_offer": ["flask.jsonify"], "src.pcapi.routes.error_handlers.bookings_error_handlers.handle_get_all_bookings_exceptions": ["flask.jsonify"], "src.pcapi.routes.error_handlers.bookings_error_handlers.handle_cancel_a_booking": ["flask.jsonify"], "src.pcapi.routes.error_handlers.bookings_error_handlers.handle_cancel_a_booking_not_found": ["flask.jsonify"], "src.pcapi.model_creators.generic_creators.create_criterion": ["pcapi.models.criterion.Criterion"], "src.pcapi.model_creators.generic_creators.create_favorite": ["pcapi.core.users.models.Favorite"], "pcapi.core.users.models.Favorite": [], "src.pcapi.model_creators.generic_creators.create_mediation": ["pcapi.core.offers.models.Mediation"], "src.pcapi.model_creators.generic_creators.create_offerer": ["pcapi.core.offerers.models.Offerer"], "src.pcapi.model_creators.generic_creators.create_payment": ["pcapi.models.payment_status.PaymentStatus", "src.pcapi.model_creators.generic_creators.create_payment_message", "pcapi.models.payment.Payment"], "src.pcapi.model_creators.generic_creators.create_payment_message": ["pcapi.models.payment_message.PaymentMessage", "hashlib.sha256"], "hashlib.sha256": [], "src.pcapi.model_creators.generic_creators.create_provider": ["pcapi.core.providers.models.Provider"], "src.pcapi.model_creators.generic_creators.create_stock": ["pcapi.core.offers.models.Stock"], "src.pcapi.model_creators.generic_creators.create_user_offerer": ["pcapi.models.user_offerer.UserOfferer"], "src.pcapi.model_creators.generic_creators.create_venue": ["pcapi.core.offerers.models.Venue"], "src.pcapi.model_creators.generic_creators.create_venue_provider": ["pcapi.core.providers.models.VenueProvider"], "pcapi.core.providers.models.VenueProvider": [], "src.pcapi.model_creators.generic_creators.create_allocine_venue_provider": ["pcapi.core.providers.models.AllocineVenueProvider"], "src.pcapi.model_creators.generic_creators.create_allocine_venue_provider_price_rule": ["pcapi.core.providers.models.AllocineVenueProviderPriceRule"], "src.pcapi.model_creators.generic_creators.create_payment_status": ["pcapi.models.payment_status.PaymentStatus"], "tests.routes.pro.get_offerer_test.Returns404Test.test_when_user_offerer_does_not_exist": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offerer_test.Returns200Test.test_when_user_has_rights_on_offerer": ["tests.conftest.TestClient.__init__", "pcapi.core.offerers.factories.ApiKeyFactory", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.date.format_into_utc_date", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_all_bookings_test.GetAllBookingsTest.test_call_repository_with_user_and_page": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_all_bookings_test.GetAllBookingsTest.test_call_repository_with_page_1": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_all_bookings_test.GetAllBookingsTest.test_call_repository_with_venue_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize", "pcapi.core.offers.factories.VenueFactory"], "tests.routes.pro.get_all_bookings_test.Returns200Test.when_user_is_admin": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "<builtin>.len"], "tests.routes.pro.get_all_bookings_test.Returns200Test.when_booking_is_educational": ["tests.conftest.TestClient.__init__", "datetime.datetime", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_all_bookings_test.Returns200Test.when_user_is_linked_to_a_valid_offerer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "pcapi.utils.date.format_into_timezoned_date", "pcapi.utils.human_ids.humanize", "pcapi.core.testing.assert_num_queries"], "tests.routes.pro.get_all_bookings_test.Returns200Test.when_requested_event_date_is_iso_format": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "<builtin>.len", "pcapi.core.testing.assert_num_queries"], "tests.routes.pro.get_all_bookings_test.Returns200Test.when_requested_booking_period_dates_are_iso_format": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.date.utc_datetime_to_department_timezone", "datetime.datetime", "<builtin>.len", "pcapi.core.testing.assert_num_queries"], "tests.routes.pro.get_all_bookings_test.Returns200Test.test_should_return_booking_confirmation_date_in_status_history": ["datetime.datetime", "pcapi.utils.date.format_into_timezoned_date"], "tests.routes.pro.get_all_bookings_test.Returns200Test.test_should_return_booking_pending_status_in_history": ["datetime.datetime", "pcapi.utils.date.format_into_timezoned_date"], "tests.routes.pro.get_all_bookings_test.Returns400Test.when_page_number_is_not_a_number": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_all_bookings_test.Returns400Test.when_booking_period_is_not_given": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.core.educational.test_validation.EducationalValidationTest.test_institution_fund_is_ok": ["pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory", "pcapi.core.educational.validation.check_institution_fund", "pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal"], "pcapi.core.educational.validation.check_institution_fund": [], "tests.core.educational.test_validation.EducationalValidationTest.test_institution_fund_is_temporary_insufficient": ["pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory"], "tests.core.educational.test_validation.EducationalValidationTest.test_institution_fund_is_insufficient": ["pcapi.core.educational.models.EducationalDeposit", "decimal.Decimal", "pcapi.core.educational.factories.EducationalInstitutionFactory", "pcapi.core.educational.factories.EducationalYearFactory"], "src.pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data": ["pcapi.utils.mailing.format_booking_date_for_email", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.core.mails.models.sendinblue_models.EmailInfo", "pcapi.utils.mailing.format_booking_hours_for_email"], "src.pcapi.core.mails.transactional.bookings.new_booking_to_pro.send_user_new_booking_to_pro_email": ["src.pcapi.core.mails.transactional.bookings.new_booking_to_pro.get_new_booking_to_pro_email_data"], "tests.routes.native.v1.offerers_test.VenuesTest.test_get_venue": ["<builtin>.float"], "src.pcapi.core.providers.api.create_venue_provider": ["src.pcapi.core.providers.api.connect_venue_to_provider", "pcapi.core.offerers.repository.find_venue_by_id", "pcapi.core.providers.exceptions.ProviderNotFound", "pcapi.core.providers.exceptions.VenueNotFound", "pcapi.use_cases.connect_venue_to_allocine.connect_venue_to_allocine", "pcapi.core.providers.repository.get_provider_enabled_for_pro_by_id"], "pcapi.core.providers.exceptions.ProviderNotFound": [], "pcapi.core.providers.exceptions.VenueNotFound": [], "src.pcapi.core.providers.api.connect_venue_to_provider": ["pcapi.core.providers.models.VenueProvider", "src.pcapi.core.providers.api._check_provider_can_be_connected"], "src.pcapi.core.providers.api._check_provider_can_be_connected": ["pcapi.core.providers.exceptions.ProviderWithoutApiImplementation", "pcapi.core.providers.exceptions.NoSiretSpecified", "src.pcapi.core.providers.api._siret_can_be_synchronized", "pcapi.core.providers.exceptions.VenueSiretNotRegistered"], "pcapi.core.providers.exceptions.NoSiretSpecified": [], "pcapi.core.providers.exceptions.ProviderWithoutApiImplementation": [], "src.pcapi.core.providers.api._siret_can_be_synchronized": [], "pcapi.core.providers.exceptions.VenueSiretNotRegistered": [], "src.pcapi.core.providers.api.change_venue_provider": ["src.pcapi.core.providers.api._check_provider_can_be_connected", "pcapi.core.providers.exceptions.ProviderNotFound", "src.pcapi.core.providers.api.reset_stock_quantity", "pcapi.core.providers.repository.get_provider_enabled_for_pro_by_id", "src.pcapi.core.providers.api.update_last_provider_id"], "src.pcapi.core.providers.api.reset_stock_quantity": [], "src.pcapi.core.providers.api.update_last_provider_id": [], "src.pcapi.core.providers.api.synchronize_stocks": ["pcapi.core.offers.repository.get_offers_map_by_id_at_provider", "pcapi.core.offers.repository.get_stocks_by_id_at_providers", "pcapi.core.offers.repository.get_products_map_by_provider_reference", "src.pcapi.core.providers.api._get_stocks_to_upsert", "<builtin>.len", "pcapi.core.offers.repository.get_offers_map_by_venue_reference", "src.pcapi.core.providers.api._build_new_offers_from_stock_details"], "pcapi.core.offers.repository.get_products_map_by_provider_reference": [], "pcapi.core.offers.repository.get_offers_map_by_id_at_provider": [], "pcapi.core.offers.repository.get_offers_map_by_venue_reference": [], "src.pcapi.core.providers.api._build_new_offers_from_stock_details": ["dataclasses.asdict", "src.pcapi.core.providers.api._build_new_offer", "src.pcapi.core.providers.api._validate_stock_or_offer", "append"], "src.pcapi.core.providers.api._build_new_offer": ["pcapi.core.offers.models.Offer"], "src.pcapi.core.providers.api._validate_stock_or_offer": ["pcapi.validation.models.entity_validator.validate"], "pcapi.validation.models.entity_validator.validate": [], "pcapi.core.offers.repository.get_stocks_by_id_at_providers": [], "src.pcapi.core.providers.api._get_stocks_to_upsert": ["append", "src.pcapi.core.providers.api._validate_stock_or_offer", "<builtin>.float", "src.pcapi.core.providers.api._should_reindex_offer", "<builtin>.set", "<map>.get", "src.pcapi.core.providers.api._build_stock_from_stock_detail"], "src.pcapi.core.providers.api._build_stock_from_stock_detail": ["pcapi.core.offers.models.Stock"], "src.pcapi.core.providers.api._should_reindex_offer": [], "src.pcapi.core.providers.api.activate_provider": ["pcapi.core.providers.repository.get_provider_by_local_class"], "src.pcapi.scripts.delete_corrupted_allocine_stocks.delete_corrupted_allocine_stocks": ["pcapi.core.providers.repository.get_provider_by_local_class"], "tests.core.mails.transactional.users.delete_account_test.UserRequestDeleteAccountReceptionEmailTest.test_get_email_metadata": ["pcapi.core.mails.transactional.users.delete_account.get_user_request_to_delete_account_email_data"], "pcapi.core.mails.transactional.users.delete_account.get_user_request_to_delete_account_email_data": [], "tests.core.mails.transactional.users.delete_account_test.UserRequestDeleteAccountReceptionEmailTest.test_send_correct_mail": ["pcapi.core.mails.transactional.users.delete_account.send_user_request_to_delete_account_reception_email", "<builtin>.len"], "src.pcapi.routes.adage_iframe.bookings.book_educational_offer": ["pcapi.models.api_errors.ApiErrors", "pcapi.routes.adage_iframe.serialization.adage_authentication.get_redactor_information_from_adage_authentication", "pcapi.routes.adage_iframe.serialization.educational_booking.BookEducationalOfferResponse", "<builtin>.str"], "pcapi.routes.adage_iframe.serialization.adage_authentication.get_redactor_information_from_adage_authentication": [], "pcapi.routes.adage_iframe.serialization.educational_booking.BookEducationalOfferResponse": [], "tests.routes.pro.post_educational_stock_test.Return200Test.test_create_valid_stock_for_educational_offer": ["pcapi.utils.human_ids.dehumanize", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_educational_stock_test.Return400Test.test_create_educational_stocks_should_not_be_available_if_user_not_linked_to_offerer": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_educational_stock_test.Return400Test.should_not_allow_number_of_tickets_to_be_negative_on_creation": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_educational_stock_test.Return400Test.should_not_allow_price_to_be_negative_on_creation": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_educational_stock_test.Return400Test.should_not_accept_payload_with_bookingLimitDatetime_after_beginningDatetime": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_educational_stock_test.Return400Test.should_not_accept_payload_with_price_details_with_more_than_1000_caracters": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_educational_stock_test.Return400Test.should_not_allow_multiple_stocks": ["pcapi.utils.human_ids.humanize"], "src.pcapi.core.educational.adage_backends.testing.AdageSpyClient.notify_prebooking": ["pcapi.core.educational.models.AdageApiResult"], "src.pcapi.core.educational.adage_backends.testing.AdageSpyClient.notify_offer_or_stock_edition": ["pcapi.core.educational.models.AdageApiResult"], "src.pcapi.core.educational.adage_backends.testing.AdageSpyClient.get_adage_offerer": ["<builtin>.Exception"], "src.pcapi.core.educational.adage_backends.testing.AdageSpyClient.notify_booking_cancellation_by_offerer": ["pcapi.core.educational.models.AdageApiResult"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns204Test.test_cancel_pending_booking": ["pcapi.utils.human_ids.humanize", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking", "<builtin>.len"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns204Test.test_cancel_confirmed_booking": ["pcapi.utils.human_ids.humanize", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking", "<builtin>.len"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns404Test.test_no_educational_offer_found": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns404Test.test_no_active_stock_found": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns403Test.test_user_does_not_have_access_to_offerer": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns400Test.test_offer_has_multiple_active_stocks": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns400Test.test_offer_has_no_booking_to_cancel": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.cancel_educational_offer_booking_test.Returns400Test.test_offer_has_no_booking_to_cancel_because_used": ["pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.scripts.external_users.unstack_batch_cloud_task_queue_test.test_run_task_batch": ["pcapi.scripts.external_users.unstack_batch_cloud_task_queue.unstack_batch_queue", "tests.scripts.external_users.unstack_batch_cloud_task_queue_test.MockTask.__init__", "<builtin>.len", "math.ceil"], "tests.scripts.external_users.unstack_batch_cloud_task_queue_test.MockTask.__init__": [], "pcapi.scripts.external_users.unstack_batch_cloud_task_queue.unstack_batch_queue": [], "math.ceil": [], "src.pcapi.scripts.find_not_modifiable_venues.generate_non_editable_venues_csv": ["src.pcapi.scripts.find_not_modifiable_venues._as_csv_row", "src.pcapi.scripts.find_not_modifiable_venues._get_non_editable_venues", "<builtin>.len", "io.StringIO"], "src.pcapi.scripts.find_not_modifiable_venues._get_non_editable_venues": ["sqlalchemy.or_", "sqlalchemy.and_", "sqlalchemy.not_"], "src.pcapi.scripts.find_not_modifiable_venues._as_csv_row": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_booking_by_token_v2_test.Returns200Test.test_when_user_has_rights_and_regular_offer": ["pcapi.utils.date.format_into_utc_date", "datetime.timedelta", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_booking_by_token_v2_test.Returns200Test.test_when_user_has_rights_and_booking_is_educational": ["pcapi.utils.date.format_into_utc_date", "datetime.timedelta", "pcapi.utils.human_ids.humanize", "<builtin>.float"], "tests.routes.pro.get_booking_by_token_v2_test.Returns200Test.test_when_api_key_is_provided_and_rights_and_regular_offer": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.routes.pro.get_booking_by_token_v2_test.Returns200Test.test_when_user_has_rights_and_regular_offer_and_token_in_lower_case": ["datetime.timedelta"], "tests.routes.pro.get_booking_by_token_v2_test.Returns403Test.test_when_given_api_key_not_related_to_booking_offerer": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.routes.pro.get_booking_by_token_v2_test.Returns403Test.test_when_booking_not_confirmed": ["datetime.timedelta"], "tests.routes.pro.get_booking_by_token_v2_test.Returns403Test.test_when_booking_is_educational_and_refused_by_principal": ["datetime.timedelta"], "tests.routes.pro.get_booking_by_token_v2_test.Returns404Test.test_authenticated_with_api_key_but_token_not_found": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary_test.GetBookingPostponedByProToBeneficiaryTest.test_should_get_sendinblue_email_data_when_stock_date_have_been_changed": ["pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.get_booking_postponed_by_pro_to_beneficiary_email_data", "datetime.datetime", "pcapi.core.bookings.factories.BookingFactory", "pcapi.core.offers.factories.EventStockFactory"], "pcapi.core.mails.transactional.bookings.booking_postponed_by_pro_to_beneficiary.get_booking_postponed_by_pro_to_beneficiary_email_data": [], "tests.core.users.external.external_users_test.test_update_external_user": ["pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.testing.assert_num_queries", "<builtin>.len", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.core.users.external.external_users_test.test_email_should_not_be_blacklisted_in_sendinblue_by_default": ["pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.users.external.update_external_user", "<builtin>.len", "pcapi.core.users.factories.BeneficiaryGrant18Factory"], "tests.core.users.external.external_users_test.test_update_external_pro_user": ["pcapi.core.users.factories.ProFactory", "pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.core.users.external.external_users_test.test_get_user_attributes_beneficiary": ["pcapi.core.users.models.Credit", "pcapi.core.users.factories.BeneficiaryGrant18Factory", "<builtin>.max", "<builtin>.list", "datetime.datetime", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.offers.factories.OfferFactory", "decimal.Decimal", "pcapi.core.users.models.DomainsCredit", "pcapi.core.users.external.models.UserAttributes", "pcapi.core.testing.assert_num_queries"], "tests.core.users.external.external_users_test.test_get_user_attributes_not_beneficiary": ["pcapi.core.testing.assert_num_queries", "pcapi.core.users.factories.UserFactory", "pcapi.core.users.external.models.UserAttributes"], "tests.core.users.external.external_users_test.test_get_bookings_categories_and_subcategories": ["pcapi.core.users.external._get_user_bookings", "pcapi.core.users.factories.BeneficiaryGrant18Factory", "pcapi.core.users.external._get_bookings_categories_and_subcategories", "pcapi.core.bookings.factories.CancelledIndividualBookingFactory", "<builtin>.list", "pcapi.core.bookings.factories.IndividualBookingFactory", "pcapi.core.offers.factories.OfferFactory"], "pcapi.core.users.external._get_user_bookings": [], "pcapi.core.users.external._get_bookings_categories_and_subcategories": [], "src.pcapi.routes.external.bank_informations.update_venue_demarches_simplifiees_application": ["pcapi.validation.routes.dms.BankInformationDmsResponseModel"], "pcapi.validation.routes.dms.BankInformationDmsResponseModel": [], "src.pcapi.routes.external.bank_informations.update_offerer_demarches_simplifiees_application": ["pcapi.validation.routes.dms.BankInformationDmsResponseModel"], "src.pcapi.scripts.full_index_offers.full_index_offers": ["append", "<builtin>.print", "src.pcapi.scripts.full_index_offers.full_index_offers.enqueue_or_index", "src.pcapi.scripts.full_index_offers._get_eta", "<builtin>.ValueError", "sqlalchemy.orm.joinedload", "<builtin>.min"], "src.pcapi.scripts.full_index_offers.full_index_offers.enqueue_or_index": ["append", "clear", "<builtin>.len"], "clear": [], "src.pcapi.scripts.full_index_offers._get_eta": [], "tests.core.mails.transactional.bookings.booking_expiration_to_pro_test.SendExpiredBookingsRecapEmailToOffererTest.test_should_send_email_to_offerer_when_expired_bookings_cancelled": ["pcapi.core.offers.factories.OffererFactory", "<builtin>.len", "pcapi.core.mails.transactional.bookings.booking_expiration_to_pro.send_bookings_expiration_to_pro_email"], "tests.core.mails.transactional.bookings.booking_expiration_to_pro_test.SendExpiredBookingsRecapEmailToOffererTest.test_should_send_two_emails_to_offerer_when_expired_books_bookings_and_other_bookings_cancelled": ["pcapi.core.offers.factories.OffererFactory", "<builtin>.len", "pcapi.core.mails.transactional.bookings.booking_expiration_to_pro.send_bookings_expiration_to_pro_email"], "src.pcapi.core.mails.transactional.users.offer_link_to_ios_user.get_offer_link_to_ios_user_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.core.offers.utils.offer_app_redirect_link"], "pcapi.core.offers.utils.offer_app_redirect_link": [], "src.pcapi.core.mails.transactional.users.offer_link_to_ios_user.send_offer_link_to_ios_user_email": ["src.pcapi.core.mails.transactional.users.offer_link_to_ios_user.get_offer_link_to_ios_user_email_data"], "tests.scripts.bulk_update_is_synchronization_compatible_product_via_isbns_test.test_should_mark_synchronized_offers_and_products_as_not_synchronization_compatible_via_isbn": ["pcapi.core.testing.assert_num_queries", "pcapi.core.offers.factories.ProductFactory"], "tests.scripts.bulk_update_is_synchronization_compatible_product_via_isbns_test.test_should_mark_products_as_synchronization_compatible_via_isbn": ["pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.bulk_update_is_synchronization_compatible_via_isbns", "pcapi.core.offers.factories.ProductFactory"], "pcapi.scripts.bulk_update_is_synchronization_compatible_product_via_isbns.bulk_update_is_synchronization_compatible_via_isbns": [], "src.pcapi.scripts.educational.import_educational_institutions_and_deposits.import_educational_institutions_and_deposits": ["src.pcapi.scripts.educational.import_educational_institutions_and_deposits._process_educational_csv", "<builtin>.print", "<str>.endswith", "<builtin>.open"], "src.pcapi.scripts.educational.import_educational_institutions_and_deposits._process_educational_csv": ["<builtin>.print", "<builtin>.str"], "src.pcapi.routes.pro.user_offerers.get_user_offerer": ["pcapi.core.offerers.repository.find_user_offerers", "pcapi.routes.serialization.offerers_serialize.ListUserOfferersResponseModel"], "pcapi.core.offerers.repository.find_user_offerers": [], "pcapi.routes.serialization.offerers_serialize.ListUserOfferersResponseModel": [], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.should_return_offers_capped_to_max_offers_count": ["<builtin>.isinstance", "<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "pcapi.core.offers.repository.get_capped_offers_for_filters": [], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.should_return_offers_sorted_by_id_desc": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.should_exclude_draft_offers_when_requesting_all_offers": ["pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.should_return_offers_of_given_subcategory_id": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.test_returns_offers_filtered_by_manual_creation_mode_when_provided": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_provider", "pcapi.model_creators.generic_creators.create_venue", "pcapi.core.offers.repository.get_capped_offers_for_filters", "<builtin>.len"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.test_returns_offers_filtered_by_imported_creation_mode_when_provided": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_provider", "pcapi.model_creators.generic_creators.create_venue", "pcapi.core.offers.repository.get_capped_offers_for_filters", "<builtin>.len"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.should_not_return_event_offers_with_only_deleted_stock_if_filtering_by_time_period": ["datetime.datetime", "<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.should_consider_venue_locale_datetime_when_filtering_by_date": ["datetime.datetime", "<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsAdminTest.should_return_offers_of_given_venue_when_user_is_not_attached_to_its_offerer": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsAdminTest.should_return_offers_of_given_venue_when_user_is_attached_to_its_offerer": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsAdminTest.should_return_offers_of_given_offerer_when_user_is_not_attached_to_it": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsAdminTest.should_return_offers_of_given_offerer_when_user_is_attached_to_it": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsProTest.should_not_return_offers_of_given_venue_when_user_is_not_attached_to_its_offerer": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsProTest.should_return_offers_of_given_venue_when_user_is_attached_to_its_offerer": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsProTest.should_not_return_offers_of_given_offerer_when_user_is_not_attached_to_it": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.WhenUserIsProTest.should_return_offers_of_given_offerer_when_user_is_attached_to_it": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.NameOrIsbnFilterTest.should_return_offer_which_name_equal_keyword_when_keyword_is_less_or_equal_than_3_letters": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.NameOrIsbnFilterTest.should_return_offer_which_name_contains_keyword_when_keyword_is_more_than_3_letters": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.NameOrIsbnFilterTest.should_be_case_insensitive": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.NameOrIsbnFilterTest.should_be_accent_sensitive": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.NameOrIsbnFilterTest.should_return_offer_which_isbn_is_equally_to_name_keyword_or_isbn": ["<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data": ["datetime.timedelta"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_active_offers_when_requesting_active_status": ["<builtin>.len", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_inactive_offers_when_requesting_inactive_status": ["<builtin>.len", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_sold_out_offers_when_requesting_sold_out_status": ["<builtin>.len", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_offers_with_no_stocks_when_requesting_sold_out_status": ["tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_offers_with_no_remaining_quantity_and_no_bookings_when_requesting_sold_out_status": ["tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_offers_with_no_remaining_quantity_in_the_future_when_requesting_sold_out_status": ["tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_exclude_offers_with_cancelled_bookings_when_requesting_sold_out_status": ["tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_expired_offers_when_requesting_expired_status": ["<builtin>.len", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_pending_offers_when_requesting_pending_status": ["datetime.timedelta", "<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_rejected_offers_when_requesting_rejected_status": ["datetime.timedelta", "<builtin>.len", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_sold_out_offers_and_requested_venue_when_requesting_sold_out_status_and_specific_venue": ["<builtin>.len", "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.core.offers.repository.get_capped_offers_for_filters"], "tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.should_return_only_active_offer_on_specific_period_when_requesting_active_status_and_time_period": ["tests.core.offers.test_repository.GetCappedOffersForFiltersTest.StatusFiltersTest.init_test_data", "pcapi.utils.date.utc_datetime_to_department_timezone", "pcapi.core.offers.repository.get_capped_offers_for_filters", "<builtin>.len", "datetime.timedelta"], "tests.core.offers.test_repository.GetOffersByIdsTest.test_filter_on_user_offerer": ["pcapi.core.offers.repository.get_offers_by_ids"], "pcapi.core.offers.repository.get_offers_by_ids": [], "tests.core.offers.test_repository.GetOffersByIdsTest.test_return_all_for_admins": ["pcapi.core.offers.repository.get_offers_by_ids"], "tests.core.offers.test_repository.GetActiveOffersCountForVenueTest.test_counts_active_offers_for_venue": ["datetime.timedelta", "pcapi.core.offers.repository.get_active_offers_count_for_venue"], "tests.core.offers.test_repository.GetSoldOutOffersCountForVenueTest.test_counts_sold_out_offers_for_venue": ["datetime.timedelta", "pcapi.core.offers.repository.get_sold_out_offers_count_for_venue"], "tests.core.offers.test_repository.CheckStockConsistenceTest.test_with_inconsistencies": ["pcapi.core.offers.repository.check_stock_consistency", "<builtin>.set"], "pcapi.core.offers.repository.check_stock_consistency": [], "tests.core.offers.test_repository.TomorrowStockTest.test_find_tomorrow_event_stock_ids": ["datetime.timedelta", "pcapi.core.offers.repository.find_tomorrow_event_stock_ids", "<builtin>.set"], "pcapi.core.offers.repository.find_tomorrow_event_stock_ids": [], "tests.core.offers.test_repository.GetExpiredOffersTest.test_basics": ["pcapi.core.offers.repository.get_expired_offers"], "pcapi.core.offers.repository.get_expired_offers": [], "tests.core.offers.test_repository.GetExpiredOffersTest.test_exclude_if_latest_stock_outside_interval": ["pcapi.core.offers.repository.get_expired_offers"], "tests.core.offers.test_repository.DeletePastDraftOfferTest.test_delete_past_draft_offers": ["datetime.timedelta", "pcapi.core.offers.repository.delete_past_draft_offers", "<builtin>.set"], "pcapi.core.offers.repository.delete_past_draft_offers": [], "tests.core.offers.test_repository.AvailableActivationCodeTest.test_activation_code_is_available_for_a_stock": ["pcapi.core.offers.repository.get_available_activation_code", "pcapi.core.offers.factories.ActivationCodeFactory"], "pcapi.core.offers.repository.get_available_activation_code": [], "tests.core.offers.test_repository.AvailableActivationCodeTest.test_expired_activation_code_is_not_available_for_a_stock": ["pcapi.core.offers.repository.get_available_activation_code", "datetime.timedelta", "pcapi.core.offers.factories.ActivationCodeFactory"], "tests.core.offers.test_repository.AvailableActivationCodeTest.test_activation_code_of_a_stock_is_not_available_for_another_stock": ["pcapi.core.offers.repository.get_available_activation_code", "pcapi.core.offers.factories.ActivationCodeFactory"], "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file.run": ["src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._cancel_bookings_of_offers_from_rows", "<builtin>.open"], "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._cancel_bookings_of_offers_from_rows": ["append", "<builtin>.int", "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._get_bookings_from_offer", "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._is_not_flagged_for_cancellation", "<builtin>.len", "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._is_header_or_blank_row"], "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._is_header_or_blank_row": [], "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._is_not_flagged_for_cancellation": [], "src.pcapi.scripts.booking.cancel_bookings_of_events_from_file._get_bookings_from_offer": [], "src.pcapi.tasks.batch_tasks.update_user_attributes_android_task": ["pcapi.models.api_errors.ApiErrors", "pcapi.notifications.push.update_user_attributes"], "src.pcapi.tasks.batch_tasks.update_user_attributes_ios_task": ["pcapi.models.api_errors.ApiErrors", "pcapi.notifications.push.update_user_attributes"], "src.pcapi.tasks.batch_tasks.delete_user_attributes_task": ["pcapi.notifications.push.delete_user_attributes"], "pcapi.notifications.push.delete_user_attributes": [], "src.pcapi.tasks.batch_tasks.send_transactional_notification_task": ["pcapi.notifications.push.send_transactional_notification"], "tests.scheduled_tasks.decorators_test.CronRequireFeatureTest.test_cron_require_feature": ["tests.scheduled_tasks.decorators_test.CronRequireFeatureTest.test_cron_require_feature.decorated_function", "pcapi.scheduled_tasks.decorators.cron_require_feature"], "tests.scheduled_tasks.decorators_test.CronRequireFeatureTest.test_cron_require_feature.decorated_function": [], "tests.scheduled_tasks.decorators_test.CronRequireFeatureTest.when_feature_is_not_activated_raise_an_error": ["pcapi.scheduled_tasks.decorators.cron_require_feature", "tests.scheduled_tasks.decorators_test.CronRequireFeatureTest.when_feature_is_not_activated_raise_an_error.decorated_function"], "tests.scheduled_tasks.decorators_test.CronRequireFeatureTest.when_feature_is_not_activated_raise_an_error.decorated_function": [], "tests.scheduled_tasks.decorators_test.LogCronTest.test_should_call_logger_with_builded_message": ["tests.scheduled_tasks.decorators_test.LogCronTest.test_should_call_logger_with_builded_message.decorated_function", "unittest.mock.call", "pcapi.scheduled_tasks.decorators.log_cron_with_transaction"], "tests.scheduled_tasks.decorators_test.LogCronTest.test_should_call_logger_with_builded_message.decorated_function": [], "src.pcapi.serialization.utils.before_handler": ["pcapi.models.api_errors.ApiErrors", "<builtin>.str"], "src.pcapi.serialization.utils.humanize_id": ["<builtin>.isinstance", "pcapi.utils.human_ids.humanize", "<builtin>.str"], "src.pcapi.serialization.utils.dehumanize_id": ["<builtin>.isinstance", "pcapi.utils.human_ids.dehumanize", "<builtin>.int"], "src.pcapi.serialization.utils.check_string_is_not_empty": ["pydantic.MissingError"], "pydantic.MissingError": [], "src.pcapi.serialization.utils.check_phone_number_format": ["<builtin>.ValueError"], "src.pcapi.serialization.utils.string_to_boolean": ["pydantic.ValidationError"], "pydantic.ValidationError": [], "src.pcapi.serialization.utils.humanize_field": ["pydantic.validator"], "src.pcapi.serialization.utils.dehumanize_field": ["pydantic.validator"], "src.pcapi.serialization.utils.dehumanize_list_field": ["pydantic.validator"], "src.pcapi.serialization.utils.validate_not_empty_string_when_provided": ["pydantic.validator"], "src.pcapi.serialization.utils.validate_phone_number_format": ["pydantic.validator"], "src.pcapi.serialization.utils.string_to_boolean_field": ["pydantic.validator"], "src.pcapi.core.mails.backends.testing.TestingBackend._send": ["<builtin>.isinstance", "dataclasses.asdict", "models.models.MailResult"], "src.pcapi.core.mails.backends.testing.FailingBackend._send": ["models.models.MailResult"], "src.pcapi.scripts.stock.fully_sync_venue.fully_sync_venue": ["pcapi.local_providers.provider_manager.synchronize_venue_provider", "pcapi.core.providers.api.reset_stock_quantity"], "pcapi.core.providers.api.reset_stock_quantity": [], "tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest.test_send_information_error_email_by_default_when_wrong_zerror_code": ["pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email"], "tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest.test_send_information_error_email": ["pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email"], "tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest.test_send_unreadable_document_error_email": ["pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email"], "tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest.test_send_invalid_document_error_email": ["pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email"], "tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest.test_send_foreign_document_error_email": ["pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email"], "tests.core.mails.transactional.users.subscription_document_error_test.SendinblueSubscriptionDocumentErrorEmailTest.test_send_information_document_error_email": ["pcapi.core.mails.transactional.users.subscription_document_error.send_subscription_document_error_email"], "src.pcapi.routes.serialization.bookings_serialize.get_booking_response": ["pcapi.utils.date.format_into_utc_date", "pcapi.utils.human_ids.humanize"], "tests.sandboxes.scripts.create_industrial_app_users_test.CreateIndustrialWebappUsersTest.test_create_industrial_app_users": ["pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_users"], "pcapi.sandboxes.scripts.creators.industrial.create_industrial_app_users.create_industrial_app_users": [], "src.pcapi.core.fraud.api.on_educonnect_result": ["src.pcapi.core.fraud.api.on_identity_fraud_check_result", "<builtin>.str"], "src.pcapi.core.fraud.api.on_identity_fraud_check_result": ["src.pcapi.core.fraud.api._duplicate_user_fraud_item", "src.pcapi.core.fraud.api._check_user_eligibility", "<builtin>.Exception", "src.pcapi.core.fraud.api.educonnect_fraud_checks", "src.pcapi.core.fraud.api._check_user_email_is_validated", "src.pcapi.core.fraud.api.validate_frauds", "src.pcapi.core.fraud.api.dms_fraud_checks", "src.pcapi.core.fraud.api._check_user_has_no_active_deposit", "src.pcapi.core.fraud.api._check_user_names_valid"], "src.pcapi.core.fraud.api.educonnect_fraud_checks": ["append"], "src.pcapi.core.fraud.api.dms_fraud_checks": ["append"], "src.pcapi.core.fraud.api._duplicate_user_fraud_item": ["pcapi.repository.user_queries.matching"], "pcapi.repository.user_queries.matching": [], "src.pcapi.core.fraud.api._check_user_names_valid": ["src.pcapi.core.fraud.api.is_subscription_name_valid"], "src.pcapi.core.fraud.api.is_subscription_name_valid": ["pcapi.core.fraud.utils.is_latin"], "src.pcapi.core.fraud.api._check_user_eligibility": [], "src.pcapi.core.fraud.api._check_user_has_no_active_deposit": [], "src.pcapi.core.fraud.api._check_user_email_is_validated": [], "src.pcapi.core.fraud.api.validate_frauds": ["<builtin>.all", "<builtin>.any"], "src.pcapi.core.fraud.api.on_dms_fraud_result": ["src.pcapi.core.fraud.api.decide_eligibility", "src.pcapi.core.fraud.api.on_identity_fraud_check_result", "<builtin>.str"], "src.pcapi.core.fraud.api.decide_eligibility": [], "src.pcapi.core.fraud.api.on_user_profiling_result": ["src.pcapi.core.fraud.api.on_user_profiling_check_result"], "src.pcapi.core.fraud.api.on_user_profiling_check_result": [], "src.pcapi.core.fraud.api.handle_phone_already_exists": ["src.pcapi.core.fraud.api.create_failed_phone_validation_fraud_check"], "src.pcapi.core.fraud.api.create_failed_phone_validation_fraud_check": [], "src.pcapi.core.fraud.api.handle_blacklisted_sms_recipient": ["src.pcapi.core.fraud.api.create_failed_phone_validation_fraud_check"], "src.pcapi.core.fraud.api.handle_sms_sending_limit_reached": ["src.pcapi.core.fraud.api.create_failed_phone_validation_fraud_check"], "src.pcapi.core.fraud.api.handle_phone_validation_attempts_limit_reached": ["src.pcapi.core.fraud.api.create_failed_phone_validation_fraud_check"], "src.pcapi.core.fraud.api.create_dms_fraud_check_error": ["<builtin>.str"], "src.pcapi.core.fraud.api.has_performed_honor_statement": ["<builtin>.any"], "tests.routes.pro.post_offerer_api_key_test.test_api_key_journey": ["pcapi.core.offers.factories.UserOffererFactory", "pcapi.utils.human_ids.humanize", "pcapi.core.offerers.api.find_api_key"], "tests.routes.pro.post_offerer_api_key_test.test_maximal_api_key_reached": ["pcapi.core.offerers.factories.ApiKeyFactory", "pcapi.core.offers.factories.UserOffererFactory", "<builtin>.range", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.post_offerer_api_key_test.test_delete_api_key_not_found": ["pcapi.core.offers.factories.UserOffererFactory"], "tests.routes.pro.post_offerer_api_key_test.test_delete_api_key_not_allowed": ["pcapi.core.offerers.factories.ApiKeyFactory", "pcapi.core.offers.factories.UserOffererFactory"], "tests.routes.pro.get_venue_providers_test.Returns200Test.test_get_list_with_valid_venue_id": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.repository.get_provider_by_local_class", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_venue_providers_test.Returns200Test.test_get_list_that_include_allocine_with_valid_venue_id": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.repository.get_provider_by_local_class", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_venue_providers_test.Returns400Test.when_listing_all_venues_without_venue_id_argument": ["tests.conftest.TestClient.__init__", "pcapi.core.providers.repository.get_provider_by_local_class", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "src.pcapi.admin.custom_views.user_offerer_view.UserOffererView.delete_model": ["<builtin>.super", "pcapi.core.users.external.update_external_pro", "pcapi.repository.user_offerer_queries.find_one_or_none_by_id"], "pcapi.repository.user_offerer_queries.find_one_or_none_by_id": [], "tests.scripts.offerer.generate_and_save_api_key_for_offerer_test.test_generate_and_save_api_key_for_offerer": ["pcapi.core.offerers.factories.ApiKeyFactory", "pcapi.scripts.offerer.generate_and_save_api_key_for_offerer.generate_and_save_api_key_for_offerer"], "src.pcapi.utils.crypto._hash_password_with_md5": ["<builtin>.RuntimeError", "hashlib.md5"], "hashlib.md5": [], "src.pcapi.utils.crypto._check_password_with_md5": ["src.pcapi.utils.crypto._hash_password_with_md5", "<builtin>.RuntimeError"], "src.pcapi.sandboxes.scripts.getters.pro_05_venue.get_existing_pro_validated_user_with_validated_offerer_validated_user_offerer_no_physical_venue": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper"], "tests.repository.beneficiary_import_queries_test.GetAlreadyProcessedApplicationIdTest.test_already_processed_application_ids": ["pcapi.core.subscription.dms.api.get_already_processed_applications_ids"], "pcapi.core.subscription.dms.api.get_already_processed_applications_ids": [], "tests.repository.beneficiary_import_queries_test.GetAlreadyProcessedApplicationIdTest.test_already_processed_application_ids_right_procedure": ["pcapi.core.subscription.dms.api.get_already_processed_applications_ids"], "tests.repository.beneficiary_import_queries_test.GetAlreadyProcessedApplicationIdTest.test_already_processed_application_ids_with_fraud_checks": ["pcapi.core.subscription.dms.api.get_already_processed_applications_ids"], "tests.repository.beneficiary_import_queries_test.GetAlreadyProcessedApplicationIdTest.test_already_processed_application_ids_with_all_fraud_checks_status": ["pcapi.core.subscription.dms.api.get_already_processed_applications_ids"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapTest.test_should_return_json_with_all_parameters_for_thing_stock": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.utils.date.format_into_timezoned_date", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated", "pcapi.utils.human_ids.humanize"], "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated": [], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapTest.test_should_return_json_with_event_date_additional_parameter_for_event_stock": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.utils.date.format_into_timezoned_date", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated", "datetime.timedelta", "pcapi.utils.human_ids.humanize"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapTest.test_should_return_json_with_offer_isbn_additional_parameter_for_thing_stock": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.utils.date.format_into_timezoned_date", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated", "pcapi.utils.human_ids.humanize"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapHistoryTest.test_should_return_booking_recap_history_with_cancellation_date_when_cancelled": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapHistoryTest.test_should_return_booking_recap_history_with_reimbursed_and_used_dated_when_reimbursed": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapHistoryTest.test_should_return_booking_recap_history_with_date_used_when_used": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapHistoryTest.test_should_return_booking_recap_history_with_only_booking_date_when_just_booked": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated"], "tests.routes.serialization.bookings_recap_serialize_test.SerializeBookingRecapHistoryTest.test_should_return_booking_recap_history_with_empty_validated_date_when_booking_was_not_validated_but_reimbursed": ["pcapi.domain.booking_recap.bookings_recap_paginated.BookingsRecapPaginated", "tests.domain_creators.generic_creators.create_domain_booking_recap", "<builtin>.list", "datetime.datetime", "pcapi.routes.serialization.bookings_recap_serialize.serialize_bookings_recap_paginated"], "src.pcapi.core.logging.get_or_set_correlation_id": ["src.pcapi.core.logging._is_within_app_context"], "src.pcapi.core.logging._is_within_app_context": [], "src.pcapi.core.logging.get_logged_in_user_id": ["src.pcapi.core.logging._is_within_app_context"], "src.pcapi.core.logging.get_api_key_offerer_id": ["src.pcapi.core.logging._is_within_app_context", "<builtin>.hasattr"], "src.pcapi.core.logging.JsonLogEncoder.default": ["<builtin>.isinstance", "<builtin>.float", "<builtin>.list", "<builtin>.super", "<builtin>.hasattr", "<builtin>.str"], "src.pcapi.core.logging.JsonFormatter.format": ["src.pcapi.core.logging.get_api_key_offerer_id", "src.pcapi.core.logging.get_logged_in_user_id", "<builtin>.getattr", "<builtin>.str", "src.pcapi.core.logging.get_or_set_correlation_id"], "src.pcapi.core.logging.install_logging": ["src.pcapi.core.logging.monkey_patch_logger_makeRecord", "append", "src.pcapi.core.logging._silence_noisy_loggers", "<builtin>.any", "<builtin>.open"], "src.pcapi.core.logging._silence_noisy_loggers": [], "src.pcapi.core.logging.monkey_patch_logger_makeRecord": [], "tests.routes.pro.patch_booking_keep_by_token_test.Returns204Test.WithApiKeyAuthTest.test_when_api_key_provided_is_related_to_regular_offer_with_rights": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.routes.pro.patch_booking_keep_by_token_test.Returns403Test.WithApiKeyAuthTest.test_when_the_api_key_is_not_linked_to_the_right_offerer": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.core.mails.transactional.users.birthday_to_newly_eligible_user_test.SendinblueSendNewlyEligibleUserEmailTest.test_send_anniversary_age_18_email": ["pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user.send_birthday_age_18_email_to_newly_eligible_user", "<builtin>.len"], "src.pcapi.routes.serialization.offerers_serialize.GetOffererResponseModel.from_orm": ["pcapi.core.offerers.repository.get_api_key_prefixes", "<builtin>.super", "pcapi.core.offerers.repository.has_digital_venue_with_at_least_one_offer", "pcapi.core.offerers.repository.has_physical_venue_without_draft_or_accepted_bank_information"], "pcapi.core.offerers.repository.get_api_key_prefixes": [], "src.pcapi.routes.adage_iframe.venues.get_venue_by_siret": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.routes.adage_iframe.venues.get_venue_by_id": ["pcapi.models.api_errors.ApiErrors"], "tests.connectors.api_adage_test.AdageHttpClientTest.test_should_raise_AdageException_when_api_response_status_not_201": ["pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking", "<builtin>.str"], "tests.connectors.api_adage_test.AdageHttpClientTest.test_should_not_raise_exception_when_api_response_status_201": ["pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking"], "src.pcapi.admin.custom_views.feature_view.FeatureView.on_model_change": ["<builtin>.super"], "src.pcapi.routes.pro.offerers.get_offerers": ["pcapi.routes.serialization.offerers_serialize.GetOfferersListResponseModel", "pcapi.infrastructure.repository.pro_offerers.paginated_offerers_sql_repository.PaginatedOfferersSQLRepository"], "pcapi.routes.serialization.offerers_serialize.GetOfferersListResponseModel": [], "src.pcapi.routes.pro.offerers.list_offerers_names": ["pcapi.routes.serialization.offerers_serialize.GetOfferersNamesResponseModel", "pcapi.core.offerers.repository.get_all_offerers_for_user"], "pcapi.routes.serialization.offerers_serialize.GetOfferersNamesResponseModel": [], "src.pcapi.routes.pro.offerers.list_educational_offerers": ["pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersResponseModel", "pcapi.models.api_errors.ApiErrors"], "pcapi.routes.serialization.offerers_serialize.GetEducationalOfferersResponseModel": [], "src.pcapi.routes.pro.offerers.get_offerer": ["pcapi.utils.human_ids.dehumanize", "pcapi.utils.rest.check_user_has_access_to_offerer", "pcapi.utils.rest.load_or_404"], "src.pcapi.routes.pro.offerers.generate_api_key_route": ["pcapi.utils.rest.check_user_has_access_to_offerer", "pcapi.utils.human_ids.dehumanize", "pcapi.routes.serialization.offerers_serialize.GenerateOffererApiKeyResponse", "pcapi.utils.rest.load_or_404", "pcapi.models.api_errors.ApiErrors"], "pcapi.routes.serialization.offerers_serialize.GenerateOffererApiKeyResponse": [], "src.pcapi.routes.pro.offerers.delete_api_key": ["pcapi.repository.transaction"], "src.pcapi.routes.pro.offerers.can_offerer_create_educational_offer": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_event_stocks.create_industrial_event_stocks": ["append", "count", "<map>.values", "<builtin>.list", "utils.get_price_by_short_name", "<builtin>.str", "pcapi.model_creators.specific_creators.create_stock_from_event_occurrence", "<builtin>.len", "utils.get_occurrence_short_name", "pcapi.sandboxes.scripts.utils.select.remove_every"], "tests.models.venue_sql_entity_test.test_offerer_cannot_have_address_and_isVirtual": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_offerer_not_isVirtual_and_has_siret_can_have_null_address": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_offerer_not_isVirtual_and_has_siret_cannot_have_null_postal_code_nor_city_nor_departement_code": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_offerer_not_isVirtual_and_has_no_siret_cannot_have_null_address_nor_postal_code_nor_city_nor_departement_code": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_offerer_not_isVirtual_and_has_no_siret_and_has_address_and_postal_code_and_city_and_departement_code": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_offerer_cannot_create_a_second_virtual_venue": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_offerer_cannot_update_a_second_venue_to_be_virtual": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_venue_raises_exception_when_is_virtual_and_has_siret": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_venue_raises_exception_when_no_siret_and_no_comment": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_venue_raises_exception_when_siret_and_comment_but_virtual": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_venue_should_not_raise_exception_when_siret_and_comment": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_venue_should_not_raise_exception_when_no_siret_but_comment": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.test_nOffers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.models.venue_sql_entity_test.DepartementCodeTest.test_venue_in_overseas_department_has_a_three_digit_departement_code": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.VenueBankInformationTest.test_bic_property_returns_bank_information_bic_when_venue_has_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.VenueBankInformationTest.test_bic_property_returns_none_when_does_not_have_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.VenueBankInformationTest.test_iban_property_returns_bank_information_iban_when_venue_has_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.VenueBankInformationTest.test_iban_property_returns_none_when_venue_has_bank_information": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.VenueBankInformationTest.test_demarchesSimplifieesApplicationId_returns_id_if_status_is_draft": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.models.venue_sql_entity_test.VenueBankInformationTest.test_demarchesSimplifieesApplicationId_returns_none_if_status_is_rejected": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue"], "src.pcapi.admin.autocomplete.offerers": ["werkzeug.exceptions.Forbidden"], "src.pcapi.scheduled_tasks.clock.synchronize_allocine_stocks": ["pcapi.core.providers.repository.get_provider_by_local_class", "pcapi.local_providers.provider_manager.synchronize_venue_providers_for_provider"], "src.pcapi.scheduled_tasks.clock.pc_handle_expired_bookings": ["pcapi.scripts.booking.handle_expired_bookings.handle_expired_bookings"], "pcapi.scripts.booking.handle_expired_bookings.handle_expired_bookings": [], "src.pcapi.scheduled_tasks.clock.pc_notify_soon_to_be_expired_individual_bookings": ["pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_soon_to_be_expired_individual_bookings"], "pcapi.scripts.booking.notify_soon_to_be_expired_bookings.notify_soon_to_be_expired_individual_bookings": [], "src.pcapi.scheduled_tasks.clock.pc_notify_newly_eligible_age_18_users": ["pcapi.core.mails.transactional.users.birthday_to_newly_eligible_user.send_birthday_age_18_email_to_newly_eligible_user", "pcapi.core.users.repository.get_newly_eligible_age_18_users"], "pcapi.core.users.repository.get_newly_eligible_age_18_users": [], "src.pcapi.scheduled_tasks.clock.pc_check_stock_quantity_consistency": ["pcapi.core.offers.repository.check_stock_consistency", "<builtin>.str"], "src.pcapi.scheduled_tasks.clock.pc_send_tomorrow_events_notifications": ["pcapi.core.offers.repository.find_tomorrow_event_stock_ids"], "src.pcapi.scheduled_tasks.clock.pc_clean_past_draft_offers": ["pcapi.core.offers.repository.delete_past_draft_offers"], "src.pcapi.scheduled_tasks.clock.pc_send_withdrawal_terms_to_offerers_validated_yesterday": ["pcapi.core.offerers.repository.get_offerers_by_date_validated", "pcapi.domain.user_emails.send_withdrawal_terms_to_newly_validated_offerer"], "src.pcapi.scheduled_tasks.clock.pc_recredit_underage_users": ["pcapi.scripts.payment.user_recredit.recredit_underage_users"], "pcapi.scripts.payment.user_recredit.recredit_underage_users": [], "src.pcapi.scheduled_tasks.clock.pc_user_turned_eighteen_automation": ["pcapi.core.users.external.user_automations.users_turned_eighteen_automation"], "src.pcapi.scheduled_tasks.clock.pc_users_beneficiary_credit_expiration_within_next_3_months_automation": ["pcapi.core.users.external.user_automations.users_beneficiary_credit_expiration_within_next_3_months_automation"], "pcapi.core.users.external.user_automations.users_beneficiary_credit_expiration_within_next_3_months_automation": [], "src.pcapi.scheduled_tasks.clock.pc_user_ex_beneficiary_automation": ["pcapi.core.users.external.user_automations.users_ex_beneficiary_automation"], "pcapi.core.users.external.user_automations.users_ex_beneficiary_automation": [], "src.pcapi.scheduled_tasks.clock.pc_users_inactive_since_30_days_automation": ["pcapi.core.users.external.user_automations.users_inactive_since_30_days_automation"], "src.pcapi.scheduled_tasks.clock.pc_users_one_year_with_pass_automation": ["pcapi.core.users.external.user_automations.users_one_year_with_pass_automation"], "pcapi.core.users.external.user_automations.users_one_year_with_pass_automation": [], "src.pcapi.scheduled_tasks.clock.pc_notify_users_bookings_not_retrieved": ["pcapi.notifications.push.transactional_notifications.get_soon_expiring_bookings_with_offers_notification_data"], "pcapi.notifications.push.transactional_notifications.get_soon_expiring_bookings_with_offers_notification_data": [], "src.pcapi.scheduled_tasks.clock.clock": ["sentry_sdk.set_tag", "apscheduler.schedulers.blocking.BlockingScheduler"], "src.pcapi.core.mails.transactional.users.pre_subscription_dms_error.get_pre_subscription_dms_error_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.users.pre_subscription_dms_error.send_pre_subscription_from_dms_error_email_to_beneficiary": ["src.pcapi.core.mails.transactional.users.pre_subscription_dms_error.get_pre_subscription_dms_error_email_data"], "tests.routes.serialization.venue_labels_serialize_test.SerializeVenueLabelsTest.should_return_dict_with_expected_information": ["pcapi.utils.human_ids.humanize", "pcapi.core.offerers.models.VenueLabel"], "src.pcapi.workers.venue_provider_job.venue_provider_job": ["pcapi.local_providers.provider_manager.synchronize_venue_provider", "pcapi.repository.venue_provider_queries.get_venue_provider_by_id"], "src.pcapi.domain.users.ClientError.__init__": ["<builtin>.super"], "src.pcapi.domain.users.UnauthorizedForAdminUser.__init__": ["<builtin>.super"], "tests.core.subscription.test_api.EduconnectFlowTest.test_educonnect_subscription": ["datetime.datetime", "flask_jwt_extended.utils.create_access_token", "unittest.mock.MagicMock", "<builtin>.len"], "tests.core.subscription.test_api.NextSubscriptionStepTest.test_get_allowed_identity_check_methods": ["dateutil.relativedelta.relativedelta", "pcapi.core.testing.override_features"], "tests.core.subscription.test_api.NextSubscriptionStepTest.test_get_maintenance_page_type": ["dateutil.relativedelta.relativedelta", "pcapi.core.testing.override_features"], "tests.core.subscription.test_api.OnSuccessfulDMSApplicationTest.test_new_beneficiaries_requires_userprofiling": ["dateutil.relativedelta.relativedelta"], "tests.core.subscription.test_api.OnSuccessfulDMSApplicationTest.test_new_beneficiaries_are_recorded_with_deposit": ["dateutil.relativedelta.relativedelta", "<builtin>.len"], "tests.core.subscription.test_api.OnSuccessfulDMSApplicationTest.test_error_is_collected_if_beneficiary_could_not_be_saved": ["<builtin>.len"], "tests.core.subscription.test_api.OnSuccessfulDMSApplicationTest.test_activate_beneficiary_when_confirmation_happens_after_18_birthday": ["freezegun.freeze_time"], "tests.core.subscription.test_api.OnSuccessfulDMSApplicationTest.test_activate_beneficiary_when_confirmation_happens_after_18_birthday_requires_phone_validation": ["freezegun.freeze_time"], "tests.core.subscription.test_api.OverflowSubscriptionLimitationTest.test__is_ubble_allowed_if_subscription_overflow": ["dateutil.relativedelta.relativedelta"], "tests.core.subscription.test_api.CommonSubscritpionTest.test_handle_eligibility_difference_between_declaration_and_identity_provider_eligibility_diff": ["<builtin>.sorted", "<builtin>.len"], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.test_no_missing_step": ["tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.eligible_user"], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.eligible_user": [], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.test_missing_step": ["tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.eligible_user"], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.test_rejected_import": ["tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.eligible_user"], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.test_missing_all": ["tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.eligible_user"], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.test_missing_userprofiling_after_dms_application": ["tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.eligible_user"], "tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.test_missing_profile_after_dms_application": ["tests.core.subscription.test_api.HasPassedAllChecksToBecomeBeneficiaryTest.eligible_user"], "tests.core.bookings.test_api.BookOfferTest.test_create_booking": ["<builtin>.len"], "tests.core.bookings.test_api.BookOfferTest.test_free_offer_booking_by_ex_beneficiary": ["freezegun.freeze_time", "dateutil.relativedelta.relativedelta"], "tests.core.bookings.test_api.BookOfferTest.test_booked_categories_are_sent_to_batch_backend": ["<builtin>.sorted", "datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_api.BookOfferTest.test_create_event_booking": ["datetime.timedelta", "<builtin>.len"], "tests.core.bookings.test_api.BookOfferTest.WhenBookingWithActivationCodeTest.test_raise_when_activation_codes_are_expired": ["datetime.datetime"], "tests.core.bookings.test_api.CancelByBeneficiaryTest.test_cancel_booking": ["pcapi.core.testing.assert_num_queries", "<builtin>.len"], "tests.core.bookings.test_api.CancelByBeneficiaryTest.test_cancel_booking_twice": ["<builtin>.len"], "tests.core.bookings.test_api.CancelByBeneficiaryTest.test_raise_if_event_too_close": ["datetime.timedelta"], "tests.core.bookings.test_api.CancelByBeneficiaryTest.test_raise_if_booking_created_too_long_ago_to_cancel_booking": ["datetime.timedelta"], "tests.core.bookings.test_api.CancelByBeneficiaryTest.test_raise_if_event_too_close_and_booked_long_ago": ["datetime.timedelta"], "tests.core.bookings.test_api.CancelByOffererTest.test_cancel": ["<builtin>.next", "<builtin>.len"], "tests.core.bookings.test_api.CancelByOffererTest.test_cancel_all_bookings_from_stock": ["<builtin>.len"], "tests.core.bookings.test_api.CancelForFraudTest.test_cancel": ["<builtin>.len"], "tests.core.bookings.test_api.MarkAsUsedTest.test_mark_as_used": ["<builtin>.len"], "tests.core.bookings.test_api.MarkAsUsedTest.test_mark_as_used_when_stock_starts_soon": ["datetime.timedelta"], "tests.core.bookings.test_api.MarkAsUsedTest.test_raise_if_too_soon_to_mark_as_used": ["datetime.timedelta"], "tests.core.bookings.test_api.MarkAsUnusedTest.test_mark_as_unused": ["<builtin>.len"], "tests.core.bookings.test_api.ComputeCancellationDateTest.test_returns_creation_date_if_event_begins_too_soon": ["datetime.timedelta"], "tests.core.bookings.test_api.ComputeCancellationDateTest.test_returns_two_days_after_booking_creation_if_event_begins_in_more_than_four_days": ["datetime.timedelta"], "tests.core.bookings.test_api.ComputeCancellationDateTest.test_returns_two_days_before_event_if_event_begins_between_two_and_four_days_from_now": ["datetime.timedelta"], "tests.core.bookings.test_api.UpdateCancellationLimitDatesTest.should_update_bookings_cancellation_limit_dates_for_event_beginning_tomorrow": ["datetime.datetime", "datetime.timedelta"], "tests.core.bookings.test_api.UpdateCancellationLimitDatesTest.should_update_bookings_cancellation_limit_dates_for_event_beginning_in_three_days": ["datetime.datetime", "datetime.timedelta"], "tests.core.bookings.test_api.UpdateCancellationLimitDatesTest.should_update_bookings_cancellation_limit_dates_for_event_beginning_in_a_week": ["datetime.datetime", "datetime.timedelta"], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest.test_update_booking_used_when_event_date_is_3_days_before": ["datetime.datetime", "datetime.timedelta"], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest.test_does_not_update_when_event_date_is_only_1_day_before": ["datetime.timedelta"], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest.test_does_not_update_booking_if_already_used": ["datetime.timedelta"], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest.test_does_not_update_booking_if_cancelled": ["datetime.timedelta"], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest.test_update_educational_booking_if_not_used": ["datetime.timedelta"], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest.test_does_not_update_educational_booking_if_not_used_and_refused_by_principal": ["datetime.timedelta"], "tests.core.bookings.test_api.AutoMarkAsUsedAfterEventTest.test_update_educational_booking_if_not_used_and_not_validated_by_principal_yet": ["datetime.timedelta"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_offerers_with_pro_users.create_industrial_offerers_with_pro_users": ["pcapi.model_creators.generic_creators.create_offerer", "<map>.values", "pcapi.sandboxes.scripts.utils.select.pick_every", "<builtin>.enumerate", "<builtin>.list", "pcapi.model_creators.generic_creators.create_user_offerer", "<builtin>.range", "<builtin>.str", "<builtin>.len", "pcapi.sandboxes.scripts.utils.helpers.get_email", "pcapi.core.offerers.repository.check_if_siren_already_exists", "<map>.items"], "pcapi.core.offerers.repository.check_if_siren_already_exists": [], "pcapi.sandboxes.scripts.utils.helpers.get_email": [], "pcapi.sandboxes.scripts.utils.select.pick_every": [], "src.pcapi.core.mails.backends.logger.LoggerBackend._send": ["<builtin>.isinstance", "dataclasses.asdict", "models.models.MailResult"], "tests.core.finance.test_repository.GetBusinessUnitsTest.test_basics": ["<builtin>.list"], "tests.core.finance.test_repository.GetBusinessUnitsTest.test_pro": ["<builtin>.list"], "tests.core.finance.test_repository.GetBusinessUnitsTest.test_admin_and_filter_on_offerer_id": ["<builtin>.list"], "tests.core.finance.test_repository.GetBusinessUnitsTest.test_pro_and_filter_on_offerer_id": ["<builtin>.list"], "tests.core.finance.test_repository.GetBusinessUnitsTest.test_check_offerer_id_and_pro_user": ["<builtin>.list"], "tests.core.finance.test_repository.GetBusinessUnitsTest.test_return_accepted_bank_information_only": ["<builtin>.list"], "tests.core.finance.test_repository.GetInvoicesQueryTest.test_basics": ["<builtin>.list"], "tests.core.finance.test_repository.GetInvoicesQueryTest.test_filter_on_date": ["<builtin>.list"], "tests.core.finance.test_repository.GetInvoicesQueryTest.test_filter_on_business_unit": ["<builtin>.list"], "tests.core.finance.test_repository.GetInvoicesQueryTest.test_wrong_business_unit": ["<builtin>.list"], "tests.core.finance.test_repository.GetInvoicesQueryTest.test_admin_filter_on_business_unit": ["<builtin>.list"], "tests.core.finance.test_repository.GetInvoicesQueryTest.test_admin_without_filter": ["<builtin>.list"], "src.pcapi.core.subscription.api.activate_beneficiary": ["src.pcapi.core.subscription.api._send_beneficiary_activation_email"], "src.pcapi.core.subscription.api._send_beneficiary_activation_email": [], "src.pcapi.core.subscription.api.has_completed_profile": ["<builtin>.all"], "src.pcapi.core.subscription.api.get_email_validation_subscription_item": ["src.pcapi.core.subscription.api.is_eligibility_activable"], "src.pcapi.core.subscription.api.is_eligibility_activable": [], "src.pcapi.core.subscription.api.get_phone_validation_subscription_item": ["src.pcapi.core.subscription.api.is_eligibility_activable"], "src.pcapi.core.subscription.api.get_user_profiling_subscription_item": ["src.pcapi.core.subscription.api.is_eligibility_activable"], "src.pcapi.core.subscription.api.get_profile_completion_subscription_item": ["src.pcapi.core.subscription.api.has_completed_profile", "src.pcapi.core.subscription.api.is_eligibility_activable"], "src.pcapi.core.subscription.api.get_identity_check_subscription_status": ["src.pcapi.core.subscription.api._get_jouve_subscription_item_status", "<builtin>.any"], "src.pcapi.core.subscription.api._get_jouve_subscription_item_status": ["<builtin>.any", "src.pcapi.core.subscription.api.is_eligibility_activable"], "src.pcapi.core.subscription.api.get_identity_check_subscription_item": ["src.pcapi.core.subscription.api.get_identity_check_subscription_status"], "src.pcapi.core.subscription.api.get_honor_statement_subscription_item": ["src.pcapi.core.subscription.api.is_eligibility_activable"], "src.pcapi.core.subscription.api.get_next_subscription_step": ["src.pcapi.core.subscription.api._needs_to_perform_identity_check", "src.pcapi.core.subscription.api.has_completed_profile", "src.pcapi.core.subscription.api.get_allowed_identity_check_methods"], "src.pcapi.core.subscription.api._needs_to_perform_identity_check": ["src.pcapi.core.subscription.api.get_identity_check_subscription_status"], "src.pcapi.core.subscription.api.get_allowed_identity_check_methods": ["src.pcapi.core.subscription.api._is_ubble_allowed_if_subscription_overflow", "src.pcapi.core.subscription.api.is_identity_check_with_document_method_allowed_for_underage", "append"], "src.pcapi.core.subscription.api._is_ubble_allowed_if_subscription_overflow": [], "src.pcapi.core.subscription.api.is_identity_check_with_document_method_allowed_for_underage": [], "src.pcapi.core.subscription.api.complete_profile": ["pcapi.domain.postal_code.postal_code.PostalCode", "src.pcapi.core.subscription.api.activate_beneficiary_if_no_missing_step"], "src.pcapi.core.subscription.api.activate_beneficiary_if_no_missing_step": ["src.pcapi.core.subscription.api.has_passed_all_checks_to_become_beneficiary", "src.pcapi.core.subscription.api.activate_beneficiary"], "src.pcapi.core.subscription.api.has_passed_all_checks_to_become_beneficiary": ["src.pcapi.core.subscription.api.get_user_profiling_subscription_item", "src.pcapi.core.subscription.api.get_profile_completion_subscription_item"], "src.pcapi.core.subscription.api.get_maintenance_page_type": ["src.pcapi.core.subscription.api.get_allowed_identity_check_methods"], "src.pcapi.core.subscription.api.on_successful_application": ["src.pcapi.core.subscription.api.activate_beneficiary_if_no_missing_step"], "src.pcapi.core.fraud.models._parse_level": ["<builtin>.int"], "src.pcapi.core.fraud.models.BeneficiaryFraudCheck.source_data": ["<builtin>.NotImplementedError", "<builtin>.ValueError"], "src.pcapi.core.educational.adage_backends.adage.AdageHttpClient.__init__": ["<builtin>.super"], "src.pcapi.core.educational.adage_backends.adage.AdageHttpClient.notify_prebooking": ["pcapi.core.educational.models.AdageApiResult", "pcapi.connectors.api_adage.AdageException", "<builtin>.dict"], "pcapi.connectors.api_adage.AdageException": [], "src.pcapi.core.educational.adage_backends.adage.AdageHttpClient.notify_offer_or_stock_edition": ["pcapi.core.educational.models.AdageApiResult", "pcapi.connectors.api_adage.AdageException", "<builtin>.dict"], "src.pcapi.core.educational.adage_backends.adage.AdageHttpClient.get_adage_offerer": ["pcapi.connectors.api_adage.AdageException", "pydantic.parse_obj_as", "pcapi.connectors.api_adage.CulturalPartnerNotFoundException"], "pydantic.parse_obj_as": [], "src.pcapi.core.educational.adage_backends.adage.AdageHttpClient.notify_booking_cancellation_by_offerer": ["pcapi.core.educational.models.AdageApiResult", "pcapi.connectors.api_adage.AdageException", "<builtin>.dict"], "src.pcapi.admin.permissions.has_permission": ["<map>.get", "src.pcapi.admin.permissions._get_permission_mapping", "<builtin>.bool"], "src.pcapi.admin.permissions._get_permission_mapping": [], "src.pcapi.core.offers.repository.get_capped_offers_for_filters": ["operator.attrgetter", "pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter.to_domain", "<builtin>.len", "<builtin>.sorted", "src.pcapi.core.offers.repository.get_offers_by_filters", "sqlalchemy.orm.joinedload"], "src.pcapi.core.offers.repository.get_offers_by_filters": ["sqlalchemy.and_", "src.pcapi.core.offers.repository._filter_by_status", "<builtin>.len", "src.pcapi.core.offers.repository._filter_by_creation_mode"], "src.pcapi.core.offers.repository._filter_by_creation_mode": [], "src.pcapi.core.offers.repository._filter_by_status": [], "pcapi.infrastructure.repository.pro_offers.offers_recap_domain_converter.to_domain": [], "src.pcapi.core.offers.repository.get_offers_by_ids": ["sqlalchemy.and_"], "src.pcapi.core.offers.repository.get_stocks_for_offer": ["sqlalchemy.orm.joinedload"], "src.pcapi.core.offers.repository.get_offers_map_by_venue_reference": ["pcapi.utils.custom_keys.compute_venue_reference"], "src.pcapi.core.offers.repository.get_stocks_by_id_at_providers": ["sqlalchemy.sql.functions.coalesce", "sqlalchemy.and_"], "src.pcapi.core.offers.repository.get_active_offers_count_for_venue": ["src.pcapi.core.offers.repository._filter_by_status"], "src.pcapi.core.offers.repository.get_sold_out_offers_count_for_venue": ["src.pcapi.core.offers.repository._filter_by_status"], "src.pcapi.core.offers.repository.get_and_lock_stock": ["pcapi.core.offers.exceptions.StockDoesNotExist"], "pcapi.core.offers.exceptions.StockDoesNotExist": [], "src.pcapi.core.offers.repository.find_tomorrow_event_stock_ids": ["datetime.timedelta", "sqlalchemy.orm.load_only"], "src.pcapi.core.offers.repository.delete_past_draft_offers": ["datetime.timedelta"], "src.pcapi.core.offers.repository.get_available_activation_code": ["sqlalchemy.or_"], "src.pcapi.core.offers.repository.get_educational_offer_by_id": ["src.pcapi.core.offers.repository.get_educational_offer_by_id_base_query"], "src.pcapi.core.offers.repository.get_educational_offer_by_id_base_query": [], "src.pcapi.core.offers.repository.get_non_deleted_stock_by_id": ["pcapi.core.offers.exceptions.StockDoesNotExist"], "src.pcapi.core.offers.repository.get_offer_by_id": ["pcapi.core.offers.exceptions.OfferNotFound", "sqlalchemy.orm.joinedload"], "pcapi.core.offers.exceptions.OfferNotFound": [], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.get_booking_cancellation_confirmation_by_pro_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "pcapi.utils.mailing.format_booking_hours_for_email", "pcapi.utils.mailing.format_booking_date_for_email", "<builtin>.len", "<builtin>.str", "<builtin>.sum"], "src.pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.send_booking_cancellation_confirmation_by_pro_email": ["src.pcapi.core.mails.transactional.bookings.booking_cancellation_confirmation_by_pro.get_booking_cancellation_confirmation_by_pro_email_data"], "src.pcapi.routes.pro.bookings.get_booking_by_token": ["pcapi.routes.serialization.bookings_serialize.LegacyBookingResponse", "pcapi.validation.routes.users_authentifications.check_user_is_logged_in_or_email_is_provided", "pcapi.utils.human_ids.dehumanize", "src.pcapi.routes.pro.bookings._create_response_to_get_booking_by_token", "pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings"], "src.pcapi.routes.pro.bookings._create_response_to_get_booking_by_token": ["pcapi.routes.serialization.serialize", "pcapi.utils.human_ids.humanize"], "pcapi.routes.serialization.bookings_serialize.LegacyBookingResponse": [], "src.pcapi.routes.pro.bookings.patch_booking_by_token": ["pcapi.utils.human_ids.dehumanize", "pcapi.validation.routes.bookings.check_email_and_offer_id_for_anonymous_user", "pcapi.utils.rest.check_user_has_access_to_offerer"], "pcapi.validation.routes.bookings.check_email_and_offer_id_for_anonymous_user": [], "src.pcapi.routes.pro.bookings.get_bookings_pro": ["pcapi.routes.serialization.bookings_recap_serialize.ListBookingsResponseModel", "<builtin>.int", "pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_recap"], "pcapi.routes.serialization.bookings_recap_serialize._serialize_booking_recap": [], "pcapi.routes.serialization.bookings_recap_serialize.ListBookingsResponseModel": [], "src.pcapi.routes.pro.bookings.get_user_has_bookings": ["pcapi.routes.serialization.bookings_serialize.UserHasBookingResponse"], "pcapi.routes.serialization.bookings_serialize.UserHasBookingResponse": [], "src.pcapi.routes.pro.bookings.get_booking_by_token_v2": ["pcapi.routes.serialization.bookings_serialize.get_booking_response", "pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings_v2", "pcapi.validation.routes.users_authorizations.check_api_key_allows_to_validate_booking"], "pcapi.routes.serialization.bookings_serialize.get_booking_response": [], "src.pcapi.routes.pro.bookings.patch_booking_use_by_token": ["pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings_v2", "pcapi.validation.routes.users_authorizations.check_api_key_allows_to_validate_booking"], "src.pcapi.routes.pro.bookings.patch_cancel_booking_by_token": ["pcapi.validation.routes.users_authorizations.check_api_key_allows_to_cancel_booking", "pcapi.utils.rest.check_user_has_access_to_offerer"], "pcapi.validation.routes.users_authorizations.check_api_key_allows_to_cancel_booking": [], "src.pcapi.routes.pro.bookings.patch_booking_keep_by_token": ["pcapi.validation.routes.users_authorizations.check_user_can_validate_bookings_v2", "pcapi.validation.routes.users_authorizations.check_api_key_allows_to_validate_booking"], "tests.routes.serialization.offers_recap_serialize_test.should_return_serialized_offers_with_relevant_informations": ["pcapi.routes.serialization.offers_recap_serialize.serialize_offers_recap_paginated", "pcapi.utils.human_ids.humanize", "pcapi.domain.pro_offers.offers_recap.OfferRecap", "pcapi.domain.pro_offers.offers_recap.OffersRecap"], "src.pcapi.core.payments.api._compute_eighteenth_birthday": ["dateutil.relativedelta.relativedelta"], "src.pcapi.core.payments.api.get_granted_deposit": ["src.pcapi.core.payments.api._compute_eighteenth_birthday", "dateutil.relativedelta.relativedelta", "pcapi.core.payments.models.GrantedDeposit"], "pcapi.core.payments.models.GrantedDeposit": [], "src.pcapi.core.payments.api.create_deposit": ["pcapi.core.payments.models.Deposit", "src.pcapi.core.payments.api.get_granted_deposit"], "pcapi.core.payments.models.Deposit": [], "src.pcapi.core.payments.api.create_offerer_reimbursement_rule": ["src.pcapi.core.payments.api._create_reimbursement_rule"], "src.pcapi.core.payments.api._create_reimbursement_rule": ["pcapi.core.payments.models.CustomReimbursementRule", "<builtin>.ValueError", "<builtin>.bool"], "src.pcapi.core.payments.api.create_offer_reimbursement_rule": ["src.pcapi.core.payments.api._create_reimbursement_rule"], "tests.core.educational.test_utils.ComputeEducationalBookingCancellationLimitDate.test_should_be_15_days_before_event_when_booking_occured_more_than_15_days_before_event": ["pcapi.core.educational.utils.compute_educational_booking_cancellation_limit_date"], "tests.core.educational.test_utils.ComputeEducationalBookingCancellationLimitDate.test_should_be_booking_date_when_booking_occured_less_than_15_days_before_event": ["pcapi.core.educational.utils.compute_educational_booking_cancellation_limit_date"], "tests.core.mails.transactional.pro.invoice_available_to_pro_test.SendinblueProAvailableInvoiceEmailDataTest.test_get_email_correct_metadata": ["datetime.datetime", "pcapi.core.mails.transactional.pro.invoice_available_to_pro.get_invoice_available_to_pro_email_data"], "pcapi.core.mails.transactional.pro.invoice_available_to_pro.get_invoice_available_to_pro_email_data": [], "tests.core.mails.transactional.pro.invoice_available_to_pro_test.SendinblueProAvailableInvoiceEmailDataTest.test_send_emails_available_invoice_to_pro_user": ["datetime.datetime", "pcapi.core.mails.transactional.pro.invoice_available_to_pro.send_invoice_available_to_pro_email", "<builtin>.len"], "tests.routes.pro.edit_educational_stock_test.Return200Test.test_edit_educational_stock": ["datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return200Test.test_edit_educational_stock_partially": ["datetime.datetime", "pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.edit_educational_stock_test.Return200Test.test_edit_educational_stock_with_pending_booking": ["datetime.datetime", "pcapi.utils.human_ids.humanize", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking", "pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingEdition"], "tests.routes.pro.edit_educational_stock_test.Return200Test.test_edit_educational_stock_does_not_send_notification_when_no_modification": ["datetime.datetime", "pcapi.utils.human_ids.humanize", "<builtin>.len"], "tests.routes.pro.edit_educational_stock_test.Return403Test.test_edit_educational_stocks_should_not_be_possible_when_user_not_linked_to_offerer": ["datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_not_allow_number_of_tickets_to_be_negative_on_edition": ["datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_not_allow_price_to_be_negative_on_creation": ["datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_not_accept_payload_with_bookingLimitDatetime_after_beginningDatetime": ["datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_not_edit_stock_when_event_expired": ["datetime.timedelta", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_not_allow_stock_edition_when_numberOfTickets_has_been_set_to_none": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_not_allow_stock_edition_when_totalPrice_has_been_set_to_none": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_not_allow_stock_edition_when_beginnningDatetime_has_been_set_to_none": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_raise_error_when_more_than_one_non_cancelled_bookings_associated_with_stock": ["pcapi.utils.human_ids.humanize"], "tests.routes.pro.edit_educational_stock_test.Return400Test.should_raise_error_when_educational_price_detail_length_is_greater_than_1000": ["datetime.datetime", "pcapi.utils.human_ids.humanize"], "tests.scripts.venue.move_all_offers_for_venue_test.MoveAllOffersFromVenueToOtherVenueTest.should_change_venue_id_to_destination_id_for_offers_linked_to_origin_venue": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.scripts.venue.move_all_offers_for_venue.move_all_offers_from_venue_to_other_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "<builtin>.set", "pcapi.model_creators.generic_creators.create_venue"], "pcapi.scripts.venue.move_all_offers_for_venue.move_all_offers_from_venue_to_other_venue": [], "tests.core.mails.transactional.bookings.booking_expiration_to_beneficiary_test.SendExpiredBookingsEmailToBeneficiarySendinblueTest.test_should_send_email_to_beneficiary_when_expired_book_booking_cancelled": ["pcapi.core.bookings.factories.IndividualBookingFactory", "<builtin>.len", "pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.send_expired_bookings_to_beneficiary_email"], "tests.core.mails.transactional.bookings.booking_expiration_to_beneficiary_test.SendExpiredBookingsEmailToBeneficiarySendinblueTest.test_should_send_email_to_beneficiary_when_expired_others_bookings_cancelled": ["pcapi.core.bookings.factories.IndividualBookingFactory", "<builtin>.len", "pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.send_expired_bookings_to_beneficiary_email"], "tests.core.mails.transactional.bookings.booking_expiration_to_beneficiary_test.SendExpiredBookingsEmailToBeneficiarySendinblueTest.test_should_send_two_emails_to_beneficiary_when_expired_books_and_other_bookings_cancelled": ["pcapi.core.bookings.factories.IndividualBookingFactory", "<builtin>.len", "pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.send_expired_bookings_to_beneficiary_email"], "tests.core.mails.transactional.bookings.booking_expiration_to_beneficiary_test.SendExpiredBookingsEmailToBeneficiarySendinblueTest.test_should_get_correct_data_when_expired_bookings_cancelled": ["datetime.timedelta", "pcapi.core.bookings.factories.CancelledBookingFactory", "pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.get_expired_bookings_to_beneficiary_data", "pcapi.core.offers.factories.ProductFactory"], "pcapi.core.mails.transactional.bookings.booking_expiration_to_beneficiary.get_expired_bookings_to_beneficiary_data": [], "src.pcapi.routes.serialization.password_serialize.ResetPasswordBodyModel.validate_email_not_empty": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.core.educational.api._create_redactor": ["pcapi.core.educational.models.EducationalRedactor"], "pcapi.core.educational.models.EducationalRedactor": [], "src.pcapi.core.educational.api.book_educational_offer": ["pcapi.repository.transaction", "src.pcapi.core.educational.api._build_prebooking_mail_data", "src.pcapi.core.educational.api._create_redactor", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking"], "src.pcapi.core.educational.api._build_prebooking_mail_data": ["<builtin>.int", "pcapi.utils.mailing.format_booking_hours_for_email", "pcapi.utils.mailing.format_booking_date_for_email", "<builtin>.str", "pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.core.educational.api.confirm_educational_booking": ["src.pcapi.core.educational.api._build_booking_confirmation_mail_data", "pcapi.repository.transaction"], "src.pcapi.core.educational.api._build_booking_confirmation_mail_data": ["<builtin>.int", "pcapi.utils.mailing.format_booking_hours_for_email", "pcapi.utils.mailing.format_booking_date_for_email", "<builtin>.str", "pcapi.utils.mailing.build_pc_pro_offer_link"], "src.pcapi.core.educational.api.refuse_educational_booking": ["pcapi.repository.transaction", "pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData", "<builtin>.str"], "src.pcapi.core.educational.api.create_educational_institution": ["pcapi.core.educational.models.EducationalInstitution"], "pcapi.core.educational.models.EducationalInstitution": [], "src.pcapi.core.educational.api.create_educational_deposit": ["pcapi.core.educational.models.EducationalDeposit"], "src.pcapi.core.educational.api.get_educational_categories": ["<builtin>.list", "<builtin>.set"], "src.pcapi.core.educational.api.notify_educational_redactor_on_educational_offer_or_stock_edit": ["pcapi.routes.adage.v1.serialization.prebooking.EducationalBookingEdition", "pcapi.routes.adage.v1.serialization.prebooking.serialize_educational_booking", "<builtin>.len"], "tests.scripts.offerer.file_import_test.IterateRowForUserOfferersTest.test_ignores_the_first_line_with_csv_headers": ["pcapi.scripts.offerer.file_import.iterate_rows_for_user_offerers", "pcapi.models.user_offerer.UserOfferer", "<builtin>.len"], "pcapi.scripts.offerer.file_import.iterate_rows_for_user_offerers": [], "tests.scripts.offerer.file_import_test.IterateRowForUserOfferersTest.test_ignores_empty_lines": ["pcapi.scripts.offerer.file_import.iterate_rows_for_user_offerers", "pcapi.models.user_offerer.UserOfferer", "<builtin>.len"], "tests.scripts.offerer.file_import_test.CreateActivatedUserOffererTest.setup_method": ["unittest.mock.Mock"], "tests.scripts.offerer.file_import_test.CreateActivatedUserOffererTest.test_returns_created_user_offerer": ["pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.factories.VirtualVenueTypeFactory", "pcapi.core.offers.factories.OffererFactory", "pcapi.scripts.offerer.file_import.create_activated_user_offerer"], "pcapi.scripts.offerer.file_import.create_activated_user_offerer": [], "tests.scripts.offerer.file_import_test.FillUserOffererFromTest.test_returns_a_user_offerer_built_with_user_and_offerer_relative_to_csv_row": ["pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.OffererFactory", "pcapi.scripts.offerer.file_import.fill_user_offerer_from", "pcapi.models.user_offerer.UserOfferer"], "pcapi.scripts.offerer.file_import.fill_user_offerer_from": [], "tests.scripts.offerer.file_import_test.FillUserOffererFromTest.test_raise_error_when_user_relative_to_csv_not_created": ["pcapi.core.offers.factories.OffererFactory", "pcapi.core.users.models.User"], "tests.scripts.offerer.file_import_test.FillUserOffererFromTest.test_raise_error_when_offerer_relative_to_csv_not_created": ["pcapi.core.users.factories.ProFactory", "pcapi.core.offerers.models.Offerer"], "tests.scripts.offerer.file_import_test.FillUserFromTest.test_returns_an_user_with_data_from_csv_row": ["pcapi.scripts.offerer.file_import.fill_user_from", "pcapi.core.users.models.User"], "pcapi.scripts.offerer.file_import.fill_user_from": [], "tests.scripts.offerer.file_import_test.FillUserFromTest.test_returns_an_user_with_computed_password": ["pcapi.scripts.offerer.file_import.fill_user_from", "pcapi.core.users.models.User"], "tests.scripts.offerer.file_import_test.FillUserFromTest.test_returns_only_the_first_firstname": ["<builtin>.list", "pcapi.scripts.offerer.file_import.fill_user_from", "pcapi.core.users.models.User"], "tests.scripts.offerer.file_import_test.FillUserFromTest.test_sets_default_properties_on_the_user": ["pcapi.scripts.offerer.file_import.fill_user_from", "pcapi.core.users.models.User"], "tests.scripts.offerer.file_import_test.FillUserFromTest.test_returns_the_given_user_with_modified_data_from_the_csv": ["pcapi.scripts.offerer.file_import.fill_user_from"], "tests.scripts.offerer.file_import_test.FillOffererFromTest.test_returns_an_user_with_data_from_csv_row": ["datetime.datetime", "pcapi.scripts.offerer.file_import.fill_offerer_from", "pcapi.core.offerers.models.Offerer"], "pcapi.scripts.offerer.file_import.fill_offerer_from": [], "tests.scripts.update_venue_type_codes_test.test_update_venue_codes": ["pcapi.core.offers.factories.VenueFactory", "pcapi.scripts.update_venue_type_codes.update_venues_codes", "pcapi.core.offerers.factories.VenueTypeFactory"], "pcapi.scripts.update_venue_type_codes.update_venues_codes": [], "src.pcapi.alembic.run_migrations.run_migrations": ["append", "sqlalchemy.create_engine"], "src.pcapi.admin.custom_views.partner_user_view.filter_email": ["pcapi.core.users.utils.sanitize_email"], "src.pcapi.admin.custom_views.partner_user_view.PartnerUserView.scaffold_form": ["wtforms.validators.DataRequired", "<builtin>.super", "wtforms.validators.Length", "wtforms.StringField", "wtforms.fields.html5.DateField", "wtforms.fields.html5.TelField"], "wtforms.fields.html5.DateField": [], "wtforms.fields.html5.TelField": [], "src.pcapi.admin.custom_views.partner_user_view.PartnerUserView.on_model_change": ["pcapi.core.users.api.fulfill_account_password"], "src.pcapi.admin.custom_views.partner_user_view.PartnerUserView.after_model_change": ["pcapi.core.users.api.create_reset_password_token", "pcapi.utils.mailing.build_pc_webapp_reset_password_link", "flask.helpers.flash"], "src.pcapi.admin.custom_views.partner_user_view.PartnerUserView.get_count_query": ["sqlalchemy.distinct"], "sqlalchemy.distinct": [], "tests.routes.adage_iframe.get_venue_by_id_test.Returns200Test._create_adage_valid_token": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.get_venue_by_id_test.Returns200Test.test_return_venue_with_publicName_of_given_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.routes.adage_iframe.get_venue_by_id_test.Returns200Test._create_adage_valid_token"], "tests.routes.adage_iframe.get_venue_by_id_test.Returns200Test.test_return_venue_without_publicName_of_given_id": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.routes.adage_iframe.get_venue_by_id_test.Returns200Test._create_adage_valid_token"], "tests.routes.adage_iframe.get_venue_by_id_test.ReturnsErrorTest._create_adage_valid_token": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.get_venue_by_id_test.ReturnsErrorTest.test_return_error_if_venue_does_not_exist": ["tests.conftest.TestClient.__init__", "tests.routes.adage_iframe.get_venue_by_id_test.ReturnsErrorTest._create_adage_valid_token", "tests.conftest.TestClient.get"], "src.pcapi.validation.models.entity_validator.validate": ["<builtin>.isinstance", "pcapi.validation.models.generic.validate_generic"], "src.pcapi.utils.rest.check_user_has_access_to_offerer": ["pcapi.models.api_errors.ApiErrors"], "src.pcapi.utils.rest.load_or_404": ["pcapi.utils.human_ids.dehumanize"], "src.pcapi.utils.rest.load_or_raise_error": ["pcapi.utils.human_ids.dehumanize", "pcapi.models.api_errors.ApiErrors"], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns204Test.test_should_returns_204_with_cancellation_allowed": ["pcapi.core.offerers.factories.ApiKeyFactory", "<builtin>.len"], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns204Test.test_should_returns_204_with_lowercase_token": ["pcapi.core.offerers.factories.ApiKeyFactory"], "tests.routes.pro.patch_cancel_booking_by_token_test.Returns403Test.when_the_api_key_is_not_linked_to_the_right_offerer": ["pcapi.core.offerers.factories.ApiKeyFactory"], "src.pcapi.core.payments.conf.BaseSpecificCaps.digital_cap_applies": ["<builtin>.bool"], "src.pcapi.core.payments.conf.BaseSpecificCaps.physical_cap_applies": ["<builtin>.bool"], "src.pcapi.core.users.models.User._add_role": ["pcapi.core.users.exceptions.InvalidUserRoleException"], "pcapi.core.users.exceptions.InvalidUserRoleException": [], "src.pcapi.core.users.models.User.add_admin_role": ["src.pcapi.core.users.models.User._add_role", "pcapi.core.users.exceptions.InvalidUserRoleException"], "src.pcapi.core.users.models.User.add_beneficiary_role": ["src.pcapi.core.users.models.User._add_role", "pcapi.core.users.exceptions.InvalidUserRoleException"], "src.pcapi.core.users.models.User.add_pro_role": ["src.pcapi.core.users.models.User._add_role"], "src.pcapi.core.users.models.User.add_underage_beneficiary_role": ["src.pcapi.core.users.models.User._add_role", "pcapi.core.users.exceptions.InvalidUserRoleException"], "src.pcapi.core.users.models.User.has_enabled_push_notifications": ["src.pcapi.core.users.models.User.get_notification_subscriptions"], "src.pcapi.core.users.models.User.get_notification_subscriptions": [], "src.pcapi.core.users.models.User.get_id": ["<builtin>.str"], "src.pcapi.core.users.models.User.populate_from_dict": ["<builtin>.super", "src.pcapi.core.users.models.User.setPassword"], "src.pcapi.core.users.models.User.setPassword": [], "src.pcapi.core.users.models.User.remove_admin_role": ["remove"], "remove": [], "src.pcapi.core.users.models.User.remove_underage_beneficiary_role": ["remove"], "src.pcapi.core.users.models.User.remove_beneficiary_role": ["remove"], "src.pcapi.core.users.models.User.remove_pro_role": ["remove"], "src.pcapi.core.users.models.User.deposit": ["operator.attrgetter", "<builtin>.sorted", "<builtin>.len"], "src.pcapi.core.users.models.User.hasPhysicalVenues": ["<builtin>.any"], "src.pcapi.core.users.models.User.latest_birthday": ["src.pcapi.core.users.models._get_latest_birthday"], "src.pcapi.core.users.models._get_latest_birthday": [], "src.pcapi.core.users.models.User.real_wallet_balance": ["<builtin>.max"], "src.pcapi.core.users.models.User.wallet_balance": ["<builtin>.max"], "src.pcapi.core.users.models.User.init_subscription_state_machine": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.setattr"], "src.pcapi.core.users.models.UserEmailHistory._build": ["src.pcapi.core.users.models.split_email"], "src.pcapi.core.users.models.split_email": [], "src.pcapi.core.users.models.UserEmailHistory.build_update_request": ["src.pcapi.core.users.models.UserEmailHistory._build"], "src.pcapi.core.users.models.UserEmailHistory.build_validation": ["src.pcapi.core.users.models.UserEmailHistory._build"], "tests.repository.allocine_pivot_queries_test.HasAllocinePivotForVenueTest.test_should_return_false_when_venue_has_no_siret": ["pcapi.core.providers.repository.has_allocine_pivot_for_venue", "pcapi.core.providers.factories.AllocinePivotFactory"], "tests.repository.allocine_pivot_queries_test.GetAllocinePivotForVenueTest.test_should_not_return_value_when_venue_siret_is_none": ["pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.repository.allocine_pivot_queries.get_allocine_pivot_for_venue"], "tests.repository.allocine_pivot_queries_test.GetAllocinePivotForVenueTest.test_should_not_return_value_when_not_matching_in_allocine_pivot": ["pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.repository.allocine_pivot_queries.get_allocine_pivot_for_venue"], "tests.repository.allocine_pivot_queries_test.GetAllocinePivotForVenueTest.test_should_return_allocine_pivot_when_siret_is_present_in_allocine_pivot": ["pcapi.core.providers.factories.AllocinePivotFactory", "pcapi.repository.allocine_pivot_queries.get_allocine_pivot_for_venue"], "src.pcapi.core.mails.transactional.users.delete_account.get_user_request_to_delete_account_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.users.delete_account.send_user_request_to_delete_account_reception_email": ["src.pcapi.core.mails.transactional.users.delete_account.get_user_request_to_delete_account_email_data"], "tests.core.offerers.test_api.EditVenueTest.test_no_modifications": ["pcapi.core.testing.assert_num_queries"], "tests.core.offerers.test_api.ApiKeyTest.test_legacy_api_key": ["pcapi.core.offerers.models.ApiKey"], "tests.core.offerers.test_api.CreateOffererTest.test_create_new_offerer_with_validation_token_if_siren_is_not_already_registered": ["pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel"], "pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel": [], "tests.core.offerers.test_api.CreateOffererTest.test_create_digital_venue_if_siren_is_not_already_registered": ["pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel", "<builtin>.len"], "tests.core.offerers.test_api.CreateOffererTest.test_create_new_offerer_attachment_with_validation_token_if_siren_is_already_registered": ["pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel"], "tests.core.offerers.test_api.CreateOffererTest.test_keep_offerer_validation_token_if_siren_is_already_registered_but_not_validated": ["pcapi.routes.serialization.offerers_serialize.CreateOffererQueryModel"], "tests.core.offerers.test_api.ValidateOffererTest.test_managed_venues_are_reindexed": ["<builtin>.set"], "src.pcapi.core.users.exceptions.PhoneValidationAttemptsLimitReached.__init__": ["<builtin>.super"], "tests.utils.custom_logic_test.test_soft_equal_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_soft_equal_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_not_soft_equal_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_not_soft_equal_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_greater_than_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_greater_than_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_greater_or_equal_than_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_greater_or_equal_than_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_greater_or_equal_than_return_true_when_a_is_greater": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_less_than_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_less_than_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_less_or_equal_than_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_less_or_equal_than_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_less_or_equal_than_return_true_when_a_is_less": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_in_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_in_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_not_in_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_not_in_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_raise_if_contains_comparated_is_not_a_list": ["<builtin>.str", "pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_exact_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_exact_with_sub_word_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_exact_with_none": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_equals_word_with_accents": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_with_words_with_accents": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_in_with_words_with_accents": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_with_none_as_argument_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_contains_with_none_as_argument_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_in_with_none_as_argument_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_in_with_none_as_argument_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_not_in_with_none_as_argument_return_true": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.utils.custom_logic_test.test_not_in_with_none_as_argument_return_false": ["pcapi.utils.custom_logic.OPERATIONS"], "tests.repository.user_offerer_queries_test.test_find_one_or_none_by_user_id_should_return_one_user_offerer_with_same_user_id": ["<builtin>.isinstance", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.repository.user_offerer_queries.find_one_or_none_by_user_id"], "pcapi.repository.user_offerer_queries.find_one_or_none_by_user_id": [], "tests.repository.user_offerer_queries_test.test_find_one_or_none_by_user_id_raises_exception_when_several_are_found": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "tests.repository.user_offerer_queries_test.test_find_one_or_none_by_user_id_should_return_none_user_offerer_when_none_are_found": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.repository.user_offerer_queries.find_one_or_none_by_user_id"], "tests.repository.user_offerer_queries_test.test_filter_query_where_user_is_user_offerer_and_is_validated": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.repository.user_offerer_queries.filter_query_where_user_is_user_offerer_and_is_validated", "pcapi.model_creators.specific_creators.create_product_with_event_subcategory", "pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.model_creators.specific_creators.create_offer_with_thing_product", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.model_creators.generic_creators.create_venue"], "tests.scripts.copy_is_gcu_compatible_to_is_synchronization_compatible_test.test_should_copy_is_gcu_compatible_to_is_synchronization_compatible": ["pcapi.scripts.copy_is_gcu_compatible_to_is_syhnchronization_compatible.copy_is_gcu_compatible_to_is_synchronization_compatible", "pcapi.core.offers.factories.ProductFactory"], "pcapi.scripts.copy_is_gcu_compatible_to_is_syhnchronization_compatible.copy_is_gcu_compatible_to_is_synchronization_compatible": [], "src.pcapi.repository.offer_queries.get_offers_by_ids": ["sqlalchemy.orm.joinedload"], "src.pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_email_providers": ["extend", "src.pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users"], "src.pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users": ["pcapi.core.users.api.suspend_account", "<builtin>.print", "pcapi.core.bookings.repository.find_offers_booked_by_beneficiaries", "<builtin>.len"], "pcapi.core.bookings.repository.find_offers_booked_by_beneficiaries": [], "src.pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users_by_ids": ["src.pcapi.scripts.suspend_fraudulent_beneficiary_users.suspend_fraudulent_beneficiary_users"], "src.pcapi.routes.internal.health_check.health_api": ["pcapi.utils.health_checker.read_version_from_file"], "src.pcapi.routes.internal.health_check.health_database": ["pcapi.utils.health_checker.read_version_from_file", "pcapi.utils.health_checker.check_database_connection"], "src.pcapi.scripts.bulk_activate_offers.bulk_activate_offers": ["append", "<builtin>.print", "src.pcapi.scripts.bulk_activate_offers.process_batch", "<builtin>.len"], "src.pcapi.scripts.bulk_activate_offers.process_batch": [], "src.pcapi.scripts.bulk_activate_offers.bulk_reactivate_offers_from_path": ["src.pcapi.scripts.bulk_activate_offers.bulk_activate_offers", "<builtin>.open"], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest.test_response_serializer": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "pcapi.utils.human_ids.humanize", "tests.conftest.TestClient.with_session_auth"], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest.test_get_all_offerers_names": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest._setup_offerers_for_pro_user", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest._setup_offerers_for_pro_user": [], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest.test_get_all_validated_offerers_names": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest._setup_offerers_for_pro_user", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest.test_get_all_not_validated_offerers_names": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest._setup_offerers_for_pro_user", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest.test_get_all_validated_for_user_offerers_names": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest._setup_offerers_for_pro_user", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest.test_get_all_not_validated_for_user_offerers_names": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForProUserTest._setup_offerers_for_pro_user", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest.test_get_all_offerers_names": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest._setup_offerers_for_users", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest._setup_offerers_for_users": [], "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest.test_get_all_validated_offerers": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest._setup_offerers_for_users", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest.test_get_all_not_validated_offerers": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth", "tests.routes.pro.get_offerers_names_test.Returns200ForAdminTest._setup_offerers_for_users", "<builtin>.len", "pcapi.utils.human_ids.humanize"], "src.pcapi.notifications.push.backends.logger.LoggerBackend.update_users_attributes": ["<builtin>.len"], "src.pcapi.scripts.booking.cancel_old_unused_bookings_for_venue.cancel_old_unused_bookings_for_venue": ["pcapi.core.offerers.repository.find_venue_by_id", "<builtin>.Exception", "pcapi.utils.human_ids.dehumanize", "pcapi.core.bookings.api._cancel_booking", "<builtin>.len", "datetime.timedelta", "src.pcapi.scripts.booking.cancel_old_unused_bookings_for_venue._get_old_unused_bookings_from_venue_id"], "src.pcapi.scripts.booking.cancel_old_unused_bookings_for_venue._get_old_unused_bookings_from_venue_id": [], "pcapi.core.bookings.api._cancel_booking": [], "src.pcapi.core.reference.factories.ReferenceSchemeFactory._create": ["<builtin>.super"], "tests.core.search.test_api.fail": ["<builtin>.ValueError"], "tests.core.search.test_api.test_async_index_venue_ids": ["<builtin>.int"], "tests.core.search.test_api.test_index_offers_of_venues_in_queue": ["tests.core.search.test_api.make_unbookable_offer", "tests.core.search.test_api.make_bookable_offer"], "tests.core.search.test_api.make_bookable_offer": [], "tests.core.search.test_api.make_unbookable_offer": [], "tests.core.search.test_api.ReindexOfferIdsTest.test_index_new_offer": ["tests.core.search.test_api.make_bookable_offer"], "tests.core.search.test_api.ReindexOfferIdsTest.test_unindex_unbookable_offer": ["tests.core.search.test_api.make_unbookable_offer"], "tests.core.search.test_api.ReindexOfferIdsTest.test_handle_indexation_error": ["<builtin>.str", "pcapi.core.testing.override_settings", "tests.core.search.test_api.make_bookable_offer"], "tests.core.search.test_api.ReindexOfferIdsTest.test_handle_unindexation_error": ["tests.core.search.test_api.make_unbookable_offer", "<builtin>.str", "pcapi.core.testing.override_settings"], "tests.core.search.test_api.IndexOffersInQueueTest.test_cron_behaviour": ["<builtin>.range"], "tests.core.search.test_api.IndexOffersInQueueTest.test_command_behaviour": ["<builtin>.range"], "src.pcapi.scripts.offerer.delete_cascade_offerer_by_id.delete_cascade_offerer_by_id": ["pcapi.core.bookings.exceptions.CannotDeleteOffererWithBookingsException"], "pcapi.core.bookings.exceptions.CannotDeleteOffererWithBookingsException": [], "src.pcapi.scripts.fill_allocine_pivot.fill_allocine_pivot": ["<builtin>.print", "<builtin>.str"], "src.pcapi.domain.allocine.get_movies_showtimes": ["src.pcapi.domain.allocine._exclude_movie_showtimes_with_special_event_type", "pcapi.connectors.api_allocine.get_movies_showtimes_from_allocine", "<builtin>.iter"], "src.pcapi.domain.allocine._exclude_movie_showtimes_with_special_event_type": ["<builtin>.list", "<builtin>.filter"], "src.pcapi.domain.allocine.get_movie_poster": ["pcapi.connectors.api_allocine.get_movie_poster_from_allocine"], "tests.routes.adage_iframe.get_venue_by_siret_test.Returns200Test._create_adage_valid_token": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.get_venue_by_siret_test.Returns200Test.test_return_venue_with_publicName_of_given_siret": ["tests.conftest.TestClient.__init__", "tests.routes.adage_iframe.get_venue_by_siret_test.Returns200Test._create_adage_valid_token", "tests.conftest.TestClient.get"], "tests.routes.adage_iframe.get_venue_by_siret_test.Returns200Test.test_return_venue_without_publicName_of_given_siret": ["tests.conftest.TestClient.__init__", "tests.routes.adage_iframe.get_venue_by_siret_test.Returns200Test._create_adage_valid_token", "tests.conftest.TestClient.get"], "tests.routes.adage_iframe.get_venue_by_siret_test.ReturnsErrorTest._create_adage_valid_token": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.get_venue_by_siret_test.ReturnsErrorTest.test_return_error_if_venue_does_not_exist": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.routes.adage_iframe.get_venue_by_siret_test.ReturnsErrorTest._create_adage_valid_token"], "tests.scheduled_tasks.logger_test.CronLoggerMessageBuilderTest.test_should_contain_the_log_type": ["pcapi.scheduled_tasks.logger.build_cron_log_message"], "tests.scheduled_tasks.logger_test.CronLoggerMessageBuilderTest.test_should_contain_the_name": ["pcapi.scheduled_tasks.logger.build_cron_log_message"], "tests.scheduled_tasks.logger_test.CronLoggerMessageBuilderTest.test_should_contain_the_status": ["pcapi.scheduled_tasks.logger.build_cron_log_message"], "tests.scheduled_tasks.logger_test.CronLoggerMessageBuilderTest.test_should_contain_duration_field_when_given": ["pcapi.scheduled_tasks.logger.build_cron_log_message"], "src.pcapi.sandboxes.scripts.getters.pro_03_offerers.get_existing_pro_validated_user_with_validated_offerer_validated_user_offerer": ["pcapi.sandboxes.scripts.utils.helpers.get_pro_helper", "pcapi.sandboxes.scripts.utils.helpers.get_offerer_helper"], "src.pcapi.validation.routes.bookings.check_email_and_offer_id_for_anonymous_user": ["pcapi.models.api_errors.ApiErrors"], "tests.core.mails.transactional.pro.welcome_to_pro_test.SendWelcomeToProEmailTest.test_sends_email_to_pro_user": ["dataclasses.asdict", "<builtin>.len", "pcapi.core.mails.transactional.pro.welcome_to_pro.send_welcome_to_pro_email"], "src.pcapi.core.offers.utils.offer_app_redirect_link": ["src.pcapi.core.offers.utils.offer_app_link"], "src.pcapi.core.offers.utils.offer_app_link": [], "src.pcapi.core.mails.transactional.pro.invoice_available_to_pro.get_invoice_available_to_pro_email_data": ["pcapi.core.mails.models.sendinblue_models.SendinblueTransactionalEmailData"], "src.pcapi.core.mails.transactional.pro.invoice_available_to_pro.send_invoice_available_to_pro_email": ["src.pcapi.core.mails.transactional.pro.invoice_available_to_pro.get_invoice_available_to_pro_email_data"], "src.pcapi.routes.error_handlers.thumbnails_error_handlers.handle_create_a_thumbnail": ["flask.jsonify"], "src.pcapi.routes.adage_iframe.authentication.authenticate": ["pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedResponse"], "pcapi.routes.adage_iframe.serialization.adage_authentication.AuthenticatedResponse": [], "src.pcapi.routes.shared.users.signin": ["pcapi.utils.login_manager.stamp_session", "flask_login.login_user", "pcapi.models.api_errors.ApiErrors"], "pcapi.utils.login_manager.stamp_session": [], "src.pcapi.routes.shared.users.signout": ["flask.jsonify", "flask_login.logout_user", "pcapi.utils.login_manager.discard_session"], "pcapi.utils.login_manager.discard_session": [], "tests.models.offerer_test.test_nOffers": ["pcapi.model_creators.specific_creators.create_offer_with_event_product", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.models.offerer_test.test_offerer_can_have_null_address": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.OffererBankInformationTest.test_bic_property_returns_bank_information_bic_when_offerer_has_bank_information": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.OffererBankInformationTest.test_bic_property_returns_none_when_offerer_does_not_have_bank_information": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.OffererBankInformationTest.test_iban_property_returns_bank_information_iban_when_offerer_has_bank_information": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.OffererBankInformationTest.test_iban_property_returns_none_when_offerer_does_not_have_bank_information": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.OffererBankInformationTest.test_demarchesSimplifieesApplicationId_returns_id_if_status_is_draft": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.OffererBankInformationTest.test_demarchesSimplifieesApplicationId_returns_none_if_status_is_rejected": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.IsValidatedTest.test_is_validated_property": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "tests.models.offerer_test.IsValidatedTest.test_is_validated_property_when_still_offerer_has_validation_token": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "tests.models.offerer_test.AppendUserHasAccessAttributeTest.test_adds_a_new_propery": ["pcapi.model_creators.generic_creators.create_offerer", "<builtin>.hasattr"], "tests.models.offerer_test.AppendUserHasAccessAttributeTest.test_should_return_false_when_current_user_has_no_rights_on_offerer": ["pcapi.model_creators.generic_creators.create_offerer"], "tests.models.offerer_test.AppendUserHasAccessAttributeTest.test_should_return_true_when_current_user_access_to_offerer_is_validated": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "tests.models.offerer_test.AppendUserHasAccessAttributeTest.test_should_return_false_when_current_user_access_to_offerer_is_not_validated": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "tests.models.offerer_test.AppendUserHasAccessAttributeTest.test_should_return_false_when_current_user_has_no_access": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "tests.models.offerer_test.AppendUserHasAccessAttributeTest.test_should_return_true_when_current_user_is_admin": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "src.pcapi.models.beneficiary_import.BeneficiaryImport.setStatus": ["pcapi.models.beneficiary_import_status.BeneficiaryImportStatus"], "pcapi.models.beneficiary_import_status.BeneficiaryImportStatus": [], "src.pcapi.models.beneficiary_import.BeneficiaryImport.currentStatus": ["src.pcapi.models.beneficiary_import.BeneficiaryImport._last_status"], "src.pcapi.models.beneficiary_import.BeneficiaryImport._last_status": ["<builtin>.sorted"], "src.pcapi.models.beneficiary_import.BeneficiaryImport.updatedAt": ["src.pcapi.models.beneficiary_import.BeneficiaryImport._last_status"], "src.pcapi.models.beneficiary_import.BeneficiaryImport.detail": ["src.pcapi.models.beneficiary_import.BeneficiaryImport._last_status"], "src.pcapi.models.beneficiary_import.BeneficiaryImport.authorEmail": ["src.pcapi.models.beneficiary_import.BeneficiaryImport._last_status"], "src.pcapi.models.beneficiary_import.BeneficiaryImport.history": ["<builtin>.repr"], "<builtin>.repr": [], "tests.validation.routes.offers_test.CheckOfferNameIsValidTest.test_raises_api_error_when_offer_name_is_too_long": ["pcapi.validation.routes.offers.check_offer_name_length_is_valid"], "tests.validation.routes.offers_test.CheckOfferNameIsValidTest.test_does_not_raise_exception_when_offer_name_length_is_valid": ["pcapi.validation.routes.offers.check_offer_name_length_is_valid"], "tests.validation.routes.offers_test.CheckOfferIsbnIsValidTest.test_raises_api_error_when_offer_isbn_is_too_long": ["pcapi.validation.routes.offers.check_offer_isbn_is_valid"], "tests.validation.routes.offers_test.CheckOfferIsbnIsValidTest.test_raises_api_error_when_offer_isbn_is_too_short": ["pcapi.validation.routes.offers.check_offer_isbn_is_valid"], "tests.validation.routes.offers_test.CheckOfferIsbnIsValidTest.test_raises_api_error_when_offer_isbn_is_with_alphabets": ["pcapi.validation.routes.offers.check_offer_isbn_is_valid"], "tests.validation.routes.offers_test.CheckOfferIsbnIsValidTest.test_raises_api_with_valid_isbn": ["pcapi.validation.routes.offers.check_offer_isbn_is_valid"], "src.pcapi.core.bookings.validation.check_expenses_limits": ["pcapi.core.users.api.get_domains_credit"], "src.pcapi.core.bookings.validation.check_is_usable": ["pcapi.utils.date.utc_datetime_to_department_timezone"], "src.pcapi.core.bookings.validation.check_activation_code_available": ["exceptions.NoActivationCodeAvailable"], "exceptions.NoActivationCodeAvailable": [], "src.pcapi.core.bookings.validation.check_offer_is_not_educational": ["exceptions.EducationalOfferCannotBeBooked"], "exceptions.EducationalOfferCannotBeBooked": [], "src.pcapi.core.bookings.validation.check_offer_category_is_bookable_by_user": ["exceptions.OfferCategoryNotBookableByUser"], "exceptions.OfferCategoryNotBookableByUser": [], "src.pcapi.scripts.offerer.import_offerer_from_csv.create_offerer_from_csv": ["src.pcapi.scripts.offerer.import_offerer_from_csv._get_address_from_row", "pcapi.core.offerers.models.Offerer", "src.pcapi.scripts.offerer.import_offerer_from_csv._get_postal_code"], "src.pcapi.scripts.offerer.import_offerer_from_csv._get_address_from_row": [], "src.pcapi.scripts.offerer.import_offerer_from_csv._get_postal_code": [], "src.pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv": ["src.pcapi.scripts.offerer.import_offerer_from_csv._get_address_from_row", "pcapi.core.offerers.models.Venue", "src.pcapi.scripts.offerer.import_offerer_from_csv._get_postal_code"], "src.pcapi.scripts.offerer.import_offerer_from_csv.create_user_model_from_csv": ["pcapi.domain.password.random_password", "pcapi.routes.serialization.users.ProUserCreationBodyModel", "src.pcapi.scripts.offerer.import_offerer_from_csv._get_postal_code"], "src.pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv": ["pcapi.core.offerers.api.create_digital_venue", "pcapi.core.users.external.update_external_pro", "src.pcapi.scripts.offerer.import_offerer_from_csv.create_user_model_from_csv", "pcapi.core.offerers.repository.find_offerer_by_siren", "src.pcapi.scripts.offerer.import_offerer_from_csv.create_venue_from_csv", "pcapi.core.users.api.create_pro_user", "pcapi.core.users.api.create_reset_password_token", "src.pcapi.scripts.offerer.import_offerer_from_csv.create_offerer_from_csv", "pcapi.core.users.repository.find_user_by_email", "datetime.timedelta"], "src.pcapi.scripts.offerer.import_offerer_from_csv.import_from_csv_file": ["src.pcapi.scripts.offerer.import_offerer_from_csv.import_new_offerer_from_csv", "<builtin>.open"], "src.pcapi.utils.image_conversion.standardize_image": ["src.pcapi.utils.image_conversion._resize_image", "src.pcapi.utils.image_conversion._crop_image", "src.pcapi.utils.image_conversion._convert_to_jpeg", "src.pcapi.utils.image_conversion._transpose_image"], "src.pcapi.utils.image_conversion._transpose_image": [], "src.pcapi.utils.image_conversion._crop_image": ["<builtin>.min"], "src.pcapi.utils.image_conversion._resize_image": ["<builtin>.int"], "src.pcapi.utils.image_conversion._convert_to_jpeg": [], "src.pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView.edit_form": ["src.pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView.edit_form._NewStatusForm", "flask_admin.helpers.get_form_data"], "src.pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView.edit_form._NewStatusForm": ["<builtin>.len", "wtforms.TextAreaField", "wtforms.StringField", "wtforms.SelectField"], "wtforms.TextAreaField": [], "src.pcapi.admin.custom_views.beneficiary_import_view.BeneficiaryImportView.update_model": ["pcapi.models.beneficiary_import_status.ImportStatus", "pcapi.domain.user_activation.is_import_status_change_allowed"], "pcapi.models.beneficiary_import_status.ImportStatus": [], "tests.routes.shared.signout_test.Returns200Test.expect_the_existing_user_session_to_be_deleted_deleted": ["tests.conftest.TestClient.__init__", "tests.conftest.TestClient.get", "tests.conftest.TestClient.with_session_auth"], "tests.routes.adage_iframe.get_categories_test._create_adage_valid_token_with_email": ["tests.routes.adage_iframe.utils_create_test_token.create_adage_jwt_fake_valid_token"], "tests.routes.adage_iframe.get_categories_test.Returns200Test.test_get_categories": ["tests.routes.adage_iframe.get_categories_test._create_adage_valid_token_with_email"], "tests.scripts.suspend_suspected_fraudulent_pro_users_test.test_suspend_pros_in_given_emails_providers_list": ["pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.users.factories.AdminFactory"], "pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers": [], "tests.scripts.suspend_suspected_fraudulent_pro_users_test.test_only_suspend_pro_users_in_given_emails_providers_list": ["pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers", "pcapi.core.users.factories.BeneficiaryGrant18Factory", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.users.factories.AdminFactory"], "tests.scripts.suspend_suspected_fraudulent_pro_users_test.test_dont_suspend_users_not_in_given_emails_providers_list": ["pcapi.core.users.factories.ProFactory", "pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers", "pcapi.core.users.factories.AdminFactory"], "tests.scripts.suspend_suspected_fraudulent_pro_users_test.test_suspend_pro_user_with_many_offerers_and_delete_all_offerers": ["pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.users.factories.AdminFactory"], "tests.scripts.suspend_suspected_fraudulent_pro_users_test.test_delete_offerer_and_venue": ["pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.offers.factories.VenueFactory", "pcapi.core.users.factories.AdminFactory"], "tests.scripts.suspend_suspected_fraudulent_pro_users_test.test_cancel_bookings_when_offerer_has_one_or_more": ["pcapi.scripts.suspend_fraudulent_pro_users.suspend_fraudulent_pro_by_email_providers", "pcapi.core.bookings.factories.BookingFactory", "pcapi.core.users.factories.BeneficiaryGrant18Factory", "pcapi.core.offers.factories.OffererFactory", "pcapi.core.offers.factories.OfferFactory", "pcapi.core.offers.factories.StockFactory", "pcapi.core.users.factories.ProFactory", "pcapi.core.offers.factories.UserOffererFactory", "pcapi.core.users.factories.AdminFactory"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_iterator_is_called_until_exhausted": ["tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_iterator_should_log_provider_event_from_start_to_stop": ["tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_creates_new_object_when_no_object_in_database": ["pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_updates_existing_object": ["datetime.datetime", "pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_does_not_update_existing_object_when_date_is_older_than_last_modified_date": ["datetime.datetime", "pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_does_not_update_objects_when_venue_provider_is_not_active": ["datetime.datetime", "pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_does_not_update_objects_when_provider_is_not_active": ["datetime.datetime", "pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_does_not_create_new_object_when_can_create_is_false": ["pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProviderNoCreation.__init__"], "tests.local_providers.local_provider_test.UpdateObjectsTest.test_creates_only_one_object_when_limit_is_one": ["pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.CreateObjectTest.test_returns_object_with_expected_attributes": ["<builtin>.isinstance", "pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.CreateObjectTest.test_raises_api_errors_exception_when_errors_occur_on_model_and_log_error": ["pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProviderWithApiErrors.__init__"], "tests.local_providers.local_provider_test.HandleUpdateTest.test_returns_object_with_expected_attributes": ["pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProvider.__init__"], "tests.local_providers.local_provider_test.HandleUpdateTest.test_raises_api_errors_exception_when_errors_occur_on_model": ["pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProviderWithApiErrors.__init__"], "tests.local_providers.local_provider_test.HandleThumbTest.test_call_save_thumb_should_increase_thumbCount_by_1": ["tests.local_providers.provider_test_utils.TestLocalProviderWithThumb.__init__", "pcapi.local_providers.providable_info.ProvidableInfo"], "tests.local_providers.local_provider_test.HandleThumbTest.test_create_several_thumbs_when_thumb_index_is_4_and_current_thumbCount_is_0": ["tests.local_providers.provider_test_utils.TestLocalProviderWithThumbIndexAt4.__init__", "pcapi.local_providers.providable_info.ProvidableInfo"], "tests.local_providers.local_provider_test.SaveThumbFromThumbCountToIndexTest.test_should_iterate_from_current_thumbCount_to_thumbIndex_when_thumbCount_is_0": ["tests.local_providers.provider_test_utils.TestLocalProviderWithThumb.__init__", "pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProviderWithThumb.get_object_thumb", "pcapi.local_providers.local_provider._save_same_thumb_from_thumb_count_to_index"], "pcapi.local_providers.local_provider._save_same_thumb_from_thumb_count_to_index": [], "tests.local_providers.local_provider_test.SaveThumbFromThumbCountToIndexTest.test_should_only_replace_image_at_specific_thumb_index_when_thumbCount_is_superior_to_thumbIndex": ["tests.local_providers.provider_test_utils.TestLocalProviderWithThumb.__init__", "pcapi.local_providers.providable_info.ProvidableInfo", "tests.local_providers.provider_test_utils.TestLocalProviderWithThumb.get_object_thumb", "pcapi.local_providers.local_provider._save_same_thumb_from_thumb_count_to_index"], "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.FillProDepartmentCodeWithOffererPostalCodeTest.should_not_modify_pro_user_department_code_when_user_not_in_93": ["pcapi.core.users.factories.ProFactory", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code.fill_pro_department_code_with_offerer_postal_code"], "pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code.fill_pro_department_code_with_offerer_postal_code": [], "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.FillProDepartmentCodeWithOffererPostalCodeTest.should_not_update_user_linked_to_offerer_with_postal_code_outside_75": ["pcapi.core.users.factories.ProFactory", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code.fill_pro_department_code_with_offerer_postal_code"], "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.FillProDepartmentCodeWithOffererPostalCodeTest.should_update_user_department_code_linked_to_offerer_with_postal_code_75": ["pcapi.core.users.factories.ProFactory", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer", "pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code.fill_pro_department_code_with_offerer_postal_code"], "tests.scripts.pro.fill_pro_department_code_with_offerer_postal_code_test.GetUserInitialLinkedOffererTest.should_return_first_linked_offerer": ["pcapi.core.users.factories.ProFactory", "pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code._get_user_initial_linked_offerer", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_user_offerer"], "pcapi.scripts.pro.fill_pro_department_code_with_offerer_postal_code._get_user_initial_linked_offerer": [], "src.pcapi.core.search._get_backend": ["pcapi.utils.module_loading.import_string"], "src.pcapi.core.search.async_index_offer_ids": ["src.pcapi.core.search._get_backend"], "src.pcapi.core.search.async_index_venue_ids": ["src.pcapi.core.search._get_backend"], "src.pcapi.core.search.async_index_offers_of_venue_ids": ["src.pcapi.core.search._get_backend"], "src.pcapi.core.search.index_offers_in_queue": ["src.pcapi.core.search._get_backend", "src.pcapi.core.search.reindex_offer_ids", "<builtin>.str", "<builtin>.len"], "src.pcapi.core.search.reindex_offer_ids": ["src.pcapi.core.search._get_backend", "<builtin>.str", "append"], "src.pcapi.core.search.index_venues_in_queue": ["src.pcapi.core.search._get_backend", "src.pcapi.core.search._reindex_venue_ids", "<builtin>.str"], "src.pcapi.core.search._reindex_venue_ids": ["<builtin>.str", "sqlalchemy.orm.joinedload", "src.pcapi.core.search.unindex_venue_ids", "<builtin>.len"], "src.pcapi.core.search.unindex_venue_ids": ["src.pcapi.core.search._get_backend"], "src.pcapi.core.search.index_offers_of_venues_in_queue": ["src.pcapi.core.search._get_backend", "src.pcapi.core.search.reindex_offer_ids"], "src.pcapi.core.search.unindex_offer_ids": ["src.pcapi.core.search._get_backend"], "src.pcapi.core.search.unindex_all_offers": ["src.pcapi.core.search._get_backend", "<builtin>.ValueError"], "src.pcapi.core.search.reindex_venue_ids": ["src.pcapi.core.search._get_backend", "src.pcapi.core.search._reindex_venue_ids"], "src.pcapi.core.search.unindex_all_venues": ["src.pcapi.core.search._get_backend", "<builtin>.ValueError"], "src.pcapi.scripts.booking.canceling_token_validation.canceling_token_validation": ["<builtin>.print"], "src.pcapi.sandboxes.scripts.creators.industrial.create_industrial_invoices.create_specific_invoice": ["append"], "src.pcapi.notifications.sms.backends.sendinblue.SendinblueBackend.send_transactional_sms": ["src.pcapi.notifications.sms.backends.sendinblue.SendinblueBackend._format_recipient"], "src.pcapi.notifications.sms.backends.sendinblue.SendinblueBackend._format_recipient": [], "src.pcapi.notifications.sms.backends.sendinblue.ToDevSendinblueBackend.send_transactional_sms": ["<builtin>.super"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_address": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_not_return_errors_when_valid_address": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_bank_information": ["pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_not_return_errors_when_valid_bank_information": ["pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_offer": ["pcapi.validation.models.entity_validator.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.validation.models.entity_validator_test.test_should_not_return_errors_when_valid_offer": ["pcapi.validation.models.entity_validator.validate", "pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.model_creators.specific_creators.create_offer_with_thing_product"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_offerer": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_not_return_errors_when_valid_offerer": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_product": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_valid_product": ["pcapi.model_creators.specific_creators.create_product_with_thing_subcategory", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_stock": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_not_return_errors_when_valid_stock": ["pcapi.model_creators.generic_creators.create_stock", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_user": ["pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_not_return_errors_when_valid_user": ["pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_errors_when_invalid_venue": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_not_return_errors_when_valid_venue": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.model_creators.generic_creators.create_venue", "pcapi.validation.models.entity_validator.validate"], "tests.validation.models.entity_validator_test.test_should_return_multiple_errors_when_invalid_offerer_and_address": ["pcapi.model_creators.generic_creators.create_offerer", "pcapi.validation.models.entity_validator.validate"], "tests.utils.feature_test.FeatureRequiredTest.when_feature_is_activated_dont_raise_error": ["pcapi.utils.feature.feature_required", "tests.utils.feature_test.FeatureRequiredTest.when_feature_is_activated_dont_raise_error.decorated_function"], "pcapi.utils.feature.feature_required": [], "tests.utils.feature_test.FeatureRequiredTest.when_feature_is_activated_dont_raise_error.decorated_function": [], "tests.utils.feature_test.FeatureRequiredTest.when_feature_is_not_activated_raise_an_error": ["pcapi.utils.feature.feature_required", "tests.utils.feature_test.FeatureRequiredTest.when_feature_is_not_activated_raise_an_error.decorated_function"], "tests.utils.feature_test.FeatureRequiredTest.when_feature_is_not_activated_raise_an_error.decorated_function": [], "tests.routes.pro.get_user_offerer_test.Returns200Test.test_get_user_offerer_should_return_only_user_offerer_from_current_user": ["pcapi.utils.human_ids.humanize"]}