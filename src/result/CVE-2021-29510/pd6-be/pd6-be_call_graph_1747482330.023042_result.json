{"config": ["config.ProfilerConfig", "config.AmqpConfig", "config.DBConfig", "config.AppConfig", "config.SMTPConfig", "config.LoggerConfig", "config.Config", "dotenv.dotenv_values", "config.ServiceConfig", "config.PD4SConfig", "config.S3Config"], "dotenv.dotenv_values": [], "config.Config": ["<builtin>.float", "<map>.get", "datetime.timedelta"], "<map>.get": [], "<builtin>.float": [], "datetime.timedelta": [], "config.ServiceConfig": ["<builtin>.bool", "<map>.get", "distutils.util.strtobool", "<builtin>.property"], "distutils.util.strtobool": [], "<builtin>.bool": [], "<builtin>.property": [], "config.AppConfig": ["<map>.get"], "config.DBConfig": ["<map>.get", "<builtin>.int"], "<builtin>.int": [], "config.SMTPConfig": ["<map>.get", "distutils.util.strtobool"], "config.LoggerConfig": ["<map>.get"], "config.PD4SConfig": ["<map>.get"], "config.S3Config": ["<map>.get"], "config.AmqpConfig": ["<map>.get", "<builtin>.int"], "config.ProfilerConfig": ["<builtin>.bool", "<builtin>.float", "<map>.get", "distutils.util.strtobool"], "version": ["<builtin>.open"], "<builtin>.open": [], "log": ["log._Logger", "util.context", "config"], "util.context": ["base.mcs", "exceptions", "util.security", "util.context.Context"], "base.mcs": ["base.mcs.Singleton"], "base.mcs.Singleton": [], "exceptions": ["exceptions.PdogsException", "exceptions.SystemException", "exceptions.InvalidTeamLabelFilter", "exceptions.MaxPeerReviewCount", "exceptions.account", "exceptions.LoginExpired", "exceptions._CauseMixin", "exceptions.persistence", "exceptions.FileDecodeError", "exceptions.NoPermission", "exceptions.InvalidFormula", "exceptions.IllegalInput"], "exceptions._CauseMixin": [], "exceptions.SystemException": [], "exceptions.PdogsException": [], "exceptions.LoginExpired": [], "exceptions.NoPermission": [], "exceptions.IllegalInput": [], "exceptions.FileDecodeError": [], "exceptions.MaxPeerReviewCount": [], "exceptions.InvalidFormula": [], "exceptions.InvalidTeamLabelFilter": [], "exceptions.account": ["exceptions.account.PasswordVerificationFailed", "exceptions.account.InvalidEmail", "exceptions.account.StudentIdNotMatchEmail", "exceptions.account.StudentCardDoesNotBelong", "exceptions.account.LoginFailed", "exceptions.account.IllegalCharacter", "exceptions.account.InvalidInstitute", "exceptions.account.UsernameExists", "exceptions.account.StudentCardExists"], "exceptions.account.LoginFailed": [], "exceptions.account.IllegalCharacter": [], "exceptions.account.UsernameExists": [], "exceptions.account.StudentCardExists": [], "exceptions.account.StudentCardDoesNotBelong": [], "exceptions.account.InvalidEmail": [], "exceptions.account.InvalidInstitute": [], "exceptions.account.StudentIdNotMatchEmail": [], "exceptions.account.PasswordVerificationFailed": [], "exceptions.persistence": ["exceptions.persistence.UniqueViolationError", "exceptions.persistence.NotFound"], "exceptions.persistence.NotFound": [], "exceptions.persistence.UniqueViolationError": [], "util.security": ["exceptions", "util.security.AuthedAccount", "functools.partial", "config"], "functools.partial": [], "util.security.AuthedAccount": [], "util.context.Context": ["<builtin>.property"], "log._Logger": [], "uvicorn_workers": ["uvicorn_workers.UvicornWorker"], "uvicorn_workers.UvicornWorker": [], "run_test": ["run_test.TestLoader"], "run_test.TestLoader": [], "main": ["log", "middleware.profiler", "middleware.auth", "middleware.api", "version", "middleware.tracker", "middleware.envelope", "util.api_doc", "<builtin>.open", "middleware.db_access_log", "<str>.strip", "processor.http_api", "prometheus_fastapi_instrumentator.Instrumentator", "config", "middleware.logging", "util.api_doc.all_docs"], "middleware.api": ["middleware.api.FastAPI"], "middleware.api.FastAPI": [], "util.api_doc": [], "util.api_doc.all_docs": ["util.api_doc.gen_err_doc", "util.api_doc.gen_enum_doc", "util.api_doc.to_collapsible", "<str>.strip"], "util.api_doc.gen_err_doc": ["util.api_doc._gen_err_doc", "exceptions", "exceptions.account", "exceptions.persistence", "util.api_doc.to_collapsible"], "util.api_doc._gen_err_doc": ["<str>.join", "util.api_doc._get_members", "append"], "<str>.join": [], "append": [], "util.api_doc.to_collapsible": ["<str>.strip", "<builtin>.len", "<str>.lstrip"], "<str>.strip": [], "<builtin>.len": [], "<str>.lstrip": [], "util.api_doc._get_members": [], "util.api_doc.gen_enum_doc": ["util.api_doc._gen_enum_doc"], "util.api_doc._gen_enum_doc": ["textwrap.indent", "util.api_doc._get_members", "<builtin>.len", "base.enum", "base.cls", "util.api_doc.to_collapsible"], "base.cls": ["base.cls.OrderedMixin", "base.cls.StrEnum"], "base.cls.StrEnum": [], "base.cls.OrderedMixin": ["<builtin>.property"], "base.enum": ["base.enum.SortOrder", "base.enum.FilterOperator", "base.enum.ReviserSettingType", "typing.TypeVar", "base.enum.CourseType", "base.enum.ChallengePublicizeType", "base.cls", "base.enum.ScoreboardType", "base.enum.RoleType", "base.enum.ProblemJudgeType", "base.enum.TaskSelectionType"], "typing.TypeVar": [], "base.enum.RoleType": [], "base.enum.CourseType": [], "base.enum.ChallengePublicizeType": [], "base.enum.TaskSelectionType": [], "base.enum.ProblemJudgeType": [], "base.enum.FilterOperator": [], "base.enum.SortOrder": [], "base.enum.ScoreboardType": [], "base.enum.ReviserSettingType": [], "textwrap.indent": [], "middleware.db_access_log": ["log", "middleware.envelope", "middleware.envelope.middleware_error_enveloped", "const", "persistence.database", "util.context"], "const": [], "persistence.database": ["persistence.database.submission", "persistence.database.peer_review_record", "persistence.database.grade", "persistence.database.scoreboard", "persistence.database.rbac", "persistence.database.class_vo", "persistence.database.email_verification", "persistence.database.student_card", "persistence.database.challenge", "persistence.database.problem_judge_setting_customized", "persistence.database.essay", "persistence.database.s3_file", "persistence.database.course", "persistence.database.team", "persistence.database.account", "persistence.database.institute", "persistence.database.view", "persistence.database.class_", "persistence.database.PoolHandler.__init__", "persistence.database.scoreboard_setting_team_contest", "persistence.database.announcement", "persistence.database.problem_reviser_settings", "persistence.database.assisting_data", "persistence.database.PoolHandler", "persistence.database.judgment", "config", "persistence.database.judge_case", "persistence.database.scoreboard_setting_team_project", "persistence.database.account_vo", "persistence.database.problem", "persistence.database.peer_review", "persistence.database.essay_submission", "base.mcs", "persistence.database.access_log", "persistence.database.testcase"], "persistence.database.PoolHandler": ["<builtin>.property"], "persistence.database.PoolHandler.__init__": [], "persistence.database.account": ["persistence.database.student_card", "base.enum", "base.do", "persistence.database.base", "persistence.database.util", "exceptions"], "base.do": ["base.do.ProblemJudgeSettingCustomized", "base.do.SubmissionLanguage", "base.do.Challenge", "base.do.JudgeCase", "base.do.PeerReviewRecord", "base.do.AssistingData", "base.do.ScoreboardSettingTeamProject", "base.do.Grade", "base.do.AccessLog", "base.enum", "base.do.EssaySubmission", "base.do.ClassMember", "base.do.ScoreboardSettingTeamContest", "base.do.ProblemReviserSettingCustomized", "base.do.S3File", "base.do.Problem", "base.do.Announcement", "base.do.Institute", "base.do.Essay", "base.do.ProblemReviserSetting", "base.do.Course", "base.do.StudentCard", "base.do.Scoreboard", "base.do.Judgment", "base.do.PeerReview", "base.do.Team", "base.do.EmailVerification", "base.do.Submission", "base.do.Account", "base.do.Class", "base.do.TeamMember", "base.do.Testcase"], "base.do.Account": [], "base.do.Institute": [], "base.do.StudentCard": [], "base.do.EmailVerification": [], "base.do.Course": [], "base.do.Class": [], "base.do.Team": [], "base.do.ClassMember": [], "base.do.TeamMember": [], "base.do.Grade": [], "base.do.Challenge": [], "base.do.ProblemReviserSetting": [], "base.do.Problem": [], "base.do.ProblemJudgeSettingCustomized": [], "base.do.ProblemReviserSettingCustomized": [], "base.do.Testcase": [], "base.do.S3File": [], "base.do.SubmissionLanguage": [], "base.do.Submission": [], "base.do.Judgment": [], "base.do.JudgeCase": [], "base.do.Essay": [], "base.do.EssaySubmission": [], "base.do.AssistingData": [], "base.do.PeerReview": [], "base.do.PeerReviewRecord": [], "base.do.Scoreboard": [], "base.do.ScoreboardSettingTeamProject": [], "base.do.ScoreboardSettingTeamContest": [], "base.do.Announcement": [], "base.do.AccessLog": [], "persistence.database.student_card": ["base.do", "persistence.database.base"], "persistence.database.base": ["log", "util.metric", "persistence.database.base._SafeExecutor", "persistence.database.base.AutoTxConnection", "persistence.database.base.FetchAll", "persistence.database.base.FetchOne", "exceptions", "persistence.database.base.OnlyExecute"], "util.metric": ["prometheus_client.Summary", "prometheus_client.Counter"], "prometheus_client.Counter": [], "prometheus_client.Summary": [], "persistence.database.base.AutoTxConnection": [], "persistence.database.base._SafeExecutor": ["abc.abstractmethod"], "abc.abstractmethod": [], "persistence.database.base.OnlyExecute": [], "persistence.database.base.FetchOne": [], "persistence.database.base.FetchAll": [], "persistence.database.util": ["log", "base.enum", "persistence.database.base", "base.popo"], "base.popo": ["base.popo.Sorter", "base.popo.Filter", "base.enum"], "base.popo.Filter": [], "base.popo.Sorter": [], "persistence.database.account_vo": ["base.enum", "base.popo", "base.do", "persistence.database.util", "persistence.database.base"], "persistence.database.institute": ["base.do", "persistence.database.base"], "persistence.database.email_verification": ["base.do", "persistence.database.base"], "persistence.database.rbac": ["exceptions", "base.enum", "persistence.database.base"], "persistence.database.course": ["base.do", "base.enum", "persistence.database.base", "persistence.database.class_"], "persistence.database.class_": ["log", "persistence.database.challenge", "base.enum", "base.popo", "base.do", "persistence.database.base", "persistence.database.util", "persistence.database.team"], "persistence.database.team": ["log", "base.enum", "base.popo", "base.do", "persistence.database.base", "persistence.database.util", "exceptions", "persistence.database.account"], "persistence.database.challenge": ["persistence.database.peer_review", "base.enum", "base.popo", "base.do", "persistence.database.base", "persistence.database.util", "persistence.database.problem", "util.context"], "persistence.database.peer_review": ["base.do", "persistence.database.base"], "persistence.database.problem": ["base.enum", "base.do", "persistence.database.base", "util.serialize", "persistence.database.testcase"], "util.serialize": ["functools.partial", "util.serialize.JSONEncoder"], "util.serialize.JSONEncoder": [], "persistence.database.testcase": ["base.do", "persistence.database.base"], "persistence.database.class_vo": ["base.enum", "base.popo", "base.do", "persistence.database.util", "persistence.database.base"], "persistence.database.grade": ["base.enum", "base.popo", "base.do", "persistence.database.base", "persistence.database.util", "exceptions", "persistence.database.account"], "persistence.database.problem_judge_setting_customized": ["base.do", "persistence.database.base"], "persistence.database.problem_reviser_settings": ["base.do", "persistence.database.base"], "persistence.database.submission": ["base.enum", "base.popo", "base.do", "persistence.database.util", "persistence.database.base"], "persistence.database.judgment": ["base.do", "base.enum", "persistence.database.base"], "persistence.database.judge_case": ["base.do", "base.enum", "persistence.database.base"], "persistence.database.essay": ["base.do", "persistence.database.base"], "persistence.database.essay_submission": ["base.do", "persistence.database.util", "persistence.database.base", "base.popo"], "persistence.database.s3_file": ["base.do", "persistence.database.base"], "persistence.database.assisting_data": ["base.do", "persistence.database.base"], "persistence.database.peer_review_record": ["base.enum", "base.popo", "base.do", "persistence.database.util", "persistence.database.base"], "persistence.database.scoreboard": ["base.do", "base.enum", "persistence.database.base"], "persistence.database.scoreboard_setting_team_project": ["persistence.database.scoreboard", "base.enum", "base.do", "persistence.database.base", "exceptions"], "persistence.database.scoreboard_setting_team_contest": ["persistence.database.scoreboard", "base.enum", "base.do", "persistence.database.base", "exceptions"], "persistence.database.announcement": ["base.enum", "base.popo", "base.do", "persistence.database.base", "persistence.database.util", "util.context"], "persistence.database.access_log": ["base.do", "persistence.database.util", "persistence.database.base", "base.popo"], "persistence.database.view": ["base.enum", "base.popo", "persistence.database.util", "persistence.database.base", "base.vo"], "base.vo": ["base.vo.ViewProblemSet", "base.enum", "base.vo.ViewMySubmissionUnderProblem", "base.vo.ViewAccessLog", "base.vo.ViewAccount", "base.vo.ViewGrade", "base.vo.ViewMySubmission", "base.vo.ViewPeerReviewRecord", "base.vo.ViewClassMember", "base.vo.ViewSubmissionUnderClass"], "base.vo.ViewAccount": [], "base.vo.ViewClassMember": [], "base.vo.ViewAccessLog": [], "base.vo.ViewSubmissionUnderClass": [], "base.vo.ViewMySubmission": [], "base.vo.ViewMySubmissionUnderProblem": [], "base.vo.ViewProblemSet": [], "base.vo.ViewGrade": [], "base.vo.ViewPeerReviewRecord": [], "middleware.envelope": ["exceptions", "log", "util.metric"], "middleware.envelope.middleware_error_enveloped": [], "middleware.auth": ["util.security", "middleware.envelope", "util.context", "middleware.envelope.middleware_error_enveloped"], "middleware.logging": ["log", "middleware.envelope", "middleware.envelope.middleware_error_enveloped"], "middleware.profiler": ["middleware.envelope", "util.context", "middleware.envelope.middleware_error_enveloped", "config"], "middleware.tracker": ["middleware.envelope", "util.context", "middleware.envelope.middleware_error_enveloped"], "processor.http_api": [], "prometheus_fastapi_instrumentator.Instrumentator": [], "middleware": ["middleware.envelope", "middleware.router", "middleware.response"], "middleware.router": ["middleware.routing", "middleware.router.APIRouter"], "middleware.routing": ["log", "middleware.routing.NoLogAPIRoute", "fastapi.datastructures.Default", "util.context", "middleware.routing.APIRoute"], "fastapi.datastructures.Default": [], "middleware.routing.NoLogAPIRoute": [], "middleware.routing.APIRoute": [], "middleware.router.APIRouter": [], "middleware.response": ["middleware.response.JSONResponse", "middleware.response.JSONEncoder"], "middleware.response.JSONEncoder": [], "middleware.response.JSONResponse": [], "middleware.envelope_test": ["middleware.envelope", "middleware.envelope_test.TestEnveloped"], "middleware.envelope_test.TestEnveloped": [], "util.background_task": ["log"], "util.dtype": [], "util": ["util.metric", "util.security", "util.api_doc", "util.model", "util.text", "util.context", "util.background_task", "util.file"], "util.file": ["exceptions", "const"], "util.model": ["util.model.ServerTZDatetime", "util.model.CaseInsensitiveEmailStr", "util.model.AddOutput", "base.enum", "util.model.Offset", "base.popo", "util.model.Limit", "util.model.BrowseOutputBase", "exceptions"], "util.model.AddOutput": [], "util.model.BrowseOutputBase": [], "util.model.Limit": [], "util.model.Offset": [], "util.model.ServerTZDatetime": ["<builtin>.classmethod"], "<builtin>.classmethod": [], "util.model.CaseInsensitiveEmailStr": ["<builtin>.classmethod"], "util.text": [], "util.mock.util": [], "util.mock": ["util.mock.mock", "util.mock.context", "util.mock.compare", "util.mock.util"], "util.mock.mock": ["util.mock.mock.CallRecord", "util.mock.mock.Controller", "util.mock.mock.MockAsyncFunction", "util.mock.mock.CallRecorder", "util.mock.mock.MockFunction", "util.mock.mock.MockModule"], "util.mock.mock.CallRecord": [], "util.mock.mock.CallRecorder": [], "util.mock.mock.MockFunction": [], "util.mock.mock.MockAsyncFunction": [], "util.mock.mock.MockModule": [], "util.mock.mock.Controller": [], "util.mock.context": ["util.mock.context.Context", "util.context", "util.mock.context._ContextDict"], "util.mock.context._ContextDict": ["<builtin>.staticmethod"], "<builtin>.staticmethod": [], "util.mock.context.Context": [], "util.mock.compare": ["util.mock.compare.AnySetOfValues", "util.mock.compare.AnyInstanceOf"], "util.mock.compare.AnyInstanceOf": [], "util.mock.compare.AnySetOfValues": [], "processor": [], "processor.http_api.scoreboard_setting_team_project": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "processor.http_api.scoreboard_setting_team_project.ViewTeamProjectScoreboardProblemScoreOutput", "processor.http_api.scoreboard_setting_team_project.ViewTeamProjectScoreboardOutput", "processor.http_api.scoreboard_setting_team_project.EditScoreboardInput", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "persistence.database", "util.model", "exceptions", "util.context"], "service": ["service.downloader", "service.submission", "service.moss", "service.statistics", "service.csv", "service.task", "service.rbac", "service.scoreboard", "service.judge"], "service.csv": ["util", "base.enum", "base.do", "persistence.database", "persistence.s3", "exceptions"], "persistence.s3": ["persistence.s3.testdata", "persistence.s3.tools", "base.mcs", "persistence.s3.customized_code", "persistence.s3.assisting_data", "persistence.s3.essay_submission", "persistence.s3.submission", "persistence.s3.S3Handler", "persistence.s3.temp", "config", "persistence.s3.S3Handler.__init__"], "persistence.s3.S3Handler": [], "persistence.s3.S3Handler.__init__": [], "persistence.s3.tools": ["log", "const", "base.do"], "persistence.s3.testdata": ["base.do", "persistence.s3.tools"], "persistence.s3.submission": ["base.do", "persistence.s3.tools"], "persistence.s3.essay_submission": ["base.do", "persistence.s3.tools"], "persistence.s3.assisting_data": ["base.do", "persistence.s3.tools"], "persistence.s3.temp": ["log", "base.do", "persistence.s3.tools"], "persistence.s3.customized_code": ["base.do", "persistence.s3.tools"], "service.downloader": ["log", "service.moss", "base.do", "persistence.database", "persistence.s3", "util.text"], "service.moss": ["log", "base.do", "persistence.database", "persistence.http_client", "service.moss.MossOptions", "persistence.s3", "util.text"], "persistence.http_client": [], "service.moss.MossOptions": [], "service.judge": ["log", "base.enum", "const", "base.popo", "persistence.amqp_publisher", "base.do", "persistence.database", "persistence.s3"], "persistence.amqp_publisher": ["log", "base.mcs", "persistence.amqp_publisher.AmqpPublishHandler.__init__", "persistence.amqp_publisher.judge", "config", "persistence.amqp_publisher.AmqpPublishHandler"], "persistence.amqp_publisher.AmqpPublishHandler": [], "persistence.amqp_publisher.AmqpPublishHandler.__init__": [], "persistence.amqp_publisher.judge": ["util.serialize"], "service.rbac": ["exceptions", "log", "base.enum", "persistence.database"], "service.scoreboard": ["exceptions"], "service.statistics": ["base.do", "base.enum", "persistence.database"], "service.submission": ["persistence.database", "persistence.s3"], "service.task": ["base.do", "persistence.database"], "middleware.router.APIRouter.__init__": ["<builtin>.super"], "<builtin>.super": [], "processor.http_api.scoreboard_setting_team_project.ViewTeamProjectScoreboardProblemScoreOutput": [], "processor.http_api.scoreboard_setting_team_project.ViewTeamProjectScoreboardOutput": [], "middleware.envelope.enveloped": ["<builtin>.setattr", "middleware.envelope._make_enveloped_annotations"], "middleware.envelope._make_enveloped_annotations": ["<builtin>.type", "dataclasses.dataclass", "<builtin>.dict"], "<builtin>.type": [], "dataclasses.dataclass": [], "<builtin>.dict": [], "<builtin>.setattr": [], "processor.http_api.scoreboard_setting_team_project.EditScoreboardInput": ["pydantic.constr"], "pydantic.constr": [], "processor.http_api.scoreboard_test": ["processor.http_api.scoreboard_test.TestDeleteScoreboard", "util.security", "base.enum", "exceptions", "processor.http_api.scoreboard", "processor.http_api.scoreboard_test.TestReadScoreboard", "base.do", "util.mock"], "processor.http_api.scoreboard": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "persistence.database", "processor.http_api.scoreboard.ReadScoreboardOutput", "exceptions", "util.context"], "processor.http_api.scoreboard.ReadScoreboardOutput": [], "processor.http_api.scoreboard_test.TestReadScoreboard": [], "processor.http_api.scoreboard_test.TestDeleteScoreboard": [], "processor.http_api.email_verification_test": ["processor.http_api.email_verification_test.TestDeletePendingEmailVerification", "processor.http_api.email_verification_test.TestResendEmailVerification", "util.security", "base.enum", "base.do", "util.mock", "processor.http_api.email_verification"], "processor.http_api.email_verification": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "persistence.email", "persistence.database", "exceptions", "util.context"], "persistence.email": ["log", "persistence.email.SMTPHandler.__init__", "persistence.email.SMTPHandler", "persistence.email.forget_password", "base.mcs", "config", "persistence.email.notification", "persistence.email.forget_username", "persistence.email.verification"], "persistence.email.SMTPHandler": [], "persistence.email.SMTPHandler.__init__": [], "persistence.email.verification": ["config", "persistence.email"], "persistence.email.notification": ["config", "persistence.email"], "persistence.email.forget_password": ["config", "persistence.email"], "persistence.email.forget_username": ["base.do", "config", "persistence.email"], "processor.http_api.email_verification_test.TestResendEmailVerification": [], "processor.http_api.email_verification_test.TestDeletePendingEmailVerification": [], "processor.http_api.course_test": ["processor.http_api.course_test.TestDeleteCourse", "util.security", "processor.http_api.course_test.TestEditCourse", "base.enum", "processor.http_api.course", "processor.http_api.course_test.TestBrowseAllClassUnderCourse", "base.do", "processor.http_api.course_test.TestAddCourse", "processor.http_api.course_test.TestReadCourse", "util.model", "processor.http_api.course_test.TestAddClassUnderCourse", "exceptions", "util.mock", "processor.http_api.course_test.TestBrowseAllCourse"], "processor.http_api.course": ["processor.http_api.course.BrowseAllClassUnderCourseOutput", "middleware", "service", "middleware.auth", "processor.http_api.course.AddCourseInput", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "base.do", "persistence.database", "util.model", "exceptions", "util.context", "processor.http_api.course.AddClassInput", "processor.http_api.course.EditCourseInput"], "processor.http_api.course.AddCourseInput": [], "processor.http_api.course.EditCourseInput": [], "processor.http_api.course.AddClassInput": [], "processor.http_api.course.BrowseAllClassUnderCourseOutput": [], "processor.http_api.course_test.TestAddCourse": [], "processor.http_api.course_test.TestReadCourse": [], "processor.http_api.course_test.TestBrowseAllCourse": [], "processor.http_api.course_test.TestEditCourse": [], "processor.http_api.course_test.TestDeleteCourse": [], "processor.http_api.course_test.TestAddClassUnderCourse": [], "processor.http_api.course_test.TestBrowseAllClassUnderCourse": [], "processor.http_api.public": ["middleware", "middleware.envelope.enveloped", "middleware.router.APIRouter.__init__", "processor.http_api.public.ForgetPasswordInput", "persistence.email", "persistence.database", "util.model", "config", "exceptions", "processor.http_api.public.ForgetUsernameInput"], "processor.http_api.public.ForgetPasswordInput": [], "processor.http_api.public.ForgetUsernameInput": [], "processor.http_api.judgment_test": ["util.security", "processor.http_api.judgment_test.TestBrowseAllJudgmentVerdict", "base.enum", "processor.http_api.judgment_test.TestBrowseAllJudgmentJudgeCase", "base.do", "processor.http_api.judgment_test.TestReadJudgment", "exceptions", "util.mock", "processor.http_api.judgment"], "processor.http_api.judgment": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "base.do", "persistence.database", "exceptions", "util.context"], "processor.http_api.judgment_test.TestBrowseAllJudgmentVerdict": [], "processor.http_api.judgment_test.TestReadJudgment": [], "processor.http_api.judgment_test.TestBrowseAllJudgmentJudgeCase": [], "processor.http_api.hardcode_test": ["processor.http_api.hardcode", "util.security", "base.enum", "exceptions", "processor.http_api.hardcode_test.TestViewTeamContestScoreboardRuns", "base.do", "util.mock"], "processor.http_api.hardcode": ["processor.http_api.hardcode.EachRun", "middleware", "service", "middleware.auth", "processor.http_api.hardcode.ReturnEachRun", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "persistence.database", "processor.http_api.hardcode.TimeInfo", "processor.http_api.hardcode.ViewTeamContestScoreboardRunsOutput", "config", "exceptions", "util.context"], "processor.http_api.hardcode.TimeInfo": [], "processor.http_api.hardcode.EachRun": [], "processor.http_api.hardcode.ReturnEachRun": [], "processor.http_api.hardcode.ViewTeamContestScoreboardRunsOutput": [], "processor.http_api.hardcode_test.TestViewTeamContestScoreboardRuns": [], "processor.http_api.system": ["middleware", "service", "middleware.auth", "util", "util.api_doc.add_to_docstring.decorator", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "base.do", "processor.http_api.system.BrowseAccessLogOutput", "persistence.database", "util.model", "exceptions", "<map>.items", "util.context", "util.api_doc.add_to_docstring"], "processor.http_api.system.BrowseAccessLogOutput": [], "<map>.items": [], "util.api_doc.add_to_docstring": [], "util.api_doc.add_to_docstring.decorator": ["<builtin>.str"], "<builtin>.str": [], "processor.http_api.peer_review_test": ["processor.http_api.peer_review_test.TestSubmitPeerReviewRecord", "util.security", "processor.http_api.peer_review_test.TestBrowsePeerReviewRecord", "base.enum", "processor.http_api.peer_review_test.TestReadPeerReviewRecord", "processor.http_api.peer_review", "base.popo", "processor.http_api.peer_review_test.TestAssignPeerReviewRecord", "base.do", "processor.http_api.peer_review_test.TestEditPeerReview", "processor.http_api.peer_review_test.TestBrowseAccountReviewedPeerReviewRecord", "util.model", "processor.http_api.peer_review_test.TestBrowseAccountReceivedPeerReviewRecord", "exceptions", "util.mock", "processor.http_api.peer_review_test.TestReadPeerReview", "processor.http_api.peer_review_test.TestDeletePeerReview"], "processor.http_api.peer_review": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "middleware.router.APIRouter.__init__", "middleware.response", "processor.http_api.peer_review.ReadPeerReviewRecordOutput", "base.do", "processor.http_api.peer_review.SubmitPeerReviewInput", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "base.enum", "exceptions", "<map>.items", "service", "processor.http_api.peer_review.EditPeerReviewInput", "processor.http_api.peer_review.AssignPeerReviewOutput", "base.popo", "persistence.database", "util.model", "util.context", "processor.http_api.peer_review.BrowsePeerReviewRecordOutput", "processor.http_api.peer_review.BrowsePeerReviewRecordData"], "processor.http_api.peer_review.EditPeerReviewInput": [], "processor.http_api.peer_review.BrowsePeerReviewRecordData": [], "processor.http_api.peer_review.BrowsePeerReviewRecordOutput": [], "processor.http_api.peer_review.AssignPeerReviewOutput": [], "processor.http_api.peer_review.ReadPeerReviewRecordOutput": [], "processor.http_api.peer_review.SubmitPeerReviewInput": [], "processor.http_api.peer_review_test.TestReadPeerReview": [], "processor.http_api.peer_review_test.TestEditPeerReview": [], "processor.http_api.peer_review_test.TestDeletePeerReview": [], "processor.http_api.peer_review_test.TestBrowsePeerReviewRecord": [], "processor.http_api.peer_review_test.TestAssignPeerReviewRecord": [], "processor.http_api.peer_review_test.TestReadPeerReviewRecord": [], "processor.http_api.peer_review_test.TestSubmitPeerReviewRecord": [], "processor.http_api.peer_review_test.TestBrowseAccountReceivedPeerReviewRecord": [], "processor.http_api.peer_review_test.TestBrowseAccountReviewedPeerReviewRecord": [], "processor.http_api.s3_file_test": ["util.security", "processor.http_api.s3_file", "base.enum", "base.do", "processor.http_api.s3_file_test.TestGetS3FileUrl", "exceptions", "util.mock"], "processor.http_api.s3_file": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "processor.http_api.s3_file.S3FileUrlOutput", "middleware.response", "persistence.database", "persistence.s3", "exceptions", "util.context"], "processor.http_api.s3_file.S3FileUrlOutput": [], "processor.http_api.s3_file_test.TestGetS3FileUrl": [], "processor.http_api.class_test": ["processor.http_api.class_test.TestDeleteClassMember", "processor.http_api.class_test.TestDeleteClass", "base.do", "processor.http_api.class_test.TestAddTeamUnderClass", "util.mock", "processor.http_api.class_test.TestBrowseAllClassMemberWithAccountReferral", "processor.http_api.class_test.TestBrowseTeamUnderClass", "base.enum", "processor.http_api.class_test.TestBrowseClass", "processor.http_api.class_test.TestBrowseClassMember", "exceptions", "processor.http_api.class_", "base.popo", "processor.http_api.class_test.TestReadClass", "util.model", "processor.http_api.class_test.TestEditClass", "util.security", "processor.http_api.class_test.TestBrowseSubmissionUnderClass", "processor.http_api.class_test.TestReplaceClassMembers"], "processor.http_api.class_": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "processor.http_api.class_.BrowseTeamUnderClassOutput", "middleware.router.APIRouter.__init__", "middleware.response", "processor.http_api.class_.BrowseSubmissionUnderClassOutput", "base.do", "processor.http_api.class_.ReadClassMemberOutput", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "processor.http_api.class_.BrowseClassMemberOutput", "base.enum", "processor.http_api.class_.BrowseClassOutput", "exceptions", "<map>.items", "service", "processor.http_api.class_.SetClassMemberInput", "processor.http_api.class_.AddTeamInput", "base.popo", "persistence.database", "util.model", "util.context", "processor.http_api.class_.ClassMemberData", "persistence.email", "processor.http_api.class_.EditClassInput"], "processor.http_api.class_.BrowseClassOutput": [], "processor.http_api.class_.EditClassInput": [], "processor.http_api.class_.ClassMemberData": [], "processor.http_api.class_.BrowseClassMemberOutput": [], "processor.http_api.class_.ReadClassMemberOutput": [], "processor.http_api.class_.SetClassMemberInput": [], "processor.http_api.class_.AddTeamInput": [], "processor.http_api.class_.BrowseTeamUnderClassOutput": [], "processor.http_api.class_.BrowseSubmissionUnderClassOutput": [], "processor.http_api.class_test.TestBrowseClass": [], "processor.http_api.class_test.TestReadClass": [], "processor.http_api.class_test.TestEditClass": [], "processor.http_api.class_test.TestDeleteClass": [], "processor.http_api.class_test.TestBrowseClassMember": [], "processor.http_api.class_test.TestBrowseAllClassMemberWithAccountReferral": [], "processor.http_api.class_test.TestReplaceClassMembers": [], "processor.http_api.class_test.TestDeleteClassMember": [], "processor.http_api.class_test.TestAddTeamUnderClass": [], "processor.http_api.class_test.TestBrowseTeamUnderClass": [], "processor.http_api.class_test.TestBrowseSubmissionUnderClass": [], "processor.http_api.testcase": ["middleware", "service", "middleware.auth", "util", "processor.http_api.problem", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "persistence.database", "processor.http_api.testcase.EditTestcaseInput", "util.model", "persistence.s3", "exceptions", "fastapi.File", "util.context"], "processor.http_api.problem": ["middleware.auth", "processor.http_api.problem.EditProblemInput", "middleware.router.APIRouter.__init__", "const", "middleware.response", "processor.http_api.problem.GetScoreByTypeOutput", "base.do", "processor.http_api.problem.JudgeSourceInput", "processor.http_api.problem.ReadTestcaseOutput", "middleware", "util", "middleware.envelope.enveloped", "processor.http_api.problem.ReadProblemOutput", "base.enum", "processor.http_api.problem.CustomizedReviserInput", "exceptions", "processor.http_api.problem.RejudgeProblemOutput", "log", "service", "persistence.database", "util.model", "persistence.s3", "processor.http_api.problem.AddTestcaseInput", "processor.http_api.problem.ProblemReviser", "processor.http_api.problem.JudgeSource", "util.context", "processor.http_api.problem.ReadAssistingDataOutput", "processor.http_api.problem.GetProblemStatOutput", "persistence.email", "fastapi.File"], "processor.http_api.problem.JudgeSource": [], "processor.http_api.problem.ProblemReviser": [], "processor.http_api.problem.ReadProblemOutput": [], "processor.http_api.problem.JudgeSourceInput": [], "processor.http_api.problem.CustomizedReviserInput": [], "processor.http_api.problem.EditProblemInput": [], "processor.http_api.problem.AddTestcaseInput": [], "processor.http_api.problem.ReadTestcaseOutput": [], "processor.http_api.problem.ReadAssistingDataOutput": [], "fastapi.File": [], "processor.http_api.problem.GetScoreByTypeOutput": [], "processor.http_api.problem.RejudgeProblemOutput": [], "processor.http_api.problem.GetProblemStatOutput": [], "processor.http_api.testcase.EditTestcaseInput": [], "processor.http_api.scoreboard_setting_team_project_test": ["processor.http_api.scoreboard_setting_team_project_test.TestViewTeamProjectScoreboard", "processor.http_api.scoreboard_setting_team_project_test.TestEditTeamProjectScoreboard", "util.security", "base.enum", "exceptions", "base.do", "processor.http_api.scoreboard_setting_team_project", "util.mock"], "processor.http_api.scoreboard_setting_team_project_test.TestViewTeamProjectScoreboard": [], "processor.http_api.scoreboard_setting_team_project_test.TestEditTeamProjectScoreboard": [], "processor.http_api.scoreboard_setting_team_contest_test": ["processor.http_api.scoreboard_setting_team_contest", "util.security", "processor.http_api.scoreboard_setting_team_contest_test.TestViewTeamContestScoreboard", "base.enum", "exceptions", "processor.http_api.scoreboard_setting_team_contest_test.TestEditTeamContestScoreboard", "base.do", "util.mock"], "processor.http_api.scoreboard_setting_team_contest": ["middleware", "service", "middleware.auth", "processor.http_api.scoreboard_setting_team_contest.ViewTeamContestScoreboardOutput", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "processor.http_api.scoreboard_setting_team_contest.ViewTeamContestScoreboardProblemScoreOutput", "processor.http_api.scoreboard_setting_team_contest.EditScoreboardInput", "middleware.response", "persistence.database", "util.model", "exceptions", "util.context"], "processor.http_api.scoreboard_setting_team_contest.ViewTeamContestScoreboardProblemScoreOutput": [], "processor.http_api.scoreboard_setting_team_contest.ViewTeamContestScoreboardOutput": [], "processor.http_api.scoreboard_setting_team_contest.EditScoreboardInput": ["pydantic.constr"], "processor.http_api.scoreboard_setting_team_contest_test.TestViewTeamContestScoreboard": [], "processor.http_api.scoreboard_setting_team_contest_test.TestEditTeamContestScoreboard": [], "processor.http_api.submission": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "middleware.router.APIRouter.__init__", "const", "middleware.response", "base.do", "fastapi.Depends", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "base.enum", "exceptions", "<map>.items", "log", "service", "base.popo", "persistence.database", "util.model", "util.context", "util.file.valid_file_length", "processor.http_api.submission.BrowseSubmissionOutput", "processor.http_api.submission.EditSubmissionLanguageInput", "processor.http_api.submission.AddSubmissionLanguageInput", "fastapi.File"], "processor.http_api.submission.AddSubmissionLanguageInput": [], "processor.http_api.submission.EditSubmissionLanguageInput": [], "util.file.valid_file_length": ["fastapi.Header"], "fastapi.Header": [], "fastapi.Depends": [], "processor.http_api.submission.BrowseSubmissionOutput": [], "processor.http_api.grade_test": ["processor.http_api.grade_test.TestDeleteGrade", "processor.http_api.grade_test.TestBrowseClassGrade", "util.security", "base.enum", "processor.http_api.grade", "base.popo", "processor.http_api.grade_test.TestGetGrade", "processor.http_api.grade_test.TestBrowseAccountGrade", "base.do", "util.model", "processor.http_api.grade_test.TestEditGrade", "exceptions", "util.mock", "processor.http_api.grade_test.TestGetGradeTemplateFile", "processor.http_api.grade_test.TestImportClassGrade", "processor.http_api.grade_test.TestAddGrade"], "processor.http_api.grade": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "middleware.router.APIRouter.__init__", "processor.http_api.grade.BrowseClassGradeOutput", "middleware.response", "base.do", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "processor.http_api.grade.GetGradeTemplateOutput", "base.enum", "exceptions", "<map>.items", "service", "processor.http_api.grade.AddGradeInput", "base.popo", "persistence.database", "processor.http_api.grade.BrowseAccountGradeOutput", "util.model", "processor.http_api.grade.EditGradeInput", "util.context", "fastapi.File"], "processor.http_api.grade.AddGradeInput": [], "processor.http_api.grade.BrowseClassGradeOutput": [], "processor.http_api.grade.BrowseAccountGradeOutput": [], "processor.http_api.grade.GetGradeTemplateOutput": [], "processor.http_api.grade.EditGradeInput": [], "processor.http_api.grade_test.TestImportClassGrade": [], "processor.http_api.grade_test.TestAddGrade": [], "processor.http_api.grade_test.TestBrowseClassGrade": [], "processor.http_api.grade_test.TestBrowseAccountGrade": [], "processor.http_api.grade_test.TestGetGradeTemplateFile": [], "processor.http_api.grade_test.TestGetGrade": [], "processor.http_api.grade_test.TestEditGrade": [], "processor.http_api.grade_test.TestDeleteGrade": [], "processor.http_api.submission_test": ["processor.http_api.submission_test.TestBrowseAllSubmissionLanguage", "processor.http_api.submission_test.TestBatchGetSubmissionJudgment", "util.security", "base.enum", "processor.http_api.submission", "processor.http_api.submission_test.TestSubmit", "base.popo", "processor.http_api.submission_test.TestEditSubmissionLanguage", "processor.http_api.submission_test.TestReadSubmissionLatestJudgment", "base.do", "processor.http_api.submission_test.TestAddSubmissionLanguage", "util.model", "processor.http_api.submission_test.TestRejudgeSubmission", "processor.http_api.submission_test.TestBrowseSubmission", "exceptions", "util.mock", "processor.http_api.submission_test.TestBrowseAllSubmissionJudgment", "processor.http_api.submission_test.TestReadSubmission"], "processor.http_api.submission_test.TestBrowseAllSubmissionLanguage": [], "processor.http_api.submission_test.TestAddSubmissionLanguage": [], "processor.http_api.submission_test.TestEditSubmissionLanguage": [], "processor.http_api.submission_test.TestSubmit": [], "processor.http_api.submission_test.TestBrowseSubmission": [], "processor.http_api.submission_test.TestBatchGetSubmissionJudgment": [], "processor.http_api.submission_test.TestReadSubmission": [], "processor.http_api.submission_test.TestBrowseAllSubmissionJudgment": [], "processor.http_api.submission_test.TestReadSubmissionLatestJudgment": [], "processor.http_api.submission_test.TestRejudgeSubmission": [], "processor.http_api.institute_test": ["processor.http_api.institute", "processor.http_api.institute_test.TestAddInstitute", "util.security", "base.enum", "processor.http_api.institute_test.TestBrowseAllInstitute", "base.do", "util.model", "processor.http_api.institute_test.TestEditInstitute", "exceptions", "util.mock", "processor.http_api.institute_test.TestReadInstitute"], "processor.http_api.institute": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "processor.http_api.institute.AddInstituteInput", "middleware.response", "base.do", "processor.http_api.institute.EditInstituteInput", "persistence.database", "util.model", "exceptions", "util.context"], "processor.http_api.institute.AddInstituteInput": [], "processor.http_api.institute.EditInstituteInput": [], "processor.http_api.institute_test.TestAddInstitute": [], "processor.http_api.institute_test.TestBrowseAllInstitute": [], "processor.http_api.institute_test.TestReadInstitute": [], "processor.http_api.institute_test.TestEditInstitute": [], "processor.http_api.docs": ["fastapi.security.HTTPBasic"], "fastapi.security.HTTPBasic": [], "processor.http_api.challenge_test": ["const", "processor.http_api.challenge_test.TestAddChallengeUnderClass", "processor.http_api.challenge_test.TestAddEssayUnderChallenge", "base.do", "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge", "util.mock", "processor.http_api.challenge_test.TestAddTeamContestScoreboardUnderChallenge", "processor.http_api.challenge_test.TestDownloadAllSubmissions", "processor.http_api.challenge_test.TestDownloadAllPlagiarismReports", "base.enum", "processor.http_api.challenge_test.TestReadChallenge", "processor.http_api.challenge_test.TestAddProblemUnderChallenge", "exceptions", "processor.http_api.challenge_test.TestBrowseAllTaskStatusUnderChallenge", "processor.http_api.challenge_test.TestAddPeerReviewUnderChallenge", "processor.http_api.challenge_test.TestDeleteChallenge", "processor.http_api.challenge", "base.popo", "util.model", "util.security", "processor.http_api.challenge_test.TestGetMemberSubmissionStatistics", "processor.http_api.challenge_test.TestBrowseChallengeUnderClass", "processor.http_api.challenge_test.TestAddTeamProjectScoreboardUnderChallenge", "processor.http_api.challenge_test.TestDownloadAllAssistingData", "processor.http_api.challenge_test.TestEditChallenge", "processor.http_api.challenge_test.TestGetChallengeStatistics"], "processor.http_api.challenge": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "processor.http_api.challenge.AddPeerReviewInput", "middleware.router.APIRouter.__init__", "const", "middleware.response", "base.do", "processor.http_api.challenge.EditChallengeInput", "processor.http_api.challenge.MemberSubmissionStatOutput", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "base.enum", "processor.http_api.challenge.ProblemStatOutput", "exceptions", "<map>.items", "processor.http_api.challenge.GetChallengeStatOutput", "processor.http_api.challenge.ReadStatusOutput", "log", "service", "processor.http_api.challenge.GetMemberSubmissionStatOutput", "processor.http_api.challenge.GetMemberSubmissionStatisticsOutput", "base.popo", "persistence.database", "util.model", "persistence.s3", "processor.http_api.challenge.BrowseChallengeUnderclassOutput", "processor.http_api.challenge.AddEssayInput", "processor.http_api.challenge.ProblemScores", "util.context", "processor.http_api.challenge.BrowseTaskOutput", "persistence.email", "processor.http_api.challenge.AddChallengeInput", "processor.http_api.challenge.ReadProblemStatusOutput", "processor.http_api.challenge.AddTeamProjectScoreboardInput", "processor.http_api.challenge.AddProblemInput", "processor.http_api.challenge.AddTeamContestScoreboardInput"], "processor.http_api.challenge.AddChallengeInput": [], "processor.http_api.challenge.BrowseChallengeUnderclassOutput": [], "processor.http_api.challenge.EditChallengeInput": [], "processor.http_api.challenge.AddProblemInput": [], "processor.http_api.challenge.AddEssayInput": [], "processor.http_api.challenge.AddPeerReviewInput": [], "processor.http_api.challenge.AddTeamProjectScoreboardInput": ["pydantic.constr"], "processor.http_api.challenge.BrowseTaskOutput": [], "processor.http_api.challenge.ReadProblemStatusOutput": [], "processor.http_api.challenge.ReadStatusOutput": [], "processor.http_api.challenge.ProblemStatOutput": [], "processor.http_api.challenge.GetChallengeStatOutput": [], "processor.http_api.challenge.ProblemScores": [], "processor.http_api.challenge.MemberSubmissionStatOutput": [], "processor.http_api.challenge.GetMemberSubmissionStatOutput": [], "processor.http_api.challenge.GetMemberSubmissionStatisticsOutput": [], "processor.http_api.challenge.AddTeamContestScoreboardInput": ["pydantic.constr"], "processor.http_api.challenge_test.TestAddChallengeUnderClass": [], "processor.http_api.challenge_test.TestBrowseChallengeUnderClass": [], "processor.http_api.challenge_test.TestReadChallenge": [], "processor.http_api.challenge_test.TestEditChallenge": [], "processor.http_api.challenge_test.TestDeleteChallenge": [], "processor.http_api.challenge_test.TestAddProblemUnderChallenge": [], "processor.http_api.challenge_test.TestAddEssayUnderChallenge": [], "processor.http_api.challenge_test.TestAddPeerReviewUnderChallenge": [], "processor.http_api.challenge_test.TestAddTeamProjectScoreboardUnderChallenge": [], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge": [], "processor.http_api.challenge_test.TestBrowseAllTaskStatusUnderChallenge": [], "processor.http_api.challenge_test.TestGetChallengeStatistics": [], "processor.http_api.challenge_test.TestGetMemberSubmissionStatistics": [], "processor.http_api.challenge_test.TestDownloadAllSubmissions": [], "processor.http_api.challenge_test.TestDownloadAllAssistingData": [], "processor.http_api.challenge_test.TestDownloadAllPlagiarismReports": [], "processor.http_api.challenge_test.TestAddTeamContestScoreboardUnderChallenge": [], "processor.http_api.team": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "processor.http_api.team.EditTeamInput", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "base.do", "persistence.database", "processor.http_api.team.AddMemberInput", "exceptions", "processor.http_api.team.EditMemberInput", "fastapi.File", "util.context", "processor.http_api.team.GetTeamTemplateOutput"], "processor.http_api.team.GetTeamTemplateOutput": [], "processor.http_api.team.EditTeamInput": [], "processor.http_api.team.AddMemberInput": [], "processor.http_api.team.EditMemberInput": [], "processor.http_api.essay_submission_test": ["processor.http_api.essay_submission_test.TestUploadEssay", "util.security", "processor.http_api.essay_submission", "base.enum", "processor.http_api.essay_submission_test.TestReuploadEssay", "base.popo", "base.do", "util.model", "processor.http_api.essay_submission_test.TestReadEssaySubmission", "exceptions", "util.mock", "processor.http_api.essay_submission_test.TestBrowseEssaySubmissionByEssayId"], "processor.http_api.essay_submission": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "middleware.router.APIRouter.__init__", "const", "middleware.response", "base.do", "fastapi.Depends", "processor.http_api.essay_submission.BrowseEssaySubmissionByEssayId", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "base.enum", "exceptions", "<map>.items", "service", "base.popo", "persistence.database", "util.model", "util.context", "util.file.valid_file_length", "fastapi.File"], "processor.http_api.essay_submission.BrowseEssaySubmissionByEssayId": [], "processor.http_api.essay_submission_test.TestUploadEssay": [], "processor.http_api.essay_submission_test.TestBrowseEssaySubmissionByEssayId": [], "processor.http_api.essay_submission_test.TestReadEssaySubmission": [], "processor.http_api.essay_submission_test.TestReuploadEssay": [], "processor.http_api.student_card": ["middleware", "service", "middleware.auth", "middleware.envelope.enveloped", "processor.http_api.student_card.AddStudentCardInput", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "persistence.email", "base.do", "persistence.database", "util.model", "exceptions", "util.context"], "processor.http_api.student_card.AddStudentCardInput": ["pydantic.constr"], "processor.http_api.secret_test": ["processor.http_api.secret_test.TestAddNormalAccount", "processor.http_api.secret_test.TestResetPassword", "util.security", "processor.http_api.secret_test.TestAddAccount", "base.enum", "processor.http_api.secret", "base.do", "processor.http_api.secret_test.TestImportAccount", "util.model", "config", "processor.http_api.secret_test.TestLogin", "exceptions", "util.mock", "processor.http_api.secret_test.TestEditPassword"], "processor.http_api.secret": ["middleware.auth", "middleware.router.APIRouter.__init__", "const", "processor.http_api.secret.AddAccountInput", "middleware", "processor.http_api.secret.EditPasswordInput", "middleware.envelope.enveloped", "base.enum", "processor.http_api.secret.LoginInput", "processor.http_api.secret.AddNormalAccountInput", "exceptions", "processor.http_api.secret.LoginOutput", "service", "middleware.routing", "persistence.database", "util.model", "config", "processor.http_api.secret.ResetPasswordInput", "util.context", "util.security", "persistence.email", "fastapi.File"], "processor.http_api.secret.LoginInput": [], "processor.http_api.secret.LoginOutput": [], "processor.http_api.secret.AddAccountInput": ["pydantic.constr"], "processor.http_api.secret.AddNormalAccountInput": [], "processor.http_api.secret.EditPasswordInput": [], "processor.http_api.secret.ResetPasswordInput": [], "processor.http_api.secret_test.TestAddAccount": [], "processor.http_api.secret_test.TestLogin": [], "processor.http_api.secret_test.TestAddNormalAccount": [], "processor.http_api.secret_test.TestImportAccount": [], "processor.http_api.secret_test.TestEditPassword": [], "processor.http_api.secret_test.TestResetPassword": [], "processor.http_api.view_test": ["processor.http_api.view_test.TestViewPeerReviewSummaryReceive", "processor.http_api.view_test.TestViewBrowseSubmission", "processor.http_api.view_test.TestViewBrowseClassMember", "processor.http_api.view_test.TestViewBrowseAccessLog", "util.security", "processor.http_api.view_test.TestViewBrowseAccountWithDefaultStudentId", "base.enum", "exceptions", "processor.http_api.view", "processor.http_api.view_test.TestViewBrowseMySubmissionUnderProblem", "base.popo", "processor.http_api.view_test.TestViewBrowseProblemSetUnderClass", "util.model", "base.vo", "util.mock", "processor.http_api.view_test.TestViewBrowseSubmissionUnderClass", "processor.http_api.view_test.TestViewBrowseClassGrade", "processor.http_api.view_test.TestViewPeerReviewSummaryReview"], "processor.http_api.view": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "processor.http_api.view.ViewClassMemberOutput", "processor.http_api.view.ViewPeerReviewRecordOutput", "middleware.router.APIRouter.__init__", "middleware.response", "processor.http_api.view.ViewProblemSetOutput", "processor.http_api.view.ViewSubmissionUnderClassOutput", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "base.enum", "exceptions", "<map>.items", "processor.http_api.view.ViewGradeOutput", "service", "processor.http_api.view.ViewAccountOutput", "processor.http_api.view.ViewAccessLogOutput", "base.popo", "persistence.database", "util.model", "processor.http_api.view.ViewMySubmissionOutput", "util.context", "processor.http_api.view.ViewMySubmissionUnderProblemOutput", "base.vo"], "processor.http_api.view.ViewAccountOutput": [], "processor.http_api.view.ViewClassMemberOutput": [], "processor.http_api.view.ViewSubmissionUnderClassOutput": [], "processor.http_api.view.ViewMySubmissionOutput": [], "processor.http_api.view.ViewMySubmissionUnderProblemOutput": [], "processor.http_api.view.ViewProblemSetOutput": [], "processor.http_api.view.ViewGradeOutput": [], "processor.http_api.view.ViewAccessLogOutput": [], "processor.http_api.view.ViewPeerReviewRecordOutput": [], "processor.http_api.view_test.TestViewBrowseAccountWithDefaultStudentId": [], "processor.http_api.view_test.TestViewBrowseClassMember": [], "processor.http_api.view_test.TestViewBrowseSubmissionUnderClass": [], "processor.http_api.view_test.TestViewBrowseSubmission": [], "processor.http_api.view_test.TestViewBrowseMySubmissionUnderProblem": [], "processor.http_api.view_test.TestViewBrowseProblemSetUnderClass": [], "processor.http_api.view_test.TestViewBrowseClassGrade": [], "processor.http_api.view_test.TestViewBrowseAccessLog": [], "processor.http_api.view_test.TestViewPeerReviewSummaryReview": [], "processor.http_api.view_test.TestViewPeerReviewSummaryReceive": [], "processor.http_api.public_test": ["processor.http_api.public_test.TestForgetUsername", "base.enum", "base.do", "util.model", "processor.http_api.public_test.TestForgetPassword", "exceptions", "util.mock", "processor.http_api.public_test.TestEmailVerification", "processor.http_api.public"], "processor.http_api.public_test.TestEmailVerification": [], "processor.http_api.public_test.TestForgetPassword": [], "processor.http_api.public_test.TestForgetUsername": [], "processor.http_api.assisting_data_test": ["util.security", "processor.http_api.assisting_data_test.TestEditAssistingData", "base.enum", "base.do", "processor.http_api.assisting_data", "exceptions", "util.mock", "processor.http_api.assisting_data_test.TestDeleteAssistingData", "processor.http_api.assisting_data_test.TestReadAssistingData"], "processor.http_api.assisting_data": ["middleware", "service", "middleware.auth", "util", "processor.http_api.assisting_data.ReadAssistingDataOutput", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "middleware.response", "persistence.database", "persistence.s3", "exceptions", "fastapi.File", "util.context"], "processor.http_api.assisting_data.ReadAssistingDataOutput": [], "processor.http_api.assisting_data_test.TestReadAssistingData": [], "processor.http_api.assisting_data_test.TestEditAssistingData": [], "processor.http_api.assisting_data_test.TestDeleteAssistingData": [], "processor.http_api.essay_test": ["processor.http_api.essay", "processor.http_api.essay_test.TestDeleteEssay", "util.security", "base.enum", "processor.http_api.essay_test.TestDownloadAllEssaySubmission", "const", "processor.http_api.essay_test.TestReadEssay", "base.do", "exceptions", "util.mock", "processor.http_api.essay_test.TestEditEssay"], "processor.http_api.essay": ["log", "middleware", "middleware.auth", "service", "util", "middleware.envelope.enveloped", "base.enum", "middleware.router.APIRouter.__init__", "const", "middleware.response", "persistence.email", "base.do", "persistence.database", "util.model", "persistence.s3", "processor.http_api.essay.EditEssayInput", "exceptions", "util.context"], "processor.http_api.essay.EditEssayInput": [], "processor.http_api.essay_test.TestReadEssay": [], "processor.http_api.essay_test.TestEditEssay": [], "processor.http_api.essay_test.TestDeleteEssay": [], "processor.http_api.essay_test.TestDownloadAllEssaySubmission": [], "processor.http_api.student_card_test": ["processor.http_api.student_card", "processor.http_api.student_card_test.TestBrowseAllAccountStudentCard", "processor.http_api.student_card_test.TestReadStudentCard", "util.security", "base.enum", "processor.http_api.student_card_test.TestAddStudentCardToAccount", "base.do", "util.model", "exceptions", "util.mock"], "processor.http_api.student_card_test.TestAddStudentCardToAccount": [], "processor.http_api.student_card_test.TestBrowseAllAccountStudentCard": [], "processor.http_api.student_card_test.TestReadStudentCard": [], "processor.http_api.problem_test": ["processor.http_api.problem_test.TestGetProblemStatistics", "const", "processor.http_api.problem_test.TestDeleteProblem", "base.do", "processor.http_api.problem_test.TestDownloadAllSampleTestcase", "processor.http_api.problem_test.TestBrowseProblemSet", "processor.http_api.problem_test.TestRejudgeProblem", "util.mock", "base.enum", "processor.http_api.problem_test.TestGetScoreByBestUnderProblem", "processor.http_api.problem_test.TestEditProblem", "processor.http_api.problem_test.TestReadProblem", "processor.http_api.problem_test.TestDownloadAllAssistingData", "exceptions", "processor.http_api.problem", "processor.http_api.problem_test.TestGetScoreByChallengeTypeUnderProblem", "processor.http_api.problem_test.TestDownloadAllNonSampleTestcase", "processor.http_api.problem_test.BrowseAllTestcaseUnderProblem", "util.model", "processor.http_api.problem_test.TestAddTestCaseUnderProblem", "processor.http_api.problem_test.TestBrowseAllAssistingDataUnderProblem", "util.security", "processor.http_api.problem_test.TestAddAssistingDataUnderProblem"], "processor.http_api.problem_test.TestBrowseProblemSet": [], "processor.http_api.problem_test.TestReadProblem": [], "processor.http_api.problem_test.TestEditProblem": [], "processor.http_api.problem_test.TestDeleteProblem": [], "processor.http_api.problem_test.TestAddTestCaseUnderProblem": [], "processor.http_api.problem_test.BrowseAllTestcaseUnderProblem": [], "processor.http_api.problem_test.TestBrowseAllAssistingDataUnderProblem": [], "processor.http_api.problem_test.TestAddAssistingDataUnderProblem": [], "processor.http_api.problem_test.TestDownloadAllAssistingData": [], "processor.http_api.problem_test.TestDownloadAllSampleTestcase": [], "processor.http_api.problem_test.TestDownloadAllNonSampleTestcase": [], "processor.http_api.problem_test.TestGetScoreByChallengeTypeUnderProblem": [], "processor.http_api.problem_test.TestGetScoreByBestUnderProblem": [], "processor.http_api.problem_test.TestRejudgeProblem": [], "processor.http_api.problem_test.TestGetProblemStatistics": [], "processor.http_api.system_test": ["util.security", "processor.http_api.system", "base.enum", "base.do", "util.model", "exceptions", "util.mock", "processor.http_api.system_test.TestBrowseAccessLog"], "processor.http_api.system_test.TestBrowseAccessLog": [], "processor.http_api.testcase_test": ["processor.http_api.testcase_test.TestUploadTestcaseInputData", "util.security", "base.enum", "processor.http_api.testcase_test.TestUploadTestcaseOutputData", "processor.http_api.testcase_test.TestDeleteTestcase", "base.do", "processor.http_api.testcase_test.TestEditTestcase", "exceptions", "util.mock", "processor.http_api.testcase_test.TestDeleteTestcaseInputData", "processor.http_api.testcase_test.TestDeleteTestcaseOutputData", "processor.http_api.testcase_test.TestReadTestcase", "processor.http_api.testcase"], "processor.http_api.testcase_test.TestReadTestcase": [], "processor.http_api.testcase_test.TestEditTestcase": [], "processor.http_api.testcase_test.TestUploadTestcaseInputData": [], "processor.http_api.testcase_test.TestUploadTestcaseOutputData": [], "processor.http_api.testcase_test.TestDeleteTestcase": [], "processor.http_api.testcase_test.TestDeleteTestcaseInputData": [], "processor.http_api.testcase_test.TestDeleteTestcaseOutputData": [], "processor.http_api.account_test": ["processor.http_api.account_test.TestBatchGetAccountByAccountReferrals", "processor.http_api.account", "processor.http_api.account_test.TestBrowseAllAccountPendingEmailVerification", "processor.http_api.account_test.TestBrowseAllAccountWithClassRole", "util.security", "processor.http_api.account_test.TestBatchGetAccountWithDefaultStudentId", "base.enum", "exceptions", "processor.http_api.account_test.TestBrowseAccountWithDefaultStudentId", "processor.http_api.account_test.TestReadAccountWithDefaultStudentId", "processor.http_api.account_test.TestDeleteAccount", "base.do", "processor.http_api.account_test.TestGetAccountTemplateFile", "processor.http_api.account_test.TestMakeStudentCardDefault", "util.model", "util.mock", "processor.http_api.account_test.TestEditAccount"], "processor.http_api.account": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "middleware.router.APIRouter.__init__", "middleware.response", "base.do", "processor.http_api.account.ReadAccountOutput", "processor.http_api.account.BrowseAccountOutput", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "base.enum", "processor.http_api.account.EditAccountInput", "exceptions", "<map>.items", "service", "persistence.database", "util.model", "util.context", "processor.http_api.account.DefaultStudentCardInput", "processor.http_api.account.BrowseAccountWithDefaultStudentIdOutput", "persistence.email", "processor.http_api.account.BatchGetAccountOutput", "processor.http_api.account.GetAccountTemplateOutput", "processor.http_api.account.BrowseAccountWithRoleOutput"], "processor.http_api.account.BrowseAccountOutput": [], "processor.http_api.account.BrowseAccountWithDefaultStudentIdOutput": [], "processor.http_api.account.BatchGetAccountOutput": [], "processor.http_api.account.BrowseAccountWithRoleOutput": [], "processor.http_api.account.GetAccountTemplateOutput": [], "processor.http_api.account.ReadAccountOutput": [], "processor.http_api.account.EditAccountInput": [], "processor.http_api.account.DefaultStudentCardInput": [], "processor.http_api.account_test.TestBrowseAccountWithDefaultStudentId": [], "processor.http_api.account_test.TestBatchGetAccountWithDefaultStudentId": [], "processor.http_api.account_test.TestBatchGetAccountByAccountReferrals": [], "processor.http_api.account_test.TestBrowseAllAccountWithClassRole": [], "processor.http_api.account_test.TestGetAccountTemplateFile": [], "processor.http_api.account_test.TestReadAccountWithDefaultStudentId": [], "processor.http_api.account_test.TestEditAccount": [], "processor.http_api.account_test.TestDeleteAccount": [], "processor.http_api.account_test.TestMakeStudentCardDefault": [], "processor.http_api.account_test.TestBrowseAllAccountPendingEmailVerification": [], "processor.http_api.team_test": ["processor.http_api.team", "processor.http_api.team_test.TestDeleteTeam", "processor.http_api.team_test.TestAddTeamMember", "processor.http_api.team_test.TestEditTeamMember", "util.security", "base.enum", "processor.http_api.team_test.TestImportTeam", "processor.http_api.team_test.TestGetTeamTemplateFile", "processor.http_api.team_test.TestReadTeam", "base.do", "processor.http_api.team_test.TestDeleteTeamMember", "processor.http_api.team_test.TestBrowseTeamAllMember", "processor.http_api.team_test.TestEditTeam", "exceptions", "util.mock"], "processor.http_api.team_test.TestImportTeam": [], "processor.http_api.team_test.TestGetTeamTemplateFile": [], "processor.http_api.team_test.TestReadTeam": [], "processor.http_api.team_test.TestEditTeam": [], "processor.http_api.team_test.TestDeleteTeam": [], "processor.http_api.team_test.TestBrowseTeamAllMember": [], "processor.http_api.team_test.TestAddTeamMember": [], "processor.http_api.team_test.TestEditTeamMember": [], "processor.http_api.team_test.TestDeleteTeamMember": [], "processor.http_api.announcement": ["util.api_doc.add_to_docstring.decorator", "middleware.auth", "processor.http_api.announcement.BrowseAnnouncementOutput", "middleware.router.APIRouter.__init__", "middleware.response", "base.do", "util.api_doc.add_to_docstring", "middleware", "util", "middleware.envelope.enveloped", "base.enum", "exceptions", "<map>.items", "service", "processor.http_api.announcement.AddAnnouncementInput", "persistence.database", "util.model", "util.context", "processor.http_api.announcement.EditAnnouncementInput"], "processor.http_api.announcement.AddAnnouncementInput": [], "processor.http_api.announcement.BrowseAnnouncementOutput": [], "processor.http_api.announcement.EditAnnouncementInput": [], "processor.http_api.announcement_test": ["util.security", "processor.http_api.announcement_test.TestEditAnnouncement", "base.enum", "exceptions", "processor.http_api.announcement", "base.popo", "base.do", "processor.http_api.announcement_test.TestBrowseAnnouncement", "processor.http_api.announcement_test.TestReadAnnouncement", "util.model", "util.mock", "processor.http_api.announcement_test.TestAddAnnouncement", "processor.http_api.announcement_test.TestDeleteAnnouncement"], "processor.http_api.announcement_test.TestAddAnnouncement": [], "processor.http_api.announcement_test.TestBrowseAnnouncement": [], "processor.http_api.announcement_test.TestReadAnnouncement": [], "processor.http_api.announcement_test.TestEditAnnouncement": [], "processor.http_api.announcement_test.TestDeleteAnnouncement": [], "processor.amqp": ["log", "persistence.database", "util.dtype"], "persistence": [], "persistence.database.base_mock": ["persistence.database.base_mock.FetchOne", "persistence.database.base_mock._SafeExecutor", "persistence.database.base", "exceptions", "persistence.database.base_mock.OnlyExecute", "persistence.database.base_mock.FetchAll"], "persistence.database.base_mock._SafeExecutor": [], "persistence.database.base_mock.OnlyExecute": [], "persistence.database.base_mock.FetchOne": [], "persistence.database.base_mock.FetchAll": [], "persistence.database.account_test": ["persistence.database.account_test.TestBase", "persistence.database.account_test.TestRead", "base.enum", "base.do", "util.mock", "persistence.database.account", "persistence.database.base_mock"], "persistence.database.account_test.TestBase": [], "persistence.database.account_test.TestRead": [], "persistence.amqp_consumer": ["log", "config"], "service.submission_test": ["service.submission_test.TestSubmit", "service.submission", "service.submission_test.TestResubmitEssay", "service.submission_test.TestSubmitEssay", "base.do", "util.mock"], "service.submission_test.TestSubmit": [], "service.submission_test.TestSubmitEssay": [], "service.submission_test.TestResubmitEssay": [], "service.csv_test": ["service.csv_test.TestGetGradeTemplate", "service.csv_test.TestImportAccount", "base.enum", "service.csv_test.TestGetTeamTemplate", "service.csv_test.TestImportTeam", "service.csv_test.TestGetAccountTemplate", "service.csv", "base.do", "service.csv_test.TestImportClassGrade", "exceptions", "util.mock"], "service.csv_test.TestGetAccountTemplate": [], "service.csv_test.TestImportAccount": [], "service.csv_test.TestGetTeamTemplate": [], "service.csv_test.TestImportTeam": [], "service.csv_test.TestImportClassGrade": [], "service.csv_test.TestGetGradeTemplate": [], "service.statistics_test": ["service.statistics_test.TestGetProblemStatistics", "service.statistics_test.TestGetChallengeStatistics", "base.enum", "service.statistics", "base.do", "service.statistics_test.TestGetMemberSubmissionStatistics", "util.mock"], "service.statistics_test.TestGetChallengeStatistics": [], "service.statistics_test.TestGetMemberSubmissionStatistics": [], "service.statistics_test.TestGetProblemStatistics": [], "service.judge_test": ["service.judge_test.TestASignFileUrl", "service.judge_test.TestPrepareProblem", "service.judge_test.TestJudge", "service.judge_test.TestJudgeProblemSubmissions", "base.enum", "const", "base.popo", "base.do", "service.judge_test.TestJudgeSubmission", "util.mock", "service.judge"], "service.judge_test.TestJudgeSubmission": [], "service.judge_test.TestJudgeProblemSubmissions": [], "service.judge_test.TestPrepareProblem": [], "service.judge_test.TestJudge": [], "service.judge_test.TestASignFileUrl": [], "service.rbac_test": ["base.enum", "base.do", "service.rbac_test.TestValidateInherit", "exceptions", "util.mock", "service.rbac"], "service.rbac_test.TestValidateInherit": [], "base": [], "middleware.envelope_test.TestEnveloped.test_happy_flow_normal": ["middleware.envelope.enveloped", "middleware.envelope_test.TestEnveloped.test_happy_flow_normal.dummy"], "middleware.envelope_test.TestEnveloped.test_happy_flow_normal.dummy": [], "middleware.envelope_test.TestEnveloped.test_happy_flow_exception": ["middleware.envelope.enveloped", "middleware.envelope_test.TestEnveloped.test_happy_flow_exception.dummy"], "middleware.envelope_test.TestEnveloped.test_happy_flow_exception.dummy": ["<builtin>.Exception"], "<builtin>.Exception": [], "processor.http_api.email_verification_test.TestResendEmailVerification.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "util.mock.mock.Controller.__init__": ["<builtin>.list", "util.mock.mock.MockModule.__init__"], "<builtin>.list": [], "util.mock.mock.MockModule.__init__": ["<builtin>.dict"], "util.mock.context.Context.__init__": ["unittest.mock.patch"], "unittest.mock.patch": [], "util.mock.util.unwrap": [], "processor.http_api.email_verification_test.TestResendEmailVerification.test_happy_flow_not_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.email_verification_test.TestDeletePendingEmailVerification.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.email_verification_test.TestDeletePendingEmailVerification.test_happy_flow_not_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "persistence.s3.testdata.upload": ["persistence.s3.tools.upload"], "persistence.s3.tools.upload": ["log.info", "<builtin>.str"], "log.info": ["util.context.Context.get_request_uuid"], "util.context.Context.get_request_uuid": [], "persistence.database.submission.add_language": ["persistence.database.base.FetchOne.__init__"], "persistence.database.base.FetchOne.__init__": ["<builtin>.super"], "persistence.database.submission.edit_language": ["persistence.database.base.OnlyExecute.__init__"], "persistence.database.base.OnlyExecute.__init__": ["<builtin>.super"], "persistence.database.submission.browse_language": ["persistence.database.base.FetchAll.__init__"], "persistence.database.base.FetchAll.__init__": ["<builtin>.super"], "persistence.database.submission.read_language": ["persistence.database.base.FetchOne.__init__"], "persistence.database.submission.read_language_queue_name": ["persistence.database.base.FetchOne.__init__"], "persistence.database.submission.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.submission.edit": ["persistence.database.base.OnlyExecute.__init__"], "persistence.database.submission.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "persistence.database.util.compile_filters": ["<builtin>.enumerate", "append", "persistence.database.util._compile_filter", "<builtin>.str"], "<builtin>.enumerate": [], "persistence.database.util._compile_filter": ["<builtin>.enumerate", "<builtin>.len", "persistence.database.util.escape_pg_like_str"], "persistence.database.util.escape_pg_like_str": [], "persistence.database.util.execute_count": ["persistence.database.util.get_query_actual_count", "persistence.database.util.get_query_estimation", "log.exception"], "persistence.database.util.get_query_estimation": ["persistence.database.base.FetchOne.__init__"], "log.exception": ["log.format_exc", "util.context.Context.get_request_uuid"], "log.format_exc": ["<builtin>.type"], "persistence.database.util.get_query_actual_count": ["persistence.database.base.FetchOne.__init__"], "persistence.database.submission.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.submission.read_latest_judgment": ["persistence.database.base.FetchOne.__init__"], "persistence.database.submission.browse_under_class": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "persistence.database.submission.browse_by_problem_selected": ["persistence.database.base.FetchAll.__init__", "<builtin>.ValueError"], "<builtin>.ValueError": [], "processor.http_api.hardcode.view_team_contest_scoreboard_runs": ["<builtin>.enumerate", "service.rbac.validate_class", "persistence.database.team.browse_with_team_label_filter", "persistence.database.scoreboard.read", "persistence.database.judgment.get_class_all_team_submission_verdict_before_freeze", "persistence.database.challenge.read", "persistence.database.scoreboard_setting_team_contest.read", "exceptions._CauseMixin.__init__", "<builtin>.sorted"], "service.rbac.validate_class": ["service.rbac.get_class_role", "log.info"], "service.rbac.get_class_role": ["functools.partial", "log.info"], "persistence.database.scoreboard.read": ["persistence.database.base.FetchOne.__init__"], "exceptions._CauseMixin.__init__": ["<builtin>.super"], "persistence.database.scoreboard_setting_team_contest.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.challenge.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.team.browse_with_team_label_filter": ["persistence.database.base.FetchAll.__init__"], "persistence.database.judgment.get_class_all_team_submission_verdict_before_freeze": ["persistence.database.base.FetchAll.__init__", "<builtin>.str"], "<builtin>.sorted": [], "persistence.database.scoreboard.browse_by_challenge": ["persistence.database.base.FetchAll.__init__"], "persistence.database.scoreboard.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.system.browse_access_log": ["util.api_doc.add_to_docstring", "persistence.database.access_log.browse", "service.rbac.validate_system", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "service.rbac.validate_system": ["log.info", "service.rbac.get_system_role"], "service.rbac.get_system_role": ["persistence.database.rbac.read_system_role_by_account_id", "log.info"], "persistence.database.rbac.read_system_role_by_account_id": ["persistence.database.base.FetchOne.__init__"], "util.model.parse_filter": ["<builtin>.enumerate", "exceptions._CauseMixin.__init__", "<builtin>.len"], "util.model.parse_sorter": ["exceptions._CauseMixin.__init__", "<builtin>.any"], "<builtin>.any": [], "persistence.database.access_log.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "middleware.response.JSONEncoder.default": ["<builtin>.super", "<builtin>.isinstance", "<builtin>.str"], "<builtin>.isinstance": [], "middleware.response.JSONResponse.__init__": ["<builtin>.super"], "processor.http_api.team.import_team": ["fastapi.File", "service.rbac.validate_class", "service.csv.import_team"], "service.csv.import_team": ["persistence.database.team.add_team_and_add_member", "append", "exceptions._CauseMixin.__init__", "<builtin>.set"], "<builtin>.set": [], "persistence.database.team.add_team_and_add_member": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.util.compile_values", "persistence.database.account.account_referral_to_id"], "persistence.database.base.AutoTxConnection.__init__": [], "persistence.database.account.account_referral_to_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.util.compile_values": ["<builtin>.list", "append"], "processor.http_api.team.get_team_template_file": ["service.csv.get_team_template", "service.rbac.validate_system"], "service.csv.get_team_template": ["persistence.s3.temp.upload"], "persistence.s3.temp.upload": ["persistence.s3.tools.upload"], "processor.http_api.team.read_team": ["persistence.database.team.read", "service.rbac.validate_class"], "persistence.database.team.read": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.team.edit_team": ["service.rbac.validate_team", "persistence.database.team.edit", "service.rbac.validate_class"], "service.rbac.validate_team": ["service.rbac.get_team_role", "log.info"], "service.rbac.get_team_role": ["functools.partial", "log.info"], "persistence.database.team.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.team.delete_team": ["persistence.database.team.delete", "service.rbac.validate_class"], "persistence.database.team.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.team.browse_team_all_member": ["persistence.database.team.browse_members", "service.rbac.validate_class"], "persistence.database.team.browse_members": ["persistence.database.base.FetchAll.__init__"], "processor.http_api.team.add_team_member": ["persistence.database.team.add_members", "service.rbac.validate_class"], "persistence.database.team.add_members": ["persistence.database.base.AutoTxConnection.__init__", "log.info", "operator.itemgetter", "persistence.database.util.compile_values", "itertools.chain", "<builtin>.zip", "exceptions._CauseMixin.__init__", "<builtin>.len", "<builtin>.set", "<builtin>.sorted"], "<builtin>.zip": [], "operator.itemgetter": [], "itertools.chain": [], "processor.http_api.team.edit_team_member": ["persistence.database.team.edit_member", "service.rbac.validate_class"], "persistence.database.team.edit_member": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.team.delete_team_member": ["persistence.database.team.delete_member", "service.rbac.validate_class"], "persistence.database.team.delete_member": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.secret.add_account": ["persistence.database.student_card.is_duplicate", "persistence.database.account.add", "<builtin>.any", "persistence.database.account.read", "util.security.hash_password", "persistence.email.verification.send", "persistence.database.account.delete_alternative_email_by_id", "persistence.database.account.add_email_verification", "persistence.database.institute.read"], "persistence.database.institute.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.student_card.is_duplicate": ["persistence.database.base.FetchOne.__init__"], "util.security.hash_password": [], "persistence.database.account.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.account.add_email_verification": ["persistence.database.base.FetchOne.__init__"], "persistence.database.account.read": ["persistence.database.base.FetchOne.__init__"], "persistence.email.verification.send": ["persistence.email.SMTPHandler.send_message", "email.message.EmailMessage"], "email.message.EmailMessage": [], "persistence.email.SMTPHandler.send_message": ["log.info", "persistence.email.SMTPHandler.get_client"], "persistence.email.SMTPHandler.get_client": [], "persistence.database.account.delete_alternative_email_by_id": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.secret.login": ["util.security.verify_password", "util.security.hash_password", "persistence.database.account.read_login_by_username", "persistence.database.account.edit_pass_hash", "util.security.encode_jwt", "util.security.verify_password_4s"], "persistence.database.account.read_login_by_username": ["persistence.database.base.FetchOne.__init__"], "util.security.verify_password": [], "util.security.verify_password_4s": [], "persistence.database.account.edit_pass_hash": ["persistence.database.base.OnlyExecute.__init__"], "util.security.encode_jwt": [], "processor.http_api.secret.add_normal_account": ["service.rbac.validate_system", "persistence.database.account.add_normal", "util.security.hash_password", "<builtin>.any"], "persistence.database.account.add_normal": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.secret.import_account": ["fastapi.File", "service.csv.import_account", "service.rbac.validate_system"], "service.csv.import_account": ["append", "exceptions._CauseMixin.__init__", "persistence.database.account.batch_add_normal", "<builtin>.set"], "persistence.database.account.batch_add_normal": ["persistence.database.util.compile_values", "persistence.database.base.OnlyExecute.__init__"], "processor.http_api.secret.edit_password": ["util.security.verify_password", "util.security.hash_password", "persistence.database.account.edit_pass_hash", "persistence.database.account.read_pass_hash", "service.rbac.validate_system"], "persistence.database.account.read_pass_hash": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.secret.reset_password": ["persistence.database.account.reset_password", "util.security.hash_password"], "persistence.database.account.reset_password": ["persistence.database.base.AutoTxConnection.__init__"], "middleware.profiler.middleware": ["pyinstrument.Profiler"], "pyinstrument.Profiler": [], "processor.http_api.scoreboard_setting_team_project_test.TestViewTeamProjectScoreboard.setUp": ["datetime.datetime", "uuid.UUID"], "datetime.datetime": [], "uuid.UUID": [], "processor.http_api.scoreboard_setting_team_project_test.TestViewTeamProjectScoreboard.mock_calculator": ["<builtin>.eval"], "<builtin>.eval": [], "processor.http_api.scoreboard_setting_team_project_test.TestViewTeamProjectScoreboard.test_happy_flow": ["util.mock.compare.AnySetOfValues.__init__", "<map>.values", "util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "<map>.values": [], "util.mock.compare.AnySetOfValues.__init__": ["<builtin>.set"], "processor.http_api.scoreboard_setting_team_project_test.TestViewTeamProjectScoreboard.test_illegal_input": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_setting_team_project_test.TestViewTeamProjectScoreboard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_setting_team_project_test.TestEditTeamProjectScoreboard.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.scoreboard_setting_team_project_test.TestEditTeamProjectScoreboard.test_invalid_formula": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_setting_team_project_test.TestEditTeamProjectScoreboard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account.browse_account_with_default_student_id": ["util.api_doc.add_to_docstring", "service.rbac.validate_system", "util.model.parse_sorter", "<map>.items", "persistence.database.account_vo.browse_with_default_student_card", "util.model.parse_filter"], "persistence.database.account_vo.browse_with_default_student_card": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.account.batch_get_account_with_default_student_id": ["service.rbac.validate_system", "persistence.database.account_vo.browse_list_with_default_student_card"], "persistence.database.account_vo.browse_list_with_default_student_card": ["persistence.database.base.FetchAll.__init__", "<builtin>.str"], "processor.http_api.account.batch_get_account_by_account_referrals": ["persistence.database.account_vo.batch_read_by_account_referral", "service.rbac.validate_system"], "persistence.database.account_vo.batch_read_by_account_referral": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.util.compile_values"], "processor.http_api.account.browse_all_account_with_class_role": ["persistence.database.class_.browse_role_by_account_id"], "persistence.database.class_.browse_role_by_account_id": ["persistence.database.base.FetchAll.__init__"], "processor.http_api.account.get_account_template_file": ["service.rbac.validate_system", "service.csv.get_account_template"], "service.csv.get_account_template": ["persistence.s3.temp.upload"], "processor.http_api.account.read_account_with_default_student_id": ["persistence.database.account_vo.read_with_default_student_card", "service.rbac.validate_system"], "persistence.database.account_vo.read_with_default_student_card": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.account.edit_account": ["persistence.database.account.read", "persistence.email.verification.send", "service.rbac.validate_system", "persistence.database.account.delete_alternative_email_by_id", "persistence.database.account.add_email_verification", "persistence.database.account.edit"], "persistence.database.account.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.account.delete_account": ["persistence.database.account.delete", "service.rbac.validate_system"], "persistence.database.account.delete": ["persistence.database.base.AutoTxConnection.__init__"], "processor.http_api.account.make_student_card_default": ["service.rbac.validate_system", "persistence.database.account.edit_default_student_card", "persistence.database.student_card.read_owner_id"], "persistence.database.student_card.read_owner_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.account.edit_default_student_card": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.account.browse_all_account_pending_email_verification": ["persistence.database.email_verification.browse", "service.rbac.validate_system"], "persistence.database.email_verification.browse": ["persistence.database.base.FetchAll.__init__"], "persistence.database.challenge.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.challenge.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "persistence.database.challenge.edit": ["persistence.database.base.OnlyExecute.__init__"], "persistence.database.challenge.delete": ["persistence.database.base.OnlyExecute.__init__"], "persistence.database.challenge.delete_cascade": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.problem.delete_cascade_from_challenge", "persistence.database.peer_review.delete_cascade_from_challenge"], "persistence.database.peer_review.delete_cascade_from_challenge": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.peer_review._delete_cascade_from_challenge"], "persistence.database.peer_review._delete_cascade_from_challenge": [], "persistence.database.problem.delete_cascade_from_challenge": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.problem._delete_cascade_from_challenge"], "persistence.database.problem._delete_cascade_from_challenge": [], "persistence.database.challenge.delete_cascade_from_class": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.challenge._delete_cascade_from_class"], "persistence.database.challenge._delete_cascade_from_class": [], "processor.http_api.account_test.TestBrowseAccountWithDefaultStudentId.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBrowseAccountWithDefaultStudentId.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestBatchGetAccountWithDefaultStudentId.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBatchGetAccountWithDefaultStudentId.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestBatchGetAccountWithDefaultStudentId.test_not_account_ids": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBatchGetAccountByAccountReferrals.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBatchGetAccountByAccountReferrals.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestBatchGetAccountByAccountReferrals.test_not_account_referrals": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBrowseAllAccountWithClassRole.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBrowseAllAccountWithClassRole.test_no_permission": ["util.mock.context.Context.__init__"], "processor.http_api.account_test.TestGetAccountTemplateFile.setUp": ["uuid.UUID"], "processor.http_api.account_test.TestGetAccountTemplateFile.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestGetAccountTemplateFile.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestReadAccountWithDefaultStudentId.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestReadAccountWithDefaultStudentId.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestReadAccountWithDefaultStudentId.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestReadAccountWithDefaultStudentId.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestEditAccount.setUp": ["uuid.UUID"], "processor.http_api.account_test.TestEditAccount.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestEditAccount.test_happy_flow_self_email_default": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestEditAccount.test_happy_flow_self_change_email": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestEditAccount.test_happy_flow_self_delete_email": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestEditAccount.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestDeleteAccount.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestDeleteAccount.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestDeleteAccount.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestMakeStudentCardDefault.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestMakeStudentCardDefault.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestMakeStudentCardDefault.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestMakeStudentCardDefault.test_student_card_does_not_belong": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.account_test.TestBrowseAllAccountPendingEmailVerification.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBrowseAllAccountPendingEmailVerification.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.account_test.TestBrowseAllAccountPendingEmailVerification.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "middleware.tracker.middleware": ["util.context.Context.set_request_uuid", "util.context.Context.set_request_time", "<builtin>.str"], "util.context.Context.set_request_uuid": [], "util.context.Context.set_request_time": [], "processor.http_api.view.view_browse_account_with_default_student_id": ["util.api_doc.add_to_docstring", "persistence.database.view.account", "service.rbac.validate_system", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.view.account": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_browse_class_member": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "persistence.database.view.class_member", "util.model.parse_sorter", "<map>.items", "service.rbac.validate_inherit", "util.model.parse_filter"], "service.rbac.validate_inherit": ["persistence.database.rbac.read_class_role_by_account_id", "log.info", "persistence.database.rbac.read_team_role_by_account_id", "persistence.database.rbac.read_system_role_by_account_id", "persistence.database.team.read"], "persistence.database.rbac.read_team_role_by_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.view.class_member": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_browse_submission_under_class": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "persistence.database.view.class_submission", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.view.class_submission": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_browse_submission": ["util.model.parse_filter", "util.model.parse_sorter", "persistence.database.view.my_submission", "<map>.items", "util.api_doc.add_to_docstring"], "persistence.database.view.my_submission": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_browse_my_submission_under_problem": ["util.model.parse_filter", "util.model.parse_sorter", "<map>.items", "persistence.database.view.my_submission_under_problem", "util.api_doc.add_to_docstring"], "persistence.database.view.my_submission_under_problem": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_browse_problem_set_under_class": ["util.api_doc.add_to_docstring", "persistence.database.view.problem_set", "service.rbac.get_system_role", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.view.problem_set": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_browse_class_grade": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "util.model.parse_sorter", "<map>.items", "persistence.database.view.grade", "util.model.parse_filter"], "persistence.database.view.grade": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_browse_access_log": ["persistence.database.view.access_log", "util.api_doc.add_to_docstring", "service.rbac.validate_system", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.view.access_log": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_peer_review_summary_review": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "util.model.parse_sorter", "persistence.database.view.view_peer_review_record", "<map>.items", "util.model.parse_filter"], "persistence.database.view.view_peer_review_record": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.view.view_peer_review_summary_receive": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "util.model.parse_sorter", "persistence.database.view.view_peer_review_record", "<map>.items", "util.model.parse_filter"], "processor.http_api.team_test.TestImportTeam.setUp": ["fastapi.UploadFile"], "fastapi.UploadFile": [], "processor.http_api.team_test.TestImportTeam.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "util.mock.compare.AnyInstanceOf.__init__": [], "processor.http_api.team_test.TestImportTeam.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestGetTeamTemplateFile.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestGetTeamTemplateFile.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestReadTeam.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestReadTeam.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestEditTeam.test_happy_flow_class_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestEditTeam.test_happy_flow_team_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestEditTeam.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestDeleteTeam.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestDeleteTeam.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestBrowseTeamAllMember.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestBrowseTeamAllMember.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestAddTeamMember.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestAddTeamMember.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestEditTeamMember.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestEditTeamMember.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.team_test.TestDeleteTeamMember.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.team_test.TestDeleteTeamMember.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "persistence.database.essay.browse": ["persistence.database.base.FetchAll.__init__"], "persistence.database.essay.browse_by_challenge": ["persistence.database.base.FetchAll.__init__"], "persistence.database.essay.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.essay.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.essay.edit": ["persistence.database.base.OnlyExecute.__init__"], "persistence.database.essay.delete": ["persistence.database.base.OnlyExecute.__init__"], "util.serialize.JSONEncoder.default": ["<builtin>.super"], "util.text.get_valid_filename": ["<builtin>.ValueError", "<builtin>.str"], "persistence.database.team.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.team.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "persistence.database.team.delete_cascade_from_class": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.team._delete_cascade_from_class"], "persistence.database.team._delete_cascade_from_class": [], "persistence.database.team.read_member": ["persistence.database.base.FetchOne.__init__"], "persistence.database.team.add_member": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.essay.read_essay": ["persistence.database.essay.read", "service.rbac.get_class_role", "persistence.database.challenge.read"], "processor.http_api.essay.edit_essay": ["persistence.database.essay.edit", "service.rbac.validate_class"], "processor.http_api.essay.delete_essay": ["persistence.database.essay.delete", "service.rbac.validate_class"], "processor.http_api.essay.download_all_essay_submission": ["persistence.database.essay.read", "service.rbac.validate_class", "util.background_task.launch"], "util.background_task.launch": [], "processor.http_api.docs._get_current_username_dependency": ["fastapi.Depends"], "processor.http_api.docs._hook_secret_swagger": ["processor.http_api.docs._get_current_username_dependency", "fastapi.Depends"], "processor.http_api.docs._hook_secret_redoc": ["processor.http_api.docs._get_current_username_dependency", "fastapi.Depends"], "processor.http_api.docs._hook_secret_openapi": ["processor.http_api.docs._get_current_username_dependency", "fastapi.Depends"], "processor.http_api.docs.hook_docs": ["processor.http_api.docs._hook_secret_swagger", "processor.http_api.docs._hook_redoc", "processor.http_api.docs._hook_secret_openapi", "processor.http_api.docs._hook_openapi", "config", "processor.http_api.docs._hook_secret_redoc", "processor.http_api.docs._hook_swagger"], "processor.http_api.docs._hook_openapi": [], "processor.http_api.docs._hook_swagger": [], "processor.http_api.docs._hook_redoc": [], "persistence.database.problem_reviser_settings.add_customized": ["persistence.database.base.FetchOne.__init__"], "persistence.database.problem_reviser_settings.read_customized": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.essay_test.TestReadEssay.setUp": ["datetime.datetime"], "processor.http_api.essay_test.TestReadEssay.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.essay_test.TestReadEssay.test_normal_after_start": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.essay_test.TestReadEssay.test_normal_before_start": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_test.TestReadEssay.test_no_permission_guest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_test.TestEditEssay.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.essay_test.TestEditEssay.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_test.TestDeleteEssay.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.essay_test.TestDeleteEssay.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_test.TestDownloadAllEssaySubmission.setUp": ["fastapi.BackgroundTasks", "uuid.UUID"], "fastapi.BackgroundTasks": [], "processor.http_api.essay_test.TestDownloadAllEssaySubmission.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.essay_test.TestDownloadAllEssaySubmission.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.s3_file_test.TestGetS3FileUrl.setUp": ["uuid.UUID"], "processor.http_api.s3_file_test.TestGetS3FileUrl.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.s3_file_test.TestGetS3FileUrl.test_not_found": ["util.mock.util.unwrap", "util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "<builtin>.str"], "processor.http_api.s3_file_test.TestGetS3FileUrl.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "service.judge.judge_submission": ["service.judge._prepare_problem", "persistence.database.submission.read", "service.judge._judge"], "service.judge._prepare_problem": ["<builtin>.enumerate", "persistence.database.problem_reviser_settings.read_customized", "service.judge._sign_file_url", "persistence.database.assisting_data.browse", "persistence.database.problem.read", "persistence.database.problem_judge_setting_customized.read", "persistence.database.testcase.browse"], "persistence.database.problem.read": ["util.serialize.unmarshal", "persistence.database.base.FetchOne.__init__"], "util.serialize.unmarshal": [], "persistence.database.testcase.browse": ["persistence.database.base.FetchAll.__init__"], "persistence.database.assisting_data.browse": ["persistence.database.base.FetchAll.__init__"], "persistence.database.problem_judge_setting_customized.read": ["persistence.database.base.FetchOne.__init__"], "service.judge._sign_file_url": ["persistence.database.s3_file.read", "persistence.s3.tools.sign_url_from_do"], "persistence.database.s3_file.read": ["persistence.database.base.FetchOne.__init__"], "persistence.s3.tools.sign_url_from_do": ["persistence.s3.tools.sign_url"], "persistence.s3.tools.sign_url": ["log.info"], "service.judge._judge": ["persistence.amqp_publisher.judge.send_judge", "persistence.database.submission.read_language_queue_name", "log.info", "persistence.database.submission.read_language", "service.judge._sign_file_url"], "persistence.amqp_publisher.judge.send_judge": ["util.serialize.marshal"], "util.serialize.marshal": [], "service.judge.judge_problem_submissions": ["persistence.database.submission.browse", "service.judge._prepare_problem", "service.judge._judge"], "processor.http_api.scoreboard_setting_team_contest_test.TestViewTeamContestScoreboard.setUp": ["datetime.datetime", "datetime.timedelta"], "processor.http_api.scoreboard_setting_team_contest_test.TestViewTeamContestScoreboard.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.scoreboard_setting_team_contest_test.TestViewTeamContestScoreboard.test_illegal_input": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_setting_team_contest_test.TestViewTeamContestScoreboard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_setting_team_contest_test.TestEditTeamContestScoreboard.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.scoreboard_setting_team_contest_test.TestEditTeamContestScoreboard.test_invalid_formula": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_setting_team_contest_test.TestEditTeamContestScoreboard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "service.statistics_test.TestGetChallengeStatistics.test_happy_flow": ["service.statistics.get_challenge_statistics", "util.mock.mock.Controller.__init__"], "service.statistics.get_challenge_statistics": ["persistence.database.problem.browse_by_challenge", "persistence.database.problem.class_total_ac_member_count", "persistence.database.problem.class_total_member_count", "persistence.database.problem.class_total_submission_count"], "persistence.database.problem.browse_by_challenge": ["util.serialize.unmarshal", "persistence.database.base.FetchAll.__init__"], "persistence.database.problem.class_total_ac_member_count": ["persistence.database.base.FetchOne.__init__"], "persistence.database.problem.class_total_submission_count": ["persistence.database.base.FetchOne.__init__"], "persistence.database.problem.class_total_member_count": ["persistence.database.base.FetchOne.__init__"], "service.statistics_test.TestGetMemberSubmissionStatistics.setUp": ["datetime.datetime", "uuid.UUID"], "service.statistics_test.TestGetMemberSubmissionStatistics.test_happy_flow": ["util.mock.mock.Controller.__init__", "service.statistics.get_member_submission_statistics"], "service.statistics.get_member_submission_statistics": ["append", "persistence.database.judgment.browse_by_problem_class_members", "persistence.database.essay.browse_by_challenge", "persistence.database.essay_submission.browse_by_essay_class_members", "persistence.database.challenge.read", "persistence.database.problem.browse_by_challenge", "persistence.database.class_.browse_members"], "persistence.database.class_.browse_members": ["persistence.database.base.FetchAll.__init__"], "persistence.database.judgment.browse_by_problem_class_members": ["persistence.database.base.FetchAll.__init__"], "persistence.database.essay_submission.browse_by_essay_class_members": ["persistence.database.base.FetchAll.__init__"], "service.statistics_test.TestGetProblemStatistics.test_happy_flow": ["service.statistics.get_problem_statistics", "util.mock.mock.Controller.__init__"], "service.statistics.get_problem_statistics": ["persistence.database.problem.total_member_count", "persistence.database.problem.total_submission_count", "persistence.database.problem.total_ac_member_count"], "persistence.database.problem.total_ac_member_count": ["persistence.database.base.FetchOne.__init__"], "persistence.database.problem.total_submission_count": ["persistence.database.base.FetchOne.__init__"], "persistence.database.problem.total_member_count": ["persistence.database.base.FetchOne.__init__"], "persistence.database.account_test.TestBase.asyncSetUp": ["persistence.database.base_mock.open"], "persistence.database.base_mock.open": [], "persistence.database.account_test.TestBase.asyncTearDown": ["persistence.database.base_mock.close"], "persistence.database.base_mock.close": [], "persistence.database.account_test.TestRead.asyncSetUp": ["<builtin>.super"], "persistence.database.account_test.TestRead.test_happy_flow": ["persistence.database.account.read", "util.mock.mock.Controller.__init__"], "processor.http_api.grade.import_class_grade": ["service.csv.import_class_grade", "fastapi.File", "service.rbac.validate_class"], "service.csv.import_class_grade": ["append", "exceptions._CauseMixin.__init__", "<builtin>.set", "persistence.database.grade.batch_add"], "persistence.database.grade.batch_add": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.util.compile_values", "persistence.database.account.account_referral_to_id"], "processor.http_api.grade.add_grade": ["persistence.database.grade.add", "service.rbac.validate_class"], "persistence.database.grade.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.grade.browse_class_grade": ["service.rbac.get_class_role", "util.api_doc.add_to_docstring", "persistence.database.grade.browse", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.grade.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.grade.browse_account_grade": ["util.model.parse_filter", "persistence.database.grade.browse", "util.model.parse_sorter", "<map>.items", "util.api_doc.add_to_docstring"], "processor.http_api.grade.get_grade_template_file": ["service.csv.get_grade_template", "service.rbac.validate_system"], "service.csv.get_grade_template": ["persistence.s3.temp.upload"], "processor.http_api.grade.get_grade": ["service.rbac.get_class_role", "persistence.database.grade.read"], "persistence.database.grade.read": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.grade.edit_grade": ["persistence.database.grade.edit", "service.rbac.validate_class"], "persistence.database.grade.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.grade.delete_grade": ["persistence.database.grade.delete", "service.rbac.validate_class"], "persistence.database.grade.delete": ["persistence.database.base.OnlyExecute.__init__"], "persistence.s3.submission.upload": ["persistence.s3.tools.upload"], "processor.http_api.public_test.TestEmailVerification.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.public_test.TestForgetPassword.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.public_test.TestForgetPassword.test_not_found": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.public_test.TestForgetUsername.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.public_test.TestForgetUsername.test_not_found": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "middleware.logging.middleware": ["log.info"], "processor.http_api.submission_test.TestBrowseAllSubmissionLanguage.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestBrowseAllSubmissionLanguage.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestAddSubmissionLanguage.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestAddSubmissionLanguage.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestEditSubmissionLanguage.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestEditSubmissionLanguage.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestSubmit.setUp": ["datetime.datetime", "fastapi.UploadFile", "fastapi.BackgroundTasks", "uuid.UUID"], "processor.http_api.submission_test.TestSubmit.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestSubmit.test_language_disabled": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestSubmit.test_class_normal_after_start_publicized": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestSubmit.test_class_normal_after_start_unpublicized": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestSubmit.test_class_normal_before_start_unpublicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestSubmit.test_no_system_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestBrowseSubmission.setUp": ["datetime.datetime", "append", "<builtin>.len", "uuid.UUID"], "processor.http_api.submission_test.TestBrowseSubmission.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestBrowseSubmission.test_no_permission": ["util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestBatchGetSubmissionJudgment.setUp": ["datetime.datetime"], "processor.http_api.submission_test.TestBatchGetSubmissionJudgment.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestBatchGetSubmissionJudgment.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestBatchGetSubmissionJudgment.test_no_submission_ids": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestReadSubmission.setUp": ["datetime.datetime", "uuid.UUID"], "processor.http_api.submission_test.TestReadSubmission.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestReadSubmission.test_happy_flow_class_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestReadSubmission.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestBrowseAllSubmissionJudgment.setUp": ["datetime.datetime", "uuid.UUID"], "processor.http_api.submission_test.TestBrowseAllSubmissionJudgment.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestBrowseAllSubmissionJudgment.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestReadSubmissionLatestJudgment.setUp": ["datetime.datetime", "uuid.UUID"], "processor.http_api.submission_test.TestReadSubmissionLatestJudgment.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestReadSubmissionLatestJudgment.test_happy_flow_class_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestReadSubmissionLatestJudgment.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.submission_test.TestRejudgeSubmission.setUp": ["datetime.datetime", "uuid.UUID"], "processor.http_api.submission_test.TestRejudgeSubmission.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.submission_test.TestRejudgeSubmission.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.announcement_test.TestAddAnnouncement.setUp": ["datetime.datetime"], "processor.http_api.announcement_test.TestAddAnnouncement.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.announcement_test.TestAddAnnouncement.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.announcement_test.TestBrowseAnnouncement.setUp": ["datetime.datetime"], "processor.http_api.announcement_test.TestBrowseAnnouncement.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.announcement_test.TestBrowseAnnouncement.test_happy_flow_guest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.announcement_test.TestBrowseAnnouncement.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.announcement_test.TestReadAnnouncement.setUp": ["datetime.datetime"], "processor.http_api.announcement_test.TestReadAnnouncement.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.announcement_test.TestReadAnnouncement.test_happy_flow_guest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.announcement_test.TestReadAnnouncement.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.announcement_test.TestEditAnnouncement.setUp": ["datetime.datetime"], "processor.http_api.announcement_test.TestEditAnnouncement.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.announcement_test.TestEditAnnouncement.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.announcement_test.TestDeleteAnnouncement.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.announcement_test.TestDeleteAnnouncement.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "service.downloader.all_essay_submissions": ["log.info", "persistence.s3.tools.zipper", "persistence.s3.temp.put_object", "persistence.database.s3_file.read", "persistence.database.essay_submission.browse_with_essay_id"], "persistence.database.essay_submission.browse_with_essay_id": ["persistence.database.base.FetchAll.__init__"], "persistence.s3.tools.zipper": ["log.info", "persistence.s3.tools.get_file_content"], "persistence.s3.tools.get_file_content": ["log.info"], "persistence.s3.temp.put_object": ["log.info", "<builtin>.str"], "service.downloader.all_submissions": ["service.downloader.all_submissions.get_language_ext", "persistence.database.account.browse_referral_wth_ids", "log.info", "persistence.s3.tools.get_file_content_from_do", "<builtin>.zip", "persistence.database.submission.browse_by_problem_selected", "<builtin>.dict", "persistence.database.challenge.read", "persistence.database.s3_file.browse_with_uuids", "persistence.database.problem.browse_by_challenge", "persistence.s3.temp.put_object"], "persistence.database.account.browse_referral_wth_ids": ["persistence.database.base.FetchAll.__init__"], "persistence.database.s3_file.browse_with_uuids": ["persistence.database.base.AutoTxConnection.__init__"], "service.downloader.all_submissions.get_language_ext": ["persistence.database.submission.read_language"], "persistence.s3.tools.get_file_content_from_do": [], "service.downloader.all_assisting_data": ["persistence.s3.temp.put_object", "persistence.database.s3_file.read", "persistence.database.assisting_data.browse", "persistence.s3.tools.zipper"], "service.downloader.all_testcase": ["persistence.s3.tools.zipper", "persistence.s3.temp.put_object", "persistence.database.s3_file.read", "persistence.database.testcase.browse"], "service.downloader.moss_report": ["service.moss.download_report", "log.info", "persistence.s3.temp.put_object"], "service.moss.download_report": ["log.info", "service.moss._parse", "persistence.http_client.batch_download", "persistence.http_client.download", "<builtin>.zip"], "persistence.http_client.download": ["persistence.http_client._download"], "persistence.http_client._download": [], "service.moss._parse": ["urllib.parse.urljoin", "bs4.BeautifulSoup"], "bs4.BeautifulSoup": [], "urllib.parse.urljoin": [], "persistence.http_client.batch_download": ["persistence.http_client._download"], "service.moss._submit_report": ["<builtin>.enumerate", "log.info", "<builtin>.len", "<str>.encode"], "<str>.encode": [], "service.moss.check_all_submissions_moss": ["persistence.database.account.browse_referral_wth_ids", "log.info", "persistence.s3.tools.get_file_content_from_do", "service.moss.check_all_submissions_moss.get_language_ext", "service.moss._submit_report", "<builtin>.sum", "persistence.database.submission.browse_by_problem_selected", "<builtin>.dict", "persistence.database.s3_file.browse_with_uuids", "<builtin>.zip", "<builtin>.len", "<builtin>.max"], "service.moss.check_all_submissions_moss.get_language_ext": ["persistence.database.submission.read_language"], "<builtin>.sum": [], "<builtin>.max": [], "processor.http_api.submission.browse_all_submission_language": ["service.rbac.validate_system", "persistence.database.submission.browse_language"], "processor.http_api.submission.add_submission_language": ["persistence.database.submission.add_language", "service.rbac.validate_system"], "processor.http_api.submission.edit_submission_language": ["persistence.database.submission.edit_language", "service.rbac.validate_system"], "processor.http_api.submission.submit": ["service.rbac.get_class_role", "persistence.database.submission.read_language", "util.file.valid_file_length", "util.background_task.launch", "service.submission.submit", "service.rbac.validate_system", "fastapi.Depends", "persistence.database.challenge.read", "persistence.database.problem.read", "fastapi.File", "exceptions._CauseMixin.__init__", "<builtin>.len"], "service.submission.submit": ["persistence.database.submission.add", "persistence.s3.submission.upload", "persistence.database.s3_file.add_with_do"], "persistence.database.s3_file.add_with_do": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.submission.browse_submission": ["util.model.parse_filter", "persistence.database.submission.browse", "util.model.parse_sorter", "<map>.items", "util.api_doc.add_to_docstring"], "processor.http_api.submission.batch_get_submission_judgment": ["persistence.database.judgment.browse_latest_with_submission_ids", "service.rbac.validate_system"], "persistence.database.judgment.browse_latest_with_submission_ids": ["persistence.database.base.FetchAll.__init__", "<builtin>.str"], "processor.http_api.submission.read_submission": ["service.rbac.validate_class", "persistence.database.submission.read"], "processor.http_api.submission.browse_all_submission_judgment": ["persistence.database.judgment.browse", "service.rbac.validate_class"], "persistence.database.judgment.browse": ["persistence.database.base.FetchAll.__init__"], "processor.http_api.submission.read_submission_latest_judgment": ["service.rbac.validate_class", "persistence.database.submission.read", "persistence.database.submission.read_latest_judgment"], "processor.http_api.submission.rejudge_submission": ["service.judge.judge_submission", "service.rbac.validate_class"], "persistence.s3.customized_code.upload": ["persistence.s3.tools.upload"], "persistence.database.rbac.any_class_role": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_team_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_challenge_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_problem_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_testcase_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_assisting_data_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_submission_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_essay_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_essay_submission_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_peer_review_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_peer_review_record_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_scoreboard_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_scoreboard_setting_team_project_account_id": ["persistence.database.base.FetchOne.__init__"], "persistence.database.rbac.read_class_role_by_grade_account_id": ["persistence.database.base.FetchOne.__init__"], "service.judge_test.TestJudgeSubmission.test_happy_flow": ["service.judge.judge_submission", "util.mock.mock.Controller.__init__"], "service.judge_test.TestJudgeSubmission.test_happy_flow_rejudge": ["service.judge.judge_submission", "util.mock.mock.Controller.__init__"], "service.judge_test.TestJudgeProblemSubmissions.test_happy_flow": ["service.judge.judge_problem_submissions", "<builtin>.len", "util.mock.mock.Controller.__init__"], "service.judge_test.TestPrepareProblem.test_happy_flow_normal": ["<builtin>.enumerate", "util.mock.mock.Controller.__init__", "service.judge._prepare_problem"], "service.judge_test.TestPrepareProblem.test_happy_flow_customized": ["<builtin>.enumerate", "util.mock.mock.Controller.__init__", "service.judge._prepare_problem"], "service.judge_test.TestJudge.test_happy_flow": ["util.mock.mock.Controller.__init__", "service.judge._judge"], "service.judge_test.TestJudge.test_happy_flow_language_disable": ["util.mock.mock.Controller.__init__", "service.judge._judge"], "service.judge_test.TestASignFileUrl.test_happy_flow": ["service.judge._sign_file_url", "util.mock.mock.Controller.__init__"], "service.task.browse": ["persistence.database.problem.browse_by_challenge", "persistence.database.essay.browse_by_challenge", "persistence.database.scoreboard.browse_by_challenge", "persistence.database.peer_review.browse_by_challenge"], "persistence.database.peer_review.browse_by_challenge": ["persistence.database.base.FetchAll.__init__"], "service.task.browse_status": ["persistence.database.problem.browse_by_challenge", "persistence.database.problem.read_task_status_by_type", "persistence.database.challenge.read"], "persistence.database.problem.read_task_status_by_type": ["util.serialize.unmarshal", "persistence.database.base.FetchOne.__init__"], "run_test.TestLoader.discover": ["<builtin>.super"], "processor.http_api.student_card.add_student_card_to_account": ["persistence.database.student_card.is_duplicate", "persistence.database.account.read", "persistence.email.verification.send", "service.rbac.validate_system", "persistence.database.account.add_email_verification", "persistence.database.institute.read"], "processor.http_api.student_card.browse_all_account_student_card": ["persistence.database.student_card.browse", "service.rbac.validate_system"], "persistence.database.student_card.browse": ["persistence.database.base.FetchAll.__init__"], "processor.http_api.student_card.read_student_card": ["service.rbac.validate_system", "persistence.database.student_card.read_owner_id", "persistence.database.student_card.read"], "persistence.database.student_card.read": ["persistence.database.base.FetchOne.__init__"], "middleware.envelope.exception_envelope_handler": ["middleware.envelope._handle_exc"], "middleware.envelope._handle_exc": ["<builtin>.isinstance", "log.exception"], "middleware.envelope.enveloped.wrapped": ["processor.http_api.secret.add_account", "processor.http_api.problem.rejudge_problem", "processor.http_api.class_.read_class", "processor.http_api.submission.browse_all_submission_judgment", "processor.http_api.announcement.browse_announcement", "processor.http_api.challenge.get_challenge_statistics", "processor.http_api.peer_review.delete_peer_review", "processor.http_api.class_.delete_class_member", "processor.http_api.challenge.add_team_contest_scoreboard_under_challenge", "processor.http_api.class_.replace_class_members", "processor.http_api.announcement.delete_announcement", "processor.http_api.assisting_data.read_assisting_data", "processor.http_api.team.import_team", "processor.http_api.grade.get_grade_template_file", "processor.http_api.institute.edit_institute", "processor.http_api.view.view_peer_review_summary_receive", "processor.http_api.challenge.browse_all_task_under_challenge", "processor.http_api.secret.add_normal_account", "processor.http_api.testcase.delete_testcase_input_data", "processor.http_api.class_.add_team_under_class", "processor.http_api.team.delete_team_member", "processor.http_api.team.add_team_member", "processor.http_api.view.view_browse_account_with_default_student_id", "processor.http_api.announcement.edit_announcement", "processor.http_api.testcase.edit_testcase", "processor.http_api.team.read_team", "processor.http_api.course.edit_course", "processor.http_api.scoreboard_setting_team_contest.edit_team_contest_scoreboard", "processor.http_api.challenge.edit_challenge", "processor.http_api.class_.browse_class", "processor.http_api.course.delete_course", "processor.http_api.peer_review.edit_peer_review", "processor.http_api.announcement.add_announcement", "processor.http_api.testcase.delete_testcase_output_data", "processor.http_api.challenge.add_challenge_under_class", "processor.http_api.scoreboard.read_scoreboard", "processor.http_api.scoreboard_setting_team_project.edit_team_project_scoreboard", "processor.http_api.announcement.read_announcement", "processor.http_api.secret.import_account", "processor.http_api.problem.browse_all_assisting_data_under_problem", "processor.http_api.view.view_browse_problem_set_under_class", "processor.http_api.account.get_account_template_file", "processor.http_api.account.read_account_with_default_student_id", "processor.http_api.essay.download_all_essay_submission", "processor.http_api.account.browse_all_account_pending_email_verification", "processor.http_api.challenge.browse_challenge_under_class", "processor.http_api.scoreboard.delete_scoreboard", "processor.http_api.student_card.add_student_card_to_account", "processor.http_api.grade.add_grade", "processor.http_api.testcase.delete_testcase", "processor.http_api.challenge.browse_all_task_status_under_challenge", "processor.http_api.problem.edit_problem", "processor.http_api.course.browse_all_class_under_course", "processor.http_api.view.view_peer_review_summary_review", "processor.http_api.team.get_team_template_file", "processor.http_api.submission.browse_submission", "processor.http_api.peer_review.assign_peer_review_record", "processor.http_api.class_.browse_team_under_class", "processor.http_api.challenge.delete_challenge", "processor.http_api.problem.read_problem", "processor.http_api.account.make_student_card_default", "processor.http_api.course.browse_all_course", "processor.http_api.class_.delete_class", "processor.http_api.peer_review.browse_account_received_peer_review_record", "processor.http_api.scoreboard_setting_team_project.view_team_project_scoreboard", "processor.http_api.testcase.read_testcase", "processor.http_api.challenge.add_team_project_scoreboard_under_challenge", "processor.http_api.secret.edit_password", "processor.http_api.peer_review.browse_account_reviewed_peer_review_record", "processor.http_api.problem.add_testcase_under_problem", "processor.http_api.essay.edit_essay", "processor.http_api.submission.read_submission_latest_judgment", "processor.http_api.submission.read_submission", "processor.http_api.institute.add_institute", "processor.http_api.view.view_browse_class_member", "processor.http_api.public.email_verification", "processor.http_api.testcase.upload_testcase_output_data", "processor.http_api.secret.login", "processor.http_api.student_card.read_student_card", "processor.http_api.class_.browse_class_member", "processor.http_api.problem.browse_problem_set", "processor.http_api.challenge.download_all_submissions", "processor.http_api.essay.read_essay", "processor.http_api.course.add_class_under_course", "processor.http_api.essay_submission.upload_essay", "processor.http_api.judgment.browse_all_judgment_judge_case", "processor.http_api.peer_review.submit_peer_review_record", "processor.http_api.email_verification.delete_pending_email_verification", "processor.http_api.submission.batch_get_submission_judgment", "processor.http_api.judgment.browse_all_judgment_verdict", "processor.http_api.public.forget_password", "processor.http_api.system.browse_access_log", "processor.http_api.submission.rejudge_submission", "processor.http_api.challenge.get_member_submission_statistics", "processor.http_api.grade.delete_grade", "processor.http_api.testcase.upload_testcase_input_data", "middleware.envelope._handle_exc", "processor.http_api.institute.read_institute", "processor.http_api.course.read_course", "processor.http_api.secret.reset_password", "processor.http_api.peer_review.read_peer_review", "processor.http_api.problem.add_assisting_data_under_problem", "processor.http_api.grade.browse_account_grade", "processor.http_api.problem.browse_all_testcase_under_problem", "processor.http_api.problem.delete_problem", "processor.http_api.challenge.read_challenge", "processor.http_api.view.view_browse_submission", "processor.http_api.judgment.read_judgment", "middleware.envelope_test.TestEnveloped.test_happy_flow_normal.dummy", "processor.http_api.account.browse_all_account_with_class_role", "processor.http_api.team.browse_team_all_member", "processor.http_api.account.batch_get_account_with_default_student_id", "processor.http_api.scoreboard_setting_team_contest.view_team_contest_scoreboard", "processor.http_api.class_.browse_all_class_member_with_account_referral", "processor.http_api.problem.get_problem_statistics", "processor.http_api.grade.import_class_grade", "processor.http_api.account.edit_account", "processor.http_api.submission.edit_submission_language", "processor.http_api.email_verification.resend_email_verification", "processor.http_api.problem.get_score_by_challenge_type_under_problem", "processor.http_api.challenge.download_all_plagiarism_reports", "processor.http_api.essay_submission.browse_essay_submission_by_essay_id", "processor.http_api.class_.browse_submission_under_class", "processor.http_api.s3_file.get_s3_file_url", "processor.http_api.submission.add_submission_language", "processor.http_api.peer_review.browse_peer_review_record", "processor.http_api.grade.browse_class_grade", "processor.http_api.team.edit_team", "processor.http_api.assisting_data.edit_assisting_data", "processor.http_api.view.view_browse_my_submission_under_problem", "processor.http_api.submission.browse_all_submission_language", "processor.http_api.challenge.add_peer_review_under_challenge", "processor.http_api.course.add_course", "processor.http_api.essay_submission.reupload_essay", "processor.http_api.peer_review.read_peer_review_record", "processor.http_api.team.delete_team", "processor.http_api.essay_submission.read_essay_submission", "processor.http_api.challenge.add_problem_under_challenge", "processor.http_api.view.view_browse_class_grade", "processor.http_api.submission.submit", "processor.http_api.grade.edit_grade", "processor.http_api.problem.download_all_sample_testcase", "processor.http_api.account.browse_account_with_default_student_id", "processor.http_api.institute.browse_all_institute", "processor.http_api.problem.download_all_non_sample_testcase", "processor.http_api.account.batch_get_account_by_account_referrals", "processor.http_api.account.delete_account", "processor.http_api.essay.delete_essay", "processor.http_api.view.view_browse_access_log", "middleware.envelope_test.TestEnveloped.test_happy_flow_exception.dummy", "processor.http_api.view.view_browse_submission_under_class", "processor.http_api.problem.download_all_assisting_data", "processor.http_api.class_.edit_class", "processor.http_api.problem.get_score_by_best_under_problem", "processor.http_api.grade.get_grade", "processor.http_api.team.edit_team_member", "processor.http_api.public.forget_username", "processor.http_api.assisting_data.delete_assisting_data", "processor.http_api.challenge.add_essay_under_challenge", "processor.http_api.student_card.browse_all_account_student_card"], "processor.http_api.problem.rejudge_problem": ["service.judge.judge_problem_submissions", "<builtin>.len", "service.rbac.validate_class"], "processor.http_api.class_.read_class": ["persistence.database.class_.read", "service.rbac.validate_system"], "persistence.database.class_.read": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.announcement.browse_announcement": ["util.api_doc.add_to_docstring", "service.rbac.get_system_role", "persistence.database.announcement.browse", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.announcement.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.challenge.get_challenge_statistics": ["service.statistics.get_challenge_statistics", "service.rbac.validate_class"], "processor.http_api.peer_review.delete_peer_review": ["service.rbac.validate_class", "persistence.database.peer_review.delete"], "persistence.database.peer_review.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.class_.delete_class_member": ["persistence.database.class_.delete_member", "service.rbac.validate_class"], "persistence.database.class_.delete_member": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.challenge.add_team_contest_scoreboard_under_challenge": ["service.rbac.validate_class", "persistence.database.scoreboard_setting_team_contest.add_under_scoreboard", "service.scoreboard.validate_penalty_formula"], "service.scoreboard.validate_penalty_formula": ["<builtin>.any"], "persistence.database.scoreboard_setting_team_contest.add_under_scoreboard": ["persistence.database.base.AutoTxConnection.__init__", "exceptions._CauseMixin.__init__"], "processor.http_api.class_.replace_class_members": ["persistence.database.course.read", "service.rbac.validate_inherit", "persistence.database.class_.browse_member_emails", "persistence.database.class_.browse_member_referrals", "persistence.database.class_.replace_members", "persistence.database.account.read", "persistence.database.class_.read", "persistence.email.notification.notify_cm_change", "<builtin>.set"], "persistence.database.class_.browse_member_referrals": ["persistence.database.base.FetchAll.__init__"], "persistence.database.class_.browse_member_emails": ["persistence.database.base.FetchAll.__init__"], "persistence.database.class_.replace_members": ["persistence.database.base.AutoTxConnection.__init__", "log.info", "operator.itemgetter", "persistence.database.base.OnlyExecute.__init__", "persistence.database.util.compile_values", "itertools.chain", "<builtin>.zip", "<builtin>.len", "<builtin>.set", "<builtin>.sorted"], "persistence.database.course.read": ["persistence.database.base.FetchOne.__init__"], "persistence.email.notification.notify_cm_change": ["persistence.email.notification.send"], "persistence.email.notification.send": ["persistence.email.SMTPHandler.send_message", "email.message.EmailMessage"], "processor.http_api.announcement.delete_announcement": ["service.rbac.validate_system", "persistence.database.announcement.delete"], "persistence.database.announcement.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.assisting_data.read_assisting_data": ["persistence.database.assisting_data.read", "service.rbac.validate_class"], "persistence.database.assisting_data.read": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.institute.edit_institute": ["persistence.database.institute.edit", "service.rbac.validate_system"], "persistence.database.institute.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.challenge.browse_all_task_under_challenge": ["service.task.browse", "service.rbac.get_class_role", "service.rbac.validate_system", "persistence.database.challenge.read"], "processor.http_api.testcase.delete_testcase_input_data": ["persistence.database.testcase.delete_input_data", "service.rbac.validate_class"], "persistence.database.testcase.delete_input_data": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.class_.add_team_under_class": ["persistence.database.team.add", "service.rbac.validate_class"], "processor.http_api.announcement.edit_announcement": ["service.rbac.validate_system", "persistence.database.announcement.edit"], "persistence.database.announcement.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.testcase.edit_testcase": ["persistence.database.testcase.edit", "service.rbac.validate_class"], "persistence.database.testcase.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.course.edit_course": ["persistence.database.course.edit", "service.rbac.validate_system"], "persistence.database.course.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.scoreboard_setting_team_contest.edit_team_contest_scoreboard": ["service.rbac.validate_class", "persistence.database.scoreboard_setting_team_contest.edit_with_scoreboard", "service.scoreboard.validate_penalty_formula"], "persistence.database.scoreboard_setting_team_contest.edit_with_scoreboard": ["persistence.database.base.OnlyExecute.__init__", "persistence.database.scoreboard.read"], "processor.http_api.challenge.edit_challenge": ["persistence.database.challenge.edit", "service.rbac.validate_class"], "processor.http_api.class_.browse_class": ["persistence.database.class_.browse_with_filter", "util.api_doc.add_to_docstring", "service.rbac.validate_system", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.class_.browse_with_filter": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.course.delete_course": ["service.rbac.validate_system", "persistence.database.course.delete"], "persistence.database.course.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.peer_review.edit_peer_review": ["persistence.database.peer_review.edit", "service.rbac.validate_class"], "persistence.database.peer_review.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.announcement.add_announcement": ["persistence.database.announcement.add", "service.rbac.validate_system"], "persistence.database.announcement.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.testcase.delete_testcase_output_data": ["service.rbac.validate_class", "persistence.database.testcase.delete_output_data"], "persistence.database.testcase.delete_output_data": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.challenge.add_challenge_under_class": ["persistence.database.challenge.add", "exceptions._CauseMixin.__init__", "service.rbac.validate_class"], "processor.http_api.scoreboard.read_scoreboard": ["service.rbac.validate_class", "persistence.database.scoreboard.read", "persistence.database.scoreboard_setting_team_contest.read", "exceptions._CauseMixin.__init__", "persistence.database.scoreboard_setting_team_project.read"], "persistence.database.scoreboard_setting_team_project.read": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.scoreboard_setting_team_project.edit_team_project_scoreboard": ["persistence.database.scoreboard_setting_team_project.edit_with_scoreboard", "service.scoreboard.validate_formula", "service.rbac.validate_class"], "service.scoreboard.validate_formula": ["<builtin>.any"], "persistence.database.scoreboard_setting_team_project.edit_with_scoreboard": ["persistence.database.base.OnlyExecute.__init__", "persistence.database.scoreboard.read"], "processor.http_api.announcement.read_announcement": ["persistence.database.announcement.read", "service.rbac.get_system_role"], "persistence.database.announcement.read": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.problem.browse_all_assisting_data_under_problem": ["persistence.database.assisting_data.browse", "service.rbac.validate_class"], "processor.http_api.challenge.browse_challenge_under_class": ["service.rbac.get_class_role", "util.api_doc.add_to_docstring", "persistence.database.challenge.browse", "service.rbac.get_system_role", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "processor.http_api.scoreboard.delete_scoreboard": ["persistence.database.scoreboard.delete", "service.rbac.validate_class"], "processor.http_api.testcase.delete_testcase": ["persistence.database.testcase.delete", "service.rbac.validate_class"], "persistence.database.testcase.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.challenge.browse_all_task_status_under_challenge": ["service.task.browse_status", "service.rbac.validate_class"], "processor.http_api.problem.edit_problem": ["persistence.database.problem.edit", "service.rbac.validate_class", "<builtin>.str", "persistence.s3.customized_code.upload", "persistence.database.testcase.disable_enable_testcase_by_problem", "persistence.database.s3_file.add_with_do", "persistence.database.problem_judge_setting_customized.add", "exceptions._CauseMixin.__init__", "persistence.database.problem_reviser_settings.add_customized"], "persistence.database.problem_judge_setting_customized.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.problem.edit": ["util.serialize.marshal", "persistence.database.base.OnlyExecute.__init__"], "persistence.database.testcase.disable_enable_testcase_by_problem": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.course.browse_all_class_under_course": ["<builtin>.zip", "persistence.database.class_.get_member_counts", "service.rbac.validate_system", "persistence.database.class_.browse"], "persistence.database.class_.browse": ["<builtin>.list", "append", "persistence.database.base.FetchAll.__init__"], "persistence.database.class_.get_member_counts": ["<builtin>.enumerate", "<builtin>.list", "persistence.database.base.FetchOne.__init__"], "processor.http_api.peer_review.assign_peer_review_record": ["service.rbac.get_class_role", "persistence.database.peer_review_record.read_by_peer_review_id", "persistence.database.peer_review.read", "persistence.database.challenge.read", "<builtin>.range", "persistence.database.peer_review_record.add_auto", "<builtin>.len"], "persistence.database.peer_review.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.peer_review_record.read_by_peer_review_id": ["persistence.database.base.FetchAll.__init__"], "persistence.database.peer_review_record.add_auto": ["persistence.database.base.AutoTxConnection.__init__", "<builtin>.ValueError"], "<builtin>.range": [], "processor.http_api.class_.browse_team_under_class": ["persistence.database.team.browse", "util.api_doc.add_to_docstring", "service.rbac.validate_class", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "processor.http_api.challenge.delete_challenge": ["service.rbac.validate_class", "persistence.database.challenge.delete"], "processor.http_api.problem.read_problem": ["service.rbac.get_class_role", "persistence.database.problem_reviser_settings.read_customized", "service.rbac.validate_system", "persistence.database.challenge.read", "persistence.database.problem.read", "<builtin>.len", "persistence.database.problem_judge_setting_customized.read"], "processor.http_api.course.browse_all_course": ["service.rbac.get_system_role", "persistence.database.course.browse"], "persistence.database.course.browse": ["append", "persistence.database.base.FetchAll.__init__"], "processor.http_api.class_.delete_class": ["persistence.database.class_.delete", "service.rbac.validate_system"], "persistence.database.class_.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.peer_review.browse_account_received_peer_review_record": ["persistence.database.peer_review.read", "service.rbac.get_class_role", "persistence.database.challenge.read", "persistence.database.peer_review_record.read_by_peer_review_id"], "processor.http_api.scoreboard_setting_team_project.view_team_project_scoreboard": ["service.rbac.validate_class", "persistence.database.team.browse_with_team_label_filter", "persistence.database.judgment.get_class_last_team_submission_judgment", "<builtin>.sum", "persistence.database.judge_case.batch_get_with_judgment", "persistence.database.scoreboard.read", "<builtin>.min", "service.scoreboard.get_team_project_calculator", "persistence.database.challenge.read", "exceptions._CauseMixin.__init__", "service.scoreboard.get_team_project_calculator.calculate", "<builtin>.max", "persistence.database.scoreboard_setting_team_project.read", "persistence.database.testcase.browse"], "persistence.database.judgment.get_class_last_team_submission_judgment": ["persistence.database.base.FetchAll.__init__", "<builtin>.str"], "persistence.database.judge_case.batch_get_with_judgment": ["persistence.database.base.FetchAll.__init__", "<builtin>.str"], "<builtin>.min": [], "service.scoreboard.get_team_project_calculator": [], "service.scoreboard.get_team_project_calculator.calculate": ["<builtin>.eval"], "processor.http_api.testcase.read_testcase": ["service.rbac.get_class_role", "service.rbac.validate_system", "persistence.database.testcase.read"], "persistence.database.testcase.read": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.challenge.add_team_project_scoreboard_under_challenge": ["persistence.database.scoreboard_setting_team_project.add_under_scoreboard", "service.scoreboard.validate_formula", "service.rbac.validate_class"], "persistence.database.scoreboard_setting_team_project.add_under_scoreboard": ["persistence.database.base.AutoTxConnection.__init__", "exceptions._CauseMixin.__init__"], "processor.http_api.peer_review.browse_account_reviewed_peer_review_record": ["persistence.database.peer_review.read", "service.rbac.get_class_role", "persistence.database.challenge.read", "persistence.database.peer_review_record.read_by_peer_review_id"], "processor.http_api.problem.add_testcase_under_problem": ["persistence.database.testcase.add", "service.rbac.validate_class"], "persistence.database.testcase.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.institute.add_institute": ["service.rbac.validate_system", "persistence.database.institute.add"], "persistence.database.institute.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.public.email_verification": ["persistence.database.account.verify_email"], "persistence.database.account.verify_email": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.student_card.is_duplicate"], "processor.http_api.testcase.upload_testcase_output_data": ["service.rbac.validate_class", "persistence.database.testcase.edit", "persistence.database.s3_file.add_with_do", "fastapi.File", "util.file.replace_cr", "persistence.s3.testdata.upload"], "util.file.replace_cr": ["io.BytesIO"], "io.BytesIO": [], "processor.http_api.class_.browse_class_member": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "persistence.database.class_vo.browse_member_account_with_student_card_and_institute", "util.model.parse_sorter", "<map>.items", "service.rbac.validate_inherit", "util.model.parse_filter"], "persistence.database.class_vo.browse_member_account_with_student_card_and_institute": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.problem.browse_problem_set": ["persistence.database.problem.browse_problem_set", "service.rbac.validate_system"], "persistence.database.problem.browse_problem_set": ["util.serialize.unmarshal", "persistence.database.base.FetchAll.__init__"], "processor.http_api.challenge.download_all_submissions": ["service.rbac.validate_class", "util.background_task.launch"], "processor.http_api.course.add_class_under_course": ["service.rbac.validate_system", "persistence.database.class_.add"], "persistence.database.class_.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.essay_submission.upload_essay": ["persistence.database.essay.read", "service.rbac.validate_class", "util.file.valid_file_length", "fastapi.Depends", "persistence.database.challenge.read", "fastapi.File", "service.submission.submit_essay"], "service.submission.submit_essay": ["persistence.database.essay_submission.add", "persistence.s3.essay_submission.upload", "persistence.database.s3_file.add_with_do"], "persistence.s3.essay_submission.upload": ["persistence.s3.tools.upload"], "persistence.database.essay_submission.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.judgment.browse_all_judgment_judge_case": ["persistence.database.judgment.read", "service.rbac.validate_class", "persistence.database.judgment.browse_cases", "persistence.database.submission.read"], "persistence.database.judgment.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.judgment.browse_cases": ["persistence.database.base.FetchAll.__init__"], "processor.http_api.peer_review.submit_peer_review_record": ["service.rbac.get_class_role", "persistence.database.peer_review.read", "persistence.database.peer_review_record.edit_score", "persistence.database.challenge.read", "exceptions._CauseMixin.__init__", "persistence.database.peer_review_record.read"], "persistence.database.peer_review_record.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.peer_review_record.edit_score": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.email_verification.delete_pending_email_verification": ["persistence.database.email_verification.read", "service.rbac.validate_system", "persistence.database.email_verification.delete"], "persistence.database.email_verification.read": ["persistence.database.base.FetchOne.__init__"], "persistence.database.email_verification.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.judgment.browse_all_judgment_verdict": ["<builtin>.list"], "processor.http_api.public.forget_password": ["persistence.database.account.add_email_verification", "persistence.email.forget_password.send", "persistence.database.account.browse_by_email"], "persistence.database.account.browse_by_email": ["persistence.database.base.FetchAll.__init__"], "persistence.email.forget_password.send": ["persistence.email.SMTPHandler.send_message", "email.message.EmailMessage"], "processor.http_api.challenge.get_member_submission_statistics": ["service.rbac.validate_class", "service.statistics.get_member_submission_statistics"], "processor.http_api.testcase.upload_testcase_input_data": ["service.rbac.validate_class", "persistence.database.testcase.edit", "persistence.database.s3_file.add_with_do", "fastapi.File", "util.file.replace_cr", "persistence.s3.testdata.upload"], "processor.http_api.institute.read_institute": ["persistence.database.institute.read"], "processor.http_api.course.read_course": ["persistence.database.course.read", "service.rbac.get_system_role"], "processor.http_api.peer_review.read_peer_review": ["persistence.database.peer_review.read", "service.rbac.get_class_role", "persistence.database.challenge.read"], "processor.http_api.problem.add_assisting_data_under_problem": ["service.rbac.validate_class", "persistence.database.assisting_data.add", "persistence.s3.assisting_data.upload", "persistence.database.s3_file.add_with_do", "fastapi.File"], "persistence.s3.assisting_data.upload": ["persistence.s3.tools.upload"], "persistence.database.assisting_data.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.problem.browse_all_testcase_under_problem": ["service.rbac.validate_system", "service.rbac.validate_class", "persistence.database.testcase.browse"], "processor.http_api.problem.delete_problem": ["service.rbac.validate_class", "persistence.database.problem.delete"], "persistence.database.problem.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.challenge.read_challenge": ["service.rbac.get_class_role", "service.rbac.validate_system", "persistence.database.challenge.read"], "processor.http_api.judgment.read_judgment": ["persistence.database.judgment.read", "service.rbac.validate_class", "persistence.database.submission.read"], "processor.http_api.scoreboard_setting_team_contest.view_team_contest_scoreboard": ["persistence.database.judgment.get_class_all_team_all_submission_verdict", "service.rbac.validate_class", "persistence.database.team.browse_with_team_label_filter", "<builtin>.sum", "persistence.database.scoreboard.read", "service.scoreboard.calculate_penalty", "persistence.database.challenge.read", "persistence.database.scoreboard_setting_team_contest.read", "exceptions._CauseMixin.__init__"], "persistence.database.judgment.get_class_all_team_all_submission_verdict": ["persistence.database.base.FetchAll.__init__", "<builtin>.str"], "service.scoreboard.calculate_penalty": ["<builtin>.eval"], "processor.http_api.class_.browse_all_class_member_with_account_referral": ["persistence.database.class_vo.browse_class_member_with_account_referral", "service.rbac.validate_inherit", "service.rbac.validate_class"], "persistence.database.class_vo.browse_class_member_with_account_referral": ["persistence.database.base.FetchAll.__init__"], "processor.http_api.problem.get_problem_statistics": ["service.statistics.get_problem_statistics", "service.rbac.validate_system"], "processor.http_api.email_verification.resend_email_verification": ["persistence.database.email_verification.read_verification_code", "persistence.database.account.read", "persistence.database.email_verification.read", "service.rbac.validate_system", "persistence.email.verification.send"], "persistence.database.email_verification.read_verification_code": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.problem.get_score_by_challenge_type_under_problem": ["persistence.database.judgment.read_by_challenge_type", "persistence.database.challenge.read", "persistence.database.problem.read"], "persistence.database.judgment.read_by_challenge_type": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.challenge.download_all_plagiarism_reports": ["service.rbac.validate_class", "util.background_task.launch"], "processor.http_api.essay_submission.browse_essay_submission_by_essay_id": ["service.rbac.get_class_role", "util.api_doc.add_to_docstring", "persistence.database.essay_submission.browse", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.essay_submission.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.class_.browse_submission_under_class": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "util.model.parse_sorter", "<map>.items", "persistence.database.submission.browse_under_class", "util.model.parse_filter"], "processor.http_api.s3_file.get_s3_file_url": ["persistence.database.s3_file.read", "persistence.s3.tools.sign_url", "service.rbac.validate_system", "<builtin>.str"], "processor.http_api.peer_review.browse_peer_review_record": ["util.api_doc.add_to_docstring", "service.rbac.validate_class", "persistence.database.peer_review_record.browse", "util.model.parse_sorter", "<map>.items", "util.model.parse_filter"], "persistence.database.peer_review_record.browse": ["persistence.database.util.execute_count", "persistence.database.util.compile_filters", "persistence.database.base.FetchAll.__init__"], "processor.http_api.assisting_data.edit_assisting_data": ["service.rbac.validate_class", "persistence.s3.assisting_data.upload", "persistence.database.s3_file.add_with_do", "persistence.database.assisting_data.edit", "fastapi.File", "util.file.replace_cr"], "persistence.database.assisting_data.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.challenge.add_peer_review_under_challenge": ["service.rbac.validate_class", "persistence.database.peer_review.add", "persistence.database.challenge.read", "persistence.database.problem.read", "exceptions._CauseMixin.__init__"], "persistence.database.peer_review.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.course.add_course": ["persistence.database.course.add", "service.rbac.validate_system"], "persistence.database.course.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.essay_submission.reupload_essay": ["persistence.database.essay_submission.read", "persistence.database.essay.read", "service.rbac.validate_class", "util.file.valid_file_length", "fastapi.Depends", "persistence.database.challenge.read", "fastapi.File", "service.submission.resubmit_essay"], "persistence.database.essay_submission.read": ["persistence.database.base.FetchOne.__init__"], "service.submission.resubmit_essay": ["persistence.s3.essay_submission.upload", "persistence.database.s3_file.add_with_do", "persistence.database.essay_submission.edit"], "persistence.database.essay_submission.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.peer_review.read_peer_review_record": ["service.rbac.get_class_role", "persistence.database.peer_review.read", "persistence.database.submission.read", "persistence.database.challenge.read", "persistence.database.peer_review_record.read"], "processor.http_api.essay_submission.read_essay_submission": ["persistence.database.essay_submission.read", "service.rbac.get_class_role", "persistence.database.essay.read", "<builtin>.min"], "processor.http_api.challenge.add_problem_under_challenge": ["persistence.database.problem.add", "service.rbac.validate_class"], "persistence.database.problem.add": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.problem.download_all_sample_testcase": ["service.rbac.validate_class", "util.background_task.launch"], "processor.http_api.institute.browse_all_institute": ["persistence.database.institute.browse"], "persistence.database.institute.browse": ["persistence.database.base.FetchAll.__init__"], "processor.http_api.problem.download_all_non_sample_testcase": ["service.rbac.validate_class", "util.background_task.launch"], "processor.http_api.problem.download_all_assisting_data": ["service.rbac.validate_class", "util.background_task.launch"], "processor.http_api.class_.edit_class": ["persistence.database.class_.edit", "service.rbac.validate_inherit"], "persistence.database.class_.edit": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.problem.get_score_by_best_under_problem": ["persistence.database.judgment.get_best_submission_judgment_all_time", "persistence.database.problem.read"], "persistence.database.judgment.get_best_submission_judgment_all_time": ["persistence.database.base.FetchOne.__init__"], "processor.http_api.public.forget_username": ["persistence.email.forget_username.send", "persistence.database.account.browse_by_email"], "persistence.email.forget_username.send": ["<builtin>.len", "persistence.email.SMTPHandler.send_message", "email.message.EmailMessage"], "processor.http_api.assisting_data.delete_assisting_data": ["service.rbac.validate_class", "persistence.database.assisting_data.delete"], "persistence.database.assisting_data.delete": ["persistence.database.base.OnlyExecute.__init__"], "processor.http_api.challenge.add_essay_under_challenge": ["persistence.database.essay.add", "service.rbac.validate_class"], "util.mock.compare.AnyInstanceOf.__eq__": ["<builtin>.isinstance"], "util.mock.compare.AnyInstanceOf.__ne__": ["<builtin>.isinstance"], "util.mock.compare.AnySetOfValues.__eq__": ["<builtin>.set"], "util.mock.compare.AnySetOfValues.__ne__": ["<builtin>.set"], "processor.http_api.essay_submission_test.TestUploadEssay.setUp": ["fastapi.UploadFile"], "processor.http_api.essay_submission_test.TestUploadEssay.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.essay_submission_test.TestUploadEssay.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_submission_test.TestUploadEssay.test_no_permission_overdue": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_submission_test.TestBrowseEssaySubmissionByEssayId.setUp": ["<builtin>.len"], "processor.http_api.essay_submission_test.TestBrowseEssaySubmissionByEssayId.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.essay_submission_test.TestBrowseEssaySubmissionByEssayId.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_submission_test.TestReadEssaySubmission.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.essay_submission_test.TestReadEssaySubmission.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.essay_submission_test.TestReadEssaySubmission.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_submission_test.TestReuploadEssay.setUp": ["fastapi.UploadFile"], "processor.http_api.essay_submission_test.TestReuploadEssay.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.essay_submission_test.TestReuploadEssay.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_submission_test.TestReuploadEssay.test_no_permission_not_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_submission_test.TestReuploadEssay.test_no_permission_overdue": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.essay_submission_test.TestReuploadEssay.test_no_permission_not_self_overdue": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestBrowseProblemSet.setUp": ["datetime.datetime"], "processor.http_api.problem_test.TestBrowseProblemSet.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestBrowseProblemSet.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestReadProblem.setUp": ["datetime.datetime", "uuid.UUID"], "processor.http_api.problem_test.TestReadProblem.test_happy_flow_manager_hidden": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestReadProblem.test_happy_flow_normal_public": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestReadProblem.test_system_normal_hidden": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestReadProblem.test_manager_read_customize_judge": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestReadProblem.test_manager_read_revisers": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestEditProblem.setUp": ["uuid.UUID"], "processor.http_api.problem_test.TestEditProblem.test_happy_flow": ["<builtin>.str", "util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestEditProblem.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestEditProblem.test_illegal_input_wrong_customized_judge_language": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestEditProblem.test_illegal_input_wrong_reviser_language": ["util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "<builtin>.str"], "processor.http_api.problem_test.TestEditProblem.test_illegal_input_customized_with_no_judge_source": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestEditProblem.test_disable_reviser": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestEditProblem.test_no_update": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestDeleteProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestDeleteProblem.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestAddTestCaseUnderProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestAddTestCaseUnderProblem.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.BrowseAllTestcaseUnderProblem.setUp": ["uuid.UUID"], "processor.http_api.problem_test.BrowseAllTestcaseUnderProblem.test_happy_flow_cm": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.BrowseAllTestcaseUnderProblem.test_happy_flow_sn": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.BrowseAllTestcaseUnderProblem.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestBrowseAllAssistingDataUnderProblem.setUp": ["uuid.UUID"], "processor.http_api.problem_test.TestBrowseAllAssistingDataUnderProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestBrowseAllAssistingDataUnderProblem.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestAddAssistingDataUnderProblem.setUp": ["fastapi.UploadFile", "uuid.UUID"], "processor.http_api.problem_test.TestAddAssistingDataUnderProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestAddAssistingDataUnderProblem.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestDownloadAllAssistingData.setUp": ["fastapi.BackgroundTasks", "uuid.UUID"], "processor.http_api.problem_test.TestDownloadAllAssistingData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestDownloadAllAssistingData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestDownloadAllSampleTestcase.setUp": ["fastapi.BackgroundTasks", "uuid.UUID"], "processor.http_api.problem_test.TestDownloadAllSampleTestcase.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestDownloadAllSampleTestcase.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestDownloadAllNonSampleTestcase.setUp": ["fastapi.BackgroundTasks", "uuid.UUID"], "processor.http_api.problem_test.TestDownloadAllNonSampleTestcase.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestDownloadAllNonSampleTestcase.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestGetScoreByChallengeTypeUnderProblem.setUp": ["datetime.datetime"], "processor.http_api.problem_test.TestGetScoreByChallengeTypeUnderProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestGetScoreByBestUnderProblem.setUp": ["datetime.datetime"], "processor.http_api.problem_test.TestGetScoreByBestUnderProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestRejudgeProblem.setUp": ["datetime.datetime", "<builtin>.len", "uuid.UUID"], "processor.http_api.problem_test.TestRejudgeProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestRejudgeProblem.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.problem_test.TestGetProblemStatistics.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.problem_test.TestGetProblemStatistics.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "persistence.database.base.pyformat2psql": ["<builtin>.sorted"], "persistence.database.base.AutoTxConnection.__aenter__": ["log.info"], "persistence.database.base.AutoTxConnection.__aexit__": ["log.info"], "persistence.database.base._SafeExecutor.__init__": ["<map>.update", "persistence.database.base.pyformat2psql"], "<map>.update": [], "persistence.database.base._SafeExecutor.__aenter__": ["<builtin>.type", "log.info", "persistence.database.base._SafeExecutor._exec"], "persistence.database.base._SafeExecutor._exec": [], "persistence.database.base.OnlyExecute.__aenter__": ["<builtin>.super"], "persistence.database.base.FetchOne.__aenter__": ["<builtin>.super"], "persistence.database.base.FetchAll.__aenter__": ["<builtin>.super"], "processor.http_api.view_test.TestViewBrowseAccountWithDefaultStudentId.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseAccountWithDefaultStudentId.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewBrowseClassMember.setUp": ["copy.deepcopy"], "copy.deepcopy": [], "processor.http_api.view_test.TestViewBrowseClassMember.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseClassMember.test_happy_flow_class_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseClassMember.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewBrowseSubmissionUnderClass.setUp": ["datetime.datetime"], "processor.http_api.view_test.TestViewBrowseSubmissionUnderClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseSubmissionUnderClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewBrowseSubmission.setUp": ["datetime.datetime", "copy.deepcopy"], "processor.http_api.view_test.TestViewBrowseSubmission.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseSubmission.test_no_permission": ["util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewBrowseMySubmissionUnderProblem.setUp": ["datetime.datetime", "copy.deepcopy"], "processor.http_api.view_test.TestViewBrowseMySubmissionUnderProblem.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseMySubmissionUnderProblem.test_no_permission": ["util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewBrowseProblemSetUnderClass.setUp": ["datetime.datetime", "copy.deepcopy"], "processor.http_api.view_test.TestViewBrowseProblemSetUnderClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseProblemSetUnderClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewBrowseClassGrade.setUp": ["datetime.datetime", "copy.deepcopy"], "processor.http_api.view_test.TestViewBrowseClassGrade.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseClassGrade.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseAccessLog.setUp": ["datetime.datetime"], "processor.http_api.view_test.TestViewBrowseAccessLog.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewBrowseAccessLog.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewPeerReviewSummaryReview.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewPeerReviewSummaryReview.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.view_test.TestViewPeerReviewSummaryReceive.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.view_test.TestViewPeerReviewSummaryReceive.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "persistence.database.class_.browse_from_member_role": ["persistence.database.base.FetchAll.__init__"], "persistence.database.class_.delete_cascade": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.team.delete_cascade_from_class", "persistence.database.challenge.delete_cascade_from_class"], "persistence.database.class_.delete_cascade_from_course": ["persistence.database.class_._delete_cascade_from_course", "persistence.database.base.AutoTxConnection.__init__"], "persistence.database.class_._delete_cascade_from_course": [], "persistence.database.class_.add_member": ["persistence.database.base.OnlyExecute.__init__"], "persistence.database.class_.add_members": ["persistence.database.base.AutoTxConnection.__init__"], "persistence.database.class_.read_member": ["persistence.database.base.FetchOne.__init__"], "util.model.CaseInsensitiveEmailStr.validate": ["<builtin>.super"], "service.csv_test.TestGetAccountTemplate.setUp": ["uuid.UUID"], "service.csv_test.TestGetAccountTemplate.test_happy_flow": ["util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportAccount.test_happy_flow": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportAccount.test_happy_flow_loss_alternative_email": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportAccount.test_data_uncompleted": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportAccount.test_loss_header": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportAccount.test_unicode_decode_error": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "<builtin>.UnicodeDecodeError", "util.mock.mock.Controller.__init__"], "<builtin>.UnicodeDecodeError": [], "service.csv_test.TestGetTeamTemplate.setUp": ["uuid.UUID"], "service.csv_test.TestGetTeamTemplate.test_happy_flow": ["util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportTeam.test_happy_flow": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportTeam.test_loss_header": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportTeam.test_unicode_decode_error": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "<builtin>.UnicodeDecodeError", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportClassGrade.setUp": ["datetime.datetime"], "service.csv_test.TestImportClassGrade.test_happy_flow": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "service.csv_test.TestImportClassGrade.test_unicode_decode_error": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "<builtin>.UnicodeDecodeError", "util.mock.mock.Controller.__init__"], "service.csv_test.TestGetGradeTemplate.setUp": ["uuid.UUID"], "service.csv_test.TestGetGradeTemplate.test_happy_flow": ["util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__"], "persistence.database.problem.browse": ["util.serialize.unmarshal", "append", "persistence.database.base.FetchAll.__init__"], "persistence.database.problem.delete_cascade": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.testcase.delete_cascade_from_problem"], "persistence.database.testcase.delete_cascade_from_problem": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.testcase._delete_cascade_from_problem"], "persistence.database.testcase._delete_cascade_from_problem": [], "processor.http_api.challenge_test.TestAddChallengeUnderClass.setUp": ["datetime.datetime"], "processor.http_api.challenge_test.TestAddChallengeUnderClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestAddChallengeUnderClass.test_end_time_before_start_time": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddChallengeUnderClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestBrowseChallengeUnderClass.setUp": ["datetime.datetime", "append"], "processor.http_api.challenge_test.TestBrowseChallengeUnderClass.test_happy_flow_class_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestBrowseChallengeUnderClass.test_happy_flow_class_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestBrowseChallengeUnderClass.test_happy_flow_no_class_role": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestBrowseChallengeUnderClass.test_no_system_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestReadChallenge.setUp": ["datetime.datetime"], "processor.http_api.challenge_test.TestReadChallenge.test_happy_flow_challenge_publicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestReadChallenge.test_happy_flow_challenge_unpublicized_request_after_start": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestReadChallenge.test_happy_flow_challenge_unpublicized_request_before_start_class_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestReadChallenge.test_challenge_unpublicized_request_before_start_class_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestReadChallenge.test_no_system_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestEditChallenge.test_happy_flow_challenge_publicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestEditChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestDeleteChallenge.test_happy_flow_challenge_publicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDeleteChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddProblemUnderChallenge.test_happy_flow_challenge_publicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestAddProblemUnderChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddEssayUnderChallenge.test_happy_flow_challenge_publicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestAddEssayUnderChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddPeerReviewUnderChallenge.setUp": ["datetime.datetime"], "processor.http_api.challenge_test.TestAddPeerReviewUnderChallenge.test_happy_flow_challenge_publicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestAddPeerReviewUnderChallenge.test_illegal_input": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddPeerReviewUnderChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddTeamProjectScoreboardUnderChallenge.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestAddTeamProjectScoreboardUnderChallenge.test_invalid_formula": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddTeamProjectScoreboardUnderChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.setUp": ["datetime.datetime"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.test_happy_flow_class_manager_before_start_time_system_guest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.test_happy_flow_class_guest_after_start_time": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.test_class_guest_before_start_time_system_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.test_class_guest_before_start_time_system_guest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.test_no_class_role_system_normal_publicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.test_no_class_role_system_normal_unpublicized": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestBrowseAllTaskUnderChallenge.test_no_class_role_system_guest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestBrowseAllTaskStatusUnderChallenge.setUp": ["datetime.datetime"], "processor.http_api.challenge_test.TestBrowseAllTaskStatusUnderChallenge.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestBrowseAllTaskStatusUnderChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestGetChallengeStatistics.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestGetChallengeStatistics.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestGetMemberSubmissionStatistics.setUp": ["datetime.datetime", "__len__", "uuid.UUID"], "__len__": [], "processor.http_api.challenge_test.TestGetMemberSubmissionStatistics.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestGetMemberSubmissionStatistics.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestDownloadAllSubmissions.setUp": ["datetime.datetime", "fastapi.BackgroundTasks", "uuid.UUID"], "processor.http_api.challenge_test.TestDownloadAllSubmissions.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllSubmissions.test_happy_flow_no_student_card_email": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllSubmissions.test_happy_flow_no_account_alternative_email": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllSubmissions.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestDownloadAllAssistingData.setUp": ["datetime.datetime", "fastapi.BackgroundTasks", "uuid.UUID"], "processor.http_api.challenge_test.TestDownloadAllAssistingData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllAssistingData.test_happy_flow_no_student_card_email": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllAssistingData.test_happy_flow_no_account_alternative_email": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllAssistingData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestDownloadAllPlagiarismReports.setUp": ["datetime.datetime", "fastapi.BackgroundTasks", "uuid.UUID"], "processor.http_api.challenge_test.TestDownloadAllPlagiarismReports.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllPlagiarismReports.test_happy_flow_no_student_card_email": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllPlagiarismReports.test_happy_flow_no_account_alternative_email": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestDownloadAllPlagiarismReports.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddTeamContestScoreboardUnderChallenge.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.challenge_test.TestAddTeamContestScoreboardUnderChallenge.test_invalid_formula": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.challenge_test.TestAddTeamContestScoreboardUnderChallenge.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestBrowseClass.setUp": ["<builtin>.len"], "processor.http_api.class_test.TestBrowseClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestBrowseClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestReadClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestReadClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestEditClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestEditClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestDeleteClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestDeleteClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestBrowseClassMember.setUp": ["append", "<builtin>.len", "<builtin>.range"], "processor.http_api.class_test.TestBrowseClassMember.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestBrowseClassMember.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestBrowseClassMember.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestBrowseAllClassMemberWithAccountReferral.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestBrowseAllClassMemberWithAccountReferral.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestBrowseAllClassMemberWithAccountReferral.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestReplaceClassMembers.setUp": ["<builtin>.set"], "processor.http_api.class_test.TestReplaceClassMembers.test_happy_flow_unchanged": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestReplaceClassMembers.test_happy_flow_changed": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestReplaceClassMembers.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestDeleteClassMember.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestDeleteClassMember.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestAddTeamUnderClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestAddTeamUnderClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestBrowseTeamUnderClass.setUp": ["<builtin>.len"], "processor.http_api.class_test.TestBrowseTeamUnderClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestBrowseTeamUnderClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.class_test.TestBrowseSubmissionUnderClass.setUp": ["<builtin>.len"], "processor.http_api.class_test.TestBrowseSubmissionUnderClass.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.class_test.TestBrowseSubmissionUnderClass.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "persistence.email.notification.send_file_download_url": ["persistence.email.SMTPHandler.send_message", "email.message.EmailMessage"], "processor.http_api.assisting_data_test.TestReadAssistingData.setUp": ["uuid.UUID"], "processor.http_api.assisting_data_test.TestReadAssistingData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.assisting_data_test.TestReadAssistingData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.assisting_data_test.TestEditAssistingData.setUp": ["fastapi.UploadFile", "uuid.UUID"], "processor.http_api.assisting_data_test.TestEditAssistingData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.assisting_data_test.TestEditAssistingData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.assisting_data_test.TestDeleteAssistingData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.assisting_data_test.TestDeleteAssistingData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "persistence.database.base_mock._SafeExecutor.__aenter__": ["<builtin>.type", "persistence.database.base._SafeExecutor._exec"], "persistence.database.base_mock.OnlyExecute.__init__": ["<builtin>.super"], "persistence.database.base_mock.FetchOne.__init__": ["<builtin>.super"], "persistence.database.base_mock.FetchAll.__init__": ["<builtin>.super"], "processor.http_api.public.default_page": ["append"], "processor.http_api.judgment_test.TestBrowseAllJudgmentVerdict.test_happy_flow": ["util.mock.util.unwrap"], "processor.http_api.judgment_test.TestReadJudgment.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.judgment_test.TestReadJudgment.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.judgment_test.TestReadJudgment.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.judgment_test.TestBrowseAllJudgmentJudgeCase.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.judgment_test.TestBrowseAllJudgmentJudgeCase.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.judgment_test.TestBrowseAllJudgmentJudgeCase.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "service.rbac_test.TestValidateInherit.test_validate_inherit_team_id_class_normal_v2": ["service.rbac.validate_inherit", "util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestAddAccount.test_happy_flow_default_alt_email": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestAddAccount.test_happy_flow_with_alt_email": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestAddAccount.test_happy_flow_no_alt_email": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestAddAccount.test_invalid_institute": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestAddAccount.test_student_id_not_match_email": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestAddAccount.test_student_card_exists": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestAddAccount.test_username_exists": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestAddAccount.test_invalid_email": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestLogin.test_happy_flow_not_4s_hash": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestLogin.test_happy_flow_4s_hash": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestLogin.test_login_failed_account_not_found": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestLogin.test_login_failed_not_4s_hash_verification_failed": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestLogin.test_login_failed_4s_hash_verification_failed": ["util.mock.mock.Controller.__init__"], "processor.http_api.secret_test.TestAddNormalAccount.test_happy_flow_with_alt_email": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestAddNormalAccount.test_happy_flow_no_alt_email": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestAddNormalAccount.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.secret_test.TestAddNormalAccount.test_illegal_character": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.secret_test.TestAddNormalAccount.test_username_exists": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.secret_test.TestImportAccount.setUp": ["fastapi.UploadFile"], "processor.http_api.secret_test.TestImportAccount.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestImportAccount.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.secret_test.TestEditPassword.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestEditPassword.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.secret_test.TestEditPassword.test_password_verification_failed": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.secret_test.TestEditPassword.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.secret_test.TestResetPassword.setUp": ["<builtin>.str"], "processor.http_api.secret_test.TestResetPassword.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.scoreboard_test.TestReadScoreboard.test_happy_flow_project": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.scoreboard_test.TestReadScoreboard.test_happy_flow_contest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.scoreboard_test.TestReadScoreboard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_test.TestReadScoreboard.test_system_exception": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.scoreboard_test.TestDeleteScoreboard.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.scoreboard_test.TestDeleteScoreboard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "service.submission_test.TestSubmit.setUp": ["datetime.datetime", "uuid.UUID"], "service.submission_test.TestSubmit.test_happy_flow": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.mock.Controller.__init__", "service.submission.submit"], "service.submission_test.TestSubmitEssay.setUp": ["datetime.datetime", "uuid.UUID"], "service.submission_test.TestSubmitEssay.test_happy_flow": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "service.submission.submit_essay", "util.mock.mock.Controller.__init__"], "service.submission_test.TestResubmitEssay.setUp": ["datetime.datetime", "uuid.UUID"], "service.submission_test.TestResubmitEssay.test_happy_flow": ["<builtin>.type", "util.mock.compare.AnyInstanceOf.__init__", "service.submission.resubmit_essay", "util.mock.mock.Controller.__init__"], "processor.http_api.grade_test.TestImportClassGrade.setUp": ["datetime.datetime", "fastapi.UploadFile"], "processor.http_api.grade_test.TestImportClassGrade.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestImportClassGrade.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestAddGrade.setUp": ["datetime.datetime"], "processor.http_api.grade_test.TestAddGrade.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestAddGrade.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestBrowseClassGrade.setUp": ["datetime.datetime", "copy.deepcopy", "append"], "processor.http_api.grade_test.TestBrowseClassGrade.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestBrowseClassGrade.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestBrowseClassGrade.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestBrowseAccountGrade.setUp": ["datetime.datetime", "copy.deepcopy", "append"], "processor.http_api.grade_test.TestBrowseAccountGrade.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestBrowseAccountGrade.test_no_permission": ["util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestGetGradeTemplateFile.setUp": ["uuid.UUID"], "processor.http_api.grade_test.TestGetGradeTemplateFile.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestGetGradeTemplateFile.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestGetGrade.setUp": ["datetime.datetime"], "processor.http_api.grade_test.TestGetGrade.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestGetGrade.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestGetGrade.test_no_permission_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestGetGrade.test_no_permission_guest": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestEditGrade.setUp": ["datetime.datetime"], "processor.http_api.grade_test.TestEditGrade.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestEditGrade.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.grade_test.TestDeleteGrade.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.grade_test.TestDeleteGrade.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestReadPeerReview.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestReadPeerReview.test_happy_flow_manager_preview": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestReadPeerReview.test_happy_flow_manager_normal_view": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestReadPeerReview.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestReadPeerReview.test_no_permission_hidden": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestEditPeerReview.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestEditPeerReview.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestDeletePeerReview.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestDeletePeerReview.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestBrowsePeerReviewRecord.setUp": ["<builtin>.len"], "processor.http_api.peer_review_test.TestBrowsePeerReviewRecord.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestBrowsePeerReviewRecord.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestAssignPeerReviewRecord.setUp": ["<builtin>.range"], "processor.http_api.peer_review_test.TestAssignPeerReviewRecord.test_happy_flow": ["<builtin>.range", "util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestAssignPeerReviewRecord.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestAssignPeerReviewRecord.test_no_permission_overdue": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestAssignPeerReviewRecord.test_max_peer_reviewCount": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestReadPeerReviewRecord.test_happy_flow_normal_is_grader": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestReadPeerReviewRecord.test_happy_flow_normal_is_receiver": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestReadPeerReviewRecord.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestReadPeerReviewRecord.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestReadPeerReviewRecord.test_no_permission_other_account": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestReadPeerReviewRecord.test_no_permission_early": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestSubmitPeerReviewRecord.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestSubmitPeerReviewRecord.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestSubmitPeerReviewRecord.test_no_permission_overdue": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestSubmitPeerReviewRecord.test_illegal_input": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestBrowseAccountReceivedPeerReviewRecord.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestBrowseAccountReceivedPeerReviewRecord.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestBrowseAccountReceivedPeerReviewRecord.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestBrowseAccountReceivedPeerReviewRecord.test_no_permission_other_account": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestBrowseAccountReceivedPeerReviewRecord.test_no_permission_early": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestBrowseAccountReviewedPeerReviewRecord.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestBrowseAccountReviewedPeerReviewRecord.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.peer_review_test.TestBrowseAccountReviewedPeerReviewRecord.test_no_permission_unauthorized_user": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestBrowseAccountReviewedPeerReviewRecord.test_no_permission_other_account": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.peer_review_test.TestBrowseAccountReviewedPeerReviewRecord.test_no_permission_early": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "base.enum.RoleType.__gt__": ["<builtin>.super"], "base.enum.RoleType.__lt__": ["<builtin>.super"], "middleware.db_access_log.middleware": ["persistence.database.access_log.add", "log.info"], "persistence.database.access_log.add": ["persistence.database.base.FetchOne.__init__"], "main.app_startup": ["persistence.amqp_consumer.make_consumer.main", "log.info", "persistence.email.SMTPHandler.initialize", "persistence.database.PoolHandler.initialize", "persistence.s3.S3Handler.initialize", "persistence.amqp_publisher", "persistence.amqp_consumer.make_consumer", "persistence.email", "persistence.database", "config", "persistence.s3", "processor.amqp", "persistence.amqp_consumer", "persistence.amqp_publisher.AmqpPublishHandler.initialize"], "persistence.database.PoolHandler.initialize": [], "persistence.email.SMTPHandler.initialize": [], "persistence.s3.S3Handler.initialize": [], "persistence.amqp_publisher.AmqpPublishHandler.initialize": [], "persistence.amqp_consumer.make_consumer": [], "persistence.amqp_consumer.make_consumer.main": ["log.error", "log.info", "<builtin>.len", "log.exception"], "log.error": ["util.context.Context.get_request_uuid"], "main.app_shutdown": ["persistence.email.SMTPHandler.close", "persistence.amqp_publisher", "persistence.email", "persistence.amqp_publisher.AmqpPublishHandler.close", "persistence.database", "persistence.database.PoolHandler.close", "persistence.s3", "persistence.s3.S3Handler.close"], "persistence.database.PoolHandler.close": [], "persistence.email.SMTPHandler.close": [], "persistence.s3.S3Handler.close": [], "persistence.amqp_publisher.AmqpPublishHandler.close": [], "util.file.valid_file_length.validator": ["fastapi.Header"], "log.debug": ["util.context.Context.get_request_uuid"], "processor.http_api.institute_test.TestAddInstitute.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.institute_test.TestAddInstitute.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.institute_test.TestBrowseAllInstitute.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.institute_test.TestReadInstitute.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.util.unwrap"], "processor.http_api.institute_test.TestEditInstitute.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.institute_test.TestEditInstitute.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "persistence.amqp_publisher.AmqpPublishHandler.publish": ["log.info"], "processor.http_api.hardcode_test.TestViewTeamContestScoreboardRuns.setUp": ["datetime.datetime", "datetime.timedelta"], "processor.http_api.hardcode_test.TestViewTeamContestScoreboardRuns.test_happy_flow": ["util.mock.util.unwrap", "util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "datetime.timedelta"], "processor.http_api.hardcode_test.TestViewTeamContestScoreboardRuns.test_illegal_input": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.hardcode_test.TestViewTeamContestScoreboardRuns.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "util.mock.mock.CallRecord.__str__": ["<builtin>.str"], "util.mock.mock.CallRecorder._record": ["<builtin>.AssertionError"], "<builtin>.AssertionError": [], "util.mock.mock.CallRecorder.returns": ["<builtin>.len", "util.mock.mock.CallRecorder._record"], "util.mock.mock.CallRecorder.raises": ["util.mock.mock.CallRecorder._record"], "util.mock.mock.CallRecorder.executes": ["util.mock.mock.CallRecorder._record"], "util.mock.mock.MockFunction.__init__": ["<builtin>.list", "unittest.mock.AsyncMock", "unittest.mock.Mock"], "unittest.mock.Mock": [], "util.mock.mock.MockFunction.call_with": ["copy.deepcopy", "util.mock.mock.CallRecorder.__init__"], "util.mock.mock.CallRecorder.__init__": [], "util.mock.mock.MockFunction._prepare_mock_call": ["util.mock.mock.MockFunction._prepare_mock_call.manager"], "util.mock.mock.MockFunction._prepare_mock_call.manager": ["<builtin>.AssertionError"], "util.mock.mock.MockFunction.__call__": ["util.mock.mock.MockFunction._prepare_mock_call"], "util.mock.mock.MockAsyncFunction.__call__": ["util.mock.mock.MockFunction._prepare_mock_call"], "util.mock.mock.MockModule.__getattr__": ["<builtin>.super", "<builtin>.AssertionError"], "util.mock.mock.MockModule.func": ["<builtin>.isinstance", "<builtin>.AssertionError", "util.mock.mock.MockFunction.__init__"], "unittest.mock.AsyncMock": [], "util.mock.mock.MockModule.async_func": ["<builtin>.isinstance", "<builtin>.AssertionError"], "util.mock.mock.MockModule._register_call": ["util.mock.mock.Controller._register_call"], "util.mock.mock.Controller._register_call": [], "util.mock.mock.MockModule._pop_call": ["util.mock.mock.Controller._pop_call"], "util.mock.mock.Controller._pop_call": [], "util.mock.mock.Controller.__exit__": ["<builtin>.AssertionError", "<builtin>.len"], "util.mock.mock.Controller._patch": ["unittest.mock.patch"], "util.mock.mock.Controller.mock_module": ["util.mock.mock.Controller._patch", "util.mock.mock.MockModule.__init__"], "util.mock.mock.Controller.mock_global_class": ["util.mock.mock.Controller._patch"], "util.mock.mock.Controller.mock_global_func": ["util.mock.mock.Controller._patch", "util.mock.mock.MockModule.func"], "util.mock.mock.Controller.mock_global_async_func": ["util.mock.mock.Controller._patch", "util.mock.mock.MockModule.async_func"], "middleware.routing.jsonable_encoder": ["<builtin>.isinstance", "middleware.routing.jsonable_encoder", "append", "<builtin>.str", "<builtin>.ValueError", "<builtin>.getattr", "<builtin>.dict", "<builtin>.vars", "<builtin>.type", "<map>.items", "<builtin>.set"], "<builtin>.getattr": [], "<builtin>.vars": [], "middleware.routing.serialize_response": ["<builtin>.isinstance", "middleware.routing.jsonable_encoder", "extend", "append"], "extend": [], "middleware.routing.get_request_handler": ["<builtin>.isinstance"], "middleware.routing.NoLogAPIRoute.get_route_handler": ["middleware.routing.get_request_handler"], "middleware.routing.APIRoute.get_route_handler": ["middleware.routing.get_request_handler"], "persistence.s3.S3Handler.get_bucket": ["persistence.s3.S3Handler.create_bucket"], "persistence.s3.S3Handler.create_bucket": [], "processor.amqp.save_report": ["persistence.database.judgment.add_case", "log.info", "persistence.database.judgment.add", "util.dtype.int32"], "util.dtype.int32": [], "persistence.database.judgment.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.judgment.add_case": ["persistence.database.base.OnlyExecute.__init__"], "util.context.Context.account": ["exceptions._CauseMixin.__init__"], "util.context.Context.request_time": ["exceptions._CauseMixin.__init__"], "util.context.Context.request_uuid": ["exceptions._CauseMixin.__init__"], "base.mcs.Singleton.__call__": ["<builtin>.super"], "middleware.auth.middleware": ["util.security.decode_jwt", "util.context.Context.set_account"], "util.security.decode_jwt": [], "util.context.Context.set_account": [], "persistence.database.class_vo.browse_class_member_with_account_id": ["persistence.database.base.FetchAll.__init__"], "base.cls.OrderedMixin.__gt__": ["<builtin>.tuple"], "<builtin>.tuple": [], "base.cls.OrderedMixin.__lt__": ["base.cls.OrderedMixin.__gt__"], "base.cls.OrderedMixin.__ge__": ["base.cls.OrderedMixin.__gt__"], "base.cls.OrderedMixin.__le__": ["base.cls.OrderedMixin.__gt__"], "base.cls.OrderedMixin.smaller": ["<builtin>.tuple"], "base.cls.OrderedMixin.larger": ["<builtin>.reversed", "<builtin>.tuple"], "<builtin>.reversed": [], "processor.http_api.course_test.TestAddCourse.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestAddCourse.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.course_test.TestReadCourse.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestReadCourse.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestReadCourse.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.course_test.TestBrowseAllCourse.test_happy_flow_normal": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestBrowseAllCourse.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestBrowseAllCourse.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.course_test.TestEditCourse.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestEditCourse.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.course_test.TestDeleteCourse.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestDeleteCourse.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.course_test.TestAddClassUnderCourse.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestAddClassUnderCourse.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.course_test.TestBrowseAllClassUnderCourse.setUp": ["<builtin>.zip"], "processor.http_api.course_test.TestBrowseAllClassUnderCourse.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.course_test.TestBrowseAllClassUnderCourse.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.course_test.TestBrowseAllClassUnderCourse.test_not_found_should_return_empty_list": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestReadTestcase.test_happy_flow_class_normal_sample": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestReadTestcase.test_happy_flow_class_normal_not_sample": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestReadTestcase.test_happy_flow_class_manager_sample": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestReadTestcase.test_happy_flow_class_manager_not_sample": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestReadTestcase.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.testcase_test.TestEditTestcase.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestEditTestcase.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.testcase_test.TestUploadTestcaseInputData.setUp": ["fastapi.UploadFile"], "processor.http_api.testcase_test.TestUploadTestcaseInputData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestUploadTestcaseInputData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.testcase_test.TestUploadTestcaseOutputData.setUp": ["fastapi.UploadFile"], "processor.http_api.testcase_test.TestUploadTestcaseOutputData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.compare.AnyInstanceOf.__init__", "util.mock.context.Context.__init__", "<builtin>.type", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestUploadTestcaseOutputData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.testcase_test.TestDeleteTestcase.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestDeleteTestcase.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.testcase_test.TestDeleteTestcaseInputData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestDeleteTestcaseInputData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.testcase_test.TestDeleteTestcaseOutputData.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.testcase_test.TestDeleteTestcaseOutputData.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "persistence.database.student_card.add": ["persistence.database.base.AutoTxConnection.__init__"], "persistence.database.s3_file.browse": ["persistence.database.base.FetchAll.__init__"], "persistence.database.s3_file.add": ["persistence.database.base.FetchOne.__init__"], "persistence.database.course.delete_cascade": ["persistence.database.base.AutoTxConnection.__init__", "persistence.database.class_.delete_cascade_from_course"], "processor.http_api.system_test.TestBrowseAccessLog.setUp": ["<builtin>.len"], "processor.http_api.system_test.TestBrowseAccessLog.test_happy_flow": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.system_test.TestBrowseAccessLog.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.student_card_test.TestAddStudentCardToAccount.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.student_card_test.TestAddStudentCardToAccount.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.student_card_test.TestAddStudentCardToAccount.test_invalid_email": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.student_card_test.TestAddStudentCardToAccount.test_student_card_exists": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.student_card_test.TestAddStudentCardToAccount.test_not_match_email": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.student_card_test.TestAddStudentCardToAccount.test_invalid_institute": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.student_card_test.TestAddStudentCardToAccount.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.student_card_test.TestBrowseAllAccountStudentCard.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.student_card_test.TestBrowseAllAccountStudentCard.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.student_card_test.TestBrowseAllAccountStudentCard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.student_card_test.TestReadStudentCard.test_happy_flow_manager": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.student_card_test.TestReadStudentCard.test_happy_flow_self": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__", "util.mock.util.unwrap"], "processor.http_api.student_card_test.TestReadStudentCard.test_no_permission": ["util.mock.mock.Controller.__init__", "util.mock.context.Context.__init__"], "processor.http_api.register_routers": ["processor.http_api.docs.hook_docs", "processor.http_api.scoreboard_setting_team_contest", "processor.http_api.hardcode", "processor.http_api.system", "processor.http_api.course", "processor.http_api.submission", "processor.http_api.announcement", "processor.http_api.team", "processor.http_api.secret", "processor.http_api.email_verification", "processor.http_api.judgment", "processor.http_api.testcase", "processor.http_api.student_card", "processor.http_api.account", "processor.http_api.scoreboard", "processor.http_api.view", "processor.http_api.problem", "processor.http_api.essay", "processor.http_api.challenge", "processor.http_api.s3_file", "processor.http_api.docs", "processor.http_api.class_", "processor.http_api.peer_review", "processor.http_api.assisting_data", "processor.http_api.institute", "processor.http_api.essay_submission", "processor.http_api.grade", "processor.http_api.scoreboard_setting_team_project", "processor.http_api.public"], "persistence.database.judgment.read_case": ["persistence.database.base.FetchOne.__init__"], "persistence.database.peer_review.browse": ["append", "persistence.database.base.FetchAll.__init__"], "middleware.api.get_openapi_path": ["<builtin>.isinstance", "<builtin>.str", "<builtin>.list", "<builtin>.int", "middleware.api.get_openapi_path"], "middleware.api.get_openapi": ["middleware.api.get_openapi_path", "<builtin>.isinstance", "<builtin>.sorted"], "middleware.api.FastAPI.openapi": ["middleware.api.get_openapi"]}