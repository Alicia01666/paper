[
    [
        {
            "function_name": "plot_dot_graph",
            "file_path": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/tests/wekatests/plottests/graph.py",
            "line_number": -1,
            "source_code": null,
            "parameters": [],
            "focused_calls": [
                "mktemp"
            ],
            "extend_calls": [],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/tests/wekatests/plottests/graph.py:plot_dot_graph:-1"
        },
        {
            "function_name": "plot_xmlbif_graph",
            "file_path": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/python/weka/plot/graph.py",
            "line_number": 90,
            "source_code": "def plot_xmlbif_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in XML BIF notation. Only plots the structure, not the tables.\n\n    http://sites.poli.usp.br/p/fabio.cozman/Research/InterchangeFormat/index.html\n\n    :param graph: the XML BIF notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if not plot.lxml_available:\n        logger.error(\"lxml is not installed, cannot convert XML BIF graph!\")\n        return\n    plot_dot_graph(xmlbif_to_dot(graph), filename)\n",
            "parameters": [],
            "focused_calls": [
                "plot_dot_graph"
            ],
            "extend_calls": [
                "def error(self):\n        \"\"\"\n        Returns the error.\n\n        :return: the error\n        :rtype: float\n        \"\"\"\n        return self.jobject.error()",
                "def plot_dot_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in graphviz dot notation.\n\n    http://graphviz.org/doc/info/lang.html\n\n    :param graph: the dot notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if not plot.pygraphviz_available:\n        logger.error(\"Pygraphviz is not installed, cannot generate graph plot!\")\n        return\n    if not plot.PIL_available:\n        logger.error(\"PIL is not installed, cannot display graph plot!\")\n        return\n\n    agraph = AGraph(graph)\n    agraph.layout(prog='dot')\n    if filename is None:\n        filename = tempfile.mktemp(suffix=\".png\")\n    agraph.draw(filename)\n    image = Image.open(filename)\n    image.show()",
                "def xmlbif_to_dot(graph):\n    \"\"\"\n    Converts the graph in XML BIF notation into a dot graph.\n\n    http://sites.poli.usp.br/p/fabio.cozman/Research/InterchangeFormat/index.html\n\n    :param graph: the graph to convert\n    :type graph: str\n    :return: the graph in dot notation\n    :rtype: str\n    \"\"\"\n    if not plot.lxml_available:\n        logger.error(\"lxml is not installed, cannot convert XML BIF graph!\")\n        return\n\n    result = list()\n    result.append(\"digraph {\")\n\n    root = etree.fromstring(graph)\n    network = root.find(\"NETWORK\")\n    definitions = network.findall(\"DEFINITION\")\n    for definition in definitions:\n        f = definition.find(\"FOR\")\n        givens = definition.findall(\"GIVEN\")\n        for given in givens:\n            result.append(\"  %s -> %s;\" % (given.text, f.text))\n\n    result.append(\"}\")\n\n    return \"\\n\".join(result)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/python/weka/plot/graph.py:plot_xmlbif_graph:90"
        },
        {
            "function_name": "plot_graph",
            "file_path": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/python/weka/plot/graph.py",
            "line_number": 107,
            "source_code": "def plot_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in dot or XML BIF notation.\n\n    http://graphviz.org/doc/info/lang.html\n    http://sites.poli.usp.br/p/fabio.cozman/Research/InterchangeFormat/index.html\n\n    :param graph: the dot/XML BIF notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if \"<BIF\" in graph and \"<NETWORK>\" in graph:\n        return plot_xmlbif_graph(graph, filename=filename)\n    else:\n        return plot_dot_graph(graph, filename=filename)\n",
            "parameters": [],
            "focused_calls": [
                "plot_xmlbif_graph"
            ],
            "extend_calls": [
                "def plot_dot_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in graphviz dot notation.\n\n    http://graphviz.org/doc/info/lang.html\n\n    :param graph: the dot notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if not plot.pygraphviz_available:\n        logger.error(\"Pygraphviz is not installed, cannot generate graph plot!\")\n        return\n    if not plot.PIL_available:\n        logger.error(\"PIL is not installed, cannot display graph plot!\")\n        return\n\n    agraph = AGraph(graph)\n    agraph.layout(prog='dot')\n    if filename is None:\n        filename = tempfile.mktemp(suffix=\".png\")\n    agraph.draw(filename)\n    image = Image.open(filename)\n    image.show()",
                "def plot_xmlbif_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in XML BIF notation. Only plots the structure, not the tables.\n\n    http://sites.poli.usp.br/p/fabio.cozman/Research/InterchangeFormat/index.html\n\n    :param graph: the XML BIF notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if not plot.lxml_available:\n        logger.error(\"lxml is not installed, cannot convert XML BIF graph!\")\n        return\n    plot_dot_graph(xmlbif_to_dot(graph), filename)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/python/weka/plot/graph.py:plot_graph:107"
        }
    ],
    [
        {
            "function_name": "plot_dot_graph",
            "file_path": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/tests/wekatests/plottests/graph.py",
            "line_number": -1,
            "source_code": null,
            "parameters": [],
            "focused_calls": [
                "mktemp"
            ],
            "extend_calls": [],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/tests/wekatests/plottests/graph.py:plot_dot_graph:-1"
        },
        {
            "function_name": "plot_graph",
            "file_path": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/python/weka/plot/graph.py",
            "line_number": 107,
            "source_code": "def plot_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in dot or XML BIF notation.\n\n    http://graphviz.org/doc/info/lang.html\n    http://sites.poli.usp.br/p/fabio.cozman/Research/InterchangeFormat/index.html\n\n    :param graph: the dot/XML BIF notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if \"<BIF\" in graph and \"<NETWORK>\" in graph:\n        return plot_xmlbif_graph(graph, filename=filename)\n    else:\n        return plot_dot_graph(graph, filename=filename)\n",
            "parameters": [],
            "focused_calls": [
                "plot_dot_graph"
            ],
            "extend_calls": [
                "def plot_dot_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in graphviz dot notation.\n\n    http://graphviz.org/doc/info/lang.html\n\n    :param graph: the dot notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if not plot.pygraphviz_available:\n        logger.error(\"Pygraphviz is not installed, cannot generate graph plot!\")\n        return\n    if not plot.PIL_available:\n        logger.error(\"PIL is not installed, cannot display graph plot!\")\n        return\n\n    agraph = AGraph(graph)\n    agraph.layout(prog='dot')\n    if filename is None:\n        filename = tempfile.mktemp(suffix=\".png\")\n    agraph.draw(filename)\n    image = Image.open(filename)\n    image.show()",
                "def plot_xmlbif_graph(graph, filename=None):\n    \"\"\"\n    Plots a graph in XML BIF notation. Only plots the structure, not the tables.\n\n    http://sites.poli.usp.br/p/fabio.cozman/Research/InterchangeFormat/index.html\n\n    :param graph: the XML BIF notation graph\n    :type graph: str\n    :param filename: the (optional) file to save the generated plot to. The extension determines the file format.\n    :type filename: str\n    \"\"\"\n    if not plot.lxml_available:\n        logger.error(\"lxml is not installed, cannot convert XML BIF graph!\")\n        return\n    plot_dot_graph(xmlbif_to_dot(graph), filename)"
            ],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2022-24303/python-weka-wrapper3/python/weka/plot/graph.py:plot_graph:107"
        }
    ]
]
