[
    [
        {
            "function_name": "do_GET",
            "file_path": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2024-28237/ss-master/ss.py",
            "line_number": 24,
            "source_code": "        def do_GET(self):\n\n            try:\n                # We only serve the root index.html\n                if self.path==\"/\":\n                    self.path=\"/index.html\"\n                    mimetype='text/html'\n                    f = open(curdir + sep + self.path)\n                    self.send_response(200)\n                    self.send_header('Content-type',mimetype)\n                    self.end_headers()\n                    self.wfile.write(f.read())\n                    f.close()\n                    api.Metric.send(metric='simpleserver.page.views.success', points=1)\n                else:\n                    # if this is not for the root document, send a fail event with a 404\n                    self.send_error(404,'File Not Found: %s' % self.path)\n                    api.Metric.send(metric='simpleserver.page.views.failure', points=1)\n                return\n\n            # on any exception, catch the error and send an error event to datadog\n            # THIS SHOULD NEVER HAPPEN, ALARMS WILL FLOW AND NEED TO DEBUG!!!!!\n            except:\n                self.send_error(400,'Bad Request ... how did we get here?: %s' % self.path)\n                api.Metric.send(metric='simpleserver.page.views.error', points=1)\n",
            "parameters": [],
            "focused_calls": [
                "send_header"
            ],
            "extend_calls": [],
            "conditions_for_focused_calls": {},
            "parameter_conditions": "",
            "is_vulnerability_reachable": false,
            "unique_id": "/PycharmProjects/PyVul/src/context/dataset/test_data/CVE-2024-28237/ss-master/ss.py:do_GET:24"
        }
    ]
]
